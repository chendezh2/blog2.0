-- MySQL dump 10.13  Distrib 5.5.3-m3, for Win32 (x86)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.5.3-m3-community

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `attachment`
--

DROP TABLE IF EXISTS `attachment`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `attachment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `blog_id` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '所属博客id',
  `path` varchar(255) NOT NULL DEFAULT '' COMMENT '附件路径',
  `origin_name` varchar(255) NOT NULL DEFAULT '' COMMENT '原始文件名',
  `creation_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modification_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否被删除',
  PRIMARY KEY (`id`),
  KEY `blog_id` (`blog_id`)
) ENGINE=MyISAM AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='附件表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `attachment`
--

LOCK TABLES `attachment` WRITE;
/*!40000 ALTER TABLE `attachment` DISABLE KEYS */;
INSERT INTO `attachment` VALUES (1,1,'1429088064_965972.rar','测试文件.rar',1429088064,0,0),(2,8,'1429363940_639343.html','js+css无限级菜单实例.html',1429363940,0,0),(3,15,'1429439341_970001.rar','测试文件和相关js文件下载.rar',1429439341,0,0);
/*!40000 ALTER TABLE `attachment` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog`
--

DROP TABLE IF EXISTS `blog`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `category_id` int(11) unsigned NOT NULL DEFAULT '0',
  `title` varchar(255) NOT NULL DEFAULT '' COMMENT '博客标题',
  `content` text NOT NULL COMMENT '博客正文',
  `attachments` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '拥有的附件数量',
  `creation_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modification_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否被删除',
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_title` (`title`),
  KEY `category_id` (`category_id`)
) ENGINE=MyISAM AUTO_INCREMENT=48 DEFAULT CHARSET=utf8 COMMENT='博客表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog`
--

LOCK TABLES `blog` WRITE;
/*!40000 ALTER TABLE `blog` DISABLE KEYS */;
INSERT INTO `blog` VALUES (1,2,'jquery 停止动画 stop的几种用法','<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;Panel&lt;/title&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n* {<br />\r\n&nbsp;&nbsp;&nbsp; margin: 0;<br />\r\n&nbsp;&nbsp;&nbsp; padding: 0;<br />\r\n}<br />\r\nbody {<br />\r\n&nbsp;&nbsp;&nbsp; font-size: 13px;<br />\r\n&nbsp;&nbsp;&nbsp; line-height: 130%;<br />\r\n&nbsp;&nbsp;&nbsp; padding: 60px<br />\r\n}<br />\r\n#panel {<br />\r\n&nbsp;&nbsp;&nbsp; width: 60px;<br />\r\n&nbsp;&nbsp;&nbsp; border: 1px solid #0050D0;<br />\r\n&nbsp;&nbsp;&nbsp; height: 22px;<br />\r\n&nbsp;&nbsp;&nbsp; overflow: hidden;<br />\r\n}<br />\r\n.head {<br />\r\n&nbsp;&nbsp;&nbsp; padding: 5px;<br />\r\n&nbsp;&nbsp;&nbsp; background: #96E555;<br />\r\n&nbsp;&nbsp;&nbsp; cursor: pointer;<br />\r\n&nbsp;&nbsp;&nbsp; width: 300px;<br />\r\n}<br />\r\n.content {<br />\r\n&nbsp;&nbsp;&nbsp; padding: 10px;<br />\r\n&nbsp;&nbsp;&nbsp; text-indent: 2em;<br />\r\n&nbsp;&nbsp;&nbsp; border-top: 1px solid #0050D0;<br />\r\n&nbsp;&nbsp;&nbsp; display: block;<br />\r\n&nbsp;&nbsp;&nbsp; width: 280px;<br />\r\n}<br />\r\n&lt;/style&gt;<br />\r\n&lt;script src=&quot;jquery-1.9.1.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\n$(function(){<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(0)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).animate({height:&quot;150&quot; }, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .animate({width:&quot;300&quot; }, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .hide(2000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .animate({height:&quot;show&quot;, width:&quot;show&quot;, opacity:&quot;show&quot;}, 1000)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; .animate({height:&quot;500&quot;}, 1000);<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp; &nbsp;//stop([clearQueue][,gotoEnd]);<br />\r\n//语法结构<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(1)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop();//停止当前动画，继续下一个动画<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(2)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop(true);//清除元素的所有动画<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(3)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop(false, true);//让当前动画直接到达末状态 ，继续下一个动画<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n&nbsp;&nbsp;&nbsp; $(&quot;button:eq(4)&quot;).click(function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $(&quot;#panel&quot;).stop(true, true);//清除元素的所有动画，让当前动画直接到达末状态<br />\r\n&nbsp;&nbsp;&nbsp; });<br />\r\n});<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;button&gt;开始一连串动画&lt;/button&gt;<br />\r\n&lt;button&gt;stop()&lt;/button&gt;<br />\r\n&lt;button&gt;stop(true)&lt;/button&gt;<br />\r\n&lt;button&gt;stop(false,true)&lt;/button&gt;<br />\r\n&lt;button&gt;stop(true,true)&lt;/button&gt;</p>\r\n\r\n<p>&lt;div id=&quot;panel&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;h5 class=&quot;head&quot;&gt;什么是jQuery?&lt;/h5&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;div class=&quot;content&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; jQuery是继Prototype之后又一个优秀的JavaScript库，它是一个由 John Resig 创建于2006年1月的开源项目。jQuery凭借简洁的语法和跨平台的兼容性，极大地简化了JavaScript开发人员遍历HTML文档、操作DOM、处理事件、执行动画和开发Ajax。它独特而又优雅的代码风格改变了JavaScript程序员的设计思路和编写程序的方式。<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/div&gt;<br />\r\n&lt;/div&gt;</p>\r\n\r\n<p>&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',1,1429088064,0,0),(2,4,'CSS阴影效果（兼容N多浏览器）','<p>一、无关紧要碎碎念<br />\r\n在web页面的ui表现中，投影效果可以说是非常常见的一种表现效果了。例如开心网的头像修饰效果：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415171240293194.jpg\" style=\"height:179px; width:467px\" /></p>\r\n\r\n<p>然而，在CSS2的时代，我们多半使用图片实现类似效果，或是使用CSS其他属性模拟阴影效果，但是，现在，CSS3的崛起使得这个问题已经不再是是个问题了，本文就将展示如何实现跨浏览器的盒阴影效果。</p>\r\n\r\n<p>二、标准方法<br />\r\n标准方法当然就是指使用CSS3的方法了，这个应该不少同行应该知道，参见如下代码：<br />\r\n.shadow{<br />\r\n&nbsp;&nbsp; &nbsp;-moz-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;-webkit-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;box-shadow: 3px 3px 4px #000;<br />\r\n}<br />\r\n释义为：横向偏移3像素，纵向偏移3像素，模糊4像素，颜色为纯黑。<br />\r\n如果我们把含上面样式的这个class shadow应用到图片上，就会产生如下的效果（截自Firefox3.6）：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415171413206649.jpg\" style=\"height:250px; width:320px\" /></p>\r\n\r\n<p>三、那么IE浏览器呢？<br />\r\n对于目前对CSS3支持如狗屎的孤芳自赏的IE浏览器怎么办呢？box-shadow属性对于IE浏览器就像是圣诞树上的彩灯&mdash;&mdash;装饰而已。<br />\r\n好在IE浏览器有个IE <a href=\"http://msdn.microsoft.com/en-us/library/ms533086%28VS.85%29.aspx\">shadow滤镜</a>，是IE浏览器私有的一个东西，可以模拟还凑合的盒阴影效果，使用类似于下面的代码：<br />\r\n.shadow {<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 8 */<br />\r\n&nbsp;&nbsp; &nbsp;-ms-filter: &quot;progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;)&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 5.5 - 7 */<br />\r\n&nbsp;&nbsp; &nbsp;filter: progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;);<br />\r\n}<br />\r\n将shadow这个class应用到图片上，结果如下（截自IE6浏览器）：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415171529546704.jpg\" style=\"height:247px; width:297px\" /></p>\r\n\r\n<p>虽然效果不及Firefox，chrome等现代浏览器，但是还能凑合着用用。</p>\r\n\r\n<p>四、样式综合<br />\r\n如下代码：<br />\r\n.shadow{<br />\r\n&nbsp;&nbsp; &nbsp;-moz-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;-webkit-box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;box-shadow: 3px 3px 4px #000;<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 8 */<br />\r\n&nbsp;&nbsp; &nbsp;-ms-filter: &quot;progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;)&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;/* For IE 5.5 - 7 */<br />\r\n&nbsp;&nbsp; &nbsp;filter: progid:DXImageTransform.Microsoft.Shadow(Strength=4, Direction=135, Color=&#39;#000000&#39;);<br />\r\n}<br />\r\n更多CSS3属性的跨浏览器支持可以查阅<a href=\"http://css3please.com\">这里(css3please.com)</a>。</p>\r\n\r\n<p>五、浏览器支持情况<br />\r\n&nbsp;&nbsp;&nbsp; Firefox 3.5+<br />\r\n&nbsp;&nbsp;&nbsp; Safari 3+<br />\r\n&nbsp;&nbsp;&nbsp; Google Chrome<br />\r\n&nbsp;&nbsp;&nbsp; Opera 10.50<br />\r\n&nbsp;&nbsp;&nbsp; Internet Explorer 5.5</p>\r\n',0,1429089609,0,0),(3,6,'谈谈网站静态化','<p><strong><span style=\"font-size:22px\">写在前头</span></strong><br />\r\n静态化是解决减轻网站压力,提高网站访问速度的常用方案,但在强调交互的We2.0 时代,对静态化提出了更高的要求,静态不仅要能静,还要能动,下面我通过一个项目,谈谈网站静态化后的架构设计方案,同时和大家探讨一下,在开源产品大行其道,言架构必称MemberCache, Nginx,的时代,微软技术在网站架构设计中的运用.</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">静态化的设计原则和步骤</span></strong><br />\r\n静态化是解决减轻网站压力,但是静态化也会带来一系列的问题,包括开发上复杂度的增加,维护难度的增加,运用不的当,更可能适得其反,而许多替代方案,比如页面缓存,如果运用得当,也能起到很好的效果,所以在开始之前,必须进行详细的考察,确定是否适合静态化,并制定适合的静态化方式,下面先介绍一下</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">1考查读写比:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;读写比,准确的说是读写负荷比,是否值得静态化的最终考虑,由于一般写入的压力明显大于读出的压力,如果写入太频繁,或者每次写入消耗的资源太多,都不能达到效果,我觉得读写比例10:1应该是个上限.具体情况需要根据自己的业务逻辑判断</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">2确定页面呈现的内容是否适合静态化:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;在设计方案时,必须详细考虑每个原型页面,找到页面上展示的信息,和他的更新方式,更新时机,更新频率,一定要注意那些不起眼的信息,他们可能左右你的设计,<br />\r\n&nbsp;&nbsp; &nbsp;比如:我们以CSDN的论坛的任意一篇帖子为例,进行分析</p>\r\n\r\n<p><br />\r\n<img alt=\"\" src=\"/data/pic/20150415175234417312.jpg\" style=\"height:466px; width:512px\" /></p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;上面的帖子中呈现的内容主要是这样几块,帖子内容,回复内容,发帖人回复人的用户信息<br />\r\n&nbsp;&nbsp; &nbsp;帖子内容和回复内容在发帖时更新,发帖后用户可以修改其内容,更新频率高<br />\r\n&nbsp;&nbsp; &nbsp;用户信息,用户修改个人信息时可能会发生更改,用户等级增加时也可能发生更改,比如加星,更新频率低<br />\r\n&nbsp;&nbsp; &nbsp;回复数将每次回复后都要更改,更新频率高<br />\r\n&nbsp;&nbsp; &nbsp;设计时要注意细节,如上图中圈出来的部分,这些部分是怎么修改的,频率有多大,一个都不能放过</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">3确定生成方式:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;在上面帖子一例中.每次更改都重新生成页面是不可取的,一篇比回复数多的帖子,需要的数据量是巨大的(每层楼的用户信息,回复内容),任何修改,都需要重新取出数据进行生成是不能允许的.一般除非你的页面基本不用更新,或者更新开销极小,(比如一段嵌入的广告代码)才能采用整体更新的方式,不然就需要我们找到合适的更新页面局部区域的方法:<br />\r\n&nbsp;&nbsp; &nbsp;一般有下面两个方法:</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;<strong>1)正则修改法:</strong><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;比如,如果帖子中的回复数,html代码是这样<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;label&gt;回复数&lt;var id=&quot;replyCount&quot;&gt;34&lt;/var&gt;&lt;/label&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;我们可以通过用下面正则来查找并替换计数<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;(?&lt;=id=&quot;replyCount&quot;&gt;)d{1,}<br />\r\n&nbsp;&nbsp; &nbsp;<strong>2)页面区域分块:</strong><br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;把页面分成很多小块,在显示时组装起来,比如DotText就采用这个方法</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415182538857397.jpg\" style=\"height:441px; width:379px\" /></p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;这是一篇典型的Dottext blog页面,其中红色标定部分是一个独立的文件,而黄色框内的是脚本动态加载,这些部分在最终显示的时候组合起来,最终构成了一篇Blog,具体的组合方法也有多种,可以使用Include,也可以自己来实现.DotText就自己实现了一套加载机制</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;上面的两种方法并不孤立,并可以根据需要,配合使用</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">4确定需要动态加载的信息:</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;页面上总有一些内容看起来不太适合静态化,最典型的是一些统计结果,比如如果你在做一个图书介绍页面,可能就会需要展示图书的当天综合评分,或者书籍排名,这些内容需要用脚本进行动态加载<br />\r\n&nbsp;&nbsp; &nbsp;既然做了静态化,就是希望减少服务器负载,动态加载的数据总是不得已而为之,有的时候在需求允许的情况下,我们在数据在实时性和性能方面做一些妥协,比如上面帖子中的用户星级和昵称,从数据实时性上说,当用户的星级增长,他发言的所有帖子都应该发生变化,所以应该用动态加载.然而其实上这些信息如果不发生变化,也无伤大雅,用户反而能够看到自己在多年前发帖时的级别和昵称.</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">现实中的项目</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;X网站是大型的电影资讯,电影社区,向外提供电影相关信息服务,以及用户社区,其中信息服务部分, 其中大部分页面属于信息呈现页,读取量比较大,百万级别pv,信息主要由编辑在后台发布,更新较少,但其页面上有大量的交互性的内容,比如评论,收藏列表,同时许多内容允许用户创造,比如上传图片,添加注释.交互内容的数量和交互的频繁程度,都超过了普通的咨询页面,这次调整,准备将其中访问量最大的几块:电影资料页,影人资料页,进行静态化,如果成功,还将运用到更多的频道,基本实现全站静态化<br />\r\n&nbsp;&nbsp; &nbsp;通过对页面设计和前一版本的分析,下面是具有挑战性的地方.这些特点基本使用于大多数web2.0的站点,很具有典型意义</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">1页面生成的触发条件复杂</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;一般论坛中的帖子或者blog,更新方式比较单一:主要是由回复进行触发还有少数的修改动作,然而该网站一个页面上需要根据不同触发条件就有20多个, 比如光二级菜单:用户发布图片,删除图片,发布或者删除影片信息,发布或者修改视频,后台修改电影信息,都有可能触发</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">2一个动作触发生成的页面可能很多而且相互交叠</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;每一个动作都会触发一系列的生成,并且不同动作可能都会涉及同一个页面或者区域的生成.<br />\r\n&nbsp;&nbsp; &nbsp;比如:用户给一步电影评分,需要生成评分更多页,评分统计更多页,首页右侧谁还关注此影片小区域,等等.用户收藏一个影片,也需要更新首页右侧谁还关注此影片小区域</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">3触发频繁</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;虽然不及某些更大规模的网站,但是由于涉及众多用户参与的内容,评论,收藏等等,触发点多,发生频度相当频繁</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">4页面多,结构复杂,空间占用大</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;通常,需要生成的页面规模是这样粗略估算的,Rn*P,Rn为资源数,P为每个资源的页面数,所谓资源,可以看做一个生成单位,其页面数可以简单看做发布一个资源,就需要生成其所有相关页面数量,比如:发布一个blog,就需要生成一个Blog页,同时还需要生成或者更新个人主页的blog列表,算上个人主页右侧的分类文章数的小块,也就是最多10来个页面或者区域,但是发布一个电影,其相关的页面至少有50个以上,而且有的页面还带有分页,一个信息比较丰富的电影,其页面竟可以达到千个以上,空间10~20M,而且资源总数也不少,电影80000左右,电影人虽然P值较少,但是总量确有几十万之巨,估计静态页面磁盘占用量几百个G</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">5向下兼容</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;这是一个已有系统,旧系统的框框需要突破,但又没有时间,或者不能完全突破,比如Url,已经被收录到搜索引擎,就不能随便调整,还有一些地方,原本没有为静态生成考虑,另一些地方又需要兼容旧的设计</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">6多台前端Web</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;这种结构要求生成的文件可能需要分布到多个服务器(另一个方案是放在几台专用的机器上,等前端来取)</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">7任务紧迫</span></strong><br />\r\n&nbsp;&nbsp; &nbsp;架构讨论结束仪式六月初,离奥运开幕上线只有两月,也就是说所有底层框架实现,页面模板开发,调试测试,动作的整理,必须在7月底全部完成,按我原来估计,光实现这几块的上百个页面模板和填充方法,也需要那么长的时间</p>\r\n\r\n<p>综合考虑上述因素,架构必须要有以下几个方面的特点<br />\r\n1动作可以灵活扩展配置,某个动作对应哪些生成,应该可以配置,并且可以分组<br />\r\n2文件必须有分发机制<br />\r\n3分发和生成必须独立出来,并且支持分布式<br />\r\n4各种的动作,必须转化为消息,发送到生成和分发服务器进行处理<br />\r\n5针对同意资源频繁动作,在变量相同的情况下能够具有合并的能力<br />\r\n6动作必须有记录<br />\r\n7尽量考虑使用已有成熟技术,节省开发时间</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">下面是设计的第一个架构</span></strong></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183039307888.jpg\" style=\"height:272px; width:554px\" /></p>\r\n\r\n<p>用户的动作经过MSMQ<a href=\"#tar1\">[1]</a>传入到生成分发中心(途中绿色箭头)进行处理,,处理中心接受到消息后,负责生成对应的页面或者页面区域,并将页面分发到各个服务器,负载均衡沿用以前的架构,采用微软的NLB<a href=\"#tar2\">[2]</a></p>\r\n\r\n<p>之所以用MSMQ,就是看上了他提供的完整的消息存储恢复机制,这样我们能确保即使服务器down掉重启后,消息依然能正常处理,碰巧我们cms组的同事MSMQ非常熟悉,并且真准备在另外一个项目中使用类似的架构&mdash;于是一拍即合</p>\r\n\r\n<p>页面采用分块存储,这样能保证生成时目标小,开销小,也能重用性,然后再藉由SSI<a href=\"#tar3\">[3]</a>(shtml include)进行整合,之所以采取这样的方案,而不采用Dottext的整合方式,是因为如果采用Dottext的方式,就必须走IIS和.Net的管道<a href=\"#tar4\">[4]</a>,而据测试,经过管道和直接返回html性能有非常大的差异,而使用ssi,在性能上是一个折中,并且可以Light HTTPd等高性能web服务器</p>\r\n\r\n<p>模板生成方式,采用了XSLT和另外一种自定义的模板(我的同事开发的机制,很有趣, 理论上能把传统模板替换的性能开销全部消除),生成的最终产物是shtml,之所以生成shtml是为了使用其ssi(Server Side Include)的特性,保证一定的灵活性,并实现热点数据的分离:某些页面上的部分可能会频繁更新和生成,而其它地方不变,或者某个部分是所有页面通用的(比如页头和页脚),较之php下常常使用smarty,生成php文件,虽然灵活性不如php,但是性能上不相上下,还略高.</p>\r\n\r\n<p>但是这个设计的问题是动态内容和静态内容没有分开,生成的html页面,和动态页面都放在前端服务器上,通过负载均衡访问,也造成了分发服务器需要分发到多台服务器,网络IO效率较低,而且静态内容需要的磁盘空间很大,且小文件非常多,和动态页面混在一起不便于优化,所以第二个方案对生成的静态内容与动态内容使用不同的服务器</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">方案二:</span></strong></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183121922381.jpg\" style=\"height:272px; width:554px\" /></p>\r\n\r\n<p>我们把生成的静态文件单独放置,可以看到,前端增加Nginx,作为跳转,把电影,影人资料库的页面转向静态服务器,其他的调用转向动态服务器,这样我们就可以单独为静态服务器进行优化,比如采用更高效的服务器等等.</p>\r\n\r\n<p>同时减少了文件分发的次数(甚至可以只分发到本机),提高生成分发的处理能力</p>\r\n\r\n<p>更进一步,可以把图片服务分到另外一组机器上,使用独立的域名,比如img.xxx.com,这样可以有效的减少带宽</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">最终完整架构:</span></strong></p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183234894284.jpg\" style=\"height:458px; width:554px\" /></p>\r\n\r\n<p><strong><span style=\"font-size:22px\">文件生成分发中心</span></strong></p>\r\n\r\n<p>下图是文件生成分发中心的工作流程图</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150415183356348922.jpg\" style=\"height:293px; width:526px\" /></p>\r\n\r\n<p>生成服务对外只有一个输入,就是消息,一个输出:静态文件,内部根据消息,从配置文件中找到对应的生成方法,取出相应的模板,进行数据填充</p>\r\n\r\n<p>分发服务主要吧生成服务产生的文件进行分发,分发到前端的N台服务器上,开始考虑得比较复杂,希望分发服务可以跨越协议(本地文件系统,局域网,http协议),跨越多种存储介质(文件系统,数据库),实际最后定下来基本是本地文件系统或者局域网传输</p>\r\n\r\n<p><strong>注:上图中文件分发的部分也可以通过定制MogileFS,来实现分布式文件系统</strong></p>\r\n\r\n<p><strong><span style=\"font-size:22px\">马后炮:</span></strong></p>\r\n\r\n<p>总结起来,静态化除了对架构方面的影响,对开发和测试流程也有影响<br />\r\n<strong><span style=\"font-size:16px\">对测试提出更高的要求:</span></strong><br />\r\n因为一旦上线后,某个页面发现问题,即使是文字的修改,也需要重新生成许多页面,所以测试人员必须非常仔细,测试周期也需要延长</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">开发人员需要掌握模板语言:</span></strong><br />\r\n需要掌握一种模板预言,无论是Xslt还是自己开发的模板语言,都需要花一定的时间掌握</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">需要给第一次生成腾出足够时间:</span></strong><br />\r\n如果不是新系统,那么数据迁移和生成的过程就比较痛苦,由于页面众多,第一次生成的过程可能需要以天来计算,在制定上线方案是就需要考虑到这个方面</p>\r\n\r\n<p>Nginx作为前端的跳转,根据其他网站的经验,应该可以达到2-3万并发连接,但是使用之后,常常有卡壳的情况发生,具体症状为在浏览器中访问页面时,连接超时,或者一直不响应,此时Nginx连接数并不高,好在还有第一套方案可以备用,让我们有时间去解决这个问题,如果大家对这个问题有什么心得,欢迎交流<br />\r\n我的联系方式<br />\r\nMSN:yizhu2000@hotmail.com<br />\r\nGtalk:yizhu2005@gmail.com</p>\r\n\r\n<p><strong><span style=\"font-size:22px\">篇后:</span></strong><br />\r\n在大型web开发上,我感到微软产品结构(包括微软开源社区的成果)在某些方面还存在一些不足:</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">高性能服务器选择太少</span></strong><br />\r\nLinux下可以采用Light HTTPd,Nginx等诸多服务器,这些服务器在很多方面的表现会让Windows下唯一的选择--IIS相形见绌</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">分布式文件系统</span></strong><br />\r\n微软及其社区没有比较著名的产品出现,Linux下有MogileFS</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">微软架构下,文件系统选择太少</span></strong><br />\r\n在Linux下我们可以选择诸如Ext3,ReiserFS,而Windows环境下,NTFS是唯一的选择,不过值得称道的是.NTFS的效率和稳定性都相当不错.</p>\r\n\r\n<p><strong><span style=\"font-size:16px\">开源技术对windows版本的支持态度不积极</span></strong><br />\r\n诸多在Linux下名声卓著的开源产品,又懒于为Windows提供相应的版本,或者提供的windows版本效果差强人意.使得采用微软服务器的厂商少了很多选择</p>\r\n\r\n<p>现在的Web开发已经进入了各种技术大混合,大整合的时代,任何一个厂商都不可能涵盖所有方面,在后端架构和逻辑方面.Net和Java严谨,良好的编程风格,清晰的设计思路,较高的运行效率,以及稳定的配套服务支持,是其最大的优势,对主要擅长微软技术的Web工程师和架构师而言,应该增进对Linux及开源社区的了解,才能根据需求设计出合理的架构</p>\r\n\r\n<hr />\r\n<p><a id=\"tar1\" name=\"tar1\">[1]</a>Message Queuing: A Scalable, Highly Available Load-Balancing Solution<br />\r\nhttp://msdn.microsoft.com/en-us/library/ms811052.aspx</p>\r\n\r\n<p><a id=\"tar2\" name=\"tar2\">[2]</a>网络负载平衡(NLB)详解,注意文章后给出的参考链接<br />\r\nhttp://blog.chinaitlab.com/user1/563173/archives/2007/132713.html</p>\r\n\r\n<p><a id=\"tar3\" name=\"tar3\">[3]</a>怎样使用ssi,及其语法:<br />\r\nhttp://blog.csdn.net/dadou2007/archive/2008/06/08/2521365.aspx<br />\r\nNginx下的ssimodule<br />\r\nhttp://www.nginx.cn/NginxChsHttpSsiModule</p>\r\n\r\n<p><a id=\"tar4\" name=\"tar4\">[4]</a>asp.net的处理机制http://www.microsoft.com/china/msdn/library/webservices/asp.net/dnvs05Internals.mspx?mfr=true<br />\r\nhtml.asp.aspx运行效率比较<br />\r\nhttp://iamlibai.blogbus.com/logs/2017870.html</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>朱燚的技术博客,转载请注明出处<br />\r\nhttp://yizhu2000.cnblogs.com<br />\r\nhttp://blog.csdn.net/yizhu2000</p>\r\n',0,1429094245,0,0),(4,8,'windows中使svn提交后自动同步到web目录的方法','<p>windows版<br />\r\n假设你的web server domain是<br />\r\nhttp://your.com<br />\r\n<br />\r\n网站存放于<br />\r\nd:/web/<br />\r\n<br />\r\nsubversion安装在<br />\r\nc:/subversion/<br />\r\n<br />\r\nsvn版本库存放于<br />\r\nd:/test/<br />\r\n<br />\r\nsvn用户名和密码都是test<br />\r\n<br />\r\n需要在本机修改SVN后提交后，网站代码也随之更改。那么可以这样。<br />\r\n<br />\r\n第一步<br />\r\n在d:/web/用TortoiseSVN更新到最新版本库<br />\r\n<br />\r\n第二步<br />\r\n在d:/test/hooks/目录中新建一个post-commit.bat文件，写入以下一行内容<br />\r\nc:/subversion/bin/svn.exe update d:/web --username=test --password=test<br />\r\n<br />\r\n第三步<br />\r\n启动svn服务<br />\r\n命令行中输入<br />\r\nc:/subversion/bin/svnserve.exe --daemon --root d:/test<br />\r\n<br />\r\n测试更改提交一个文件，看看是否能自动同步<br />\r\n<br />\r\nlinux版参考http://blog.ihipop.info/2010/12/1893.html</p>\r\n',0,1429361126,0,0),(5,9,'WEB缓存原理','<p>先简单说下什么是缓存：缓存简单说来就是把一个代码执行过程产生的输出保存起来，可以存放在硬盘，内存，或者其他服务器上，</p>\r\n\r\n<p>缓存可以是任意格式的文件，内容也可以是完整的HTML，HTML片段XML,几个字符，一串字符串，比较常见的就是缓存文件例如smarty,smarttemplate模版的缓存，这个就是保存的html片断，而开源的discuz,phpwind等论坛程序，就是保存的字符串，这个字符串的特点就是一段完整的PHP代码，直接用include包含这个缓存文件就可以得到相关数组。还有些格式比如说小巧的sqlite,将PHP序列化为字符串保存在文件里，用的时候再反序列化等手段，其过程都是类似的。</p>\r\n\r\n<p>现在说更新缓存：通常的做法是在取缓存的时候先根据相关条件（如模版改动，缓存过期数据库变动等）判断缓存文件是否需要更新，如需更新则直接进行缓存更新，所以，一般有这样的代码片段：(以伪代码示例）<br />\r\nif(需要更新缓存==true){<br />\r\n这里就是缓存文件产生过程<br />\r\n}else{<br />\r\n取缓存文件的数据<br />\r\n}</p>\r\n\r\n<p>这样的方式可以称为同步更新缓存，同步更新有几个缺点，一是并发大了的情况，在更新文件的同时，另一个进程正在包含这个文件，有可能造成文件读写错误，二是如果更新过程过于慢长，用户端得到的一片空白，严重降低了用户体验。可以采取异步更新的机制来完善以上2个缺陷：当服务端检查到缓存需要更新，但并不立即更新，输出javascrīpt对客户端进行提示（需要更新缓存，请等待）或者压根就不提示用户，而采用过去缓存，并使用ajax或者包含框架的方式再次请求服务器，这次服务器才更新缓存，下一次请求就稍做检查就用上新缓存了，这样很容易的解决了以上问题，用户体验也不错，感觉不到空白的延迟时间段。</p>\r\n\r\n<p>举一个很简单的例子来说明异步更新缓存的过程：用户查询名字为包含xxx的数据:很明显这个查询语句是select name from table where name like &#39;%xxx%&#39;是全表搜索，name上的索引无效，我们可以把这个查询出来的数据做成xml,或者直接序列化结果保存在文件，文件名就为xxx,如果是搜索yyy的话，我们建立的文件名可以是yyy，遇见下一次查询用户名为xxx的时候，我们就可以直接取这个xxx缓存文件，从而饶开了查询数据库，这个是很好理解的。</p>\r\n\r\n<p>如果某时间insert了name包含xxx的数据，再新的查询中，我们需要进行缓存更新，现在我们则采用异步更新缓存的思路进行：直接给客户端返回js，提示需要等待更新，当新的xxx文件更新之后，服务端再输出js通知更新完毕，然后直接进行结果查看页，这个过程强调了用户体验，用户根本看不到空白的等待返回结果的信息，感觉到整个过程更加流畅。</p>\r\n\r\n<p>实例代码：<br />\r\n&lt;?php<br />\r\ndefine(&quot;_CachePath_&quot;,&quot;./cache/&quot;);<br />\r\ndefine(&quot;_CacheEnable_&quot;,&quot;1&quot;);<br />\r\ndefine(&quot;_ReCacheTime_&quot;,&quot;43200&quot;);<br />\r\ninclude(&#39;cache.php&#39;);<br />\r\n$cache=new cache();<br />\r\nif ($cache-&gt;check()){<br />\r\n&nbsp;&nbsp; &nbsp;$template=$cache-&gt;read();<br />\r\n}else{<br />\r\n&nbsp;&nbsp; &nbsp;ob_start();<br />\r\n&nbsp;&nbsp; &nbsp;ob_implicit_flush(0);<br />\r\n?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;页面内容。。。。<br />\r\n&lt;?php<br />\r\n&nbsp;&nbsp; &nbsp;$template = ob_get_contents();<br />\r\n&nbsp;&nbsp; &nbsp;$cache-&gt;write($template);<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>&lt;?<br />\r\nclass cache<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var $cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;var $cachefilevar;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function cache()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//生成当前页的Cache组文件名 $this-&gt;cachefilevar 及文件名 $this-&gt;cachefile<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//动态页的参数不同对应的Cache文件也不同，但是每一个动态页的所有Cache文件都有相同的文件名，只是扩展名不同<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$s=array(&quot;.&quot;,&quot;/&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$r=array(&quot;_&quot;,&quot;&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;cachefilevar=str_replace($s,$r,$_SERVER[&quot;SCRIPT_NAME&quot;]).&quot;_&quot;.$_GET[_ActionVar_];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;cachefile=$this-&gt;cachefilevar.&quot;.&quot;.md5($_SERVER[&quot;REQUEST_URI&quot;]);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//删除当前页/模块的缓存<br />\r\n&nbsp;&nbsp; &nbsp;function delete()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//删除当前页的缓存<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$d = dir(_CachePath_);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$strlen=strlen($this-&gt;cachefilevar);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的所有Cache文件组<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while (false !== ($entry = $d-&gt;read()))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (substr($entry,0,$strlen)==$this-&gt;cachefilevar)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!unlink(_CachePath_.&quot;/&quot;.$entry)) {echo &quot;Cache目录无法写入&quot;;exit;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//判断是否已Cache过，以及是否需要Cache<br />\r\n&nbsp;&nbsp; &nbsp;function check()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果设置了缓存更新间隔时间 _ReCacheTime_<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_ReCacheTime_+0&gt;0)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页Cache的最后更新时间<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$var=@file(_CachePath_.&quot;/&quot;.$this-&gt;cachefilevar);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$var=$var[0];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果更新时间超出更新间隔时间则删除Cache文件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (time()-$var&gt;_ReCacheTime_)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;delete();$ischage=true;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的Cache<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//判断当前页Cache是否存在 且 Cache功能是否开启<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return (file_exists($file) and _CacheEnable_ and !$ischange);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//读取Cache<br />\r\n&nbsp;&nbsp; &nbsp;function read()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的Cache<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//读取Cache文件的内容<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_CacheEnable_) return readfile($file);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else return false;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//生成Cache<br />\r\n&nbsp;&nbsp; &nbsp;function write($output)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//返回当前页的Cache<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefile;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果Cache功能开启<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_CacheEnable_)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//把输出的内容写入Cache文件<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$fp=@fopen($file,&#39;w&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!@fputs($fp,$output)) {echo &quot;模板Cache写入失败&quot;;exit;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//如果设置了缓存更新间隔时间 _ReCacheTime_<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (_ReCacheTime_+0&gt;0)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//更新当前页Cache的最后更新时间<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$file=_CachePath_.&quot;/&quot;.$this-&gt;cachefilevar;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$fp=@fopen($file,&#39;w&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!@fwrite($fp,time())) {echo &quot;Cache目录无法写入&quot;;exit;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n?&gt;</p>\r\n',0,1429362221,0,0),(6,10,'PHP5.4为什么不支持VC6','<p>win下的apache是用VC6编译的，其插件(apache module)也必须用VC6编译。<br />\r\nPHP5.4为什么不支持VC6？因为VC6太旧了，1998年的工具..<br />\r\n不能用是指php以apache mod的方式不能用。现代php都以fast-cgi的方式挂载支持apache，连微软iis都放弃isapi转采用fast-cgi了。在不同的进程下，VC9的php fast-cgi通过进程间通讯支持apache，即使apache不是vc不是win版都没问题。。<br />\r\n去下载apache的mod_fcgid，然后把php配置到fcgid上。就可以用了<br />\r\n搜一搜教程很多。</p>\r\n',0,1429362612,0,0),(7,2,'jquery $.fn $.fx是什么意思','<p>$.fn是指jquery的命名空间，加上fn上的方法及属性，会对jquery实例每一个有效。<br />\r\n如扩展$.fn.abc()<br />\r\n那么你可以这样子：$(&quot;#div&quot;).abc();<br />\r\n通常使用extend方法扩展，详细请看API.</p>\r\n\r\n<p>$.fx是指jquery的特效。<br />\r\n如果使用显示、滑动、淡入淡出、动画等。<br />\r\n$.fx.off可以关闭动画，其实是直接显示结果。</p>\r\n\r\n<p>jquery的extend和fn.extend<br />\r\njQuery为开发插件提拱了两个方法，分别是：</p>\r\n\r\n<p>jQuery.fn.extend(object);<br />\r\njQuery.extend(object);</p>\r\n\r\n<p>jQuery.extend(object); 为扩展jQuery类本身.为类添加新的方法。<br />\r\njQuery.fn.extend(object);给jQuery对象添加方法。</p>\r\n\r\n<p><br />\r\nfn 是什么东西呢。查看jQuery代码，就不难发现。</p>\r\n\r\n<p>jQuery.fn = jQuery.prototype = {<br />\r\n&nbsp;&nbsp; &nbsp;init: function( selector, context ) {//....<br />\r\n&nbsp;&nbsp; &nbsp;//......<br />\r\n};</p>\r\n\r\n<p>原来 jQuery.fn = jQuery.prototype.对prototype肯定不会陌生啦。</p>\r\n\r\n<p>虽然 javascript 没有明确的类的概念，但是用类来理解它，会更方便。<br />\r\njQuery便是一个封装得非常好的类，比如我们用 语句 $(&quot;#btn1&quot;) 会生成一个 jQuery类的实例。</p>\r\n\r\n<p>jQuery.extend(object); 为jQuery类添加添加类方法，可以理解为添加静态方法。如：</p>\r\n\r\n<p>$.extend({<br />\r\n&nbsp;&nbsp; &nbsp;add:function(a,b){return a+b;}<br />\r\n});</p>\r\n\r\n<p>便为 jQuery 添加一个为 add 的 &ldquo;静态方法&rdquo;，之后便可以在引入 jQuery 的地方，使用这个方法了，<br />\r\n$.add(3,4); //return 7</p>\r\n\r\n<p>jQuery.fn.extend(object); 对jQuery.prototype进得扩展，就是为jQuery类添加&ldquo;成员函数&rdquo;。jQuery类的实例可以使用这个&ldquo;成员函数&rdquo;。<br />\r\n比如我们要开发一个插件，做一个特殊的编辑框，当它被点击时，便alert 当前编辑框里的内容。可以这么做：<br />\r\nJava代码 $.fn.extend({ alertWhileClick:function(){ $(this).click(function(){ alert($(this).val()); }); } }); $(&quot;#input1&quot;).alertWhileClick(); //页面上为：&lt;input id=&quot;input1&quot; type=&quot;text&quot;/&gt;</p>\r\n\r\n<p>$(&quot;#input1&quot;) 为一个jQuery实例，当它调用成员方法 alertWhileClick后，便实现了扩展，每次被点击时它会先弹出目前编辑里的内容。</p>\r\n\r\n<p>真实的开发过程中，当然不会做这么小白的插件，事实上jQuery提拱了丰富的操作文档，事件，CSS ,Ajax、效果的方法，结合这些方法，便可以开发出更加 Niubility 的插件。</p>\r\n\r\n<p>jquery(function(){})与(function(){}(jQuery)的区别<br />\r\n1.first<br />\r\njQuery(function(){});<br />\r\n全写为<br />\r\njQuery(docunemt).ready(function(){<br />\r\n});<br />\r\n意义为在DOM加载完毕后执行ready()方法<br />\r\n2.<br />\r\n(funtion(){<br />\r\n})(jQuery);<br />\r\n实际执行()(para)匿名方法，只不过传递了jQuery对象。<br />\r\n总结：jQuery(funtion(){});用于存放DOM对象的代码，执行其中代码时DOM对象已经存在。<br />\r\n不可用于存放开发插件代码。因为jQuery对象没有得到传递，外部通过jQuery.methodye<br />\r\n调用不来其中方法。<br />\r\n(funtion(){<br />\r\n})(jQuery);用于存放开发插件的代码，执行其中代码DOM不一定存在，直接自动执行DOM操作代码请小心使用</p>\r\n',0,1429362869,0,0),(8,3,'js+css无限级菜单实例','<p>&lt;!doctype html&gt;<br />\r\n&lt;html&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt;css+js无限级菜单&lt;/title&gt;<br />\r\n&lt;meta charset=&quot;UTF-8&quot;&gt;<br />\r\n&lt;style type=&quot;text/css&quot;&gt;<br />\r\n*{margin:0; padding:0; border:0;}<br />\r\nbody{font:12px/130% verdana,geneva,arial,helvetica,sans-serif,宋体;}li{list-style:none;}<br />\r\n.clearfix:after{content:&quot;&amp;nbsp;&quot;;display:block;height:0;clear:both;visibility:hidden;}.clearfix{display:inline-block;}<br />\r\na:link{ color:#000; text-decoration:none; }<br />\r\na:visited{ color:#000; text-decoration:none; }<br />\r\na:hover{ color:#000; text-decoration:none; }<br />\r\n.menu{ width:778px; height:26px; background:#fff; margin:0 auto;}<br />\r\n.menusel{ float:left;width:100px; position:relative; height:25px; background:#ddd; line-height: 25px; margin-left: 1px; *margin-left: 0px;_margin-left: -1px;}<br />\r\n.menusel h2{ font-size:12px; }<br />\r\n.menusel a{ display: block;text-align:center; width:100px;border:1px solid #a4a4a4; height:25px; border-bottom:1px solid #a4a4a4; position:relative; z-index:2;}<br />\r\n.menusel a:hover{ border:1px solid #a4a4a4; border-bottom:1px dashed #eeeeee; position:relative; z-index:2; height:25px;}<br />\r\n.ahover a{border-bottom:1px dashed #eeeeee; background:#eeeeee; }<br />\r\n.position{ position:absolute; z-index:1;}<br />\r\n.menusel ul{width:125px; background:#eee; border:1px solid #a4a4a4; margin-top: -1px; position:relative; z-index:1; display:none;}<br />\r\n.menusel .block{ display:block;}<br />\r\n.typeul li{border-bottom:1px dashed #a4a4a4;width:125px; position:relative; float:left; }<br />\r\n.typeul li a{ border:none;width:125px; }<br />\r\n.typeul li a:hover{ border:none; background:#ddd;}<br />\r\n.typeul{&nbsp; margin-left:0;&nbsp; }<br />\r\n.typeul ul{left:125px; top:0; position:absolute;}<br />\r\n.fli{ margin-left: -1px; border-left:#eeeeee solid 1px;}<br />\r\n.menusel .lli{ border:none; }<br />\r\n&lt;/style&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;document.execCommand(&quot;BackgroundImageCache&quot;, false, true);&lt;/script&gt;&lt;!-- IE6背景图片闪烁问题&nbsp; --&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;div class=&quot;menu&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;div id=&quot;menu1&quot; class=&quot;menusel&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;a href=&quot;http://www.codefans.net/jscss/&quot;&gt;菜单1&lt;/a&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div class=&quot;position&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul class=&quot;clearfix typeul&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项1-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项1-2-1&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-3-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;http://www.codefans.net&quot;&gt;菜单选项1-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项1-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- position --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- menusel --&gt;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&lt;div id=&quot;menu2&quot; class=&quot;menusel&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;a href=&quot;#&quot;&gt;菜单2&lt;/a&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div class=&quot;position&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul class=&quot;clearfix typeul&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- position --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- menusel --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;div id=&quot;menu3&quot; class=&quot;menusel&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;a href=&quot;#&quot;&gt;菜单3&lt;/a&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;div class=&quot;position&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul class=&quot;clearfix typeul&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-2&lt;/a&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;fli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-1&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;li class=&quot;lli&quot;&gt;&lt;a href=&quot;#&quot;&gt;菜单选项3-2&lt;/a&gt;&lt;/li&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/ul&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- position --&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/div&gt;&lt;!-- menusel --&gt;<br />\r\n&lt;/div&gt;&lt;!-- menu --&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\nfor(var x = 1; x &lt; 4; x++)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var menuid = document.getElementById(&quot;menu&quot;+x);<br />\r\n&nbsp;&nbsp; &nbsp;menuid.num = x;<br />\r\n&nbsp;&nbsp; &nbsp;type();<br />\r\n}<br />\r\nfunction type()<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var menuh2 = menuid.getElementsByTagName(&quot;h2&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;var menuul = menuid.getElementsByTagName(&quot;ul&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;var menuli = menuul[0].getElementsByTagName(&quot;li&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;menuh2[0].onmouseover = show;<br />\r\n&nbsp;&nbsp; &nbsp;menuh2[0].onmouseout = unshow;<br />\r\n&nbsp;&nbsp; &nbsp;menuul[0].onmouseover = show;<br />\r\n&nbsp;&nbsp; &nbsp;menuul[0].onmouseout = unshow;<br />\r\n&nbsp;&nbsp; &nbsp;function show()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuul[0].className = &quot;clearfix typeul block&quot;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function unshow()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuul[0].className = &quot;typeul&quot;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;for(var i = 0; i &lt; menuli.length; i++)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[i].num = i;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var liul = menuli[i].getElementsByTagName(&quot;ul&quot;)[0];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if(liul)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;typeshow();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function typeshow()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[i].onmouseover = showul;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[i].onmouseout = unshowul;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function showul()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[this.num].getElementsByTagName(&quot;ul&quot;)[0].className = &quot;block&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;function unshowul()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;menuli[this.num].getElementsByTagName(&quot;ul&quot;)[0].className = &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n&lt;/script&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',1,1429363940,0,0),(9,8,'Windows下的SVN服务器安装及配置','<p>准备工作</p>\r\n\r\n<p>首先先下载Windows版本的SVN服务器(各位都会使用搜索引擎所以就不提供下载 地址了),这里我以svn-win32-1.4.3的ZIP解压缩版为例,将其解压缩到目标目录,例如我是解压到D盘下的Subversion目录,把 D:Subversionin加到系统环境变量,如果你的解压位置与我不同,那么请按照你的实际路径设置环境变量。</p>\r\n\r\n<p>第一步:创建SVN数据库</p>\r\n\r\n<p>打开Windows命令提示符,执行命令svnadmin create F:SVN,svnadmin create是创建SVN数据库的命令,F:SVN是你的SVN数据库位置,这里我只是举个例子,你可以自己决定SVN数据库位置,执行完以上命令后就 会在F盘下多出一个SVN目录,里面有若干目录和文件,conf目录是用来存放权限配置的,后面会详细说明,dav目录用来提供给apache和 mod_dav_svn存储内部数据,db目录是所有版本控制的数据文件,hooks目录用来放置hook脚本文件,locks目录存放 Subversion文件库锁定数据,用来追踪存取文件库的客户端,format是一个文本文件,里面只放了一个整数,表示当前文件库配置的版本号,还有 个readme.txt不用说也知道是干什么的了。</p>\r\n\r\n<p>第二步:启动SVN服务器</p>\r\n\r\n<p>继续在Windows命令提示符里执行命令svnserve -d -r F:SVN,参数-d是将SVN服务做为后台服务,参数-r是指定SVN服务的根目录位置,F:SVN自然就是SVN根目录了,到这里为止SVN服务 器就已经启动了,可以用SVN客户端测试一下。</p>\r\n\r\n<p>第三步:将SVN服务注册为系统服务</p>\r\n\r\n<p>你可能会问这样岂不是每次启动SVN服务器都要输入一次命令?怎样才能让SVN服务器在开机的时候自动启动呢?答案就是将SVN服务注册到 Windows系统服务,在Windows命令提示符里执行命令<br />\r\nsc create SVN binpath= &quot;&quot;d:subversioninsvnserve.exe&quot; --service -r F:SVN&quot; displayname= &quot;SVN Service&quot; depend= Tcpip start= auto,这个命令是不是有点长?其实很容易理解,sc是Windows自带的系统服务注册工具,微软支持中心 提 供了详细的说明,这里我就不再复述了,参数binpath= &quot;&quot;d:subversioninsvnserve.exe&quot; --service -r F:SVN&quot;和我们前面手动启动SVN服务器的命令很像吧?只是把-d改成了--service,这不难理解,因为现在是服务嘛。好了,现在已经大功告 成了,重起一下试试吧。<br />\r\nPS:如果想从系统服务里删除刚才注册的SVN服务可以使用sc delete SVN命令。</p>\r\n\r\n<p>第四步:设置权限</p>\r\n\r\n<p>各位都是做IT的,为研发中的项目设置合理的权限有多重要就不需要我说了,就拿开发游戏来说吧,程序部门需要有源代码目录的所有权限以及美术资源目录和 策划案目录的获取权限,美术部门需要有美术资源目录的所有权限以及策划案目录的获取权限,而策划部门则需要有策划案目录的所有权限及美术资源目录的获取权 限。接下去就来看看SVN是如何设置权限的,还记得第一步创建SVN数据库时提到的conf目录吧,conf目录里有3个文件,这3个都是文本文件,用计 事本打开它们就行了,我们先看svnserve.conf文件,anon-access项指定了未经验证的用户所具有的操作权限,它有3个有效值,分别是 read,write,none,read为读权限,write为写权限,none为没有任何权限,password-db项用来指定存放用户名和密码的 文件,authz-db项用来指定存放用户权限的文件,realm项用来指定验证范围,这项一般情况下用不到,以上4项默认都是被注释掉的.#号为注释 符,要起用它们只需要把注释符去掉即可。passwd文件是默认存放用户名和密码的文件,例如我设置一个Sol用户,密码为111111,只需在 [users]下添加Sol=111111即可,authz文件是默认指定存放用户权限的文件,[groups]代表分组,这里我们设置个 developer组,将前面创建的Sol用户分到developer组里,同样只需在[groups]下写上developer=Sol即可,[/]代 表根目录,如果我们要设置developer组有完全的访问权限就在下面加上@developer=rw,前面加@符代表组,除此之外我们允许所有人都有 读取权限还要在下面加上*=r,SVN允许对每个目录设置权限,设置方法和根目录差不多,如果到这里你还不是很明白那么请看下面的例子。</p>\r\n\r\n<p>一个权限配置的例子</p>\r\n\r\n<p>我们以游戏项目开发为例,项目名就叫Project1吧,怎么创建SVN数据库上面已经说过了,我们在SVN的根目录下创建一个名为Project1的 本地数据库,先配置conf目录下的svnserve.conf文件,我们不允许任何与研发无关的人员访问此项目,因此我们禁止匿名访问并为每个研发人员 创建个人帐号,权限文件和帐户信息文件用默认同目录下的authz文件和passwd文件就行了。</p>\r\n\r\n<p>svnserve.conf文件配置如下:</p>\r\n\r\n<p>[general]<br />\r\nanon-access = none<br />\r\npassword-db = passwd<br />\r\nauthz-db = authz</p>\r\n\r\n<p>接下去配置passwd文件,为每个研发人员设置个人帐户,假设项目负责人是Sol,程序部门有Tom、Mark,美术部门有John、Alina、 Candice、Ellen,策划部门有Terry、Jane,这里我们为了方便将密码全部设置为000000,现在是例子没关系,实际应用的时候密码就 不能这么随便设置了。</p>\r\n\r\n<p>passwd文件配置如下:</p>\r\n\r\n<p>[users]<br />\r\nSol = 000000<br />\r\nTom = 000000<br />\r\nMark = 000000<br />\r\nJohn = 000000<br />\r\nAlina = 000000<br />\r\nCandice = 000000<br />\r\nEllen = 000000<br />\r\nTerry = 000000<br />\r\nJane = 000000</p>\r\n\r\n<p>帐户都创建好了,现在为他们分配不同的权限,先设置4个组.分别是manager 、developer、artist、designer,将Sol分配到manager组里,将Tom、Mark分配到developer组,将 John、Alina、Candice、Ellen分配到artist组,将Terry、Jane分配到designer组,等会我们会在项目中创建 designs、sources、resources、reports这4个目录,然后在reports目录里为每个人创建一个以自己帐户命名的目录用来 放每个人的工作报告,manager组拥有所有目录的读写权限,developer组拥有sources目录的读写权限以及designs和 resources目录的读取权限,artist组拥有resources目录的读写权限以及designs目录的读取权限,designer组拥有 designs目录的读写权限以及resources目录的读取权限,每个帐户都拥有reports目录下以自己帐户命名的目录的读写权限,也就是说每个 人的工作报告只有自己和项目负责人能看到。</p>\r\n\r\n<p>authz文件配置如下:</p>\r\n\r\n<p>[groups]<br />\r\nmanager = Sol<br />\r\ndeveloper = Tom,Mark<br />\r\nartist = John,Alina,Candice,Ellen<br />\r\ndesigner = Terry,Jane</p>\r\n\r\n<p>[Project1:/]<br />\r\n@manager = rw<br />\r\n* = r</p>\r\n\r\n<p>[Project1:/designs]<br />\r\n@manager = rw<br />\r\n@developer = r<br />\r\n@artist = r<br />\r\n@designer = rw<br />\r\n* = &nbsp;</p>\r\n\r\n<p>[Project1:/sources]<br />\r\n@manager = rw<br />\r\n@developer = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/resources]<br />\r\n@manager = rw<br />\r\n@developer = r<br />\r\n@artist = rw<br />\r\n@designer = r<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Sol]<br />\r\nSol = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Tom]<br />\r\n@manager = rw<br />\r\nTom = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Mark]<br />\r\n@manager = rw<br />\r\nMark = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/John]<br />\r\n@manager = rw<br />\r\nJohn = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Alina]<br />\r\n@manager = rw<br />\r\nAlina = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Candice]<br />\r\n@manager = rw<br />\r\nCandice = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Ellen]<br />\r\n@manager = rw<br />\r\nEllen = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Terry]<br />\r\n@manager = rw<br />\r\nTerry = rw<br />\r\n* =</p>\r\n\r\n<p>[Project1:/reports/Jane]<br />\r\n@manager = rw<br />\r\nJane = rw<br />\r\n* =</p>\r\n\r\n<p>目录的权限都设置完了,但是目录我们还没有创建,现在只有项目负责人才有权限在项目根目录下创建目录,所以我们用Sol的帐户来创建designs、 reports、resources、sources这4个目录,然后再到reports目录里为每个人创建以各自帐户命名的工作报告目录,好了,到这里 就全部搞定了,收工。</p>\r\n',0,1429364385,0,0),(10,8,'svn与apache结合','<p><strong><span style=\"font-size:20px\">svn与apache结合一</span></strong><br />\r\n关键字: svn与apache结合</p>\r\n\r\n<p>1. 安装与svn对应的apache版本</p>\r\n\r\n<p>2.把svn安装目录下（比如：D:Program FilesSubversionin）的mod_authz_svn.so和mod_dav_svn.so文件拷贝到apache的安装目录（D:Program FilesApache GroupApache2modules）下</p>\r\n\r\n<p>3.修改D:Program FilesApache GroupApache2confhttpd.conf文件</p>\r\n\r\n<p>因为apache和svn整合需要依赖的2个Module(145,146行)</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; LoadModule cgi_module modules/mod_cgi.so&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; LoadModule dav_module modules/mod_dav.so &nbsp;</p>\r\n\r\n<p>把这2行注释取消</p>\r\n\r\n<p>同时添加svn的Module：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; LoadModule dav_svn_module modules/mod_dav_svn.so&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; LoadModule authz_svn_module modules/mod_authz_svn.so &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>最后在配置请求：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Location&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>重启apache. 现在svn仓库里的文件都可以通过apache来访问了：</p>\r\n\r\n<p>比如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; http://localhost/svn/ &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;如果这样配置的话，因为没有配置认证信息，所以，任何人都可以访问。</p>\r\n\r\n<p>如果把Location部分改为：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p>AuthType:认证类型<br />\r\nAuthName:弹出认证窗口时的标题<br />\r\nAuthUserFile:认证用户名和密码文件，默认是密码是md5加密<br />\r\nRequire valid-user:是否需要认证</p>\r\n\r\n<p><br />\r\nD:Program FilesApache GroupApache2in下有个htpasswd命令<br />\r\nhtpasswd help可以查看具体用法<br />\r\n-c是新建立个密码文件<br />\r\n如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; htpasswd -c c:/test/passwords admin&nbsp; &nbsp;</p>\r\n\r\n<p>回车后就会提示输入新添加的admin用户的密码<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;<br />\r\n不带-c参数是追加一个新用户test</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; htpasswd&nbsp; c:/test/passwords test &nbsp;</p>\r\n\r\n<p><br />\r\n-p是密码不加密，如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; htpasswd -p d:/test/passwords test1 &nbsp;</p>\r\n\r\n<p><br />\r\n<span style=\"color:#FF0000\">如果2个用户的密码都是md5加密的，并且密码一样，在密码文件里存的也是不一样的。<br />\r\n如果直接在密码文件里输入内容，按照一定的明文格式来新添加用户和密码也是可以的。</span></p>\r\n\r\n<p><br />\r\ntelnet www.wsay.net 80 ,默认端口23 ,所以在这里要写80<br />\r\nHead / HTTP/1.1<br />\r\nHost: www.wsay.net</p>\r\n\r\n<p><br />\r\nGet /index.html HTTP/1.1<br />\r\nHost: www.wsay.net<br />\r\n<a href=\"http://ttitfly.javaeye.com/blog/136467\">策略模式(Strategy模式)</a> | <a href=\"http://ttitfly.javaeye.com/blog/134570\">svn与apache结合一</a><br />\r\n2007-10-22<br />\r\n<strong><span style=\"font-size:20px\">svn与apache结合二</span></strong><br />\r\n关键字: svn与apache结合高级</p>\r\n\r\n<p>1. 如果将Location部分的SVNPath改为SVNParentPath,如下：<br />\r\nxml 代码</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNParentPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p><br />\r\n则svn 的父仓库我们都无法访问到了，只能访问它的子仓库。</p>\r\n\r\n<p>所以需要建立子仓库：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; svnadmin create d:/svn/reponsitory/child1 &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>现在如果你向仓库里导入一个project,比如用TortoiseSVN&nbsp; 来import&nbsp; ,如果你再地址栏里输入：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; http://localhost/svn/aaa &nbsp;</p>\r\n\r\n<p>则<span style=\"color:#FF0000\">表示aaa必须是个已经存在的子仓库</span>。否则失败</p>\r\n\r\n<p>查看的话也是一样的，比如：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; http://localhost/svn/bbbb &nbsp;</p>\r\n\r\n<p><br />\r\n<span style=\"color:#FF0000\">则bbbb也是个已经存在的子仓库。而不是父仓库下的bbbb项目。因为bbbb项目你是没办法访问到了</span></p>\r\n\r\n<p>如果Require valid-user改为下面：</p>\r\n\r\n<p>则表示匿名用户可以有读权限，而没有写和修改的权限 <span style=\"color:#FF0000\">（一个用户对所有子仓库里的项目权限都是一样的。）</span></p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNParentPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/LimitExcept&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>如果再增加个策略文件，<span style=\"color:#FF0000\">（一个用户对所有子仓库里的项目权限都是不一样的。）</span>修改为：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &lt;Location /svn&gt; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; DAV svn&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; SVNParentPath D:/svn/reponsitory&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthzSVNAccessFile d:/passwd/policy&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthName &quot;Subversion Reponsitory&quot;&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; AuthUserFile d:/test/passwords&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; Require valid-user&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/Location&gt; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>编写策略文件内容d:/passwd/policy:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [subresponsitory:/]&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; user1=rw&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; user2=r&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; user3= &nbsp;</p>\r\n\r\n<p><span style=\"color:#FF0000\">subresponsitory:/表示子仓库subresponsitory下所有的项目</span></p>\r\n\r\n<p><span style=\"color:#FF0000\">如果某个子仓库没有在策略文件里配置，那么默认是所有用户都没有权限访问</span></p>\r\n\r\n<p>用户组</p>\r\n\r\n<p>策略文件里修改为：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [groups]&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; developers=user1,user2&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; testers=user3 &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; #testers=@developers,user3也可以&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [subsvn:/]&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; @developers=rw &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; @testers=&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; #这里也可以继续添加用户比如 user4=r &nbsp;</p>\r\n\r\n<p><br />\r\n备份：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; svnadmin hotcopy d:/svn/reponsitory d:/backup&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; svnadmin hotcopy d:/svn/reponsitory ftp://11.222.11.2&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; #reponsitory下的内容拷贝到backup目录下，reponsitory本身不会被拷贝</p>\r\n',0,1429365031,0,0),(11,10,'四十条测试你是不是合格的PHP程序员','<p>四十条测试你是否合格的PHP程序员,不官方，也不权威，但很给力。超过三条就不合格了。超过五条就得好好反省下自己的不足了。2011我来了~<br />\r\n1. 不会利用如phpDoc这样的工具来恰当地注释你的代码<br />\r\n2. 对优秀的集成开发环境如 EclipsePHP EPP 或 Zend Studio PDT视而不见<br />\r\n3. 从未用过任何形式的版本控制系统，如Subclipse<br />\r\n4. 不采用某种编码与命名标准，以及通用约定，不能在项目开发周期里贯彻落实<br />\r\n5. 不使用统一开发方式<br />\r\n6. 不转换(或)也不验证某些输入或SQL查询串(译注：参考PHP相关函数)<br />\r\n7. 不在编码之前彻底规划你的程序<br />\r\n8. 不使用测试驱动开发<br />\r\n9. 不在错误开启状态下进行编码和测试(译注：参考PHP函数error_reporting)<br />\r\n10. 对调试器的好处视而不见<br />\r\n11. 不重构你的代码<br />\r\n12. 不使用类似MVC模式把程序的不同层次划分开<br />\r\n13. 不知道这些概念：KISS, DRY, MVC, OOP, REST<br />\r\n14. 不用return而是直接在你的函数或类中输出(echo/print)内容<br />\r\n15. 对单元测试或通用测试的优点视而不见<br />\r\n16. 总是返回硬编码的HTML，却不返回纯粹的数据，字符串，或对象<br />\r\n17. 总是对&ldquo;消息&rdquo;和&ldquo;配置参数&rdquo;进行硬编码<br />\r\n18. 不对SQL查询语句做优化<br />\r\n19. 不使用__autoload(译注：参考PHP手册相关描述)<br />\r\n20. 不允许智能错误处理(译注：参考PEAR的ErrorStack)<br />\r\n21. 使用$_GET替代$_POST来做具有破坏性的传递操作<br />\r\n22. 不知道怎么利用正则表达式<br />\r\n23. 从未听说过SQL注入或跨站脚本<br />\r\n24. 不允许简易配置，也不允许类的构造函数接受参数传递而后执行set/get方法，或运行时的常量定义<br />\r\n25. 不理解面向对象编程(OOP)的优势和劣势<br />\r\n26. 不视情形大小而滥用OOP<br />\r\n27. 自认为实现可复用的软件一定等于/需要让你的代码遵循OOP<br />\r\n28. 不利用智能缺省值<br />\r\n29. 没有单一的配置文件<br />\r\n30. 不想暴露文件源码，却用.inc后缀名取代了.php<br />\r\n31. 不使用数据库抽象层<br />\r\n32. 不能保持DRY作风，即不重复自己，如果你总是在复制粘贴一些东西，说明你设计得很差劲<br />\r\n33. 没有实现让一个函数/类/方法只做一件事，也不能组合利用它们<br />\r\n34. 没能尝试OOP的特长，如抽象类、接口、多态、继承，访问控制修饰符(译注：如public, private, protected)<br />\r\n35. 不用现有的设计模式优化你的程序体系设计<br />\r\n36. 不允许你的用户在你拥有很多文件或目录的情况下定义基础目录<br />\r\n37. 污染了名称空间，比如用常见字符串命名你的库函数<br />\r\n38. 使用数据库表时不使用表前缀<br />\r\n39. 不使用统一的模板引擎<br />\r\n40. 不关注已有的PHP开发框架，懒于探索;其实先进的开发理念和美妙代码就蕴含其中。</p>\r\n',0,1429425490,0,0),(12,12,'一个简单的MVC模式例子','<p>为了更好的展示MVC是如何工作的，我们使用一个简单的新闻发布系统作为例子来说明，其中一个系统使用了MVC模式，另一个没有使用。<br />\r\n要从数据库中获取一系列的新闻文章并显示，最基本的方法就是创建一个php脚本连接至一个数据库，查询这个数据库，然后循环处理结果，并输出对应的各文章的HTML。<br />\r\n以下的代码显示了这样一个脚本：<br />\r\n&lt;?php<br />\r\nmysql_connect(...);<br />\r\n$result = mysql_query(&quot;select * from news order by article_date desc&quot;);<br />\r\n?&gt;<br />\r\n&lt;html&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/body&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h1&gt;New Article&lt;/h1&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php while($row = mysql_fetch_object($result)){ ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;?php echo $row-&gt;headline; ?&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;p&gt;&lt;?php echo $row-&gt;body; ?&gt;&lt;/p&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php } ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/body&gt;<br />\r\n&lt;/html&gt;<br />\r\n诸如这样的脚本存在一个问题：很难维护。因为php代码和html代码，连接数据库代码和前台代码混在一起。<br />\r\n现在考虑使用MVC模式实现这个代码。这里最主要的是做两个重大的改变，首先是把从数据库获取文件的代码转移到一个可以重用的组件中（php类或者函数）。然后调用这<br />\r\n个新函数来获取文章，从而可以使用html来输出。按照MVC的术语来讲，这个新的php类或者函数就是模型（M）。<br />\r\n第二个重大的改变就是将获取文章的调用与与具体的html分离。尽管这个改变不像第一个那么的意义重大，但是它也是很重要的，因为这样一来，就可以修改html代码而不<br />\r\n必担心html中使用的数据是如何生成的。用MVC的术语来讲，这就是将控制器（C）和视图（V）分离。<br />\r\n采用MVC模式之后，将建立三个文件。模型为：<br />\r\n&lt;?php<br />\r\nfunction get_articles()<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;mysql_connect();<br />\r\n&nbsp;&nbsp; &nbsp;$result = mysql_query(&quot;select * from news order by article_date desc&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;$articles = array();<br />\r\n&nbsp;&nbsp; &nbsp;while($row = mysql_fetch_objects($result)){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$articles[] = $row;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n?&gt;<br />\r\n控制器为：<br />\r\n&lt;?php<br />\r\n$articles = get_articles();<br />\r\ndisplay_template(&quot;articles.tpl&quot;);<br />\r\n?&gt;<br />\r\n视图如下：<br />\r\n&lt;html&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;body&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h1&gt;News Articles&lt;/h1&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php foreach($articles as $row) { ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;h2&gt;&lt;?php echo $row-&gt;headline; ?&gt;&lt;/h2&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;p&gt;&lt;?php echo $row-&gt;body; ?&gt; &lt;/p&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&lt;?php } ?&gt;<br />\r\n&nbsp;&nbsp; &nbsp;&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',0,1429427618,0,0),(13,13,'html锁屏代码','<p>前不久有个正要毕业的网友给我发邮件，他毕业设计需要实现锁屏的效果，但是他没有能看懂我之前发布的对话框源码，他问能不能把锁屏相关代码说明下，我当时说过两天就发。由于最近比较忙，我现在才想起来，但愿现在此文还来得及。</p>\r\n\r\n<p>步入正题：<br />\r\n现在全屏的半透明遮罩层在web2.0网站应用非常广泛了，绝大多数遮罩是通过计算页面大小，然后覆盖一个与页面同等大小的层实现，如腾讯qzone， wordpress后台。这种方式本来无可非议，但是在页面很长的时候在IE8下会失效（国外资料的解释是与机器显卡相关），有些完美情节的同学遇到这个问题后就抓破了头，无奈之下甚至想让IE8强制使用IE7的方式解析他的作品。其实我们有一个更好的方法，咱们用CSS去解决它！</p>\r\n\r\n<p>还记得&ldquo;position:fixed&rdquo;吗？它是css2的一个新增的属性，他可以让一个元素静止在页面上，拖动滚动条也不会动，如Qzone顶部固定的导航栏就是这样实现的。同样我们也可以用一个100%高宽的层覆盖浏览器视口，这样就可以实现全屏遮罩了，不用再计算页面的大小，调整浏览器大小的时候也不要去动态修改尺寸了。</p>\r\n\r\n<p>以下为引用的内容：<br />\r\n&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;lock page&lt;/title&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;www.planeart.cn&quot; /&gt;<br />\r\n&lt;style&gt;<br />\r\n#pageOverlay { position:fixed; top:0; left:0; z-index:1987; width:100%; height:100%; background:#000; filter:alpha(opacity=70); opacity:0.7; }<br />\r\n&lt;/style&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;ol id=&quot;test&quot; onclick=&quot;document.getElementById(&#39;pageOverlay&#39;).style.visibility = &#39;visible&#39;&quot;&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;/ol&gt;<br />\r\n&lt;div id=&quot;pageOverlay&quot; onclick=&quot;this.style.visibility = &#39;hidden&#39;&quot;&gt;&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>可是有一个头疼的问题，IE6不支持&ldquo;position:fixed&rdquo;，咱们只能通过js动态的修改它的TOP值以模拟静止定位，拖动滚动条的时候遮罩成肯定会抖动，因为每改变一次IE会重新渲染一次。但是微软却给我们提供了一个非常有趣的特性，如果给html或者body标签设置一个静止定位的背景图片，层在拖动滚动条的时候就不会抖动了，几乎完美的模拟了&ldquo;position:fixed&rdquo;。我在实际项目中发现这个特性他还能触发其他的特异功能，以后再说明。</p>\r\n\r\n<p>为了省事，咱们针对IE6用万恶expression在CSS中写点脚本，拖动滚动条的时候重新定位我们的遮罩层。传说中expression是非常耗性能的，可是咱们的expression几乎没有损耗，有兴趣的同学可以深入研究下expression。</p>\r\n\r\n<p>以下为引用的内容：</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;lock page&lt;/title&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;www.planeart.cn&quot; /&gt;<br />\r\n&lt;style&gt;<br />\r\n#pageOverlay { position:fixed; top:0; left:0; z-index:1987; width:100%; height:100%; background:#000; filter:alpha(opacity=70); opacity:0.7; }<br />\r\n/*IE6 fixed*/<br />\r\n* html { background:url(*) fixed; }<br />\r\n* html body { margin:0; height:100%; }<br />\r\n* html #pageOverlay { position: absolute; left: expression(documentElement.scrollLeft + documentElement.clientWidth - this.offsetWidth); top: expression(documentElement.scrollTop + documentElement.clientHeight - this.offsetHeight); }<br />\r\n&lt;/style&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;ol id=&quot;test&quot; onclick=&quot;document.getElementById(&#39;pageOverlay&#39;).style.visibility = &#39;visible&#39;&quot;&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;/ol&gt;<br />\r\n&lt;div id=&quot;pageOverlay&quot; onclick=&quot;this.style.visibility = &#39;hidden&#39;&quot;&gt;&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n\r\n<p>好了，兼容IE6这个大头娃娃后，咱们的锁屏遮罩已经通杀主流浏览器了，但是呢用js写效果的同学们总是非常的蛋疼，总想折腾点什么来，咱们就再添加一点脚本，让锁屏的时候后可以中断用户操作，把滚动条、滚轮、tab键、全选、刷新、右键统统禁止掉，模拟真正的&lsquo;锁屏&rsquo;：</p>\r\n\r\n<p>以下为引用的内容：</p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;lock page&lt;/title&gt;<br />\r\n&lt;meta name=&quot;author&quot; content=&quot;www.planeart.cn&quot; /&gt;<br />\r\n&lt;style&gt;<br />\r\n#pageOverlay { visibility:hidden; position:fixed; top:0; left:0; z-index:1987; width:100%; height:100%; background:#000; filter:alpha(opacity=70); opacity:0.7; }<br />\r\n/*IE6 fixed*/<br />\r\n* html { background:url(*) fixed; }<br />\r\n* html body { margin:0; height:100%; }<br />\r\n* html #pageOverlay { position: absolute; left: expression(documentElement.scrollLeft + documentElement.clientWidth - this.offsetWidth); top: expression(documentElement.scrollTop + documentElement.clientHeight - this.offsetHeight); }<br />\r\n&lt;/style&gt;<br />\r\n&lt;script&gt;<br />\r\n(function(){<br />\r\n&nbsp;&nbsp; &nbsp;// 获取对象<br />\r\n&nbsp;&nbsp; &nbsp;var $ = function (id){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return document.getElementById(id);<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 遍历<br />\r\n&nbsp;&nbsp; &nbsp;var each = function(a, b) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for (var i = 0, len = a.length; i &lt; len; i++) b(a[i], i);<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 事件绑定<br />\r\n&nbsp;&nbsp; &nbsp;var bind = function (obj, type, fn) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (obj.attachEvent) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj[&#39;e&#39; + type + fn] = fn;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj[type + fn] = function(){obj[&#39;e&#39; + type + fn](window.event);}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.attachEvent(&#39;on&#39; + type, obj[type + fn]);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.addEventListener(type, fn, false);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 移除事件<br />\r\n&nbsp;&nbsp; &nbsp;var unbind = function (obj, type, fn) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (obj.detachEvent) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.detachEvent(&#39;on&#39; + type, obj[type + fn]);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj[type + fn] = null;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} catch(_) {};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;} else {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;obj.removeEventListener(type, fn, false);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 阻止浏览器默认行为<br />\r\n&nbsp;&nbsp; &nbsp;var stopDefault = function(e){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.preventDefault ? e.preventDefault() : e.returnValue = false;<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 获取页面滚动条位置<br />\r\n&nbsp;&nbsp; &nbsp;var getPage = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var dd = document.documentElement,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;db = document.body;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;left: Math.max(dd.scrollLeft, db.scrollLeft),<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;top: Math.max(dd.scrollTop, db.scrollTop)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;// 锁屏<br />\r\n&nbsp;&nbsp; &nbsp;var lock = {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;show: function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;pageOverlay&#39;).style.visibility = &#39;visible&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var p = getPage(),<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;left = p.left,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;top = p.top;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 页面鼠标操作限制<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.mouse = function(evt){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var e = evt || window.event;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;stopDefault(e);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;scroll(left, top);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;each([&#39;DOMMouseScroll&#39;, &#39;mousewheel&#39;, &#39;scroll&#39;, &#39;contextmenu&#39;], function(o, i) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;bind(document, o, lock.mouse);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// 屏蔽特定按键: F5, Ctrl + R, Ctrl + A, Tab, Up, Down<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;this.key = function(evt){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;var e = evt || window.event,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;key = e.keyCode;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if((key == 116) || (e.ctrlKey &amp;&amp; key == 82) || (e.ctrlKey &amp;&amp; key == 65) || (key == 9) || (key == 38) || (key == 40)) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;try{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;e.keyCode = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}catch(_){};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;stopDefault(e);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;bind(document, &#39;keydown&#39;, lock.key);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;},<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;close: function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;pageOverlay&#39;).style.visibility = &#39;hidden&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;each([&#39;DOMMouseScroll&#39;, &#39;mousewheel&#39;, &#39;scroll&#39;, &#39;contextmenu&#39;], function(o, i) {<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;unbind(document, o, lock.mouse);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;});<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;unbind(document, &#39;keydown&#39;, lock.key);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;bind(window, &#39;load&#39;, function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;btn_lock&#39;).onclick = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;lock.show();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$(&#39;pageOverlay&#39;).onclick = function(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;lock.close();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;};<br />\r\n&nbsp;&nbsp; &nbsp;});<br />\r\n})();<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;button id=&quot;btn_lock&quot; style=&quot;position: absolute; left:50%; top:40%; &quot;&gt;开启锁屏&lt;/button&gt;<br />\r\n&lt;ol id=&quot;test&quot;&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;li&gt;蓝色幻想&lt;/li&gt;<br />\r\n&lt;/ol&gt;<br />\r\n&lt;div id=&quot;pageOverlay&quot;&gt;&lt;/div&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',0,1429432667,0,0),(14,12,'浅解用PHP实现MVC','<p>传统的面相过程式的开发方式在处理中型以上的应用时，就开始显得力不从心。即便我们能够快速的完成需求，但是在需求发生变更后或者进行后期维护的时候，我们会深深地陷入我们早期搭建的陷阱中。所以，使用面向对象的方式来实现MVC模式，将为我们梳理程序的架构提供一个清晰的思路。</p>\r\n\r\n<p>什么是MVC？</p>\r\n\r\n<p>关于MVC的定义和解释，可以说多种多样。我们可以在Wiki或者[2]中找到更为详尽的解释，这里我并不打算，也没有能力进行深入的讲解，从PHP开发的角度来讲，MVC可以概括为：</p>\r\n\r\n<p>视图(The View)：</p>\r\n\r\n<p>一说到视图，我们很多人都会想到模板引擎(诸如Smarty等等)。其实就是各种各样的输出，比如说html模板和Javascript文件等。</p>\r\n\r\n<p>模块(The Model)：</p>\r\n\r\n<p>模块代表了程序的逻辑，在企业应用中通常称为业务逻辑层。一般来讲，这一层完成的工作是把原始的数据处理成按照我们设计的数据结构存储的有意义的数据序列，并将这些数据交给视图去处理。通常情况下， 模块中会利用一个数据抽象类来进行与数据操作有关的处理。<br />\r\nModel通常包含了哪些用来同数据库打交道的函数。</p>\r\n\r\n<p>控制器(The Controller)：</p>\r\n\r\n<p>控制器使所有WEB应用的第一站，他接受收到的参数，比如$_GET变量，然后做出相应的反应。</p>\r\n\r\n<p>关于MVC的是否适合PHP的争论也很多，人们不断的讨论MVC是否适合PHP[3]，现在也已经有了很多的MVC框架，诸如PHP MVC Frameworks中列出的[4]。那么，为什么人们这么热衷于MVC，我们为什么要使用MVC在我们的设计中呢。</p>\r\n\r\n<p>为什么用MVC？</p>\r\n\r\n<p>MVC最早是用来解决桌面GUI的编程问题，最早的MVC框架应该是Sun在1999年提出的Model 2，后来演变成了Struts。MVC带给人们深刻的印象，但是我们在使用的过程中，却并没有认真的想过为什么使用MVC。<br />\r\n在传统的桌面应用中，一旦Model中有时间发生，我们可以主动的让View界面进行刷新，从而展示后台发生的变化。而在Web应用中，我们似乎限于传统的Http的Request/Response的方式，我们似乎没有办法让用户端进行更新。这一段讨论，并不是认为MVC不能够用来进行WEB应用的开发，而是觉得从某种程度上来说，他还不是最合适的。<br />\r\n关于使用MVC的争论还有很多[1]，但是相信所有习惯了使用MVC来组织自己的项目的人，让他选择一个新的项目构架时，一定不会放弃MVC。</p>\r\n\r\n<p>如何实现MVC？</p>\r\n\r\n<p>下面是一个超级简单的MVC结构实现，甚至连数据源都用了一个内置的固定数组，虽然简单，但其实众多的PHP Framework核心实现的思想应该和这个是差不多的，只不过一些framework提供了更多的方便开发者使用的工具，我也想自己来实现一个PHP的框架，目前正在着手策划中，也希望自己能够从框架的开发中学习到更多的PHP设计思想和方法。</p>\r\n\r\n<p>Controller.php</p>\r\n\r\n<p>include &#39;Model.php&#39;;<br />\r\ninclude &#39;View.php&#39;;<br />\r\nclass Controller {<br />\r\n&nbsp;&nbsp; &nbsp;private $model = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;private $view&nbsp; = &#39;&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function Controller(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;model = new Model();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;view&nbsp; = new View();<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function doAction( $method = &#39;defaultMethod&#39;, $params = array() ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if( empty($method) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;defaultMethod();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else if( method_exists($this, $method) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;call_user_func(array($this, $method), $params);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}else{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;nonexisting_method();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function link_page($name = &#39;&#39;){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links = $this-&gt;model-&gt;getLinks();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;view-&gt;display($links);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$result = $this-&gt;model-&gt;getResult($name);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;view-&gt;display($result);<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function defaultMethod(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;br();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo &quot;This is the default method. &quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function nonexisting_method(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;br();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo &quot;This is the noexisting method. &quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function br(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;echo &quot;&lt;br /&gt;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n$controller = new Controller();<br />\r\n$controller-&gt;doAction(&#39;link_page&#39;, &#39;b&#39;);<br />\r\n$controller-&gt;doAction();</p>\r\n\r\n<p>Model.php</p>\r\n\r\n<p>class Model {<br />\r\n&nbsp;&nbsp; &nbsp;private $database = array(<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;a&quot;&nbsp;&nbsp;&nbsp; =&gt;&nbsp;&nbsp;&nbsp; &quot;hello world&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;b&quot;&nbsp;&nbsp;&nbsp; =&gt;&nbsp;&nbsp;&nbsp; &quot;ok well done&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&quot;c&quot;&nbsp;&nbsp;&nbsp; =&gt;&nbsp;&nbsp;&nbsp; &quot;good bye&quot;<br />\r\n&nbsp;&nbsp; &nbsp;);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//@TODO connect the database</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;//run the query and get the result<br />\r\n&nbsp;&nbsp; &nbsp;public function getResult($name){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if( empty($name) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return FALSE;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if( in_array($name, array_keys( $this-&gt;database ) ) ){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $this-&gt;database[$name];<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;public function getLinks(){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links = &quot;&lt;a href=&#39;#&#39;&gt;Link A&lt;/a&gt;&amp;nbsp;&amp;nbsp;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links.= &quot;&lt;a href=&#39;#&#39;&gt;Link B&lt;/a&gt;&amp;nbsp;&amp;nbsp;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$links.= &quot;&lt;a href=&#39;#&#39;&gt;Link C&lt;/a&gt;&amp;nbsp;&amp;nbsp;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $links;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p>view.php</p>\r\n\r\n<p>class View {<br />\r\n&nbsp;&nbsp; &nbsp;public function display($output){<br />\r\n&nbsp;&nbsp; &nbsp;//ob_start();<br />\r\n&nbsp;&nbsp; &nbsp;echo $output;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n',0,1429433278,0,0),(15,1,'ie6中png图片不透明解决方法','<p>今天介绍DD_belatedPNG,只需要一个理由,就是它支持backgrond-position与background-repeat.这是其他js插件不具备的。</p>\r\n\r\n<p>我们知道IE6是不支持透明的PNG的,这无疑限制了网页设计的发挥空间.<br />\r\n然而整个互联网上解决这个IE6的透明PNG的方案也是多不胜数,从使用IE特有的滤镜或是e&shy;xpression,再到javascript+透明GIF替代.但是这些方法都有一个缺点,就是不支持CSS中backgrond-position与background-repeat</p>\r\n\r\n<p>而我今天介绍DD_belatedPNG,只需要一个理由,就是它支持backgrond-position与background-repeat.这是其他js插件不具备的.同时DD_belatedPNG还支持a:hover属性,以及&lt;img&gt;</p>\r\n\r\n<p>原理<br />\r\n这个js插件使用了微软的VML语言进行绘制,而其他多数解决PNG问题的js插件用的是AlphaImageLoader滤镜</p>\r\n\r\n<p>使用方法<br />\r\n1.下载DD_belatedPNG.js文件.<br />\r\n2.在网页中引用,如下:<br />\r\n&lt;!--[if lte IE 6]&gt;<br />\r\n&lt;script src=&quot;Js/DD_belatedPNG_0.0.8a.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\nDD_belatedPNG.fix(&#39;div, ul, img, li, input , a, .png_bg&#39;);<br />\r\n/* 将 .png_bg 改成你应用了透明PNG的CSS选择器*/<br />\r\n&lt;/script&gt;<br />\r\n&lt;![endif]--&gt;<br />\r\n3.有2种调用函数,一种是DD_belatedPNG.fix(),如上代码.另一种是fix(),这中方法需要在函数内指出css选择器名</p>\r\n\r\n<p>使用a:hover请留意<br />\r\n5-25更新:如果你也像jutoy同学一样想要用透明PNG作为a:hover时的背景图片,那么你需要留意你的代码,需要以&rdquo;a:hover&rdquo;来作为选择器.否则可能会导致无法成功.同时我也更新了demo,请需要的更新查看.接着我们看看正确的代码:<br />\r\n&lt;!--[if IE 6]&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot; src=&quot;js/DD_belatedPNG.js&quot; &gt;&lt;/script&gt;<br />\r\n&lt;script type=&quot;text/javascript&quot;&gt;<br />\r\nDD_belatedPNG.fix(&#39;.trans,.box a:hover&#39;);<br />\r\n&lt;/script&gt;<br />\r\n&lt;![endif]--&gt;</p>\r\n',1,1429439341,0,0),(16,15,'RHEL5下apache+php+mysql编译安装','<p>操作系统: RHEL5</p>\r\n\r\n<p>apache: apache-2.4.6</p>\r\n\r\n<p>php: php-5.5.4</p>\r\n\r\n<p>mysql: mysql-5.6.14</p>\r\n\r\n<p>apr: apr-1.4.8</p>\r\n\r\n<p>apr-util: apr-util-1.5.2</p>\r\n\r\n<p>cmake: cmake-2.8.11.2</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>具体步骤:</p>\r\n\r\n<p>1)安装apr:</p>\r\n\r\n<p>进入apr目录</p>\r\n\r\n<p>./configure --prefix=/usr/apr</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>2)安装apr-util:</p>\r\n\r\n<p>进入apr-util目录</p>\r\n\r\n<p>./configure --prefix=/usr/apr-util --with-apr=/usr/apr</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>3)安装cmake</p>\r\n\r\n<p>进入cmake目录</p>\r\n\r\n<p>./configure --prefix=/usr/cmake</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>4)安装apache</p>\r\n\r\n<p>4.1)安装apache</p>\r\n\r\n<p>进入apache目录</p>\r\n\r\n<p>./configure --prefix=/usr/httpd --enable-so --enable-mods-shared=most --with-mpm=worker --with-apr=/usr/apr --with-apr-util=/usr/apr-util</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>4.2)将apache加入系统服务</p>\r\n\r\n<p>cp /usr/httpd/bin/apachectl /etc/init.d/httpd</p>\r\n\r\n<p>进入/etc/init.d目录编辑httpd</p>\r\n\r\n<p>vi httpd</p>\r\n\r\n<p>在第一行下面添加下面2行</p>\r\n\r\n<p>#chkconfig:345 61 61</p>\r\n\r\n<p>#description:APACHE</p>\r\n\r\n<p>给httpd执行权限</p>\r\n\r\n<p>chmod 777 httpd</p>\r\n\r\n<p>添加进系统服务</p>\r\n\r\n<p>chkconfig --add httpd</p>\r\n\r\n<p>添加进启动项</p>\r\n\r\n<p>chkconfig httpd on</p>\r\n\r\n<p>5)安装mysql</p>\r\n\r\n<p>5.1)安装mysql</p>\r\n\r\n<p>进入mysql目录</p>\r\n\r\n<p>groupadd mysql</p>\r\n\r\n<p>useradd -r -g mysql mysql</p>\r\n\r\n<p>/usr/cmake/bin/cmake -DCMAKE_INSTALL_PREFIX=/usr/mysql</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>cp support-files/mysql.server /etc/init.d/mysqld</p>\r\n\r\n<p>chmod 777 /etc/init.d/mysqld&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (777也可改成755)</p>\r\n\r\n<p>chmod 777 scripts/mysql_install_db</p>\r\n\r\n<p>scripts/mysql_install_db --user=mysql --basedir=/usr/mysql --database=/usr/mysql/data</p>\r\n\r\n<p>5.2)将mysql加入系统服务</p>\r\n\r\n<p>chkconfig --add mysqld</p>\r\n\r\n<p>chkconfig mysqld on</p>\r\n\r\n<p>6)安装php</p>\r\n\r\n<p>6.1)安装php</p>\r\n\r\n<p>进入php目录</p>\r\n\r\n<p>./configure --prefix=/usr/php --with-mysql=/usr/mysql --with-apxs2=/usr/httpd/bin/apxs --with-config-file-path=/usr/php/etc --with-gd</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>cp php.ini-production /usr/php/etc/php.ini&nbsp; 这里目录是否对？</p>\r\n\r\n<p>6.2)让php支持mysqli扩展</p>\r\n\r\n<p>cd ext/mysqli</p>\r\n\r\n<p>/usr/php/bin/phpize&nbsp;&nbsp; 生成configure文件</p>\r\n\r\n<p>./configure --prefix=/usr/php/ext/mysqli --with-php-config=/usr/php/bin/php-config --with-mysqli=/usr/mysql/bin/mysql_config</p>\r\n\r\n<p>make</p>\r\n\r\n<p>make install</p>\r\n\r\n<p>不出错就会出现mysqli.so被生成在哪个目录下，把mysqli.so复制到/usr/php/ext下</p>\r\n\r\n<p>修改php.ini</p>\r\n\r\n<p>extension_dir=&quot;/usr/php/ext&quot;</p>\r\n\r\n<p>extension=mysqli.so</p>\r\n\r\n<p>6.3)配置apache能执行php文件</p>\r\n\r\n<p>修改apache的配置文件</p>\r\n\r\n<p>设置index.php为默认首页文件</p>\r\n\r\n<p>添加php后缀文件使用php解析&nbsp;&nbsp; AddType application/x-httpd-php .php</p>\r\n',0,1437038517,0,0),(17,5,'高并发高流量网站架构','<p>转自:http://www.williamlong.info/info/archives/287.html</p>\r\n\r\n<p>作者：唐福林（北京师范大学）</p>\r\n\r\n<p>摘要</p>\r\n\r\n<p>Web2.0的兴起，掀起了互联网新一轮的网络创业大潮。以用户为导向的新网站建设概念，细分了网站功能和用户群，不仅成功的造就了一大批新生的网站，也极大的方便了上网的人们。但Web2.0以用户为导向的理念，使得新生的网站有了新的特点&mdash;&mdash;高并发，高流量，数据量大，逻辑复杂等，对网站建设也提出了新的要求。</p>\r\n\r\n<p>本文围绕高并发高流量的网站架构设计问题，主要研究讨论了以下内容：</p>\r\n\r\n<p>首先在整个网络的高度讨论了使用镜像网站，CDN内容分发网络等技术对负载均衡带来的便利及各自的优缺点比较。然后在局域网层次对第四层交换技术，包括硬件解决方案F5和软件解决方案LVS，进行了简单的讨论。接下来在单服务器层次，本文着重讨论了单台服务器的Socket优化，硬盘级缓存技术，内存级缓存技术，CPU与IO平衡技术（即以运算为主的程序与以数据读写为主的程序搭配部署），读写分离技术等。在应用层，本文介绍了一些大型网站常用的技术，以及选择使用该技术的理由。最后，在架构的高度讨论了网站扩容，容错等问题。</p>\r\n\r\n<p>本文以理论与实践相结合的形式，结合作者实际工作中得到的经验，具有较广泛的适用性。</p>\r\n\r\n<p>1 引言</p>\r\n\r\n<p>1.1 互联网的发展</p>\r\n\r\n<p>最近十年间，互联网已经从一个单纯的用于科研的，用来传递静态文档的美国内部网络，发展成了一个应用于各行各业的，传送着海量多媒体及动态信息的全球网络。从规模上看，互联网在主机数、带宽、上网人数等方面几乎一直保持着指数增长的趋势，2006年7月，互联网上共有主机439，286，364台，WWW 站点数量达到 96，854，877个 ［1］。全球上网人口在2004 年达到 7 亿 2900万 ［2］，中国的上网人数在 2006 年 12 月达到了约 1亿3700 万［3］。另一方面，互联网所传递的内容也发生了巨大的变化，早期互联网以静态、文本的公共信息为主要内容，而目前的互联网则传递着大量的动态、多媒体及人性化的信息，人们不仅可以通过 互联网阅读到动态生成的信息，而且可以通过它使用电子商务、即时通信、网上游戏等交互性很强的服务。因此，可以说互联网已经不再仅仅是一个信息共享网络，而已经成为了一个无所不在的交互式服务的平台。</p>\r\n\r\n<p>1.2 互联网网站建设的新趋势</p>\r\n\r\n<p>互联网不断扩大的规模，日益增长的用户群，以及web2.0［4］的兴起，对互联网网站建设提出了新的要求：</p>\r\n\r\n<p>高性能和高可扩展性。2000 年 5 月，访问量排名世界第一（统计数据来源［5］）的Yahoo ［6］声称其日页浏览数达到 6 亿 2500 万，即每秒约 30，000 次HTTP 请求(按每个页面浏览平均产生 4 次请求计算) .这样大规模的访问量对服务的性能提出了非常高的要求。更为重要的是， 互联网受众的广泛性，使得成功的互联网服务的访问量增长潜力和速度非常大，因此服务系统必须具有非常好的可扩展性，以应付将来可能的服务增长。</p>\r\n\r\n<p>支持高度并发的访问。高度并发的访问对服务的存储与并发能力提出了很高的要求，当前主流的超标量和超流水线处理器能处理的并发请求数是有限的，因为随着并发数的上升，进程调度的开销会很快上升。互联网广域网的本质决定了其访问的延迟时间较长，因此一个请求完成时间也较长，按从请求产生到页面下载完成 3 秒计算， Yahoo 在 2000 年 5 月时平均有 90，000 个并发请求。而且对于较复杂的服务，服务器往往要维护用户会话的信息，例如一个互联网网站如果每天有 100 万次用户会话，每次 20分钟的话，那平均同时就会有约 14000 个并发会话。</p>\r\n\r\n<p>高可用性。互联网服务的全球性决定了其每天 24 小时都会有用户访问，因此任何服务的停止都会对用户造成影响。而对于电子商务等应用，暂时的服务中止则意味着客户的永久失去及大量的经济损失，例如ebay.com［7］1999 年 6 月的一次 22小时的网站不可访问，对此网站的 380万用户的忠诚度造成巨大影响，使得 Ebay 公司不得不支付了近500万美元用于补偿客户的损失，而该公司的市值同期下降了 40 亿美元［8］。因此，关键互联网应用的可用性要求非常高。</p>\r\n\r\n<p>1.3 新浪播客的简介</p>\r\n\r\n<p>以YouTube［9］为代表的微视频分享网站近来方兴未艾，仅2006年一年，国内就出现近百家仿YouTube的微视频分享网站［10］，试图复制YouTube的成功模式。此类网站可以说是Web2.0概念下的代表网站，具有Web2.0网站所有典型特征：高并发，高流量，数据量大，逻辑复杂，用户分散等等。新浪［11］作为国内最大的门户网站，在2005年成功运作新浪博客的基础上，于2006年底推出了新浪播客服务。新浪播客作为国内门户网站中第一个微视频分享服务的网站，依靠新浪网站及新浪博客的巨大人气资源，在推出后不到半年的时间内，取得了巨大的成功：同类网站中上传视频数量第一、流量增长最快、用户数最多［12］，所有这些成绩的取得的背后，是巨大的硬件投入，良好的架构支撑和灵活的应用层软件设计。</p>\r\n\r\n<p>本文是作者在新浪爱问搜索部门实习及参与新浪播客开发的经验和教训的回顾，是作者对一般高并发高流量网站架构的总结和抽象。</p>\r\n\r\n<p>2 网络层架构</p>\r\n\r\n<p>2.1 镜像网站技术</p>\r\n\r\n<p>镜像网站是指将一个完全相同的站点放到几个服务器上，分别有自己的URL，这些服务器上的网站互相称为镜像网站［13］。镜像网站和主站并没有太大差别，或者可以视为主站的拷贝。镜像网站的好处是：如果不能对主站作正常访问（如服务器故障，网络故障或者网速太慢等），仍能通过镜像服务器获得服务。不便之处是：更新网站内容的时候，需要同时更新多个服务器；需要用户记忆超过一个网址，或需要用户选择访问多个镜像网站中的一个，而用户选择的，不一定是最优的。在用户选择的过程中，缺乏必要的可控性。</p>\r\n\r\n<p>在互联网发展的初期，互联网上的网站内容很少，而且大都是静态内容，更新频率底。但因为服务器运算能力低，带宽小，网速慢，热门网站的访问压力还是很大。镜像网站技术在这种情况下作为一种有效解决方案，被广泛采用。随着互联网的发展，越来越多的网站使用服务器端脚本动态生成内容，同步更新越来越困难，对可控性要求越来越高，镜像技术因为不能满足这类网站的需要，渐渐的淡出了人们的视线。但有一些大型的软件下载站，因为符合镜像网站的条件&mdash;&mdash;下载的内容是静态的，更新频率较低，对带宽，速度要求又比较高，如国外的SourceForge （http://www.SourceForge.net，著名开源软件托管网站），Fedora（http://fedoraproject.org，RedHat赞助的Linux发行版），国内的华军软件园（http://www.onlinedown.net），天空软件站（http://www.skycn.com）等，还在使用这项技术（图1）。</p>\r\n\r\n<p>在网站建设的过程中，可以根据实际情况，将静态内容作一些镜像，以加快访问速度，提升用户体验。</p>\r\n\r\n<p>2.2 CDN内容分发网络</p>\r\n\r\n<p>CDN的全称是Content Delivery Network，即内容分发网络。其目的是通过在现有的互联网中增加一层新的网络架构，将网站的内容发布到最接近用户的网络&ldquo;边缘&rdquo;，使用户可以就近取得所需的内容，分散服务器的压力，解决互联网拥挤的状况，提高用户访问网站的响应速度。从而解决由于网络带宽小、用户访问量大、网点分布不均等原因所造成的用户访问网站响应速度慢的问题［14］。</p>\r\n\r\n<p>CDN与镜像网站技术的不同之处在于网站代替用户去选择最优的内容服务器，增强了可控制性。CDN其实是夹在网页浏览者和被访问的服务器中间的一层镜像或者说缓存，浏览者访问时点击的还是服务器原来的URL地址，但是看到的内容其实是对浏览者来说最优的一台镜像服务器上的页面缓存内容。这是通过调整服务器的域名解析来实现的。使用CDN技术的域名解析服务器需要维护一个镜像服务器列表和一份来访IP到镜像服务器的对应表。当一个用户的请求到来的时候，根据用户的IP，查询对应表，得到最优的镜像服务器的IP地址，返回给用户。这里的最优，需要综合考虑服务器的处理能力，带宽，离访问者的距离远近等因素。当某个地方的镜像网站流量过大，带宽消耗过快，或者出现服务器，网络等故障的时候，可以很方便的设置将用户的访问转到另外一个地方（图2）。这样就增强了可控制性。</p>\r\n\r\n<p>图2 CDN原理示意图</p>\r\n\r\n<p>CDN网络加速技术也有它的局限性。首先，因为内容更新的时候，需要同步更新多台镜像服务器，所以它也只适用于内容更新不太频繁，或者对实时性要求不是很高的网站；其次，DNS解析有缓存，当某一个镜像网站的访问需要转移时，主DNS服务器更改了IP解析结果，但各地的DNS服务器缓存更新会滞后一段时间，这段时间内用户的访问仍然会指向该服务器，可控制性依然有不足。</p>\r\n\r\n<p>目前，国内访问量较高的大型网站如新浪、网易等的资讯频道，均使用CDN网络加速技术（图3），虽然网站的访问量巨大，但无论在什么地方访问，速度都会很快。但论坛，邮箱等更新频繁，实时性要求高的频道，则不适合使用这种技术。</p>\r\n\r\n<p>图3 新浪网使用ChinaCache CDN服务。</p>\r\n\r\n<p>ChinaCache的服务节点全球超过130个，</p>\r\n\r\n<p>其中中国节点超过80个，</p>\r\n\r\n<p>覆盖全国主要6大网络的主要省份［15］。</p>\r\n\r\n<p>2.3 应用层分布式设计</p>\r\n\r\n<p>新浪播客为了获得CDN网络加速的优点，又必须避免CDN的不足，在应用层软件设计上，采取了一个替代的办法。新浪播客提供了一个供播放器查询视频文件地址的接口。当用户打开视频播放页面的时候，播放器首先连接查询接口，通过接口获得视频文件所在的最优的镜像服务器地址，然后再到该服务器去下载视频文件。这样，用一次额外的查询获得了全部的控制性，而这次查询的通讯流量非常小，几乎可以忽略不计。CDN中由域名解析获得的灵活性也保留了下来：由接口程序维护镜像网站列表及来访IP到镜像网站的对应表即可。镜像网站中不需要镜像所有的内容，而是只镜像更新速度较慢的视频文件。这是完全可以承受的。</p>\r\n\r\n<p>2.4 网络层架构小结</p>\r\n\r\n<p>从整个互联网络的高度来看网站架构，努力的方向是明确的：让用户就近取得内容，但又要在速度和可控制性之间作一个平衡。对于更新比较频繁内容，由于难以保持镜像网站之间的同步，则需要使用其他的辅助技术。</p>\r\n\r\n<p>3 交换层架构</p>\r\n\r\n<p>3.1 第四层交换简介</p>\r\n\r\n<p>按照OSI［16］七层模型，第四层是传输层。传输层负责端到端通信，在IP协议栈中是TCP和UDP所在的协议层。TCP和UDP数据包中包含端口号（port number），它们可以唯一区分每个数据包所属的协议和应用程序。接收端计算机的操作系统根据端口号确定所收到的IP包类型，并把它交给合适的高层程序。IP地址和端口号的组合通常称作&ldquo;插口（Socket）&rdquo;。</p>\r\n\r\n<p>第四层交换的一个简单定义是：它是一种传输功能，它决定传输不仅仅依据MAC地址(第二层网桥)或源/目标IP地址(第三层路由)，而且依据IP地址与TCP/UDP (第四层) 应用端口号的组合（Socket）［17］。第四层交换功能就像是虚拟IP，指向实际的服务器。它传输的数据支持多种协议，有HTTP、FTP、NFS、Telnet等。</p>\r\n\r\n<p>以HTTP协议为例，在第四层交换中为每个服务器组设立一个虚拟IP（Virtue IP，VIP），每组服务器支持某一个或几个域名。在域名服务器（DNS）中存储服务器组的VIP，而不是某一台服务器的真实地址。</p>\r\n\r\n<p>当用户请求页面时，一个带有目标服务器组的VIP连接请求发送给第四层交换机。第四层交换机使用某种选择策略，在组中选取最优的服务器，将数据包中的目标VIP地址用实际服务器的IP地址取代，并将连接请求传给该服务器。第四层交换一般都实现了会话保持功能，即同一会话的所有的包由第四层交换机进行映射后，在用户和同一服务器间进行传输［18］。</p>\r\n\r\n<p>第四层交换按实现分类，分为硬件实现和软件实现。</p>\r\n\r\n<p>3.2 硬件实现</p>\r\n\r\n<p>第四层交换的硬件实现一般都由专业的硬件厂商作为商业解决方案提供。常见的有Alteon［19］，F5［20］等。这些产品非常昂贵，但是能够提供非常优秀的性能和很灵活的管理能力。Yahoo中国当初接近2000台服务器使用了三四台Alteon就搞定了［21］。鉴于条件关系，这里不展开讨论。</p>\r\n\r\n<p>3.3 软件实现</p>\r\n\r\n<p>第四层交换也可以通过软件实现，不过性能比专业硬件稍差，但是满足一定量的压力还是可以达到的，而且软件实现配置起来更灵活。 软件四层交换常用的有Linux上的LVS（Linux Virtual Server），它提供了基于心跳（heart beat）的实时灾难应对解决方案，提高了系统的鲁棒性，同时提供了灵活的VIP配置和管理功能，可以同时满足多种应用需求［22］。</p>\r\n\r\n<p>4 服务器优化</p>\r\n\r\n<p>4.1 服务器整体性能考虑</p>\r\n\r\n<p>对于价值昂贵的服务器来说，怎样配置才能发挥它的最大功效，又不至于影响正常的服务，这是在设计网站架构的时候必须要考虑的。常见的影响服务器的处理速度的因素有：网络连接，硬盘读写，内存空间，CPU速度。如果服务器的某一个部件满负荷运转仍然低于需要，而其他部件仍有能力剩余，我们将之称为性能瓶颈。服务器想要发挥最大的功效，关键的是消除瓶颈，让所有的部件都被充分的利用起来。</p>\r\n\r\n<p>4.2 Socket优化</p>\r\n\r\n<p>以标准的 GNU/Linux 为例。GNU/Linux 发行版试图对各种部署情况都进行优化，这意味着对具体服务器的执行环境来说，标准的发行版可能并不是最优化的［23］。GNU/Linux 提供了很多可调节的内核参数，可以使用这些参数为服务器进行动态配置，包括影响 Socket 性能的一些重要的选项。这些选项包含在 /proc 虚拟文件系统中。这个文件系统中的每个文件都表示一个或多个参数，它们可以通过 cat 工具进行读取，或使用 echo 命令进行修改。这里仅列出一些影响TCP/IP 栈性能的可调节内核参数［24］：</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_window_scaling &ldquo;1&rdquo;（1表示启用该选项，0表示关闭，下同） 启用 RFC［25］ 1323［26］ 定义的 window scaling；要支持超过 64KB 的窗口，必须启用该值。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_sack &ldquo;1&rdquo;启用有选择的应答（Selective Acknowledgment），通过有选择地应答乱序接收到的报文来提高性能（这样可以让发送者只发送丢失的报文段）；对于广域网通信来说，这个选项应该启用，但是这也会增加对 CPU 的占用。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_timestamps &ldquo;1&rdquo; 以一种比重发超时更精确的方法（参阅 RFC 1323）来启用对 RTT 的计算；为了实现更好的性能应该启用这个选项。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_mem &ldquo;24576 32768 49152&rdquo; 确定 TCP 栈应该如何反映内存使用；每个值的单位都是内存页（通常是 4KB）。第一个值是内存使用的下限。第二个值是内存压力模式开始对缓冲区使用应用压力的上限。第三个值是内存上限。超过这个上限时可以将报文丢弃，从而减少对内存的使用。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_wmem &ldquo;4096 16384 131072&rdquo; 为自动调优定义每个 socket 使用的内存。第一个值是为 socket 的发送缓冲区分配的最少字节数。第二个值是默认值（该值会被 wmem_default 覆盖），缓冲区在系统负载不重的情况下可以增长到这个值。第三个值是发送缓冲区空间的最大字节数（该值会被 wmem_max 覆盖）。</p>\r\n\r\n<p>/proc/sys/net/ipv4/tcp_westwood &ldquo;1&rdquo; 启用发送者端的拥塞控制算法，它可以维护对吞吐量的评估，并试图对带宽的整体利用情况进行优化；对于 WAN 通信来说应该启用这个选项。</p>\r\n\r\n<p>与其他调优努力一样，最好的方法实际上就是不断进行实验。具体应用程序的行为、处理器的速度以及可用内存的多少都会影响到这些参数对性能作用的效果。在某些情况中，一些认为有益的操作可能恰恰是有害的（反之亦然）。因此，需要逐一试验各个选项，然后检查每个选项的结果，最后得出最适合具体机器的一套参数。</p>\r\n\r\n<p>如果重启了 GNU/Linux 系统，设置的内核参数都会恢复成默认值。为了将所设置的值作为这些参数的默认值，可以使用 /etc/rc.local 文件，在系统每次启动时自动将这些参数配置成所需要的值。</p>\r\n\r\n<p>在检测每个选项的更改带来的效果的时候，GNU/Linux上有一些非常强大的工具可以使用：</p>\r\n\r\n<p>ping 这是用于检查主机的可用性的最常用的工具，也可以用于计算网络带宽延时。</p>\r\n\r\n<p>traceroute 打印连接到特定网络主机所经过的一系列路由器和网关的路径（路由），从而确定每个 hop 之间的延时。</p>\r\n\r\n<p>netstat 确定有关网络子系统、协议和连接的各种统计信息。</p>\r\n\r\n<p>tcpdump 显示一个或多个连接的协议级的报文跟踪信息，其中包括时间信息，可以使用这些信息来研究不同协议的报文时间。</p>\r\n\r\n<p>Ethereal 以一个易于使用的图形化界面提供 tcpump （报文跟踪）的信息，支持报文过滤功能。</p>\r\n\r\n<p>iperf 测量 TCP 和 UDP 的网络性能；测量最大带宽，并汇报延时和数据报的丢失情况。</p>\r\n\r\n<p>4.3 硬盘级缓存</p>\r\n\r\n<p>硬盘级别的缓存是指将需要动态生成的内容暂时缓存在硬盘上，在一个可接受的延迟时间范围内，同样的请求不再动态生成，以达到节约系统资源，提高网站承受能力的目的。Linux环境下硬盘级缓存一般使用Squid［27］。</p>\r\n\r\n<p>Squid是一个高性能的代理缓存服务器。和一般的代理缓存软件不同，Squid用一个单独的、非模块化的、I/O驱动的进程来处理所有的客户端请求。它接受来自客户端对目标对象的请求并适当地处理这些请求。比如说，用户通过浏览器想下载（即浏览）一个web页面，浏览器请求Squid为它取得这个页面。Squid随之连接到页面所在的原始服务器并向服务器发出取得该页面的请求。取得页面后，Squid再将页面返回给用户端浏览器，并且同时在Squid本地缓存目录里保存一份副本。当下一次有用户需要同一页面时，Squid可以简单地从缓存中读取它的副本，直接返回给用户，而不用再次请求原始服务器。当前的Squid可以处理HTTP， FTP， GOPHER， SSL和WAIS等协议。</p>\r\n\r\n<p>Squid默认通过检测HTTP协议头的Expires和 Cache-Control字段来决定缓存的时间。在实际应用中，可以显式的在服务器端脚本中输出HTTP头，也可以通过配置apache的mod_expires模块，让apache自动的给每一个网页加上过期时间。对于静态内容，如图片，视频文件，供下载的软件等，还可以针对文件类型（扩展名），用 Squid 的 refresh_pattern 来指定缓存时间。</p>\r\n\r\n<p>Squid 运行的时候，默认会在硬盘上建两层hash目录，用来存储缓存的Object.它还会在内存中建立一个Hash Table，用来记录硬盘中Object分布的情况。如果Squid配置成为一个Squid集群中的一个的话，它还会建立一个 Digest Table(摘要表)，用来存储其它 Squid 上的Object摘要。当用户端想要的资料本地硬盘上没有时，可以很快的知道应该去集群中的哪一台机器获得。在硬盘空间快要达到配置限额的时候，可以配置使用某种策略（默认使用LRU：Least Recently Used-最近最少用）删除一些Object，从而腾出空间［28］［29］。</p>\r\n\r\n<p>集群中的Squid Server 之间可以有两种关系：第一种关系是：Child 和 Parent.当 Child Squid Server 没有资料时，会直接向 Parent Squid Server 要资料，然后一直等，直到 Parent 给它资料为止。 第二种关系是：Sibling 和 Sibling.当 Squid Server 没有资料时，会先向 Sibling 的 Squid Server 要资料，如果 Sibling 没资料，就跳过它向 Parent 要或直接上原始网站去拿。</p>\r\n\r\n<p>默认配置的Squid，没有经过任何优化的时候，一般可以达到 50% 的命中率［30］（图4）。如果需要，还可以通过参数优化，拆分业务，优化文件系统等办法，使得Squid达到 90% 以上的缓存命中率。 Squid处理TCP连接消耗的服务器资源比真正的HTTP服务器要小的多，当Squid分担了大部分连接，网站的承压能力就大大增强了。</p>\r\n\r\n<p>4 某网站使用MRTG工具检测到的Squid命中率</p>\r\n\r\n<p>蓝线表示Squid的流量，绿色部分表示Apache流量</p>\r\n\r\n<p>4.4 内存级缓存</p>\r\n\r\n<p>内存级别的缓存是指将需要动态生成的内容暂时缓存在内存里，在一个可接受的延迟时间范围内，同样的请求不再动态生成，而是直接从内存中读取。Linux环境下内存级缓存Memcached［31］是一个不错的选择。</p>\r\n\r\n<p>Memcached是danga.com（运营Live Journal［32］的技术团队）开发的一套非常优秀的分布式内存对象缓存系统，用于在动态系统中减少数据库负载，提升性能。和 Squid 的前端缓存加速不同，它是通过基于内存的对象缓存来减少数据库查询的方式改善网站的性能，而其中最吸引人的一个特性就是支持分布式部署；也就是说可以在一群机器上建立一堆 Memcached 服务，每个服务可以根据具体服务器的硬件配置使用不同大小的内存块，这样，理论上可以建立一个无限大的基于内存的缓存系统。</p>\r\n\r\n<p>Memcached 是以守护程序方式运行于一个或多个服务器中，随时接受客户端的连接操作，客户端可以由各种语言编写，目前已知的客户端 API 包括 Perl/PHP/Python/Ruby/Java/C#/C 等等[附录1].客户端首先与 Memcached 服务建立连接，然后存取对象。每个被存取的对象都有一个唯一的标识符 key，存取操作均通过这个 key 进行，保存的时候还可以设置有效期。保存在 Memcached 中的对象实际上是放置在内存中的，而不是在硬盘上。Memcached 进程运行之后，会预申请一块较大的内存空间，自己进行管理，用完之后再申请一块，而不是每次需要的时候去向操作系统申请。Memcached将对象保存在一个巨大的Hash表中，它还使用NewHash算法来管理Hash表，从而获得进一步的性能提升。所以当分配给Memcached的内存足够大的时候，Memcached的时间消耗基本上只是网络Socket连接了［33］。</p>\r\n\r\n<p>Memcached也有它的不足。首先它的数据是保存在内存当中的，一旦服务进程重启（进程意外被关掉，机器重启等），数据会全部丢失。其次Memcached以root权限运行，而且Memcached本身没有任何权限管理和认证功能，安全性不足。第一条是Memcached作为内存缓存服务使用无法避免的，当然，如果内存中的数据需要保存，可以采取更改Memcached的源代码，增加定期写入硬盘的功能。对于第二条，我们可以将Memcached服务绑定在内网IP上，通过Linux防火墙进行防护。</p>\r\n\r\n<p>4.5 CPU与IO均衡</p>\r\n\r\n<p>在一个网站提供的所有功能中，有的功能可能需要消耗大量的服务器端IO资源，像下载，视频播放等，而有的功能则可能需要消耗大量的服务器CPU资源，像视频格式转换，LOG统计等。在一个服务器集群中，当我们发现某些机器上CPU和IO的利用率相差很大的时候，例如CPU负载很高而IO负责很低，我们可以考虑将该服务器上的某些耗CPU资源的进程换成耗IO的进程，以达到均衡的目的。均衡每一台机器的CPU和IO消耗，不仅可以获得更充分的服务器资源利用，而且还能够支持暂时的过载，遇到突发事件，访问流量剧增的时候， 实现得体的性能下降(Graceful performance degradation)［34］，而不是立即崩溃。</p>\r\n\r\n<p>4.6 读写分离</p>\r\n\r\n<p>如果网站的硬盘读写性能是整个网站性能提升的一个瓶颈的话，可以考虑将硬盘的读，写功能分开，分别进行优化。在专门用来写的硬盘上，我们可以在Linux下使用软件RAID-0（磁盘冗余阵列0级）［35］。RAID-0在获得硬盘IO提升的同时，也会增加整个文件系统的故障率&mdash;&mdash;它等于RAID中所有驱动器的故障率之和。如果需要保持或提高硬盘的容错能力，就需要实现软件RAID-1，4或5，它们能在某一个（甚至几个）磁盘驱动器故障之后仍然保持整个文件系统的正常运行［36］，但文件读写效率不如RAID-0.而专门用来读的硬盘，则不用如此麻烦，可以使用普通的服务器硬盘，以降低开销。</p>\r\n\r\n<p>一般的文件系统，会综合考虑各种大小和格式的文件的读，写效率，因而对特定的文件读或写的效率不是最优。如果有必要，可以通过选择文件系统，以及修改文件系统的配置参数来达到对特定文件的读或写的效率最大化。比如说，如果文件系统中需要存储大量的小文件，则可以使用ReiserFS［37］来替代Linux操作系统默认的ext3系统，因为ReiserFS是基于平衡树的文件系统结构，尤其对于大量文件的巨型文件系统，搜索速度要比使用局部的二分查找法的ext3快。 ReiserFS里的目录是完全动态分配的，因此不存在ext3中常见的无法回收巨型目录占用的磁盘空间的情况。ReiserFS里小文件（&lt; 4K）可以直接存储进树，小文件读取和写入的速度更快，树内节点是按字节对齐的，多个小文件可共享同一个硬盘块，节约大量空间。ext3使用固定大小的块分配策略，也就是说，不到4K的小文件也要占据4K的空间，导致的空间浪费比较严重［38］。 但ReiserFS对很多Linux内核支持的不是很好，包括2.4.3、2.4.9 甚至相对较新的 2.4.16，如果网站想要使用它，就必须要安装与它配合的较好的2.4.18内核&mdash;&mdash;一般管理员都不是很乐意使用太新的内核，因为在它上面运行的软件，都还没有经过大量的实践测试，也许有一些小的bug还没有被发现，但对于服务器来说，再小的bug也是不能接受的。ReiserFS还是一个较为年轻的，发展迅速的文件系统，它相对于ext3来说有一个很大的缺陷就是，每次ReiserFS文件系统升级的时候，必须完全重新格式化整个磁盘分区。所以在选择使用的时候，需要权衡取舍［39］。</p>\r\n\r\n<p>5 应用程序层优化</p>\r\n\r\n<p>5.1 网站服务器程序的选择</p>\r\n\r\n<p>经统计［40］，当前互联网上有超过50%的网站主机使用Apache［41］服务器程序。 Apache是开源界的首选Web服务器，因为它的强大和可靠，而且适用于绝大部分的应用场合。但是它的强大有时候却显得笨重，配置文件复杂得让人望而生畏，高并发情况下效率不太高。而轻量级的Web服务器Lighttpd［42］却是后起之秀，基于单进程多路复用技术，其静态文件的响应能力远高于Apache. Lighttpd对PHP的支持也很好，还可以通过Fastcgi方式支持其他的语言，比如Python等。 虽然Lighttpd是轻量级的服务器，功能上不能跟Apache比，某些复杂应用无法胜任，但即使是大部分内容动态生成的网站，仍免不了会有一些静态元素，比如图片、JS脚本、CSS等等，可以考虑将Lighttpd放在Squid的前面，构成 Lighttpd-&gt;Squid-&gt;Apache的一条处理链，Lighttpd在最前面，专门处理静态内容的请求，把动态内容请求通过Proxy模块转发给Squid，如果Squid中有该请求的内容且没有过期，则直接返回给Lighttpd.新请求或者过期的页面请求交由Apache中的脚本程序来处理。经过Lighttpd和Squid的两级过滤，Apache需要处理的请求大大减少，减少了Web应用程序的压力。同时这样的构架，便于把不同的处理分散到多台计算机上进行，由Lighttpd在前面统一分发。</p>\r\n\r\n<p>在这种架构下，每一级都是可以进行单独优化的，比如Lighttpd可以采用异步IO方式，Squid可以启用内存来缓存，Apache可以启用MPM（Multi -Processing Modules，多道处理模块）等，并且每一级都可以使用多台机器来均衡负载，伸缩性好。</p>\r\n\r\n<p>著名视频分享网站YouTube就是选择使用Lighttpd作为网站的前台服务器程序。</p>\r\n\r\n<p>5.2 数据库选择</p>\r\n\r\n<p>MySQL［43］是一个快速的、多线程、多用户和健壮的SQL数据库服务器，支持关键任务、重负载系统的使用，是最受欢迎的开源数据库管理系统，是Linux下网站开发的首选。它由MySQL AB开发、发布和提供支持。</p>\r\n\r\n<p>MySQL数据库能为网站提供：</p>\r\n\r\n<p>高性能。MySQL支持海量，快速的数据库存储和读取。还可以通过使用64位处理器来获取额外的一些性能，因为MySQL在内部里很多时候都使用64位的整数处理。</p>\r\n\r\n<p>易用性。MySQL的核心是一个小而快速的数据库。它的快速连接，快速存取和安全可靠的特性使MySQL非常适合在互联网站上使用。</p>\r\n\r\n<p>开放性。MySQL提供多种后台存储引擎的选择，如MyISAM， Heap， InnoDB，Berkeley Db等。缺省格式为MyISAM. MyISAM 存储引擎与磁盘兼容的非常好［44］。</p>\r\n\r\n<p>支持企业级应用。MySQL有一个用于记录数据改变的二进制日志。因为它是二进制的，这一日志能够快速地将数据的更改从一台机器复制（replication）到另一台机器上。即使服务器崩溃，这一二进制日志也能够保持完整。这一特性通常被用来搭建数据库集群，以支持更大的流量访问要求［30］（图5）。</p>\r\n\r\n<p>5 MySQL主辅库模式集群示意</p>\r\n\r\n<p>MySQL也有一些它自身的缺陷，如缺乏图形界面，缺乏存储过程， 还不支持触发器，参照完整性，子查询和数据表视图等，但这些功能都在开发者的TO-DO列表当中。这就是开源的力量：你永远可以期待更好。</p>\r\n\r\n<p>国外的Yahoo！，国内的新浪，搜狐等很多大型商业网站都使用MySQL 作为后台数据库。对于一般的网站系统，无论从成本还是性能上考虑，MySQL应该是最佳的选择。</p>\r\n\r\n<p>5.3 服务器端脚本解析器的选择</p>\r\n\r\n<p>目前最常见的服务器端脚本有三种：ASP(Active Server Pages)，JSP(Java Server Pages)，PHP (Hypertext Preprocessor)［45］［46］。</p>\r\n\r\n<p>ASP全名Active Server Pages，以及它的升级ASP.NET，是微软公司出品的一个WEB服务器端的开发环境，利用它可以产生和运行动态的、交互的、高性能的WEB服务应用程序。ASP采用脚本语言VBScript（C#）作为自己的开发语言。 但因为只能运行在Windows环境下，这里我们不讨论它。</p>\r\n\r\n<p>PHP是一种跨平台的服务器端的嵌入式脚本语言。它大量地借用C，Java和Perl语言的语法， 并耦合PHP自己的特性，使WEB开发者能够快速地写出动态生成页面。它支持目前绝大多数数据库。PHP也是开源的，它的发行遵从GPL开源协议，你可以从 PHP官方站点(http://www.php.net)自由下载到它的二进制安装文件及全部的源代码。如果在Linux平台上与MySQL搭配使用，PHP是最佳的选择。</p>\r\n\r\n<p>JSP是Sun公司推出的新一代站点开发语言，是Java语言除Java应用程序和Java Applet之外的第三个应用。Jsp可以在Serverlet和JavaBean的支持下，完成功能强大的站点程序。 作为采用Java技术家族的一部分，以及Java 2（企业版体系结构）的一个组成部分，JSP技术拥有Java技术带来的所有优点，包括优秀的跨平台性，高度可重用的组件设计，健壮性和安全性等，能够支持高度复杂的基于Web的应用。</p>\r\n\r\n<p>除了这三种常见的脚本之外，在Linux下我们其实还有很多其他的选择：Python（Google使用），Perl等，如果作为CGI调用，那么可选择范围就更广了。使用这些不太常见的脚本语言的好处是，它们对于某些特殊的应用有别的脚本所不具有的优势；不好的地方是，这些脚本语言在国内使用的人比较少，当碰到技术上的问题的时候，能找到的资料也较少。</p>\r\n\r\n<p>5.4 可配置性</p>\r\n\r\n<p>在大型网站开发过程中，不管使用什么技术，网站的可配置性是必须的。在网站的后期运营过程中，肯定会有很多的需求变更。如果每一次的需求变更都会导致修改源代码，那么，这个网站的开发可以说是失败的。</p>\r\n\r\n<p>首先，也是最重要的一点，功能和展示必须分开。PHP和JSP都支持模板技术，如PHP的Smarty，Phplib，JSP的JSTL（JSP Standard Tag Library）等。核心功能使用脚本语言编写，前台展示使用带特殊标签的HTML，不仅加快了开发速度，而且方便以后的维护和升级［47］。</p>\r\n\r\n<p>其次，对于前台模板，一般还需要将页面的头，尾单独提取出来，页面的主体部分也按模块或者功能拆分。对CSS，JS等辅助性的代码，也建议以单独的文件形式存放。这样不仅方便管理，修改，而且还可以在用户访问的时候进行缓存，减少网络流量，减轻服务器压力。</p>\r\n\r\n<p>再次，对于核心功能脚本，必须将与服务器相关的配置内容，如数据库连接配置，脚本头文件路径等，与代码分离开。尤其当网站使用集群技术，CDN加速等技术的时候，每一台服务器上的配置可能都会不一样。如果不使用配置文件，则需要同时维护几份不同的代码，很容易出错。</p>\r\n\r\n<p>最后，应该尽量做到修改配置文件后能实时生效，避免修改配置文件之后需要重启服务程序的情况。</p>\r\n\r\n<p>5.5 封装和中间层思想</p>\r\n\r\n<p>在功能块层次，如果使用JSP，基于纯面向对象语言Java的面向对象思想，类似数据库连接，会话管理等基本功能都已经封装成类了。如果使用PHP，则需要在脚本代码中显式的封装，将每一个功能块封装成一个函数，一个文件或者一个类。</p>\r\n\r\n<p>在更高的层次，可以将网站分为表示层，逻辑层，持久层，分别进行封装，做到当某一层架构发生变化时，不会影响到其他层。比如新浪播客在一次升级的时候，将持久层的数据库由原来的集中式改为分布式架构，因为封装了数据库连接及所有操作[附录2]，做到了不修改任何上层代码，平稳的实现了过渡。近来流行的MVC架构，将整个网站拆分成Model（模型/逻辑）、View（视图/界面）、Controller（控制/流程）三个部分，而且有很多优秀的代码框架可供选择使用， 像JSP的Structs，Spring，PHP的php.MVC， Studs 等。使用现成的代码框架，可以使网站开发事半功倍。</p>\r\n\r\n<p>6 扩容、容错处理</p>\r\n\r\n<p>6.1 扩容</p>\r\n\r\n<p>一个大型网站，在设计架构的时候，必须考虑到以后可能的容量扩充。新浪播客在设计时充分地考虑了这一点。对于视频分享类网站来说，视频存储空间消耗是巨大的。新浪播客在主存储服务器上，采用配置文件形式指定每一个存储盘柜上存储的视频文件的ID范围。当前台服务器需要读取一个视频的时候，首先通过询问主存储服务器上的接口获得该视频所在的盘柜及目录地址，然后再去该盘柜读取实际的视频文件。这样如果需要增加存储用的盘柜，只需要修改配置文件即可，前台程序丝毫不受影响。</p>\r\n\r\n<p>新浪播客采用MySQL数据库集群，在逻辑层封装了所有的数据库连接及操作。当数据库存储架构发生改变的时候，如增加一台主库，将某些数据表独立成库，增加读取数据用的从库等，都只需要修改封装了的数据库操作类，上层代码不用修改。</p>\r\n\r\n<p>新浪播客的前台页面服务器使用F5公司的硬件第四层交换机，网通，电信分别导向不同的虚拟IP，每一个虚拟IP后面又有多个服务器提供服务。当访问流量增大的时候，可以很方便往虚拟IP后面增加服务器，分担压力。</p>\r\n\r\n<p>6.2 容错</p>\r\n\r\n<p>对于商业性网站来说，可用性是非常重要的。7*24的访问要求网站具有很强的容错能力。错误包括网络错误，服务器错误以及应用程序错误。</p>\r\n\r\n<p>2006年12月27日台湾东部外海发生里氏7.6级地震，造成途径台湾海峡的多条海底电缆中断，导致许多国外网站，像MSN， NBA， Yahoo！（英文主站）等国内无法访问，但也有例外，以Google为代表的在国内建设有分布式数据节点的很多网站却仍然可以访问。虽然说地震造成断网是不可抗原因，但如果在这种情况下网站仍然可以访问，无疑能给网站用户留下深刻的印象。这件事情给大型商业网站留下的教训是：网站需要在用户主要分布区域保持数据存在，以防止可能的网络故障。</p>\r\n\r\n<p>对于服务器错误，一般采取冗余设计的方法来避免。对于存储服务器（主要是负责写入的服务器），可以使用RAID（冗余磁盘阵列）；对于数据库（主要是负责写入的主库），可以采用双主库设计［30］；对于提供服务的前台，则可以使用第四层交换的集群，由多台服务器同时提供服务，不仅分担了流量压力，同时还可以互相作为备份。</p>\r\n\r\n<p>在应用层程序中，也要考虑&ldquo;用户友好&rdquo;的出错设计。典型例子如HTTP 404 出错页面，程序内部错误处理，错误返回提示等，尽可能的做到人性化。</p>\r\n\r\n<p>7 总结及展望</p>\r\n\r\n<p>7.1 总结</p>\r\n\r\n<p>对于一个高并发高流量的网站来说，任何一个环节的瓶颈都会造成网站性能的下降，影响用户体验，进而造成巨大的经济损失。在全互联网层面，应该使用分布式设计，缩短网站与用户的网络距离，减少主干网上的流量，以及防止在网络意外情况下网站无法访问的问题。在局域网层面，应该使用服务器集群，一方面可以支撑更大的访问量，另一方面也作为冗余备份，防止服务器故障导致的网站无法访问。在单服务器层面，应该配置操作系统，文件系统及应用层软件，均衡各种资源的消耗，消除系统性能瓶颈，充分发挥服务器的潜能。在应用层，可以通过各种缓存来提升程序的效率，减少服务器资源消耗（图6）。另外，还需要合理设计应用层程序，为以后的需求变更，扩容做好准备。</p>\r\n\r\n<p>图6 典型高并发高流量网站的架构</p>\r\n\r\n<p>在每一个层次，都需要考虑容错的问题，严格消除单点故障，做到无论应用层程序错误，服务器软件错误，服务器硬件错误，还是网络错误，都不影响网站服务。</p>\r\n\r\n<p>7.2展望</p>\r\n\r\n<p>当前Linux环境下有著名的LAMP（Linux＋Apache＋MySQL＋PHP/PERL/PYTHON）网站建设方案，但只是针对一般的中小网站而言。对于高并发高流量的大型商业网站，还没有一个完整的，性价比高的解决方案。除去服务器，硬盘，带宽等硬件投资外，还需要花费大量的预算和时间精力在软件解决方案上。</p>\r\n\r\n<p>随着互联网的持续发展，Web2.0的兴起，在可以预见的未来里，互联网的用户持续增多，提供用户参与的网站不断增加，用户参与的内容日益增长，越来越多的网站的并发量，访问量会达到一个新的高度，这就会促使越来越多的个人，公司以及研究机构来关注高并发高流量的网站架构问题。就像Web1.0成就了无数中小网站，成就了LAMP一样，Web2.0注定也会成就一个新的，高效的，成本较低的解决方案。这个方案应该包括透明的第三方CDN网络加速服务，价格低廉的第四层甚至更高层网络交换设备，优化了网络性能的操作系统，优化了读写性能，分布式，高可靠的文件系统，揉合了内存，硬盘等各个级别缓存的HTTP服务器，更为高效的服务器端脚本解析器，以及封装了大部分细节的应用层设计框架。</p>\r\n\r\n<p>技术的进步永无止境。我们期待互联网更为美好的明天。</p>\r\n\r\n<p>参考文献<br />\r\n［1］Robert Hobbes&#39; Zakon， Hobbes&#39; Internet Timeline v8.2 ， available at http://www.zakon.org/robert/internet/timeline/<br />\r\n［2］GlobalReach Inc.， Global Internet Statistics (by language)， available at http://www.glreach.com/globstats/index.php3<br />\r\n［3］中国互联网络信息中心，第十九次中国互联网络发展状况统计报告，available at http://www.cnnic.net.cn/index/0E/index.htm<br />\r\n［4］Web2.0，Definition available at http://www.wikilib.com/wiki/Web2.0<br />\r\n［5］Alexa Internet, Inc. http://www.alexa.com/<br />\r\n［6］Yahoo! Inc. http://www.yahoo.com/<br />\r\n［7］eBay Inc. 著名的网上拍卖网站，http://www.ebay.com/<br />\r\n［8］Chet Dembeck, Yahoo! Cashes In On eBay&#39;s Outage, available at http://www.ecommercetimes.com/perl/story/545.html<br />\r\n［9］YouTube, Inc. http://www.youtube.com/<br />\r\n［10］数据来源：互联网周刊，2007年第3期<br />\r\n［11］新浪网技术（中国）有限公司，http://www.sina.com.cn/<br />\r\n［12］数据来源：新浪播客改版公告，available at http://games.sina.com.cn/x/n/2007-04-16/1427194553.shtml<br />\r\n［13］邓宏炎， 叶娟丽，网络参考文献初探，武汉大学学报: 人文社会科学版， 2000<br />\r\n［14］彭湘凯，CDN网络及其应用，微计算机信息，2005年02期<br />\r\n［15］数据来源：ChinaCache, http://www.chinacache.com/<br />\r\n［16］Open System Interconnect，开放式系统互联模型，1984年由国际标准化组织（ISO）提出的一个开放式网络互联参考模型，参考 http://www.iso.org/<br />\r\n［17］凌仲权，丁振国，基于第四层交换技术的负载均衡，中国数据通信，2003<br />\r\n［18］陈明锐，邱钊，黄曦，黄俊，智能负载均衡技术在高负荷网站上的应用，广西师范大学学报(自然科学版)，2006年04期<br />\r\n［19］Alteon Inc. http://www.alteon.com/<br />\r\n［20］F5 Networks, Inc. http://www.f5.com.cn/<br />\r\n［21］数据来源：http://www.toplee.com/blog/archives/71.html<br />\r\n［22］ 傅明，程晓恒，王玮，基于Linux的服务器负载均衡性访问的解决方案，计算机系统应用，2001年09期<br />\r\n［23］Ming-Wei Wu, Ying-Dar Lin, Open source software development: an overview, Computer, 2001 - ieeexplore.ieee.org<br />\r\n［24］王海花 , 杨斌，Linux TCP/IP协议栈的设计及实现特点，云南民族大学学报（自然科学版），2007年01期<br />\r\n［25］Requests for Comments（RFC），the publication vehicle for technical specifications and policy documents produced by the (IETF (Internet Engineering Task Force) , the IAB (Internet Architecture Board), or the IRTF (Internet Research Task Force)，http://www.ietf.org/rfc.html<br />\r\n［26］RFC 1323，http://www.ietf.org/rfc/rfc1323.txt?number=1323<br />\r\n［27］Squid web proxy cache team， http://www.squid-cache.org/<br />\r\n［28］马俊昌 , 古志民，网络代理缓存Squid存储系统分析，计算机应用，2003年10期<br />\r\n［29］韩向春，郭婷婷，林星宇，丰保杰，集群缓存系统中代理缓存技术的研究，计算机工程与设计，2006年20期<br />\r\n［30］Brad Fitzpatrick， LiveJournal&#39;s Backend，A history of scaling， oscon 2005 ，http://www.danga.com/words/<br />\r\n［31］Danga Interactive， http://www.danga.com/memcached/<br />\r\n［32］LiveJournal，著名的博客托管商（BSP）， http://www.livejournal.com/<br />\r\n［33］Brad Fitzpatrick，Distributed caching with memcached，Linux Journal ，Volume 2004，Issue 124，Page 5， August 2004<br />\r\n［34］周枫，面向 Internet 服务的可扩展集群对象 存储及磁盘日志缓存技术研究，清华大学硕士毕业论文，2002<br />\r\n［35］陈赟，杨根科，吴智铭，RAID系统中RAID级别的具体实现算法，微型电脑应用，2003年06期<br />\r\n［36］陈平仲，硬件实现RAID与软件实现RAID的比较，现代计算机（专业版），2005年01期<br />\r\n［37］NAMESYS，http://www.namesys.com/<br />\r\n［38］D Bobbins，Advanced file system implementor s guide: Journalling and ReiserFS，IBM&#39;s Developer Works Journal，June，2001<br />\r\n［39］刘章仪，Linux文件系统分析，贵州工业大学学报（自然科学版），2002年04期<br />\r\n［40］数据来源：http://news.netcraft.com/archives/2007/04/02/april_2007_web_server_survey.html<br />\r\n［41］The Apache Software Foundation ，http://httpd.apache.org/<br />\r\n［42］Lighttpd， http://www.lighttpd.net/<br />\r\n［43］MySQL AB，http://www.mysql.com/<br />\r\n［44］顾治华，忽朝俭，MySQL存储引擎与数据库性能，计算机时代，2006年10期<br />\r\n［45］The PHP Group，http://www.php.net/<br />\r\n［46］范云芝，动态网页制作技术ASP、PHP和JSP比较分析，电脑知识与技术（学术交流），2005年10期<br />\r\n［47］王耀希，王丽清，徐永跃，利用模板技术实现B/S 研发过程的分离与并行，计算机应用研究，2004</p>\r\n\r\n<p>附 录</p>\r\n\r\n<p>[附录1]</p>\r\n\r\n<p>1. Memcache的客户端PHP 封装</p>\r\n\r\n<p>class memcache_class<br />\r\n{</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function memcache_class()<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/**<br />\r\n&nbsp;&nbsp; &nbsp;* 用post方法，执行memcache的写入操作<br />\r\n&nbsp;&nbsp; &nbsp;* $data参数，允许是php的数组。<br />\r\n&nbsp;&nbsp; &nbsp;* exp参数是设定的超时时间，单位是秒。<br />\r\n&nbsp;&nbsp; &nbsp;*/<br />\r\n&nbsp;&nbsp; &nbsp;function p_memcache_write($key, $data, $exp=3600)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$mmPageStartTime = microtime();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$ip = MEMCACHE_SERVER_IP;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$port = MEMCACHE_SERVER_PORT;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$type = MEMCACHE_SERVER_TYPE;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$data进行序列化，允许$data是数组<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$data = serialize($data);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$data进行压缩<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//$data = gzcompress ($data);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$submit=array(<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;type =&gt; $type,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cmd =&gt; &quot;set&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;key =&gt; $key,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;data =&gt; $data,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;exp =&gt; $exp<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$ret = memcache_class::posttohost($query, $submit);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $ret;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/**<br />\r\n&nbsp;&nbsp; &nbsp;* 用post方法，执行memcache的读出操作<br />\r\n&nbsp;&nbsp; &nbsp;*/<br />\r\n&nbsp;&nbsp; &nbsp;function p_memcache_read($key)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$mmPageStartTime = microtime();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$ip = MEMCACHE_SERVER_IP;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$port = MEMCACHE_SERVER_PORT;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$type = MEMCACHE_SERVER_TYPE;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$submit=array(<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;type =&gt; $type,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;cmd =&gt; &quot;get&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;key =&gt; $key<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$res = memcache_class::posttohost($query, $submit);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$res进行解压缩<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//$res = gzuncompress($res);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//对$res进行反序列化，允许$res是数组<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$res = unserialize($res);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $res;<br />\r\n&nbsp;&nbsp; &nbsp;}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;/**<br />\r\n&nbsp;&nbsp; &nbsp;* 执行post的函数<br />\r\n&nbsp;&nbsp; &nbsp;*/<br />\r\n&nbsp;&nbsp; &nbsp;function posttohost($url, $data)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$mmPageStartTime = microtime();<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$url = parse_url($url);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$encoded = &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while (list($k,$v) = each($data))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$encoded .= ($encoded ? &quot;&amp;&quot; : &quot;&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$encoded .= rawurlencode($k).&quot;=&quot;.rawurlencode($v);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for ($i = 0; $i &lt; 3; $i ++)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$fp = @fsockopen($url[&#39;host&#39;], $url[&#39;port&#39;],$errno, $errstr, 1);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ($fp)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!$fp)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@stream_set_timeout($fp, 2);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, sprintf(&quot;POST %s%s%s HTTP/1.0\n&quot;, $url[&#39;path&#39;], $url[&#39;query&#39;] ? &quot;?&quot; : &quot;&quot;, $url[&#39;query&#39;]));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Host: $url[host]\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Content-type: application/x-www-form-urlencoded\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Content-length: &quot; . strlen($encoded) . &quot;\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;Connection: close\n\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fputs($fp, &quot;$encoded\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$line = @fgets($fp,1024);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if (!eregi(&quot;^HTTP/1.. 200&quot;, $line)) return;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$results = &quot;&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$inheader = 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(!feof($fp))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$line = @fgets($fp,1024);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ($inheader &amp;&amp; ($line == &quot;\n&quot; || $line == &quot;\r\n&quot;))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$inheader = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;elseif (!$inheader)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$results .= $line;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;@fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $results;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}</p>\r\n\r\n<p><br />\r\n2.使用示例</p>\r\n\r\n<p>$out=&quot;&quot;;<br />\r\nif (MEMCACHE_FLAG === true)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_key = md5(trim($key));<br />\r\n&nbsp;&nbsp; &nbsp;$time_before = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$mdata = memcache_class::p_memcache_read($memcache_key);<br />\r\n&nbsp;&nbsp; &nbsp;$time_after = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_read_time = $time_after - $time_before;<br />\r\n&nbsp;&nbsp; &nbsp;if(strlen($mdata) &gt;= MIN_RESULT)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$out = $mdata;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$memhit = 1;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;memcached_log(&quot;CACHE_HIT&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$memhit = 0;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;memcached_log(&quot;CACHE_NOT_HIT&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\nif (!(strlen($out) &gt;= MIN_RESULT))<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$query = get_query();<br />\r\n&nbsp;&nbsp; &nbsp;$time_before=getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$out = http_read($MySQLHost,$MySQLPort,$query,&amp;$errstr,10);<br />\r\n&nbsp;&nbsp; &nbsp;$time_after=getmicrotime();<br />\r\n}<br />\r\n$len = strlen($out);<br />\r\nif(MEMCACHE === true &amp;&amp; $memhit &lt;= 0)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_key = md5(trim($key));<br />\r\n&nbsp;&nbsp; &nbsp;$time_before = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;memcache_class::p_memcache_write($memcache_key, $out, MEMCACHE_TIME);<br />\r\n&nbsp;&nbsp; &nbsp;$time_after = getmicrotime();<br />\r\n&nbsp;&nbsp; &nbsp;$memcache_write_time = $time_after - $time_before;<br />\r\n&nbsp;&nbsp; &nbsp;memcached_log(&quot;CACHE_WRITE&quot;);<br />\r\n}</p>\r\n\r\n<p><br />\r\n[附录2]<br />\r\nMySQL wrap class<br />\r\n&lt;?php<br />\r\nclass mysqlRpc<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var $_hostWrite = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_userWrite = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_passWrite = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_hostRead = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_userRead = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_passRead = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $_dataBase = &#39;&#39;;<br />\r\n&nbsp;&nbsp; &nbsp;var $db_write_handle = null;<br />\r\n&nbsp;&nbsp; &nbsp;var $db_read_handle = null;<br />\r\n&nbsp;&nbsp; &nbsp;var $db_last_handle = null;<br />\r\n&nbsp;&nbsp; &nbsp;var $_cacheData = array();<br />\r\n&nbsp;&nbsp; &nbsp;var $mmtime = 60;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function mysqlRpc($database, $w_servername, $w_username, $w_password, $r_servername=&#39;&#39;, $r_username=&#39;&#39;, $r_password=&#39;&#39;) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function connect_write_db() {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function connect_read_db() {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function query_write($sql, $return = false) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function query_read($sql, $return = false) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function query_first($sql, $return = false) {}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function insert_id(){}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function affected_rows(){}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function escape_string($string){}</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;function fetch_array($queryresult, $type = MYSQL_ASSOC){}<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>致 谢<br />\r\n首先衷心的感谢我的指导老师朱小明老师，正是在他的悉心指导下，这篇论文才得以顺利的完成。同时感谢信息科学学院的老师们，他们以严谨的治学态度和兢兢业业的工作精神，教会了我专业的知识和做人的道理。我还想感谢北京师范大学的所有的老师，同学们，我们一起在&ldquo;学为人师，行为世范&rdquo;的校训下度过了这难忘的四年，完成了成长最后的蜕变。<br />\r\n本文在写作的过程中得到了新浪公司的大力支持，有来自新浪播客，新浪爱问搜索的多位同事对文中的架构方案，技术细节等提供了非常有用的建议，在此一并感谢！<br />\r\n最后，感谢在我生命的过程中一直毫无保留的支持我的家人和朋友！</p>\r\n',0,1437040336,0,0),(18,20,'去除视频中的声音','<p>1、windows movie maker</p>\r\n\r\n<p>把视频导入到movie maker中，右键点击视频，点&ldquo;添加到时间线&rdquo;，把视频导入到下边的时间线上了，时间线左边的&ldquo;视频&rdquo;可以展开，分为&ldquo;过渡&rdquo;和&ldquo;音频&rdquo;，&ldquo;音频&rdquo;便是视频声音，在时间线音频的进度条上点右键，选择&ldquo;静音&rdquo;，然后点左上角的&ldquo;文件&rdquo;，选&ldquo;保存电影文件&rdquo;，保存为wmv格式。<br />\r\n你可以注意一下时间线 时间线上有视频轨道和音频轨道 两种轨道 当你把视频放在时间线上的时候也相应的2个轨道都出现了可编辑条，你可以把音频轨道上的编辑条删掉。或者直接用movie maker编辑，将所有声音调到零，重新生成。</p>\r\n\r\n<p>2、会声会影</p>\r\n\r\n<p>把视频插入到视频轨，在视频轨右击视频，点分割音频，音频就会被分割在下面的声音轨道。如果想删除：右击声音轨道上的音频，点删除，这样视频原有的声音就被去掉了。<br />\r\n也可以素材导入视频轨，单击一下该素材，然后单击&ldquo;视频&rdquo;或&ldquo;编辑&rdquo;面板上的一个&ldquo;小喇叭&rdquo;图标，就能实现静音了。或者直接用绘声绘影找到声音控制将它调到零，声音层也要调到最低，重新生成。</p>\r\n\r\n<p>3、RM/MP4或者Total Video Converter转换专家</p>\r\n\r\n<p>你可以在转换的时候去掉声音！</p>\r\n\r\n<p>4、下载的视频有二种声音，播放的时候，即有白话，又有普通话，而且二者不同步,怎样去除其中的一个？</p>\r\n\r\n<p>不用软件，直接打开音量控制，在第一个主音量的下面有个平衡 ，有向左向右的调节 ，保留喜欢什么样的声音 ，如何把它调最左和最右就OK了！</p>\r\n\r\n<p>5、去除下载的视频去马赛克工具</p>\r\n\r\n<p>VideoEnhancer</p>\r\n\r\n<p>众所周知，有很多视频被加了马赛克从而防止个人信息的泄露。Video Enhancer 是一款提升视频质量的软件。采用大量的VirtualDub滤镜和附加的编码器重新压缩的视频处理，将马赛克进行还原。</p>\r\n\r\n<p>说明：去除马赛克的软件只能对原始视频有用，如果经过二次转码、压缩，所以90%的视频马赛克是没法去除的。</p>\r\n',0,1437043423,0,0),(19,17,'JAVA面试题大全','<p>1.Java中的异常处理机制的简单原理和应用。</p>\r\n\r\n<p>当Java程序违反了Java的语义规则 时，Java虚拟机就会将发生的错误表示为一个异常。违反语义规则包括2种情况。一种是Java类库内置的语义检查。例如数组下标越界,会引发 IndexOutOfBoundsException;访问null的对象时会引发NullPointerException。另一种情况就是Java允 许程序员扩展这种语义检查，程序员可以创建自己的异常，并自由选择在何时用throw关键字引发异常。所有的异常都是 java.lang.Thowable的子类。</p>\r\n\r\n<p>2.Java的接口和C&nbsp; 的虚类的相同和不同处。</p>\r\n\r\n<p>由 于Java不支持多继承，而有可能某个类或对象要使用分别在几个类或对象里面的方法或属性，现有的单继承机制就不能满足要求。与继承相比，接口有更高的灵 活性，因为接口中没有任何实现代码。当一个类实现了接口以后，该类要实现接口里面所有的方法和属性，并且接口里面的属性在默认状态下面都是 publicstatic,所有方法默认情况下是public.一个类可以实现多个接口。</p>\r\n\r\n<p>3.垃圾回收的优点和原理。并考虑2种回收机制。</p>\r\n\r\n<p>Java 语言中一个显著的特点就是引入了垃圾回收机制，使c&nbsp;&nbsp; 程序员最头疼的内存管理的问题迎刃而解，它使得Java程序员在编写程序的时候不再需要考虑内存管理。由于有个垃圾回收机制，Java中的对象不再有&ldquo;作 用域&rdquo;的概念，只有对象的引用才有&ldquo;作用域&rdquo;。垃圾回收可以有效的防止内存泄露，有效的使用可以使用的内存。垃圾回收器通常是作为一个单独的低级别的线程 运行，不可预知的情况下对内存堆中已经死亡的或者长时间没有使用的对象进行清除和回收，程序员不能实时的调用垃圾回收器对某个对象或所有对象进行垃圾回 收。回收机制有分代复制垃圾回收和标记垃圾回收，增量垃圾回收。</p>\r\n\r\n<p>4.线程同步的方法。</p>\r\n\r\n<p>wait():使一个线程处于等待状态，并且释放所持有的对象的lock。</p>\r\n\r\n<p>sleep():使一个正在运行的线程处于睡眠状态，是一个静态方法，调用此方法要捕捉InterruptedException异常。</p>\r\n\r\n<p>notify():唤醒一个处于等待状态的线程，注意的是在调用此方法的时候，并不能确切地唤醒某一个等待状态的线程，而是由JVM确定唤醒哪个线程，而且不是按优先级。</p>\r\n\r\n<p>Allnotity():唤醒所有处入等待状态的线程，注意并不是给所有唤醒线程一个对象的锁，而是让它们竞争。</p>\r\n\r\n<p>5.Error与Exception有什么区别？</p>\r\n\r\n<p>Error表示系统级的错误和程序不必处理的异常，</p>\r\n\r\n<p>Exception表示需要捕捉或者需要程序进行处理的异常。</p>\r\n\r\n<p>6.在java中一个类被声明为final类型，表示了什么意思？</p>\r\n\r\n<p>表示该类不能被继承，是顶级类。</p>\r\n\r\n<p>7heap和stack有什么区别。</p>\r\n\r\n<p>栈是一种线形集合，其添加和删除元素的操作应在同一段完成。栈按照后进先出的方式进行处理。堆是栈的一个组成元素。</p>\r\n\r\n<p>8谈谈final,finally,finalize的区别。</p>\r\n\r\n<p>final&mdash;修饰符（关键字）如果一个类被声明为final，意味着它不能再派生出新的子类，不能作为父类被继承。因此一个类不能既被声明为 abstract的，又被声明为final的。将变量或方法声明为final，可以保证它们在使用中不被改变。被声明为final的变量必须在声明时给定 初值，而在以后的引用中只能读取，不可修改。被声明为final的方法也同样只能使用，不能重载。<br />\r\nfinally&mdash;异常处理时提供finally块来执行任何清除操作。如果抛出一个异常，那么相匹配的catch子句就会执行，然后控制就会进入finally块（如果有的话）。<br />\r\nfinalize &mdash;方法名。Java技术允许使用finalize()方法在垃圾收集器将对象从内存中清除出去之前做必要的清理工作。这个方法是由垃圾收集器在确定这个对 象没有被引用时对这个对象调用的。它是在Object类中定义的，因此所有的类都继承了它。子类覆盖finalize()方法以整理系统资源或者执行其他 清理工作。finalize()方法是在垃圾收集器删除对象之前对这个对象调用的。</p>\r\n\r\n<p>9AnonymousInnerClass(匿名内部类)是否可以extends(继承)其它类，是否可以implements(实现)interface(接口)?</p>\r\n\r\n<p>匿名的内部类是没有名字的内部类。不能extends(继承)其它类，但一个内部类可以作为一个接口，由另一个内部类实现。</p>\r\n\r\n<p>10StaticNestedClass和InnerClass的不同<br />\r\nNestedClass（一般是C&nbsp; 的说法），InnerClass(一般是JAVA的说法)。Java内部类与C&nbsp; 嵌套类最大的不同就在于是否有指向外部的引用上。<br />\r\n注：静态内部类（InnerClass）意味着1创建一个static内部类的对象，不需要一个外部类对象，2不能从一个static内部类的一个对象访问一个外部类对象</p>\r\n\r\n<p>11&amp;和&amp;&amp;的区别。<br />\r\n&amp;是位运算符。&amp;&amp;是布尔逻辑运算符。</p>\r\n\r\n<p>12HashMap和Hashtable的区别。</p>\r\n\r\n<p>都属于Map接口的类，实现了将惟一键映射到特定的值上。<br />\r\nHashMap类没有分类或者排序。它允许一个null键和多个null值。</p>\r\n\r\n<p><br />\r\nHashtable类似于HashMap，但是不允许null键和null值。它也比HashMap慢，因为它是同步的。</p>\r\n\r\n<p>13Collection和Collections的区别。</p>\r\n\r\n<p>Collection是个java.util下的接口，它是各种集合结构的父接口。<br />\r\nCollections是个java.util下的类，它包含有各种有关集合操作的静态方法。</p>\r\n\r\n<p>14什么时候用assert。</p>\r\n\r\n<p>断言是一个包含布尔表达式的语句，在执行这个语句时假定该表达式为true。<br />\r\n如果表达式计算为false，那么系统会报告一个Assertionerror。它用于调试目的：<br />\r\nassert(a&gt;0);//throwsanAssertionerrorifa&lt;=0<br />\r\n断言可以有两种形式：<br />\r\nassertExpression1;<br />\r\nassertExpression1:Expression2;<br />\r\nExpression1应该总是产生一个布尔值。<br />\r\nExpression2可以是得出一个值的任意表达式。这个值用于生成显示更多调试<br />\r\n信息的String消息。<br />\r\n断言在默认情况下是禁用的。要在编译时启用断言，需要使用source1.4标记：<br />\r\njavac-source1.4Test.java<br />\r\n要在运行时启用断言，可使用-enableassertions或者-ea标记。<br />\r\n要在运行时选择禁用断言，可使用-da或者-disableassertions标记。<br />\r\n要系统类中启用断言，可使用-esa或者-dsa标记。还可以在包的基础上启用或者禁用断言。<br />\r\n可 以在预计正常情况下不会到达的任何位置上放置断言。断言可以用于验证传递给私有方法的参数。不过，断言不应该用于验证传递给公有方法的参数，因为不管是否 启用了断言，公有方法都必须检查其参数。不过，既可以在公有方法中，也可以在非公有方法中利用断言测试后置条件。另外，断言不应该以任何方式改变程序的状 态。</p>\r\n\r\n<p>15GC是什么?为什么要有GC?(基础)。</p>\r\n\r\n<p>GC是垃圾收集器。Java程序员不用担心内存管理，因为垃圾收集器会自动进行管理。要请求垃圾收集，可以调用下面的方法之一：<br />\r\nSystem.gc()<br />\r\nRuntime.getRuntime().gc()</p>\r\n\r\n<p>16Strings=newString(&quot;xyz&quot;);创建了几个StringObject?</p>\r\n\r\n<p>两个对象，一个是&ldquo;xyz&rdquo;,一个是指向&ldquo;xyz&rdquo;的引用对象s。</p>\r\n\r\n<p>17Math.round(11.5)等於多少?Math.round(-11.5)等於多少?</p>\r\n\r\n<p>Math.round(11.5)返回（long）12，Math.round(-11.5)返回（long）-11;</p>\r\n\r\n<p>18shorts1=1;s1=s1 1;有什么错?shorts1=1;s1 =1;有什么错?</p>\r\n\r\n<p>shorts1=1;s1=s1 1;有错，s1是short型，s1 1是int型,不能显式转化为short型。可修改为s1=(short)(s1 1)。shorts1=1;s1 =1正确。</p>\r\n\r\n<p>19sleep()和wait()有什么区别?搞线程的最爱</p>\r\n\r\n<p>sleep()方法是使线程停止一段时间的方法。在sleep时间间隔期满后，线程不一定立即恢复执行。这是因为在那个时刻，其它线程可能正在运行而且没有被调度为放弃执行，除非(a)&ldquo;醒来&rdquo;的线程具有更高的优先级(b)正在运行的线程因为其它原因而阻塞。<br />\r\nwait()是线程交互时，如果线程对一个同步对象x发出一个wait()调用，该线程会暂停执行，被调对象进入等待状态，直到被唤醒或等待时间到。</p>\r\n\r\n<p>20Java有没有goto?<br />\r\nGoto&mdash;java中的保留字，现在没有在java中使用。</p>\r\n\r\n<p>21数组有没有length()这个方法?String有没有length()这个方法？</p>\r\n\r\n<p>数组没有length()这个方法，有length的属性。<br />\r\nString有有length()这个方法。</p>\r\n\r\n<p>22Overload和Override的区别。Overloaded的方法是否可以改变返回值的类型?</p>\r\n\r\n<p>方法的重写Overriding和重载Overloading是Java多态性的不同表现。重写Overriding是父类与子类之间多态性的一种表 现，重载Overloading是一个类中多态性的一种表现。如果在子类中定义某方法与其父类有相同的名称和参数，我们说该方法被重写 (Overriding)。子类的对象使用这个方法时，将调用子类中的定义，对它而言，父类中的定义如同被&ldquo;屏蔽&rdquo;了。如果在一个类中定义了多个同名的方 法，它们或有不同的参数个数或有不同的参数类型，则称为方法的重载(Overloading)。<br />\r\nOverloaded的方法是可以改变返回值的类型。</p>\r\n\r\n<p>23Set里的元素是不能重复的，那么用什么方法来区分重复与否呢?是用==还是equals()?它们有何区别?</p>\r\n\r\n<p>Set里的元素是不能重复的，那么用iterator()方法来区分重复与否。equals()是判读两个Set是否相等。equals()和==方法决定引用值是否指向同一对象equals()在类中被覆盖，为的是当两个分离的对象的内容和类型相配的话，返回真值。</p>\r\n\r\n<p>24最常见到的runtimeexception。</p>\r\n\r\n<p>ArithmeticException,ArrayStoreException,BufferOverflowException,BufferUnderflowException,CannotRedoException,CannotUndoException,ClassCastException,CMMException,ConcurrentModificationException,DOMException,EmptyStackException,IllegalArgumentException,IllegalMonitorStateException,IllegalPathStateException,IllegalStateException,ImagingOpException,IndexOutOfBoundsException,MissingResourceException,NegativeArraySizeException,NoSuchElementException,NullPointerException,ProfileDataException,ProviderException,RasterFORMatException,Secur<br />\r\nityException,SystemException,UndeclaredThrowableException,UnmodifiableSetException,UnsupportedOperationException</p>\r\n\r\n<p>25error和exception有什么区别?</p>\r\n\r\n<p>error表示恢复不是不可能但很困难的情况下的一种严重问题。比如说内存溢出。不可能指望程序能处理这样的情况。<br />\r\nexception表示一种设计或实现问题。也就是说，它表示如果程序运行正常，从不会发生的情况。</p>\r\n\r\n<p>26List,Set,Map是否继承自Collection接口?</p>\r\n\r\n<p>List，Set是<br />\r\nMap不是</p>\r\n\r\n<p>27abstractclass和interface有什么区别?</p>\r\n\r\n<p>声明方法的存在而不去实现它的类被叫做抽象类（abstractclass），它用于要创建一个体现某些基本行为的类，并为该类声明方法，但不能在该类 中实现该类的情况。不能创建abstract类的实例。然而可以创建一个变量，其类型是一个抽象类，并让它指向具体子类的一个实例。不能有抽象构造函数或 抽象静态方法。Abstract类的子类为它们父类中的所有抽象方法提供实现，否则它们也是抽象类为。取而代之，在子类中实现该方法。知道其行为的其它类 可以在类中实现这些方法。<br />\r\n接口（interface）是抽象类的变体。在接口中，所有方法都是抽象的。多继承性可通过实现这样的接口而获得。接口 中的所有方法都是抽象的，没有一个有程序体。接口只可以定义staticfinal成员变量。接口的实现与子类相似，除了该实现类不能从接口定义中继承行 为。当类实现特殊接口时，它定义（即将程序体给予）所有这种接口的方法。然后，它可以在实现了该接口的类的任何对象上调用接口的方法。由于有抽象类，它允 许使用接口名作为引用变量的类型。通常的动态联编将生效。引用可以转换到接口类型或从接口类型转换，instanceof运算符可以用来决定某对象的类是 否实现了接口。</p>\r\n\r\n<p>28abstract的method是否可同时是static,是否可同时是native，是否可同时是synchronized?</p>\r\n\r\n<p>都不能</p>\r\n\r\n<p>29接口是否可继承接口?抽象类是否可实现(implements)接口?抽象类是否可继承实体类(concreteclass)?</p>\r\n\r\n<p>接口可以继承接口。抽象类可以实现(implements)接口，抽象类可继承实体类，但前提是实体类必须有明确的构造函数。</p>\r\n\r\n<p>30启动一个线程是用run()还是start()?</p>\r\n\r\n<p>启动一个线程是调用start()方法，使线程所代表的虚拟处理机处于可运行状态，这意味着它可以由JVM调度并执行。这并不意味着线程就会立即运行。run()方法可以产生必须退出的标志来停止一个线程。</p>\r\n\r\n<p>31构造器Constructor是否可被override?</p>\r\n\r\n<p>构造器Constructor不能被继承，因此不能重写Overriding，但可以被重载Overloading。</p>\r\n\r\n<p>32是否可以继承String类?</p>\r\n\r\n<p>String类是final类故不可以继承。</p>\r\n\r\n<p>33当一个线程进入一个对象的一个synchronized方法后，其它线程是否可进入此对象的其它方法?</p>\r\n\r\n<p>不能，一个对象的一个synchronized方法只能由一个线程访问。</p>\r\n\r\n<p>33try{}里有一个return语句，那么紧跟在这个try后的finally{}里的code会不会被执行，什么时候被执行，在return前还是后?<br />\r\n会执行，在return前执行。</p>\r\n\r\n<p>34编程题:用最有效率的方法算出2乘以8等於几?</p>\r\n\r\n<p>2&lt;&lt;3</p>\r\n\r\n<p>35两个对象值相同(x.equals(y)==true)，但却可有不同的hashcode，这句话对不对?</p>\r\n\r\n<p>不对，有相同的hashcode。</p>\r\n\r\n<p>36当一个对象被当作参数传递到一个方法后，此方法可改变这个对象的属性，并可返回变化后的结果，那么这里到底是值传递还是引用传递?</p>\r\n\r\n<p>是值传递。Java编程语言只由值传递参数。当一个对象实例作为一个参数被传递到方法中时，参数的值就是对该对象的引用。对象的内容可以在被调用的方法中改变，但对象的引用是永远不会改变的。</p>\r\n\r\n<p>37swtich是否能作用在byte上，是否能作用在long上，是否能作用在String上?</p>\r\n\r\n<p>switch（expr1）中，expr1是一个整数表达式。因此传递给switch和case语句的参数应该是int、short、char或者byte。long,string都不能作用于swtich。</p>\r\n\r\n<p>38 Hashtable和HashMap</p>\r\n\r\n<p>Hashtable继承自Dictionary类，而HashMap是Java1.2引进的Mapinterface的一个实现<br />\r\nHashMap允许将null作为一个entry的key或者value，而Hashtable不允许<br />\r\n还有就是，HashMap把Hashtable的contains方法去掉了，改成containsvalue和containsKey。因为contains方法容易让人引起误解。<br />\r\n最大的不同是，Hashtable的方法是Synchronize的，而HashMap不是，在<br />\r\n多个线程访问Hashtable时，不需要自己为它的方法实现同步，而HashMap就必须为之提供外同步。<br />\r\nHashtable和HashMap采用的hash/rehash算法都大概一样，所以性能不会有很大的差异。</p>\r\n',0,1437040982,0,0),(20,18,'linux(redhat,ubuntu,centos等) 图形界面和文本界面(字符界面)的切换','<p>linux(redhat,ubuntu,centos等)图形界面和文本界面(字符界面)的切换</p>\r\n\r\n<p>各种环境略有差异，我虚拟机里安装的是ylmf os算是Ubuntu，</p>\r\n\r\n<p>切换方法是：ctrl+alt+shift+F1切换到字符界面，alt+F7切换到图形界面。</p>\r\n\r\n<p>由字符界面切换到图形界面可用两种简单方法实现：<br />\r\n1、在字符界面输入startx或init 5 。<br />\r\n2、通过编辑/etc/inittab文件实现默认进入图形界面。<br />\r\n把其中的id:3:initdefault中的3改为5，这样以后系统启动后将直接进入图形界面模式。</p>\r\n\r\n<p>真机环境中，在图形界面和文本界面间切换：<br />\r\nCtrl+Alt+F(n),其中F(n)为F1-F6 ，为6个控制台；<br />\r\nCtrl+ALT+F7;</p>\r\n\r\n<p>虚拟机环境，在图形界面和文本界面间切换：<br />\r\nVMWare虚拟机下，由图形界面切换到文本界面，和虚拟机设置有关，默认VM占用Ctrl+Alt为热键，所以由图形界面切换到文本界面的组合键为：<br />\r\nCtrl+Alt+Shift+F(n),其中F(n)为F1-F6;<br />\r\n由文本界面切换回图形界面的组合键为:<br />\r\nAlt+F7;</p>\r\n',0,1437042280,0,0),(21,1,'JS定时器','<p>定时器可以说是js前端最常用的工具，几乎所有的逐渐变化的动态效果都会使用到定时器，比如说图片滚动（位置渐变）。渐隐渐现。拖拽（不使用计时器会多消耗大量资源）等等。我准备近几天写3篇文章，第一篇是计时器，第二篇说下scrollLeft（right...）的用法，第三篇顺理成章的介绍无间断滚动的实现方法。</p>\r\n\r\n<p>这篇文章主要针对js入门新手，或者基础不扎实的半路出家js程序员。</p>\r\n\r\n<p>定时器分两种分别是setTimeout和setInterval。</p>\r\n\r\n<p>两者的用法分别是setTimeout(funhander,time);setInterval(fnhander,time);设置的相应计时器需要用clearTimeout(对象)和clearInterval（对象）清掉。有以下几点需要注意：</p>\r\n\r\n<p>第一：setTimeout(funhander,time)的作用是在过time毫秒后，执行一次句柄funhander指向的方法。而setInterval（funhander,time）的作用是，每隔time毫秒后，就执行一次句柄funhander指向的方法。一直到我清掉计时器停止。</p>\r\n\r\n<p>第二：巨大多数的计时器使用都是为了执行渐变、渐隐渐现、位置渐变等效果，所以funhander指向的方法会被多次执行。因此如果我们使用setTimeout做定时器，一般要把计时器的设置写在funhander指向的方法里，这样就可以循环调用，多次执行funhander，一直到我清掉这个定时器。而在使用setInterval设置定时器的时候，一般要放在funhander指向行数的外面。</p>\r\n\r\n<p>第三：funhander指向的方法里处理了渐变中的一步，又会被重复执行，所以在此方法中大多包含有判断语句IF。用来控制渐变到一定程度的时候进行相应处理。比如清掉定时器或者进行循环操作。</p>\r\n\r\n<p>第四：funhander为句柄，此处还可以为代码段，假设重复调用的函数为function test() {alert(&quot;1&quot;);}则，我们可以写为 var timer = setTimeout(test,1000)或者 var timer = setTimeout(&quot;test()&quot;,1000)或者 var timer = setTimeout(&quot;alert(&quot;1&quot;)&quot;,1000)。但是下面的写法是错误的。var timer = setTimeout(test(),1000)。</p>\r\n\r\n<p>第五：因为funhander部分是句柄，所以不能传递参数，但是有些函数是必须要传递参数的，这时候我们一般用代码段。如果碰到又需要用句柄，又不能用代码段的特殊情况，我们一般用比较特殊的方法处理。如 var timer =setTimeout(test(name),1000)。这时候这个test（name）看起来是不对的，实际上如果他的返回值是一个没有传参的方法，利用子函数可以调用父函数变量的特点，把参数传递到返回函数（子函数）内部。那上面的写法一样是可以的。</p>\r\n\r\n<p>第六：在设定时器的时候一定要有返回值timer（当然你可以起自己想要的名字）。清掉定时器的时候需要使用，也是一个好的习惯。</p>\r\n\r\n<p>下面是网上常见的一个例子，我稍微改动了下。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150716185321702105.jpg\" style=\"height:65px; width:310px\" /></p>\r\n\r\n<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;title&gt; New Document &lt;/title&gt;<br />\r\n&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;<br />\r\n&lt;/head&gt;<br />\r\n&lt;body&gt;<br />\r\n&lt;form action=&quot;&quot;&gt;<br />\r\n&lt;input type=&quot;text&quot; value=&quot;0&quot; name=&quot;txt1&quot;/&gt;<br />\r\n&lt;input type=&quot;button&quot; value=&quot;开始&quot; name=&quot;btnStart&quot;/&gt;<br />\r\n&lt;input type=&quot;button&quot; value=&quot;重置&quot; name=&quot;btnReset&quot;/&gt;<br />\r\n&lt;/form&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;<br />\r\n&lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;<br />\r\n&lt;!--<br />\r\n//获取表单中的表单域<br />\r\nvar txt=document.forms[0].elements[&quot;txt1&quot;];<br />\r\nvar btnStart=document.forms[0].elements[&quot;btnStart&quot;];<br />\r\nvar btnReset=document.forms[0].elements[&quot;btnReset&quot;]<br />\r\n//定义定时器的id<br />\r\nvar id;<br />\r\n//每10毫秒该值增加1<br />\r\nvar seed=0;</p>\r\n\r\n<p>btnStart.onclick=function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //根据按钮文本来判断当前操作<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(this.value==&quot;开始&quot;){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使按钮文本变为停止<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.value=&quot;停止&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使重置按钮不可用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; btnReset.disabled=true;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置定时器，每0.01s跳一次<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; id=window.setInterval(tip,10);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }else{<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使按钮文本变为开始<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.value=&quot;开始&quot;;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //使重置按钮可用<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; btnReset.disabled=false;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //取消定时<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; window.clearInterval(id);<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />\r\n}</p>\r\n\r\n<p>//重置按钮<br />\r\nbtnReset.onclick=function(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp; seed=0;<br />\r\ntxt.value=seed/100;<br />\r\n}<br />\r\n//让秒表跳一格<br />\r\nfunction tip(){<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; seed++;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; txt.value=seed/100;<br />\r\n}<br />\r\n//--&gt;<br />\r\n&lt;/script&gt;</p>\r\n',0,1437044034,0,0),(22,21,'三种东西永远不要放到数据库里','<p>我已经在很多演讲里说过，改进你的系统的最好的方法是先避免做&ldquo;蠢事&rdquo;。我并不是说你或你开发的东西&ldquo;蠢&rdquo;，只是有些决定很容易被人们忽略掉其暗含的牵连，认识不到这样做对系统维护尤其是系统升级带来多大的麻烦。作为一个顾问，像这样的事情我到处都能见到，我还从来没有见过做出这样的决定的人有过好的结果的。</p>\r\n\r\n<p>图片，文件，二进制数据<br />\r\n既然数据库支持BLOB类型的数据，把文件塞进BLOB字段里一定没有错了！？错，不是这样的！别的先不提，在很多数据库语言里，处理大字段都不是很容易。</p>\r\n\r\n<p>把文件存放在数据库里有很多问题：</p>\r\n\r\n<p>对数据库的读/写的速度永远都赶不上文件系统处理的速度<br />\r\n数据库备份变的巨大，越来越耗时间<br />\r\n对文件的访问需要穿越你的应用层和数据库层<br />\r\n这后两个是真正的杀手。把图片缩略图存到数据库里？很好，那你就不能使用nginx或其它类型的轻量级服务器来处理它们了。</p>\r\n\r\n<p>给自己行个方便吧，在数据库里只简单的存放一个磁盘上你的文件的相对路径，或者使用S3或CDN之类的服务。</p>\r\n\r\n<p>短生命期数据<br />\r\n使用情况统计数据，测量数据，GPS定位数据，session数据，任何只是短时间内对你有用，或经常变化的数据。如果你发现自己正在使用定时任务从某个表里删除有效期只有一小时，一天或数周的数据，那说明你没有找对正确的做事情的方法。使用redis，statsd/graphite， Riak，它们都是干这种事情更合适的工具。这建议也适用于对于收集那些短生命期的数据。</p>\r\n\r\n<p>当然，用挖土机在后花园里种土豆也是可行的，但相比起从储物间里拿出一把铲子，你预约一台挖土机、等它赶到你的园子里挖坑，这显然更慢。你要选择合适的工具来处理手头上的事。</p>\r\n\r\n<p>日志文件<br />\r\n把日志数据存放到数据库里，表面上看起来似乎不错，而且&ldquo;将来也许我需要对这些数据进行复杂的查询&rdquo;，这样的话很得人心。这样做并不是一个特别差的做法，但如果你把日志数据和你的产品数据存放到一个数据库里就非常不好了。</p>\r\n\r\n<p>也许你的日志记录做的很保守，每次web请求只产生一条日志。对于整个网站的每个事件来说，这仍然会产生大量的数据库插入操作，争夺你用户需要的数据库资源。如果你的日志级别设置为verbose或debug，那等着看你的数据库着火吧。</p>\r\n\r\n<p>你应该使用一些比如Splunk Loggly或纯文本文件来存放你的日志数据。这样去查看它们也许会不方便，但这样的时候不多，甚至有时候你需要写出一些代码来分析出你想要的答案，但总的来说是值得的。</p>\r\n\r\n<p>可是稍等一下，你是那片不一样的雪花，你遇到的问题会如此的不同，所以，如果你把上面提到的三种东西中的某一种放到了数据库里也不会有问题。不，你错了，不，你不特殊。相信我。</p>\r\n',0,1437044447,0,0),(23,22,'session多服务器共享的方案梳理','<p>session的存储了解以前是怎么做的，搞清楚了来龙去脉，才会明白进行共享背后的思想和出发点。我喜欢按照这样的方式来问(或者去搞清楚)：为什么要session要进行共享，不共享会什么问题呢？</p>\r\n\r\n<p>php中session的原理，以前做了一下总结，可以参考：http://www.cnblogs.com/wangtao_20/archive/2011/02/16/1955659.html</p>\r\n\r\n<p>以前业界使用session的做法：<br />\r\n默认情况下，php的session文件是保存在磁盘文件中。在php.ini配置文件中的配置项如下：<br />\r\nsession.save_handler = files<br />\r\nsession.save_path = &quot;N;/path&quot;<br />\r\n第一个配置项是指定使用files(文件形式)存储session数据。<br />\r\n第二个参数指定保存的路径。N表示生成多少级目录(不放到一个目录下，分散到多个磁盘目录中去)</p>\r\n\r\n<p>我的配置项是：session.save_path = &quot;F:/wamp/tmp&quot;。那么就会去这个目录下面看到很多session数据的文件。<br />\r\n当我们使用php的内置函数session_start()的时候，就是去上面指定的磁盘目录把session数据载入，实际上就是拿类似<br />\r\nsess_74dd7807n2mfml49a1i12hkc45的文件。<br />\r\n74dd7807n2mfml49a1i12hkc45就是大家经常说的什么session的id号。</p>\r\n\r\n<p>php.ini中还有一个关键配置项，如下：<br />\r\nsession.name = PHPSESSID<br />\r\nPHPSESSID就是cookie的名称，其实上面一串&quot;74dd7807n2mfml49a1i12hkc45&quot;会保存在一个名为PHPSESSID的cookie中。</p>\r\n\r\n<p>根据http的请求机制，当浏览器请求的时候，头部信息会把浏览器中的cookie一起发给服务器。PHPSESSID这个cookie也<br />\r\n是在其中发给了服务器，php引擎通过读取PHPSESSID的值来确定要载入哪个session文件。<br />\r\n比如值为74dd7807n2mfml49a1i12hkc45，载入的就是&quot;sess_74dd7807n2mfml49a1i12hkc45&quot;。</p>\r\n\r\n<p>注：当你调用php的函数session_start(),才表明你需要使用session文件了。不然平白无故就去载入文件，浪费性能。</p>\r\n\r\n<p>===========================================</p>\r\n\r\n<p>根据如上原理。session的数据默认是保存在磁盘文件中。假设这种情况：多台php服务器进行负载均衡的时候，比如有三台php服务器，为了实现负载均衡，那么三台服务器上面的php代码都是一样(拷贝一份)。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719134802595538.jpg\" style=\"height:302px; width:558px\" /></p>\r\n\r\n<p>上面的图是nginx+fpm部署图。可以看到多台php服务器进行负载均衡。</p>\r\n\r\n<p>生成session数据文件都是在本地了(a,b,c各自的服务器磁盘上)。负载均衡的目的本来就是要为了平均分配请求，所以没有固定第一次访问和第二次访问是同一台服务器，实际上无法确定的。第一秒访问可能是a服务器，第二秒访问的可能是c服务器。<br />\r\n所以同一个登录会员，实际上就会出现：第一秒访问第一台php服务器，第二秒访问的是第二台服务器。登录的信息一般是保存在session中的。这样子登录保存的session数据就需要进行共享了。不然的话会出现，访问第一台服务器生成了一个session数据。第二秒负载请求到第三台服务器，结果获取不到刚才生成的session数据。</p>\r\n\r\n<p>我的理解是：只有涉及到多台后端服务器(php,java等处理服务器)的时候，才涉及到session读取不到的问题。</p>\r\n\r\n<p>在php环境中，只有多台php服务器(php服务器而非web服务器,session文件是php引擎生成的)的情况下，才会涉及到session共享的问题。单台php服务器，存储都在一台主机上。不涉及到共享问题。因为session直接存储在这台服务器磁盘上是能够被本机读取到的。<br />\r\n如果是：一台php服务器，多台mysql服务器。这种也是负载均衡，这种负载均衡不涉及到共享问题。因为怎么session数据怎么操作都是保存在一台服务器上。</p>\r\n\r\n<p>===============================================================================================================================================</p>\r\n\r\n<p>ps：实际上，session在php,.net,java等只要是后端语言都会用到。session的存储机制，各种语言都大体差不多。我觉得这跟cookie在各个语言中都会用到差不多。.net，java我没去了解过。但是存储原理是差不多的。区别就是，php，java，.net调用的函数，读和取session数据的方式不同。默认都是存储在本地文件中的(不然怎么会涉及到session共享问题呢，存储在数据库本身就可以实现共享的)。<br />\r\n所以，无论是.net还是java都会涉及到session数据共享的问题。</p>\r\n\r\n<p>其实我的理解是，session的原理都是一样的。讨论session共享方案设计，是可以抛开具体的语言去讨论session共享方案设计。</p>\r\n\r\n<p>目前业界解决session共享的几种思路，我总结如下：<br />\r\n第一种办法：把原来存储在服务器磁盘上的session数据存储到客户端的cookie中去。<br />\r\n这样子，就不需要涉及到数据共享了。a客户端请求的时候，原来生成在服务器的数据生成到浏览器的cookie中，根据cookie中的数据识别用户。php由原来的&rdquo;从本地(也就是服务器)磁盘上读取session数据&rdquo;转变为&rdquo;浏览器的cookie中读取数据&rdquo;。<br />\r\n这样子，在多台php服务器负载均衡的情况下，即便第一秒请求是a服务器，第二秒请求是b服务器，都不需要管哪台服务器了。反正都是读取客户端上的cookie数据。<br />\r\n一般是把session数据按照自己定义的加密规则，加密后后存在cookie中。</p>\r\n\r\n<p>数据保存在cookie中这种做法有好处，也有坏处。<br />\r\n好处是服务器的压力减小了，因为session数据不存在服务器磁盘上。根本就不会出现session读取不到的问题。</p>\r\n\r\n<p>带来的弊端是：<br />\r\n网络请求占用很多。每次请求时，客户端都要通过cookie发送session数据给服务器。<br />\r\n另外，浏览器对cookie的大小存在限制。每个浏览器限制是不同的。<br />\r\nFirefox和Safari允许cookie多达4097个字节，包括名（name）、值（value）和等号。<br />\r\nOpera允许cookie多达4096个字节，包括：名（name）、值（value）和等号。<br />\r\nInternet Explorer允许cookie多达4095个字节，包括：名（name）、值（value）和等号。<br />\r\n所以第一种方案不适合高访问量的情况下，因为高访问量的情况下，每次请求浏览器都要发送session数据给服务器。一般一个cookie大小2k的样子。<br />\r\n要占用很多带宽了(服务器购买带宽是一个很大费用)，成本增高。归纳为带宽性能，速度问题。<br />\r\n存储到cookie中去，第二方面是安全问题：把session数据放到客户端，一般session中存的都是重要性数据(帐号、昵称、用户id等)，会存在安全问题。<br />\r\n了解到，淘宝以前用过这种方式，把session数据存储到cookie中，根据cookie来识别用户。</p>\r\n\r\n<p>第二种思路：用一种算法(简单理解为规则)，什么机制下session是保存在哪台服务器下，那么读取的时候就按照这种规则去读取，就能定位到原来的服务器。叫做分发请求，分发到特定的服务器上去，我理解其原理是存session和读session数据保证都在一台服务器操作，就不会需要涉及到共享，具体实现方式是通过约定一种分发机制来实现。<br />\r\n也叫做sticky模式(粘性会话模式)，同一个用户的访问请求都被派送到同一个服务器上。<br />\r\n假设是同一个用户user1，每次访问都路由到同一台服务器上,这样即便是在负载均衡的情况下，也能保证每次访问都能读取到session，不需要做session数据共享了。<br />\r\n关键多台server的原因是为负载均衡而做的，那么就得把原来负载均衡的规则假设是&mdash;a，现在改为按照session来均衡分发请求的规则&mdash;b。<br />\r\n如果这台机子挂掉了，那么后续的请求按照session的规则还是会分发到这台服务器上去，但是现在不可用了。<br />\r\n本来负载均衡有一个目的就是：当其中一台机子不可用的时候，会自动分发到可用的机子上去(自动判断现在要请求的机子是否可用)<br />\r\n因为某种规则的session都是保存在一台服务器上，比如用户编号是1-200涉及到的session数据保存到a服务器上去。所以只要一台出问题，1-200的用户就无法实现登录了。后面就不可用了(可能想到1-200用户的session服务器用多台进行复制，这感觉很蹩脚，仍然需要用到复制的话，还不如用其他简便的方法)</p>\r\n\r\n<p>第三种思路：做一个中间层，专门来存储所有访问涉及到的session。也就是所有的session都存储在这里。<br />\r\n服务器端统一从这里读取session数据。<br />\r\n具体实现方式很多种。我的理解是，这里只是一种思想层面上的。我不知道淘宝的tbsession框架的具体实现。但是大致思想差不多，<br />\r\n由这个session框架来维护所有网站的session数据。我根据自己的理解，猜测淘宝的结构画图大致如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719135808330960.jpg\" style=\"height:499px; width:871px\" /></p>\r\n\r\n<p>使用这种中间层的思想来实现共享，具体的技术方案，我归纳为以下几种：</p>\r\n\r\n<p>1、 通过NFS文件共享的方式，多台php服务器共享保存session文件的磁盘。<br />\r\n通过nfs的方式，各个php服务器操作session数据的时候，是读取本地磁盘目录，但实际上是一个共享网络文件。各个php服务器实际上操作的都是同一个目录的文件。<br />\r\n具体的操作细节。到时候还需要详细写一下。我根据理解，画了下面的图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719135920607925.png\" style=\"height:465px; width:842px\" /></p>\r\n\r\n<p>2、保存在数据库中，这种方式的扩展性很强，可以随意增加WEB而不受影响。放在数据库里面安全方面好。</p>\r\n\r\n<p>其实我理解本质是：自己写程序(php,java都可以实现，反正是保存在数据库中)模拟实现session的机制。</p>\r\n\r\n<p>具体为，把以前存储在文件中的session数据存储到数据库中去，那么这样做，其实就不用到php内置的session机制了(像session_start()之类的函数都不需要去用了)。<br />\r\n写程序要模拟的是，从数据库拿session数据，约定什么情况下数据过期了然后自动清理，这里是指删除数据库中的行。保存在文件中的时候，php有垃圾回收机制会去自动清理过期的session文件。</p>\r\n\r\n<p>====================================弊端</p>\r\n\r\n<p>放在数据库里面，访问量小没有问题。大流量网站这么做，只会拖慢速度。因为得查询数据库，造成数据库压力大。<br />\r\n高并发访问的情况下,会出现很大的性能问题。<br />\r\n有些做法跟这种思想是类似的：比如ecshop、phpcms是把session数据都存储在数据库中去。服务端就是从数据库中拿session的数据。<br />\r\n放到数据库存储后，就可以实现：多台web服务器统一操作数据库，因为数据都在数据库，web服务器都能从数据库进行读取，那么session数据就能实现共享。<br />\r\n存储在数据库的做法，在线人数决定了其瓶颈，主要问题是影响性能。在线人数,因为登录的session数据存储在数据库中，只要是登录的用户就会涉及到频繁操作数据库。<br />\r\n我觉得小网站，同时1-2万个人在线情况下。应该没什么问题。<br />\r\n看网上丢出一个问题：对于大访问量的网站，数据库存储session方法可行性有待商榷。<br />\r\n我搜寻了一些资料，理解如下：<br />\r\n访问量大的话，一个用户访问了n多个页面，哪怕是刷新页面，都需要去数据库取session数据。数据库的承受压力，确实很恐怖。pv是多少，就要请求多少次数据库服务器。<br />\r\n访问每个页面都会去数据库查询是否登录，或者添加数据进数据库的sessions表</p>\r\n\r\n<p>保存在文件中的时候，则交给了操作系统去控制。一个用户怎么刷新页面，查看其他页面，都只需要读取单个session文件(sess_74dd7807n2mfml49a1i12hkc45)。<br />\r\n我觉得，ecshop,discuz之类的系统之所以把session存储在数据库中去，跟网站的应用级别有关。他们设计的系统本身就是给中小站长用的，这些中小站长一般由于规模小，经济成本考虑，使用的是虚拟主机之类的。不具备对服务器的完全控制权限，比如还要安个memcache之类的,修改php.ini之类的都需要自己拥有独立服务器才能操控的(vps也算,只是虚拟出来的硬件而已)。<br />\r\n其实真正要做到网站大了，系统承受不住了。也会自己有独立的技术人员可以进行二次开发。</p>\r\n\r\n<p>discuz这些做通用的软件要考虑思路有个特点：得考虑大部分用户的服务器环境。比如经常看到源代码里面要做php版本判断的代码，判断是5.0之前的要如何处理，以求尽量适应大部分环境。而我们公司自己运营的内部系统，环境我们完全可控。做这些确实是多余的工作量。<br />\r\n另外一个点是，这些通用软件不会为了高级用户的特殊需求，做一些改变，结果另外一部分用户就无法使用了。没法两全。所以我的理解是，他们一般不会随便去响应站长的需求，比如你明明是一个很大用户的站点，你用了我的系统，还要说数据量大了承受不住，表容易损坏。你都达到某种级别的应用了，还不自己进行开发。来这里抱怨。找我按照你们方式定制，愿意给钱就好。</p>\r\n\r\n<p>从这里我看到，不是说这些软件技术含量就多好，是多么成熟的解决方案。他们针对的用户群不同。<br />\r\n由于http是短连接，每次过程是：建立连接(握手)》》数据通信》》通信结束后结束连接。如果频繁的这样子连接后再断开，性能会非常差。<br />\r\nsession存储在数据库中，有多少pv，就要多少次这样的数据库连接操作(得去数据库拿session才能知道有没有登录，登录是否过时)。</p>\r\n\r\n<p>3、可以将session数据保存在memcached，redis之类内存数据库中，memcached是基于内存存储数据的，性能很高，用户并发量很大的时候尤其合适。<br />\r\n主要是利用内存的数据读取速度是很快的，与磁盘读取的速度不是一个数量级的。<br />\r\n使用内存存储：方便统计在线人数，内存的速度比磁盘访问快、内存数据库系统能够控制内存中的过期数据自动失效(刚好符合session过期需要)。<br />\r\n存储在redis比较理想的选择，存储在数据库中方便存储统计在线人数，那么存储在redis中也实现了这个要求。<br />\r\n也可以存储在memcache中。但redis支持的数据类型多。所以用它好点。</p>\r\n\r\n<p>关于使用技术工具复制session数据同步到多台服务器的方案权衡：</p>\r\n\r\n<p>这种方案是，使用一些文件同步工具(linux下的rsync)，当a服务器中的session数据有更改的时候，就会把这些更改也同步到b，c服务器上去。通过复制的方式，最终a，b，c各个服务器上都拷贝了一份session数据。</p>\r\n\r\n<p>这种方式的弊端是，速度慢。复制数据会出现延迟。比如第一秒访问是a服务器，修改了session数据，负载均衡，可能下一秒访问是b服务器，session数据如果没有被复制到b服务器，则是读取不到session数据的，出现时间上的延迟。这种复制数据要消耗很多网络带宽的。在实际中业界用得比较少。机器的数量越多，复制数据的性能损耗越大。不具备高度扩展性。<br />\r\n复制session的方式，无论是网络带宽成本还是硬件开销上都很大的。</p>\r\n\r\n<p>&nbsp;=================================结束</p>\r\n\r\n<p>我写这篇总结文章的目的，只是为了梳理知识，完善自己的知识库。不一定正确。其中有些方式我确实没试过，也没有100%搞清楚细节。所以不一定完全正确。<br />\r\n有不当之处，期待后续完善，欢迎指正。</p>\r\n\r\n<p>转自:http://www.cnblogs.com/wangtao_20/archive/2013/10/29/3395518.html</p>\r\n',0,1437285932,0,0),(24,23,'Windows下自由创建.htaccess文件的N种方法','<p>.htaccess是apache的访问控制文件，apache中httpd.conf的选项配合此文件，完美实现了目录、站点的访问控制，当然最多的还是rewrite功能，即URL重写，PHP中实现伪静态的一个重要途径，也是被公认为SEO中搜索引擎友好的极为有效的一个手段。<br />\r\n尽管前些天的黑屏风波闹的沸沸扬扬，但依本人拙见，windows用户并无任何减少。现在的一个实际问题就是windows不允许重命名时.的前面没有字符，它认为这样的文件名是不合法的。这就造成我们无法通过重命名&rdquo;新建文本文档.txt&rdquo;为&rdquo;.htaccess&rdquo;来创建此访问控制文件，但是，事情总有解决的办法。且看下面的几个方法：</p>\r\n\r\n<p>1、使用DOS命令，在DOS下有三种方法可供选择：</p>\r\n\r\n<p>使用屏幕编辑命令copy con .htaccess后回车，输入内容，最后按下ctrl+z结束编辑，就成功生成了.htaccess；<br />\r\n使用重命名命令ren 1.txt .htaccess ，这是最常规的方法了，在windows窗口下不能执行的命令，在cmd下却如履平地；<br />\r\n使用重定向命令 echo. &gt;.htaccess，这里将一个回车符输入到.htaccess，同样能创建成功；<br />\r\n三种方法一并截图如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719143922483065.jpg\" style=\"height:217px; width:331px\" /></p>\r\n\r\n<p>2、用winrar的文件管理器，先新建一文本文档，然后打开winrar主界面，定位到该文件，可以直接重命名，这是我在解压一国外开源项目时，其自带的.htaccess居然能正确解压出来时，所得到的启发，当然你使用7zip之类的管理器也是可以的，OK，看截图：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719143951821911.jpg\" style=\"height:174px; width:367px\" /></p>\r\n\r\n<p>3、直接通过文本编辑工具保存，例如记事本，ultraEdit等等，不过保存的时候选择所有文件就可以了，这实在是一个欠揍的方法，不过肯定不是我欠揍，欠揍的是微软，华丽截图来一张：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719144018414895.jpg\" style=\"height:126px; width:454px\" /></p>\r\n\r\n<p>4、使用php中的文件创建方法，fopen，file_put_contents文件名直接取.htaccess就成。</p>\r\n\r\n<p>我目前也就发现（发明？）了这么几个方法，不过应该够用吧？</p>\r\n',0,1437288044,0,0),(25,10,'PHP获取远程站点响应内容的方法总结','<p>方法1: 用file_get_contents 以get方式获取内容<br />\r\n&lt;?php<br />\r\n$url=&#39;http://www.domain.com/?para=123&#39;;<br />\r\n$html = file_get_contents($url);<br />\r\necho $html;<br />\r\n?&gt;</p>\r\n\r\n<p>方法2：用file_get_contents函数,以post方式获取url<br />\r\n&lt;?php<br />\r\n$url = &#39;http://www.domain.com/test.php?id=123&#39;;<br />\r\n$data = array (&#39;foo&#39; =&gt; &#39;bar&#39;);<br />\r\n$data = http_build_query($data);</p>\r\n\r\n<p>$opts = array (<br />\r\n&nbsp;&nbsp; &nbsp;&#39;http&#39; =&gt; array (<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;method&#39; =&gt; &#39;POST&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nContent-Length: &quot; . strlen($data) . &quot;\\r\\n&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;content&#39; =&gt; $data<br />\r\n&nbsp;&nbsp; &nbsp;)<br />\r\n);<br />\r\n$ctx = stream_context_create($opts);<br />\r\n$html = @file_get_contents($url, &#39;&#39;, $ctx);</p>\r\n\r\n<p>如果需要再传递cookie数据,则把<br />\r\n&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nContent-Length: &quot; . strlen($data) . &quot;\\r\\n&quot;,<br />\r\n修改为<br />\r\n&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nContent-Length: &quot; . strlen($data) . &quot;\\r\\ncookie:cookie1=c1;cookie2=c2\\r\\n&quot;;<br />\r\n即可</p>\r\n\r\n<p>方法3: 用fopen打开url, 以get方式获取内容<br />\r\n&lt;?php<br />\r\n$fp = fopen($url, &#39;r&#39;);<br />\r\n$header = stream_get_meta_data($fp);//获取报头信息<br />\r\nwhile(!feof($fp)) {<br />\r\n&nbsp;&nbsp; &nbsp;$result .= fgets($fp, 1024);<br />\r\n}<br />\r\necho &quot;url header: {$header} &lt;br&gt;&quot;:<br />\r\necho &quot;url body: $result&quot;;<br />\r\nfclose($fp);<br />\r\n?&gt;</p>\r\n\r\n<p>方法4: 用fopen打开url, 以post方式获取内容<br />\r\n&lt;?php<br />\r\n$data = array (&#39;foo2&#39; =&gt; &#39;bar2&#39;,&#39;foo3&#39;=&gt;&#39;bar3&#39;);<br />\r\n$data = http_build_query($data);</p>\r\n\r\n<p>$opts = array (<br />\r\n&nbsp;&nbsp; &nbsp;&#39;http&#39; =&gt; array (<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;method&#39; =&gt; &#39;POST&#39;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;header&#39;=&gt; &quot;Content-type: application/x-www-form-urlencoded\\r\\nCookie:cook1=c3;cook2=c4\\r\\nContent-Length: &quot;.strlen($data).&quot;\\r\\n&quot;,<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&#39;content&#39; =&gt; $data<br />\r\n&nbsp;&nbsp; &nbsp;)<br />\r\n);</p>\r\n\r\n<p>$context = stream_context_create($opts);<br />\r\n$html = fopen(&#39;http://www.test.com/zzzz.php?id=i3&amp;id2=i4&#39;, &#39;rb&#39;, false, $context);<br />\r\n$w=fread($html,1024);<br />\r\necho $w;<br />\r\n?&gt;</p>\r\n\r\n<p>方法5：用fsockopen函数打开url，以get方式获取完整的数据，包括header和body<br />\r\n&lt;?php<br />\r\nfunction get_url($url, $cookie=false)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$url = parse_url($url);<br />\r\n&nbsp;&nbsp; &nbsp;$query = $url[path].&quot;?&quot;.$url[query];<br />\r\n&nbsp;&nbsp; &nbsp;echo &quot;Query:&quot;.$query;<br />\r\n&nbsp;&nbsp; &nbsp;$fp = fsockopen( $url[host], $url[port]?$url[port]:80 , $errno, $errstr, 30);<br />\r\n&nbsp;&nbsp; &nbsp;if(!$fp)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return false;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request = &quot;GET $query HTTP/1.1\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request .= &quot;Host: $url[host]\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request .= &quot;Connection: Close\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if($cookie)<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request.=&quot;Cookie: $cookie\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$request.=&quot;\\r\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fwrite($fp, $request);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while(!feof($fp))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$result .= @fgets($fp, 1024);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;fclose($fp);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $result;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n//获取url的html部分，去掉header<br />\r\nfunction GetUrlHTML($url,$cookie=false)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;$rowdata = get_url($url,$cookie);<br />\r\n&nbsp;&nbsp; &nbsp;if($rowdata)<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$body= stristr($rowdata,&quot;\\r\\n\\r\\n&quot;);<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$body=substr($body,4,strlen($body));<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $body;<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;return false;<br />\r\n}<br />\r\n?&gt;</p>\r\n\r\n<p>方法6：用fsockopen函数打开url，以POST方式获取完整的数据，包括header和body<br />\r\n&lt;?php<br />\r\nfunction HTTP_Post($URL,$data,$cookie, $referrer=&quot;&quot;)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;// parsing the given URL<br />\r\n&nbsp;&nbsp; &nbsp;$URL_Info=parse_url($URL);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// Building referrer<br />\r\n&nbsp;&nbsp; &nbsp;if($referrer==&quot;&quot;) // if not given use this script as referrer<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$referrer=&quot;111&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// making string from $data<br />\r\n&nbsp;&nbsp; &nbsp;foreach($data as $key=&gt;$value)<br />\r\n&nbsp;&nbsp; &nbsp;$values[]=&quot;$key=&quot;.urlencode($value);<br />\r\n&nbsp;&nbsp; &nbsp;$data_string=implode(&quot;&amp;&quot;,$values);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// Find out which port is needed - if not given use standard (=80)<br />\r\n&nbsp;&nbsp; &nbsp;if(!isset($URL_Info[&quot;port&quot;]))<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$URL_Info[&quot;port&quot;]=80;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;// building POST-request:<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;POST &quot;.$URL_Info[&quot;path&quot;].&quot; HTTP/1.1\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Host: &quot;.$URL_Info[&quot;host&quot;].&quot;\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Referer: $referer\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Content-type: application/x-www-form-urlencoded\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Content-length: &quot;.strlen($data_string).&quot;\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=&quot;Connection: close\\n&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;$request.=&quot;Cookie: $cookie\\n&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;$request.=&quot;\\n&quot;;<br />\r\n&nbsp;&nbsp; &nbsp;$request.=$data_string.&quot;\\n&quot;;</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;$fp = fsockopen($URL_Info[&quot;host&quot;], $URL_Info[&quot;port&quot;]);<br />\r\n&nbsp;&nbsp; &nbsp;fputs($fp, $request);<br />\r\n&nbsp;&nbsp; &nbsp;while(!feof($fp))<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$result .= fgets($fp, 1024);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;fclose($fp);</p>\r\n\r\n<p>&nbsp;&nbsp; &nbsp;return $result;<br />\r\n}</p>\r\n\r\n<p>?&gt;</p>\r\n\r\n<p>方法7:使用curl库，使用curl库之前，可能需要查看一下php.ini是否已经打开了curl扩展<br />\r\n&lt;?php<br />\r\n$ch = curl_init();<br />\r\n$timeout = 5;<br />\r\ncurl_setopt ($ch, CURLOPT_URL, &#39;http://www.domain.com/&#39;);<br />\r\ncurl_setopt ($ch, CURLOPT_RETURNTRANSFER, 1);<br />\r\ncurl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);<br />\r\n$file_contents = curl_exec($ch);<br />\r\ncurl_close($ch);</p>\r\n\r\n<p>echo $file_contents;<br />\r\n?&gt;</p>\r\n',0,1437290913,0,0),(26,1,'js正则匹配所有汉字','<p>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<br />\r\n&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<br />\r\n&lt;head&gt;<br />\r\n&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br />\r\n&lt;title&gt;无标题文档&lt;/title&gt;<br />\r\n&lt;script&gt;<br />\r\nfunction aaa(str)<br />\r\n{<br />\r\n&nbsp;&nbsp; &nbsp;var reg = /^[\\u4e00-\\u9fa5]+$/;<br />\r\n&nbsp;&nbsp; &nbsp;if(reg.test(str)){<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(&#39;汉字的干活&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n&nbsp;&nbsp; &nbsp;else<br />\r\n&nbsp;&nbsp; &nbsp;{<br />\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;alert(&#39;非全部汉字&#39;);<br />\r\n&nbsp;&nbsp; &nbsp;}<br />\r\n}<br />\r\n&lt;/script&gt;<br />\r\n&lt;/head&gt;</p>\r\n\r\n<p>&lt;body&gt;<br />\r\n&lt;input type=&quot;button&quot; onclick=&quot;aaa(&#39;去我饿人&#39;)&quot; value=&quot;test1&quot; /&gt;<br />\r\n&lt;input type=&quot;button&quot; onclick=&quot;aaa(&#39;fnjdsfsjfsfk&#39;)&quot; value=&quot;test2&quot; /&gt;<br />\r\n&lt;input type=&quot;button&quot; onclick=&quot;aaa(&#39;去我dfhsdf饿人&#39;)&quot; value=&quot;test3&quot; /&gt;<br />\r\n&lt;/body&gt;<br />\r\n&lt;/html&gt;</p>\r\n',0,1437291822,0,0),(27,24,'sql 百万级数据库优化方案','<p>1.对查询进行优化，应尽量避免全表扫描，首先应考虑在 where 及 order by 涉及的列上建立索引。</p>\r\n\r\n<p>2.应尽量避免在 where 子句中对字段进行 null 值判断，否则将导致引擎放弃使用索引而进行全表扫描，如：<br />\r\nselect id from t where num is null<br />\r\n可以在num上设置默认值0，确保表中num列没有null值，然后这样查询：<br />\r\nselect id from t where num=0</p>\r\n\r\n<p>3.应尽量避免在 where 子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</p>\r\n\r\n<p>4.应尽量避免在 where 子句中使用 or 来连接条件，否则将导致引擎放弃使用索引而进行全表扫描，如：<br />\r\nselect id from t where num=10 or num=20<br />\r\n可以这样查询：<br />\r\nselect id from t where num=10<br />\r\nunion all<br />\r\nselect id from t where num=20</p>\r\n\r\n<p>5.in 和 not in 也要慎用，否则会导致全表扫描，如：<br />\r\nselect id from t where num in(1,2,3)<br />\r\n对于连续的数值，能用 between 就不要用 in 了：<br />\r\nselect id from t where num between 1 and 3</p>\r\n\r\n<p>6.下面的查询也将导致全表扫描：<br />\r\nselect id from t where name like &lsquo;%abc%&rsquo;<br />\r\n若要提高效率，可以考虑全文检索。</p>\r\n\r\n<p>7.如果在 where 子句中使用参数，也会导致全表扫描。因为SQL只有在运行时才会解析局部变量，但优化程序不能将访问计划的选择推迟到运行时；它必须在编译时进行选择。然而，如果在编译时建立访问计划，变量的值还是未知的，因而无法作为索引选择的输入项。如下面语句将进行全表扫描：<br />\r\nselect id from t where num=@num<br />\r\n可以改为强制查询使用索引：<br />\r\nselect id from t with(index(索引名)) where num=@num</p>\r\n\r\n<p>8.应尽量避免在 where 子句中对字段进行表达式操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br />\r\nselect id from t where num/2=100<br />\r\n应改为:<br />\r\nselect id from t where num=100*2</p>\r\n\r\n<p>9.应尽量避免在where子句中对字段进行函数操作，这将导致引擎放弃使用索引而进行全表扫描。如：<br />\r\nselect id from t where substring(name,1,3)=&rsquo;abc&rsquo;&ndash;name以abc开头的id<br />\r\nselect id from t where datediff(day,createdate,&rsquo;2005-11-30&prime;)=0&ndash;&lsquo;2005-11-30&rsquo;生成的id<br />\r\n应改为:<br />\r\nselect id from t where name like &lsquo;abc%&rsquo;<br />\r\nselect id from t where createdate&gt;=&rsquo;2005-11-30&prime; and createdate&lt;&rsquo;2005-12-1&prime;</p>\r\n\r\n<p>10.不要在 where 子句中的&ldquo;=&rdquo;左边进行函数、算术运算或其他表达式运算，否则系统将可能无法正确使用索引。</p>\r\n\r\n<p>11.在使用索引字段作为条件时，如果该索引是复合索引，那么必须使用到该索引中的第一个字段作为条件时才能保证系统使用该索引，否则该索引将不会 被使用，并且应尽可能的让字段顺序与索引顺序相一致。</p>\r\n\r\n<p>12.不要写一些没有意义的查询，如需要生成一个空表结构：<br />\r\nselect col1,col2 into #t from t where 1=0<br />\r\n这类代码不会返回任何结果集，但是会消耗系统资源的，应改成这样：<br />\r\ncreate table #t(&hellip;)</p>\r\n\r\n<p>13.很多时候用 exists 代替 in 是一个好的选择：<br />\r\nselect num from a where num in(select num from b)<br />\r\n用下面的语句替换：<br />\r\nselect num from a where exists(select 1 from b where num=a.num)</p>\r\n\r\n<p>14.并不是所有索引对查询都有效，SQL是根据表中数据来进行查询优化的，当索引列有大量数据重复时，SQL查询可能不会去利用索引，如一表中有 字段sex，male、female几乎各一半，那么即使在sex上建了索引也对查询效率起不了作用。</p>\r\n\r\n<p>15.索引并不是越多越好，索引固然可以提高相应的 select 的效率，但同时也降低了 insert 及 update 的效率，因为 insert 或 update 时有可能会重建索引，所以怎样建索引需要慎重考虑，视具体情况而定。一个表的索引数最好不要超过6个，若太多则应考虑一些不常使用到的列上建的索引是否有 必要。</p>\r\n\r\n<p>16.应尽可能的避免更新 clustered 索引数据列，因为 clustered 索引数据列的顺序就是表记录的物理存储顺序，一旦该列值改变将导致整个表记录的顺序的调整，会耗费相当大的资源。若应用系统需要频繁更新 clustered 索引数据列，那么需要考虑是否应将该索引建为 clustered 索引。</p>\r\n\r\n<p>17.尽量使用数字型字段，若只含数值信息的字段尽量不要设计为字符型，这会降低查询和连接的性能，并会增加存储开销。这是因为引擎在处理查询和连 接时会逐个比较字符串中每一个字符，而对于数字型而言只需要比较一次就够了。</p>\r\n\r\n<p>18.尽可能的使用 varchar/nvarchar 代替 char/nchar ，因为首先变长字段存储空间小，可以节省存储空间，其次对于查询来说，在一个相对较小的字段内搜索效率显然要高些。</p>\r\n\r\n<p>19.任何地方都不要使用 select * from t ，用具体的字段列表代替&ldquo;*&rdquo;，不要返回用不到的任何字段。</p>\r\n\r\n<p>20.尽量使用表变量来代替临时表。如果表变量包含大量数据，请注意索引非常有限（只有主键索引）。</p>\r\n\r\n<p>21.避免频繁创建和删除临时表，以减少系统表资源的消耗。</p>\r\n\r\n<p>22.临时表并不是不可使用，适当地使用它们可以使某些例程更有效，例如，当需要重复引用大型表或常用表中的某个数据集时。但是，对于一次性事件， 最好使用导出表。</p>\r\n\r\n<p>23.在新建临时表时，如果一次性插入数据量很大，那么可以使用 select into 代替 create table，避免造成大量 log ，以提高速度；如果数据量不大，为了缓和系统表的资源，应先create table，然后insert。</p>\r\n\r\n<p>24.如果使用到了临时表，在存储过程的最后务必将所有的临时表显式删除，先 truncate table ，然后 drop table ，这样可以避免系统表的较长时间锁定。</p>\r\n\r\n<p>25.尽量避免使用游标，因为游标的效率较差，如果游标操作的数据超过1万行，那么就应该考虑改写。</p>\r\n\r\n<p>26.使用基于游标的方法或临时表方法之前，应先寻找基于集的解决方案来解决问题，基于集的方法通常更有效。</p>\r\n\r\n<p>27.与临时表一样，游标并不是不可使用。对小型数据集使用 FAST_FORWARD 游标通常要优于其他逐行处理方法，尤其是在必须引用几个表才能获得所需的数据时。在结果集中包括&ldquo;合计&rdquo;的例程通常要比使用游标执行的速度快。如果开发时 间允许，基于游标的方法和基于集的方法都可以尝试一下，看哪一种方法的效果更好。</p>\r\n\r\n<p>28.在所有的存储过程和触发器的开始处设置 SET NOCOUNT ON ，在结束时设置 SET NOCOUNT OFF 。无需在执行存储过程和触发器的每个语句后向客户端发送 DONE_IN_PROC 消息。</p>\r\n\r\n<p>29.尽量避免大事务操作，提高系统并发能力。</p>\r\n\r\n<p>30.尽量避免向客户端返回大数据量，若数据量过大，应该考虑相应需求是否合理。</p>\r\n',0,1437292194,0,0),(28,25,'mysql之主从复制篇','<p>在实际企业应用环境当中，单台mysql数据库是不足以满足日后业务需求的。譬如服务器发生故障，没有备份服务器来提供服务的话，业务就得停止。介于这种情况，我们来学习一下mysql主从复制。</p>\r\n\r\n<p>使用mysql主从复制的好处有：</p>\r\n\r\n<p>1、采用主从服务器这种架构，稳定性得以提升。如果主服务器发生故障，我们可以使用从服务器来提供服务。</p>\r\n\r\n<p>2、在主从服务器上分开处理用户的请求，可以提升数据处理效率。</p>\r\n\r\n<p>3、将主服务器上的数据复制到从服务器上，保护数据免受意外的损失。</p>\r\n\r\n<p>环境描述：</p>\r\n\r\n<p>新企业要搭建架构为主从复制的mysql数据库。</p>\r\n\r\n<p>主服务器（mysql-master）：IP地址：192.168.48.128，mysql已安装，没有用户数据。</p>\r\n\r\n<p>从服务器（mysql-slave）：IP地址：192.168.48.130，mysql已安装，没有用户数据。</p>\r\n\r\n<p>主从服务器均可正常提供服务。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719160725550604.jpg\" style=\"height:358px; width:554px\" /></p>\r\n\r\n<p>主从复制配置如下：</p>\r\n\r\n<p>在主服务器上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有如下参数，没有的话需手工添加，并重启mysql服务。</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=1 服务器ID</p>\r\n\r\n<p>2)、登录mysql，在mysql中添加一个backup的账号，并授权给从服务器。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 登录mysql</p>\r\n\r\n<p>mysql&gt; grant replication slave on *.* to &#39;backup&#39;@&#39;192.168.48.130&#39; identified by &#39;backup&#39;; 创建backup用户，并授权给192.168.48.130使用。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719161752720095.jpg\" style=\"height:263px; width:644px\" /></p>\r\n\r\n<p>3)、查询主数据库状态，并记下FILE及Position的值，这个在后面配置从服务器的时候要用到。</p>\r\n\r\n<p>mysql&gt; show master status;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719161819669668.jpg\" style=\"height:190px; width:644px\" /></p>\r\n\r\n<p>在从服务器上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有log-bin=mysql-bin和server-id=1参数，并把server-id=1修改为server-id=10。修改之后如下所示：</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=10 服务器ID</p>\r\n\r\n<p>2）、重启mysql服务。</p>\r\n\r\n<p>[root@localhost ~]# mysqladmin -p123456 shutdown<br />\r\n[root@localhost ~]# mysqld_safe --user=mysql &amp;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719161949532833.jpg\" style=\"height:112px; width:644px\" /></p>\r\n\r\n<p>3)、登录mysql，执行如下语句</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; change master to master_host=&#39;192.168.48.128&#39;,master_user=&#39;backup&#39;,master_password=&#39;backup&#39;,master_log_file=&#39;mysql-bin.000003&#39;,master_log_pos=401;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162038800103.jpg\" style=\"height:275px; width:644px\" /></p>\r\n\r\n<p>4)、启动slave同步。</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162106300885.jpg\" style=\"height:164px; width:644px\" /></p>\r\n\r\n<p>5)、检查主从同步，如果您看到Slave_IO_Running和Slave_SQL_Running均为Yes，则主从复制连接正常。</p>\r\n\r\n<p>mysql&gt; show slave status\\G</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162135821884.jpg\" style=\"height:590px; width:648px\" /></p>\r\n\r\n<p>验证配置是否正常，mysql主从能否正常复制。</p>\r\n\r\n<p>在主数据库上新建一个库，并且在库中写一个表和一些数据。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; create database mysqltest;</p>\r\n\r\n<p>mysql&gt; use mysqltest;</p>\r\n\r\n<p>mysql&gt; create table user(id int(5),name char(10));</p>\r\n\r\n<p>mysql&gt; insert into user values (00001,&#39;zhangsan&#39;);</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162204145867.jpg\" style=\"height:352px; width:644px\" /></p>\r\n\r\n<p>在从数据库中验证一下，是否正常复制到数据。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162228692025.jpg\" style=\"height:147px; width:645px\" /></p>\r\n\r\n<p>mysql&gt; select * from mysqltest.user;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162320412094.jpg\" style=\"height:109px; width:645px\" /></p>\r\n\r\n<p>从上图中的结果，我们可以看到mysql主从复制已经在起作用了，我们在主数据库中写入的数据已经复制到我们的从数据库中了。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>环境如下：</p>\r\n\r\n<p>单台数据库存有数据，要升级为主从复制的架构。</p>\r\n\r\n<p>主数据库：mysql-master：IP192.168.48.128，数据库正常提供服务，有数据。</p>\r\n\r\n<p>从数据库：mysql-slave：IP192.168.48.130，数据库正常提供服务，无数据。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162425587655.jpg\" style=\"height:362px; width:558px\" /></p>\r\n\r\n<p>升级大致步骤如下：</p>\r\n\r\n<p>1、修改主数据库配置文件，开启总从复制必要的功能。</p>\r\n\r\n<p>2、在主数据库中创建一个账号并授权给从数据库使用。</p>\r\n\r\n<p>3、导出主数据库中的数据作。</p>\r\n\r\n<p>4、修改从数据库配置文件，开启总从复制必要的功能。</p>\r\n\r\n<p>5、把刚才主数据库中导出的数据导入到从数据库。</p>\r\n\r\n<p>6、在从数据库中配置连接主数据库要用到的账户、密码等。</p>\r\n\r\n<p>7、启动主从复制功能，并检查是否正常复制。</p>\r\n\r\n<p>开始升级:</p>\r\n\r\n<p>在主数据库上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有如下参数，没有的话需手工添加，并重启mysql服务。</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=1 服务器ID</p>\r\n\r\n<p>2)、登录mysql，在mysql中添加一个backup的账号，并授权给从服务器。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 登录mysql</p>\r\n\r\n<p>mysql&gt; grant replication slave on *.* to &#39;backup&#39;@&#39;192.168.48.130&#39; identified by &#39;backup&#39;; 创建backup用户，并授权给192.168.48.130使用。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162508369192.jpg\" style=\"height:265px; width:644px\" /></p>\r\n\r\n<p>3)、查看已有的数据库有哪些；</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162534203326.jpg\" style=\"height:180px; width:644px\" /></p>\r\n\r\n<p>4)、进行锁表操作，不让数据进行写入动作，这么做事为了防止从数据库的原始数据和主数据库的原始数据不一致。</p>\r\n\r\n<p>mysql&gt; flush tables with read lock;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162605604766.jpg\" style=\"height:144px; width:644px\" /></p>\r\n\r\n<p>5)、查询主数据库状态，并记下FILE及Position的值，这个在后面配置从服务器的时候要用到。</p>\r\n\r\n<p>mysql&gt; show master status;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162631618334.jpg\" style=\"height:156px; width:644px\" /></p>\r\n\r\n<p>6)、切换一个终端，使用mysqldump命令将刚才查询到的两个库导出来。</p>\r\n\r\n<p>mysql&gt; mysqldump &ndash;uroot &ndash;p123456 mysqltest &amp;gt; mysqltest.sql</p>\r\n\r\n<p>mysql&gt; mysqldump &ndash;uroot &ndash;p123456 test1234 &amp;gt; test1234.sql</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162702885659.jpg\" style=\"height:115px; width:644px\" /></p>\r\n\r\n<p>7)、将导出来的库文件传送到从数据库的/root目录下。</p>\r\n\r\n<p>[root@localhost ~]#scp mysqltest.sql test1234.sql root@192.168.48.130:/root/</p>\r\n\r\n<p>这中间需要输入一次验证口令。见下图</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162748324670.jpg\" style=\"height:138px; width:644px\" /></p>\r\n\r\n<p>8)、切换回之前的终端，进行表解锁操作。</p>\r\n\r\n<p>mysql&gt; unlock tables;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162833939685.jpg\" style=\"height:84px; width:644px\" /></p>\r\n\r\n<p>主数据库服务器上的操作告一段落。</p>\r\n\r\n<p>在从数据库上操作：</p>\r\n\r\n<p>1)、确保/etc/my.cnf中有log-bin=mysql-bin和server-id=1参数，并把server-id=1修改为server-id=10。修改之后如下所示：</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin=mysql-bin 启动二进制文件</p>\r\n\r\n<p>server-id=10 服务器ID</p>\r\n\r\n<p>2)、重启mysql服务。</p>\r\n\r\n<p>[root@localhost ~]# mysqladmin -p123456 shutdown<br />\r\n[root@localhost ~]# mysqld_safe --user=mysql &amp;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162904183551.jpg\" style=\"height:115px; width:644px\" /></p>\r\n\r\n<p>3)、登录数据库，确认要同步的库名不存在。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719162948580377.jpg\" style=\"height:294px; width:644px\" /></p>\r\n\r\n<p>4)、创建名为mysqltest和test1234的库。</p>\r\n\r\n<p>mysql&gt; create database mysqltest;</p>\r\n\r\n<p>mysql&gt; create database test1234;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163054368753.jpg\" style=\"height:100px; width:644px\" /></p>\r\n\r\n<p>4)、切换一个终端，将传过来的两个数据文件分别导入对应的数据库下。</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 mysqltest &lt; mysqltest.sql</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 test1234 &amp;lt; test1234.sql</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163118724517.jpg\" style=\"height:103px; width:644px\" /></p>\r\n\r\n<p>5)、切换回之前的终端，执行如下语句</p>\r\n\r\n<p>mysql&gt; change master to master_host=&#39;192.168.48.128&#39;,master_user=&#39;backup&#39;,master_password=&#39;backup&#39;,master_log_file=&#39;mysql-bin.000003&#39;,master_log_pos=1650;</p>\r\n\r\n<p>6)、启动主从复制功能。</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163256172372.jpg\" style=\"height:107px; width:644px\" /></p>\r\n\r\n<p>7)、</p>\r\n\r\n<p>检查主从同步，如果您看到Slave_IO_Running和Slave_SQL_Running均为Yes，则主从复制连接正常。</p>\r\n\r\n<p>mysql&gt; show slave status\\G</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163325799746.jpg\" style=\"height:570px; width:646px\" /></p>\r\n\r\n<p>验证主从是否正常配置：</p>\r\n\r\n<p>在主数据库上插入数据：</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p>mysql&gt; show tables;</p>\r\n\r\n<p>mysql&gt; use mysqltest;</p>\r\n\r\n<p>mysql&gt; select * from user;</p>\r\n\r\n<p>mysql&gt; insert into user values (4,&#39;ergou&#39;);</p>\r\n\r\n<p>mysql&gt; insert into user values (5,&#39;sanwazi&#39;);</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163359905709.jpg\" style=\"height:497px; width:647px\" /></p>\r\n\r\n<p>在从数据库上查看是否正常同步：</p>\r\n\r\n<p>mysql&gt; show databases;</p>\r\n\r\n<p>mysql&gt; use mysqltest;</p>\r\n\r\n<p>mysql&gt; select * from user;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163458170779.jpg\" style=\"height:340px; width:645px\" /></p>\r\n\r\n<p>上图可以看出，主从之间已经可以正常复制了。</p>\r\n\r\n<p>今天就先到这里吧O(&cap;_&cap;)O~</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><span style=\"color:#FF0000\">mysql主从复制碰到的小问题</span></p>\r\n\r\n<p>一个朋友在做mysql主从复制的时候碰到了一些问题，他已经按照我之前的教程一步步做了。但是就是不知道是怎么回事。从数据库中使用命令show slave status\\G查看到的结果如下图:</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163542935125.jpg\" style=\"height:558px; width:648px\" /></p>\r\n\r\n<p>我们知道，要想mysql主从复制成功的先决条件是Slave_IO_Running和Slave_SQL_Running均为Yes，而上图所示的结果显然是有一个不满足条件。</p>\r\n\r\n<p>再根据Last_IO_Error的错误代码2013及下面的错误提示我们可以知道，从数据库无法正常连接到主数据库。</p>\r\n\r\n<p>这里原因有三：</p>\r\n\r\n<p>1、主数据库没有给从数据库登录授权</p>\r\n\r\n<p>2、网络不通</p>\r\n\r\n<p>3、有防火墙</p>\r\n\r\n<p>明白这三点之后我们就可以针对原因依次来解决它们：</p>\r\n\r\n<p>登录主数据库，给从数据库授权</p>\r\n\r\n<p>[root@localhost ~]# mysql -uroot &ndash;p123456 登录主数据库</p>\r\n\r\n<p>mysql&gt; grant replication slave on *.* to &#39;backup&#39;@&#39;192.168.48.130&#39; identified by &#39;backup&#39;; 创建backup用户，并授权给从数据库连接使用。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163703688262.jpg\" style=\"height:263px; width:644px\" /></p>\r\n\r\n<p>检查网络是否通畅</p>\r\n\r\n<p>[root@localhost ~]# ping -c 4 192.168.48.128 再从服务器上ping主服务器。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163736765524.jpg\" style=\"height:215px; width:644px\" /></p>\r\n\r\n<p>分别在主从服务器上检查防火墙状态</p>\r\n\r\n<p>我们可以直接关闭防火墙</p>\r\n\r\n<p>运行命令：[root@localhost ~]# setup</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163817948419.jpg\" style=\"height:195px; width:644px\" /></p>\r\n\r\n<p>选择防火墙（Firewall configuretion）这一项.</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163900731961.jpg\" style=\"height:360px; width:644px\" /></p>\r\n\r\n<p>将它Disabled掉。</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719163931605590.jpg\" style=\"height:360px; width:644px\" /></p>\r\n\r\n<p>或者你可以直接使用命令：</p>\r\n\r\n<p>[root@localhost ~]# service iptables stop 即时生效，系统重启后失效</p>\r\n\r\n<p>[root@localhost ~]# chkconfig iptables off 当前状态无效，系统重启后生效</p>\r\n\r\n<p>大家可以结合使用</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719164004398773.jpg\" style=\"height:127px; width:644px\" /></p>\r\n\r\n<p>以上情况都排除完毕，我们来再测试一下主从是否能正常连接。</p>\r\n\r\n<p>在从数据库中执行如下命令：</p>\r\n\r\n<p>mysql&gt;stop slave;</p>\r\n\r\n<p>mysql&gt;start slave;</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719164051266525.jpg\" style=\"height:87px; width:646px\" /></p>\r\n\r\n<p>然后查看主从连接状态</p>\r\n\r\n<p>mysql&gt;show slave status\\G</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719164115103213.jpg\" style=\"height:590px; width:648px\" /></p>\r\n\r\n<p>经过上述操作，我那位朋友成功排除了主从不能复制的故障。</p>\r\n\r\n<p>故障2：报错如下:</p>\r\n\r\n<p>@MF2K}FVZ7%Y9QEQ_E$2INQ</p>\r\n\r\n<p>意思就是从上的server_id和主的一样的，经查看发现从上的/etc/my.cnf中的server_id=1这行我没有注释掉（在下面复制部分我设置了server_id），于是马上把这行注释掉了，然后重启mysql，发现还是报同样的错误。</p>\r\n\r\n<p>使用如下命令查看了一下server_id</p>\r\n\r\n<p>show variables like &#39;server_id&#39;;</p>\r\n\r\n<p>发现，mysql并没有从my.cnf文件中更新server_id，既然这样就只能手动修改了</p>\r\n\r\n<p>mysql&gt; set global server_id=10; #此处的数值和my.cnf里设置的一样就行<br />\r\nmysql&gt; slave start;</p>\r\n\r\n<p>如此执行后，slave恢复了正常。</p>\r\n\r\n<p>不过稍后蚊子使用/etc/init.d/mysqld restart重启了mysql服务，然后查看slave状态，发现又出现了上面的错误，然后查看server_id发现这个数值又恢复到了1。</p>\r\n\r\n<p>之后蚊子又重新查看了一下/etc/my.cnf的内容，确认应该不是这个文件的问题，于是去google查了一下，看到mysql在启动的时候会查找/etc/my.cnf、DATADIR/my.cnf，USER_HOME/my.cnf。</p>\r\n\r\n<p>本文出自 &ldquo;第三方&rdquo; 博客，请务必保留此出处http://2526575.blog.51cto.com/2516575/689199</p>\r\n',0,1437295304,0,0),(29,1,'JS获取当前时间戳的方法-JavaScript 获取当前时间戳','<p>在网上找了很久JS获取时间戳的方法，很多都走了很多弯路，但是得到是的时间戳却不正确，下面把自己整理的几个JS获取时间戳的方法发到这里，供我的好友分享。</p>\r\n\r\n<p>JavaScript 获取当前时间戳：<br />\r\n第一种方法：<br />\r\nvar timestamp =Date.parse(new Date());</p>\r\n\r\n<p>结果：1280977330000<br />\r\n第二种方法：<br />\r\nvar timestamp =(newDate()).valueOf();</p>\r\n\r\n<p>结果：1280977330748</p>\r\n\r\n<p>第三种方法：<br />\r\nvar timestamp=newDate().getTime()；</p>\r\n\r\n<p>结果：1280977330748</p>\r\n\r\n<p>第一种：获取的时间戳是把毫秒改成000显示，</p>\r\n\r\n<p>第二种和第三种是获取了当前毫秒的时间戳。</p>\r\n',0,1437295453,0,0),(30,26,'光纤 破解 HG226 桥接 TP Link','<p>昨天晚上搞到12点。。。没连上。。。网上找的桥接的资料全都不对。。。<br />\r\n今天白天和同学聚完回来，用了移动的G3无线网卡。。。可惜住在荒郊野外。。。我跑的都比网速快。。。。。于是痛下决心。。。见下~~~<br />\r\n光纤路由器为fiberhome<br />\r\n无线路由器为TP Link</p>\r\n\r\n<p>将电脑的网线与HG226直连<br />\r\n在IE中输入192.168.1.1<br />\r\n会得到如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719165105377871.jpg\" style=\"height:281px; width:600px\" /></p>\r\n\r\n<p>输入出厂模式下的用户名和密码：<br />\r\n用户名fiberhomehg2x0 密码 hg2x0</p>\r\n\r\n<p>进行修改如下：</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719165129935784.jpg\" style=\"height:629px; width:523px\" /></p>\r\n\r\n<p>并修改桥接模式如下</p>\r\n\r\n<p><img alt=\"\" src=\"/data/pic/20150719165152558102.jpg\" style=\"height:541px; width:600px\" /></p>\r\n\r\n<p>保存重启。</p>\r\n\r\n<p>然后接上TP Link。。。<br />\r\n你会发现192.168.1.1连不上路由器。。。。为什么，不清楚，有冲突。。。<br />\r\n这个时候呢，将TP Link出厂设置，按住小暗钮。。。数几十只小羊。。。然后F5之后，就可以admin/admin了。。。。<br />\r\n第一步，the first step！！设置LAN的IP地址。。。设192.168.100.1，反正不是192.168.1.1，<br />\r\n第二步，拨号吧，设无线吧。。。<br />\r\n第三步，你成功了。。。。</p>\r\n\r\n<p>所以你瞧。。。我终于用上电脑写日志啦。。。<br />\r\n哈哈哈哈哈</p>\r\n',0,1437295932,0,0),(31,1,'正则表达式\\w并不完全等于[A-Za-z0-9]','<p>不管是书本上还是网上的教程,在正则表达式中\\w都被介绍为匹配任何单词字符,包括字母和下划线，等效于[A-Za-z0-9]<br />\r\n今天偶然间发现会员注册中出现了一个恶作剧账号&quot;аdmin&quot;,注意到那个а了没?那是一个俄文字母,在会员注册过滤中使用\\w验证并不能防止。<br />\r\n也就是说\\w包括了英文字母以及俄文字母等，在会员注册这块我们肯定不希望类同的账号出现，要不然很容易造成会员间的误会。所以改为^[A-Za-z0-9\\u4E00-\\u9FA5-]{2,16}$验证，只允许数字、26个英文字母大小写、中文及其组合。<br />\r\n通过网络检测发现，目前的大部分网站账号基本有此误检测的BUG，DZ的不论PHP还是net版均存在此问题。想象一下吧，一个网站已存存在一个英文会员账号&ldquo;admin&rdquo;，再出现一个俄文或俄文英文混合的账号，如&ldquo;аdmin&rdquo;，够混乱吧？</p>\r\n',0,1437296068,0,0),(32,15,'在Linux下载的软件怎么运行?','<p>要经过GCC命令在本机编译后方可使用<br />\r\n在Linux系统中，安装软件最常见的有两种：<br />\r\n一种是软件的源代码，您需要自己动手编译它。这种软件安装包通常是用gzip压缩过的tar包（后缀名为.tar.gz）。<br />\r\n另 一种是软件的可执行程序，你只要安装它就可以了。这种软件安装包通常是一个RPM包（RedHat Linux Packet&nbsp; Manager，就是RedHat的软件包管理器），后缀名是.rpm。当然，也有用RPM格式打包的源代码、用gzip压缩过的可执行套装程序。只要您 理解了以下的思路，这两种形式的安装包也不在话下了。</p>\r\n\r\n<p>源代码编译安装</p>\r\n\r\n<p>Linux软件的源代码分发是指提供了该软件所有程序源代码的发布形式，需要用户自己编译成可执行的二进制码并进行安装。其优点是配置灵活，可以随意去掉或保留某些功能/模块，适应多种硬件/操作系统平台及编译环境；缺点是难度较大，一般不适合初学者使用。</p>\r\n\r\n<p>各个软件的源代码包一般都在各个软件项目的主页中提供下载，例如：www.apache.org等。</p>\r\n\r\n<p>1．*.src.rpm形式的源代码软件包</p>\r\n\r\n<p>安装：</p>\r\n\r\n<p>rpm -rebuild *.src.rpm</p>\r\n\r\n<p>cd /usr/src/dist/RPMS</p>\r\n\r\n<p>rpm -ivh *.rpm</p>\r\n\r\n<p>卸载：</p>\r\n\r\n<p>rpm -e packgename</p>\r\n\r\n<p>说明：rpm --rebuild *.src.rpm命令将源代码编译并在/usr/src/dist/RPMS下生成二进制的RPM软件包，然后再安装该二进制包即可。Packgename如前所述。</p>\r\n\r\n<p>2．*.tar.gz/*.tgz/*.bz2形式的源代码软件包</p>\r\n\r\n<p>以tar.gz或tgz或tar.bz2等格式结尾的软件包一般都是以源代码方式发布的软件，安装这类软件首先需要对软件进行解压：</p>\r\n\r\n<p># tar zxvf filename.tar.gz</p>\r\n\r\n<p># tar xvfz filename.tgz</p>\r\n\r\n<p># tar xvf j filename.tar.bz2</p>\r\n\r\n<p>解压以后，就可以进入解压后的目录：</p>\r\n\r\n<p># cd filename/</p>\r\n\r\n<p>对于这类文档，常见的安装步骤是：配置、编译和安装3步，其中最麻烦的就是配置，因为所有和软件安装相关的配置都是在这一步指定的：比如软件安装位置等。</p>\r\n\r\n<p>配置：./configure</p>\r\n\r\n<p>编译：make</p>\r\n\r\n<p>安装：make install</p>\r\n\r\n<p>卸载：make uninstall 或手动删除</p>\r\n\r\n<p>说 明：建议解压后先阅读说明文件（ReadMe和Install），了解安装的需求，有必要时还需改动编译配置。有些软件包的源代码在编译安装后可以用 make&nbsp; uninstall命令来进行卸载，如果不提供此功能，则软件的卸载必须手动进行。由于软件可能将文件分散地安装在系统的多个目录中，往往很难把它删除干 净，那你应该在编译前进行配置，指定软件将要安装到目标路径：./configure --prefix=目录名，这样可以使用&ldquo;rm -rf&nbsp; 软件目录名&rdquo;命令来进行干净彻底的卸载。与其他安装方式相比，需要用户自己编译安装是最难的，它适合于使用Linux已有一定经验的人，一般不推荐初学者 使用。</p>\r\n\r\n<p>RPM格式软件包的安装</p>\r\n\r\n<p>RPM是RedHat公司开发的软件包管理器，使用它可以很容易地对RPM形式的软件 包进行安装、升级、卸载、验证、查询等操作，安装简单，而卸载时也可以将软件安装在多处目录中的文件删除干净，因此推荐初学者尽可能使用RPM形式的软件 包。软件包往往有特定的命令规范，名字是由&ldquo;文件名+版本号+.&nbsp; rpm&rdquo;组成的字串，例如apache-3.1.12-i386.rpm和apache-devel-3.1.12-i386.rpm，它们的软件包名称 分别是apache和apache-devel。各个支持RPM格式的Linux常见软件的RPM包可以在网站rpmfind.net中找到。</p>\r\n\r\n<p>1．安装</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm-i(or--install) options file1.rpm ... fileN.rpm</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>file1.rpm...fileN.rpm指将要安装的RPM包的文件名。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>-h(or &mdash;hash)安装时输出hash记号；test只对安装进行测试，并不实际安装；--percent以百分比的形式输出安装的进度；--&nbsp; excludedocs不安装软件包中的文档；--includedocs安装文档；--replacepkgs强制重新安装已经安装的软件包；--&nbsp; replacefiles替换属于其他软件包的文件；--force忽略软件包及文档的冲突；--noscripts不运行预安装和后安装脚本；--&nbsp; prefix&nbsp; NEWPATH将软件包安装到由NEWPATH指定的路径下；--ignorearch不校验软件包的结构；--ignoreos不检查软件包运行的操作 系统；--nodeps不检查依赖性关系；--ftpproxy HOST用HOST作为FTP代理；--ftpport&nbsp; PORT指定FTP的端口号为PORT。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v显示附加信息；-vv显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文档为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>2．删除</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -e(or--erase) options pkg1 ... pkgN</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>pkg1...pkgN：要删除的软件包。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>--test只执行删除的测试；--noscripts不运行预安装和后安装脚本程序；--nodeps不检查依赖性。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-vv 显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文档为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>3．升级</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -U(or--upgrade) options file1.rpm ... fileN.rpm</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>file1.rpm...fileN.rpm指软件包的名字。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>-h(or &mdash;hash)安装时输出hash记号；&mdash;oldpackage允许一个旧版本；--test只进行升级测试；--excludedocs不安装软件包中的 文件；--includedocs安装文件；--replacepkgs强制重新安装已经安装的软件包；--replacefiles替换属于其他软件包 的文件；--force忽略软件包及文件的冲突；--percent以百分比的形式输出安装的进度；--noscripts不运行预安装和后安装脚 本；--prefix&nbsp; NEWPATH将软件包安装到由NEWPATH指定的路径下；--ignorearch不校验软件包的结构；--ignoreos不检查软件包运行的操作 系统；--nodeps不检查依赖性关系；--ftpproxy HOST用HOST作为FTP代理；--ftpport&nbsp; HOST指定FTP的埠号为HOST。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v显示附加信息；-vv显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文件为FILELIST ；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>4．查询</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -q(or--query) options</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>pkg1...pkgN：查询已安装的软件包。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>-p&nbsp; PACKAGE_FILE查询软件包的文件；-f FILE查询FILE属于哪个软件包；-a查询所有安装的软件包；--whatproVides&nbsp; CAPABILITY查询提供了CAPABILITY功能的软件包；-g group查询属于group组的软件包；--whatrequires&nbsp; CAPABILITY查询所有需要CAPABILITY功能的软件包。</p>\r\n\r\n<p>选项：</p>\r\n\r\n<p>-i显示软件包的概要信息；-l显示软 件包中的文件列表；-c显示配置文件列表；-d显示文件列表；-s显示软件包中文档列表并显示每个文件的状态&nbsp; -；-scripts显示安装、卸载、校验脚本；--queryformat(or--qf)以用户指定的方式显示查询信息；--dump显示每个文件的 所有已校验信息；--proVides显示软件包提供的功能；--requires(or-R)显示软件包所需的功能。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v 显示附加信息；-vv显示调试信息；--root&nbsp; DIRECTORY让RPM将DIRECTORY指定的路径作为根目录，这样预安装程序和后安装程序都会安装到这个目录下；-rcfile&nbsp; FILELIST设置rpmrc文件为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>5．校验已安装的软件包</p>\r\n\r\n<p>命令格式：</p>\r\n\r\n<p>rpm -V(or--verify,or-y) options</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>pkg1...pkgN将要校验的软件包名</p>\r\n\r\n<p>软件包选项：</p>\r\n\r\n<p>-p PACKAGE_FILE校验PACKAGE_FILE所属的软件包；-a校验所有的软件包；-g group校验所有属于组group的软件包。</p>\r\n\r\n<p>详细选项：</p>\r\n\r\n<p>--noscripts不运行校验脚本；--nodeps不校验依赖性；--nofiles不校验文档属性。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v 显示附加信息；-vv显示调试信息；--root&nbsp; PATH让RPM将PATH指定的路径做为根目录，这样预安装程序和后安装程序都会安装到这个目录下；--rcfile&nbsp; FILELIST设置rpmrc文件为FILELIST；--dbpath DIRECTORY设置RPM资料库所在的路径为DIRECTORY。</p>\r\n\r\n<p>6．校验软件包中的文件</p>\r\n\r\n<p>语法：</p>\r\n\r\n<p>rpm -K(or--checksig) options file1.rpm...fileN.rpm</p>\r\n\r\n<p>参数：</p>\r\n\r\n<p>file1.rpm...fileN.rpm软件包的文件名；Checksig--详细选项；--nopgp不校验PGP签名。</p>\r\n\r\n<p>通用选项：</p>\r\n\r\n<p>-v显示附加信息；-vv显示调试信息；--rcfile FILELIST设置rpmrc文件为FILELIST。</p>\r\n\r\n<p>7．其他RPM选项</p>\r\n\r\n<p>--rebuilddb重建RPM资料库；--initdb创建一个新的RPM资料库；--quiet尽可能地减少输出；--help显示帮助文件；--version显示RPM的当前版本。</p>\r\n\r\n<p>如 果你不喜欢在字符接口下安装或卸载这些软件包，完全可以安装基于X-Window的图形接口软件包管理程序，如glint,&nbsp; xrpm这样的图形接口。或使用KDE的KPackage（单击【开始】&rarr;【运行命令】，在其中输入KPackage即可启动KPackage）等，这样 对软件包的安装、升级、卸载、验证和查询就可以通过单击鼠标来轻松完成，如图所示。</p>\r\n\r\n<p>需要注意的是，每个RPM软件包格式的软件并不一定是独立的，各个RPM软件包之间有一定的依赖关系，删除某个RPM软件包可能导致别的软件不能使用。因此在升级和删除时应该注意。</p>\r\n',0,1437296210,0,0),(33,27,'Zend Framework下载地址','<p>Zend Framework 是用于 PHP 开发 Web 应用程序和 Web Service 程序的高品质开源框架。利用 PHP 自身特性，Zend Framework 有很高的易用性和强大的功能。它提供了先进、健壮和安全的开发网站的解决方案。</p>\r\n\r\n<p>Zend Framework 1.9.6 下载地址:</p>\r\n\r\n<p>Zend Framework 1.9.6 Full (全功能版本):<br />\r\nZIP格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6.zip<br />\r\ntar.gz格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6.tar.gz</p>\r\n\r\n<p>Zend Framework 1.9.6 Minimal(迷你版):</p>\r\n\r\n<p>ZIP格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6-minimal.zip</p>\r\n\r\n<p>tar.gz格式下载：http://framework.zend.com/releases/ZendFramework-1.9.6/ZendFramework-1.9.6-minimal.tar.gz</p>\r\n',0,1437296339,0,0),(34,25,'MySQL主主复制配置','<p>首先要在两天主机上配置好MySQL，步骤与上文主从复制的一样，因此这里不再给出。这里使用的MySQL是编译安装的mysql-5.5.20版本的MySQL。</p>\r\n\r\n<p>MySQL主主服务器架构与主从服务器架构不同：主主架构的两台服务器，即为主服务器又为另一台服务器的从服务器。任何一台服务器的数据库发生变化，都会同步到另外一台服务器上，即两台服务器互为主从。</p>\r\n\r\n<p>配置需要服务器两台，并且都要配置好MySQL：</p>\r\n\r\n<p>server1_mysql:172.16.29.3<br />\r\nserver2_mysql:172.16.29.4</p>\r\n\r\n<p>1、在两台服务器上各自建立一个具有复制权限的用户：</p>\r\n\r\n<p>server1：</p>\r\n\r\n<p>mysql&gt; grant replication client, replication slave on *.* to server1@&#39;172.16.%.%&#39; identified by &#39;redhat&#39;;</p>\r\n\r\n<p>mysql&gt; flush privileges;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 重新载入授权表，使创建的用户生效</p>\r\n\r\n<p>mysql&gt; show grants for server1@&#39;172.16.%.%&#39;;</p>\r\n\r\n<p>server2：</p>\r\n\r\n<p>mysql&gt; grant replication client, replication slave on *.* to server2@&#39;172.16.%.%&#39; identified by &#39;redhat&#39;;</p>\r\n\r\n<p>mysql&gt; flush privileges;&nbsp; &nbsp;</p>\r\n\r\n<p>mysql&gt; show grants for server2@&#39;172.16.%.%&#39;;</p>\r\n\r\n<p>2、修改MySQL的配置文件：</p>\r\n\r\n<p># vim /etc/my.cnf</p>\r\n\r\n<p>server1:</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>server-id = 10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>log-bin = mysql-bin</p>\r\n\r\n<p>relay-log = relay-bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 开启中继日志功能</p>\r\n\r\n<p>relay-log-index = relay-bin.index</p>\r\n\r\n<p>auto-increment-increment = 2 每次增长2</p>\r\n\r\n<p>auto-increment-offset = 1&nbsp;&nbsp;&nbsp; 设置自动增长的字段的偏移量，即初始值为2</p>\r\n\r\n<p>innodb_file_per_table = 1</p>\r\n\r\n<p>server2:</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>server-id = 20</p>\r\n\r\n<p>log-bin = mysql-bin&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>relay-log = relay-bin&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 开启中继日志功能</p>\r\n\r\n<p>relay-log-index = relay-bin.index</p>\r\n\r\n<p>auto-increment-increment = 2 每次增长2</p>\r\n\r\n<p>auto-increment-offset = 2&nbsp;&nbsp;&nbsp; 设子自动增长的字段的偏移量，即初始值为2</p>\r\n\r\n<p>innodb_file_per_table = 1</p>\r\n\r\n<p>注：二都只有server-id不同和 auto-increment- offset不同<br />\r\nauto-increment-increment的值应设为整个结构中服务器的总数，本案例用到两台服务器，所以值设为2。</p>\r\n\r\n<p>在这里我们还可以做数据库过滤，用法有：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; replicate_do_db = 数据库名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 复制某个数据库&nbsp; &nbsp;<br />\r\n&nbsp;&nbsp;&nbsp; replicate_ignore_db = 数据库名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 忽略某个数据库<br />\r\n&nbsp;&nbsp;&nbsp; replicate_do_table = 数据库名.表名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 复制某个数据库的某表<br />\r\n&nbsp;&nbsp;&nbsp; replicate_ignore_table = 数据库名.表名&nbsp; 忽略某个数据库的某表</p>\r\n\r\n<p>不仅如此，我们还可以使用基于通配符的方式过滤：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; replicate_wild_do_table = 数据库名.表名&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 复制某个数据库中的某表（只不过这里可以使用通配符）<br />\r\n&nbsp;&nbsp;&nbsp; replicate_wild_ignore_table =&nbsp; 数据库名.表名</p>\r\n\r\n<p>比如：在从服务器上只复制nsm一个数据库，就可以写入：</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>replicate_do_db=nsm</p>\r\n\r\n<p>若想复制多个数据库，只需后面多跟几个语句即可：</p>\r\n\r\n<p>replicate_do_db=数据库名</p>\r\n\r\n<p>注：若做数据库过滤，尽量不要在主服务器上做过滤，否则，不仅会浪费额外的网络带宽，还会造成二进制日志文件的丢失</p>\r\n\r\n<p>重启两台MySQL服务器：</p>\r\n\r\n<p># service mysqld restart</p>\r\n\r\n<p>3、如果此时两台服务器均为新建立，且无其它写入操作，各服务器只需记录当前自己二进制日志文件及事件位置，以之作为另外的服务器复制起始位置即可</p>\r\n\r\n<p>server1：</p>\r\n\r\n<p>mysql&gt; show master status\\G</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>File: mysql-bin.000004</p>\r\n\r\n<p>Position: 107</p>\r\n\r\n<p>Binlog_Do_DB: &nbsp;</p>\r\n\r\n<p>Binlog_Ignore_DB: &nbsp;</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>server2：</p>\r\n\r\n<p>mysql&gt; show master status\\G</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>File: mysql-bin.000003</p>\r\n\r\n<p>Position: 107</p>\r\n\r\n<p>Binlog_Do_DB: &nbsp;</p>\r\n\r\n<p>Binlog_Ignore_DB: &nbsp;</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>4、接下来需要为服务器各自指定另一台服务器作为自己的主服务器，实现主主复制功能：</p>\r\n\r\n<p>server1：</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MATER_HOST=&#39;172.16.29.4&#39;, &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_USER=&#39;server2&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; master_password=&#39;redhat&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_FILE=&#39;mysql-bin.000003&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_POS=107;</p>\r\n\r\n<p>而后，开启从服务器：</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p>查看从服务器状态，下面两项开启即可：</p>\r\n\r\n<p>mysql&gt; show slave status\\G&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_IO_Running: Yes</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_SQL_Running: Yes</p>\r\n\r\n<p>server2：</p>\r\n\r\n<p>mysql&gt; CHANGE MASTER TO &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_HOST=&#39;172.16.29.3&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_USER=&#39;server1&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; master_password=&#39;redhat&#39;;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_FILE=&#39;mysql-bin.000004&#39;,</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; MASTER_LOG_POS=107;</p>\r\n\r\n<p>开启从服务器：</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p>查看从服务器状态，下面两项开启即可：</p>\r\n\r\n<p>mysql&gt; show slave status\\G&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_IO_Running: Yes</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Slave_SQL_Running: Yes</p>\r\n',0,1437298302,0,0),(35,25,'MySQL主从复制配置','<p>Mysql的主从复制至少是需要两个Mysql的服务，当然Mysql的服务是可以分布在不同的服务器上，也可以在一台服务器上启动多个服务。</p>\r\n\r\n<p>(1)首先确保主从服务器上的Mysql版本相同</p>\r\n\r\n<p>(2)在主服务器上,设置一个从数据库的账户,使用REPLICATION SLAVE赋予权限,如:</p>\r\n\r\n<p>mysql&gt; GRANT REPLICATION SLAVE ON *.* TO &#39;slave001&#39;@&#39;192.168.0.99&#39; IDENTIFIED BY &#39;123456&#39;;</p>\r\n\r\n<p>Query OK, 0 rows affected (0.13 sec)</p>\r\n\r\n<p>(3)修改主数据库的配置文件my.cnf,开启BINLOG，并设置server-id的值，修改之后必须重启Mysql服务</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>log-bin = /home/mysql/log/mysql-bin.log</p>\r\n\r\n<p>server-id=1</p>\r\n\r\n<p>(4)之后可以得到主服务器当前二进制日志名和偏移量，这个操作的目的是为了在从数据库启动后，从这个点开始进行数据的恢复</p>\r\n\r\n<p>mysql&gt; show master status\\G;</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>File: mysql-bin.000003</p>\r\n\r\n<p>Position: 243</p>\r\n\r\n<p>Binlog_Do_DB:</p>\r\n\r\n<p>Binlog_Ignore_DB:</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>(5)好了，现在可以停止主数据的的更新操作，并生成主数据库的备份，我们可以通过mysqldump到处数据到从数据库，当然了，你也可以直接用cp命令将数据文件复制到从数据库去</p>\r\n\r\n<p>注意在导出数据之前先对主数据库进行READ LOCK，以保证数据的一致性</p>\r\n\r\n<p>mysql&gt; flush tables with read lock;</p>\r\n\r\n<p>Query OK, 0 rows affected (0.19 sec)</p>\r\n\r\n<p>之后是mysqldump</p>\r\n\r\n<p>mysqldump -h127.0.0.1 -p3306 -uroot -p test &gt; /home/chenyz/test.sql</p>\r\n\r\n<p>最好在主数据库备份完毕，恢复写操作</p>\r\n\r\n<p>mysql&gt; unlock tables;</p>\r\n\r\n<p>Query OK, 0 rows affected (0.28 sec)</p>\r\n\r\n<p>(6)将刚才主数据备份的test.sql复制到从数据库，进行导入</p>\r\n\r\n<p>(7)接着修改从数据库的my.cnf,增加server-id参数,指定复制使用的用户,主数据库服务器的ip,端口以及开始执行复制日志的文件和位置</p>\r\n\r\n<p>[mysqld]</p>\r\n\r\n<p>server-id=2</p>\r\n\r\n<p>log_bin = /var/log/mysql/mysql-bin.log</p>\r\n\r\n<p>master-host =192.168.1.100</p>\r\n\r\n<p>master-user=test</p>\r\n\r\n<p>master-pass=123456</p>\r\n\r\n<p>master-port =3306</p>\r\n\r\n<p>master-connect-retry=60</p>\r\n\r\n<p>replicate-do-db =test</p>\r\n\r\n<p>(8)在从服务器上,启动slave进程</p>\r\n\r\n<p>mysql&gt; start slave;</p>\r\n\r\n<p>(9)在从服务器进行show salve status验证</p>\r\n\r\n<p>mysql&gt; SHOW SLAVE STATUS\\G</p>\r\n\r\n<p>*************************** 1. row ***************************</p>\r\n\r\n<p>Slave_IO_State: Waiting for master to send event</p>\r\n\r\n<p>Master_Host: localhost</p>\r\n\r\n<p>Master_User: root</p>\r\n\r\n<p>Master_Port: 3306</p>\r\n\r\n<p>Connect_Retry: 3</p>\r\n\r\n<p>Master_Log_File: mysql-bin.003</p>\r\n\r\n<p>Read_Master_Log_Pos: 79</p>\r\n\r\n<p>Relay_Log_File: gbichot-relay-bin.003</p>\r\n\r\n<p>Relay_Log_Pos: 548</p>\r\n\r\n<p>Relay_Master_Log_File: mysql-bin .003</p>\r\n\r\n<p>Slave_IO_Running: Yes</p>\r\n\r\n<p>Slave_SQL_Running: Yes</p>\r\n\r\n<p>(10)好了,现在可以在我们的主服务器做一些更新的操作,然后在从服务器查看是否已经更新</p>\r\n',0,1437298403,0,0),(36,10,'php查看内存使用','<p>下面是PHP memory_get_usage()使用示例：<br />\r\necho memory_get_usage(), &#39;&lt;br /&gt;&#39;; // 313864 &nbsp;<br />\r\n$tmp = str_repeat(&#39;http://blog.huachen.me/&#39;, 4000); &nbsp;<br />\r\necho memory_get_usage(), &#39;&lt;br /&gt;&#39;; // 406048 &nbsp;<br />\r\nunset($tmp); &nbsp;<br />\r\necho memory_get_usage(); // 313952</p>\r\n\r\n<p>上面的程序后面的注释代表了它们的输出（单位为 byte(s)），也就是当时 PHP 脚本使用的内存（不含 memory_get_usage() 函数本身占用的内存）</p>\r\n\r\n<p>由上面的例子可以看出，要想减少内存的占用，可以使用 PHP unset() 函数把不再需要使用的变量删除。类似的还有：PHP mysql_free_result() 函数，可以清空不再需要的查询数据库得到的结果集，这样也能得到更多可用内存。</p>\r\n\r\n<p>PHP memory_get_usage()还可以有个参数，$real_usage，其值为布尔值。默认为 FALSE，表示得到的内存使用量不包括该函数（PHP 内存管理器）占用的内存；当设置为 TRUE 时，得到的内存为不包括该函数（PHP 内存管理器）占用的内存。</p>\r\n\r\n<p>所以在实际编程中，可以用PHP memory_get_usage()比较各个方法占用内存的高低，来选择使用哪种占用内存小的方法。</p>\r\n\r\n<p>常用的检测：<br />\r\n用microtime函数就可以分析程序执行时间<br />\r\nmemory_get_usage可以分析内存占用空间<br />\r\nSQL的效率可以使用打开慢查询查看日志分析<br />\r\nSQL 找到有瓶颈的使用EXPLAIN 来分析</p>\r\n',0,1437298516,0,0),(37,28,'win7系统中word2007每次打开都出现正在配置的对话框','<p>win7系统中word2007每次打开都出现正在配置的对话框</p>\r\n\r\n<p>解决方法：</p>\r\n\r\n<p>1. 通过重装Office以后解决此问题（太笨）</p>\r\n\r\n<p>2. 注册<br />\r\n如若是Office 2003的对应问题，在运行对话框中输入：<br />\r\nreg add HKCU\\Software\\Microsoft\\Office\\11.0\\Word\\Options /v NoReReg /t REG_DWORD /d 1<br />\r\n回车即可。</p>\r\n\r\n<p>若是Office 2007的对应问题，在运行对话框中输入：<br />\r\nreg add HKCU\\Software\\Microsoft\\Office\\12.0\\Word\\Options /v NoReReg /t REG_DWORD /d 1</p>\r\n\r\n<p>若是Office 2007的对应问题，在运行对话框中输入：<br />\r\nreg add HKCU\\Software\\Microsoft\\Office\\14.0\\Word\\Options /v NoReReg /t REG_DWORD /d 1<br />\r\n回车即可。</p>\r\n\r\n<p>3. 改文件，也最简单<br />\r\n打开&ldquo;我的电脑C：\\Program Files\\Common Files\\Microsoft Shared\\OFFICE12\\Office Setup Controller&mdash;&mdash;找到一个&ldquo;SETUP.EXE&rdquo;的文件，对此文件重命名。</p>\r\n',0,1437298775,0,0),(38,1,'JS-只能输入中文和英文','<p>JS-只能输入中文和英文<br />\r\n在js中用正则表达式对象(RegExp)判断</p>\r\n\r\n<p>中文 ^[\\u0391-\\uFFE5]+$&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 英文 ^[A-Za-z]+$&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 中文和英文/^[\\u0391-\\uFFE5A-Za-z]+$/</p>\r\n\r\n<p>js正则表达式限制文本框只能输入数字,小数点,英文字母,汉字等各类代码</p>\r\n\r\n<p>1.文本框只能输入数字代码(小数点也不能输入)<br />\r\n&lt;input onkeyup=&quot;this.value=this.value.replace(/\\D/g,&#39;&#39;)&quot; onafterpaste=&quot;this.value=this.value.replace(/\\D/g,&#39;&#39;)&quot;&gt;</p>\r\n\r\n<p>2.只能输入数字,能输小数点.<br />\r\n&lt;input onkeyup=&quot;if(isNaN(value))execCommand(&#39;undo&#39;)&quot; onafterpaste=&quot;if(isNaN(value))execCommand(&#39;undo&#39;)&quot;&gt;<br />\r\n&lt;input name=txt1 onchange=&quot;if(/\\D/.test(this.value)){alert(&#39;只能输入数字&#39;);this.value=&#39;&#39;;}&quot;&gt;</p>\r\n\r\n<p>3.数字和小数点方法二<br />\r\n&lt;input type=text tvalue=&quot;&quot; ovalue=&quot;&quot; onkeypress=&quot;if(!this.value.match(/^[\\+\\-]?\\d*?\\.?\\d*?$/))this.value=this.t_value;else this.tvalue=this.value;if(this.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?)?$/))this.ovalue=this.value&quot; onkeyup=&quot;if(!this.value.match(/^[\\+\\-]?\\d*?\\.?\\d*?$/))this.value=this.t_value;else this.tvalue=this.value;if(this.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?)?$/))this.ovalue=this.value&quot; onblur=&quot;if(!this.value.match(/^(?:[\\+\\-]?\\d+(?:\\.\\d+)?|\\.\\d*?)?$/))this.value=this.o_value;else{if(this.value.match(/^\\.\\d+$/))this.value=0+this.value;if(this.value.match(/^\\.$/))this.value=0;this.ovalue=this.value}&quot;&gt;</p>\r\n\r\n<p>4.只能输入字母和汉字<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[\\d]/g,&#39;&#39;) &quot;onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[\\d]/g,&#39;&#39;))&quot; maxlength=10 name=&quot;Numbers&quot;&gt;</p>\r\n\r\n<p>5.只能输入英文字母和数字,不能输入中文<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[^\\w\\.\\/]/ig,&#39;&#39;)&quot;&gt;</p>\r\n\r\n<p>6.只能输入数字和英文&lt;font color=&quot;Red&quot;&gt;chun&lt;/font&gt;<br />\r\n&lt;input onKeyUp=&quot;value=value.replace(/[^\\d|chun]/g,&#39;&#39;)&quot;&gt;</p>\r\n\r\n<p>7.小数点后只能有最多两位(数字,中文都可输入),不能输入字母和运算符号:<br />\r\n&lt;input onKeyPress=&quot;if((event.keyCode&lt;48 || event.keyCode&gt;57) &amp;&amp; event.keyCode!=46 || /\\.\\d\\d$/.test(value))event.returnValue=false&quot;&gt;</p>\r\n\r\n<p>8.小数点后只能有最多两位(数字,字母,中文都可输入),可以输入运算符号:<br />\r\n&lt;input onkeyup=&quot;this.value=this.value.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/,&#39;$1$2.$3&#39;)&quot;&gt;</p>\r\n\r\n<p>&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>\r\n\r\n<p>只能输入汉字：<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[^\\u4E00-\\u9FA5]/g,&#39;&#39;)&quot; onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\u4E00-\\u9FA5]/g,&#39;&#39;))&quot;&gt;</p>\r\n\r\n<p>只能输入数字：<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[^\\d]/g,&#39;&#39;) &quot;onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\d]/g,&#39;&#39;))&quot;&gt;</p>\r\n\r\n<p><br />\r\n只能输入英文和数字：<br />\r\n&lt;input onkeyup=&quot;value=value.replace(/[\\W]/g,&#39;&#39;) &quot;onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\d]/g,&#39;&#39;))&quot;&gt;</p>\r\n\r\n<p>控制输入框只能输入文字或数字，也可以不允许输入特殊字符<br />\r\n这里不允许输入如下字符: (像 !@#$%^&amp;* 等)&lt;br&gt;<br />\r\n&lt;textarea rows=2 cols=20 name=comments onKeypress=&quot;if ((event.keyCode &gt; 32 &amp;&amp; event.keyCode &lt; 48) || (event.keyCode &gt; 57 &amp;&amp; event.keyCode &lt; 65) || (event.keyCode &gt; 90 &amp;&amp; event.keyCode &lt; 97)) event.returnValue = false;&quot;&gt;</p>\r\n\r\n<p>只禁止空格输入<br />\r\nonkeyup=&quot;value=value.replace(/\\s/g,&#39;&#39;)&quot;</p>\r\n\r\n<p>只能输入中文和英文：<br />\r\nonkeyup=&quot;value=value.replace(/[^\\a-zA-Z\\u4E00-\\u9FA5]/g,&#39;&#39;)&quot; onbeforepaste=&quot;clipboardData.setData(&#39;text&#39;,clipboardData.getData(&#39;text&#39;).replace(/[^\\a-zA-Z\\u4E00-\\u9FA5]/g,&#39;&#39;))&quot;</p>\r\n',0,1437298946,0,0),(39,15,'Linux apache编译安装','<p>1.下载httpd-2.2.15.tar.gz</p>\r\n\r\n<p>wget&nbsp; http://mirror.bjtu.edu.cn/apache/httpd/httpd-2.2.17.tar.gz</p>\r\n\r\n<p>[root@test-AS4 ~]# mkdir -P /usr/local/src/apache/&nbsp;&nbsp;&nbsp; #创建源包存放的目录</p>\r\n\r\n<p>[root@test-AS4 ~]# cd /usr/local/src/apache/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #把httpd-2.2.15.tar.gz放入此目录下</p>\r\n\r\n<p>[root@test-AS4 apache]# tar zxvf httpd-2.2.15.tar.gz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #解压文件会生成httpd-2.2.15目录</p>\r\n\r\n<p>[root@test-AS4 apache]# ll<br />\r\ntotal 6464<br />\r\ndrwxr-xr-x&nbsp; 11 angel angel&nbsp;&nbsp;&nbsp; 4096 Mar 10 07:42 httpd-2.2.15<br />\r\n-rw-r--r--&nbsp;&nbsp; 1 root&nbsp; root&nbsp; 6593633 Mar 10&nbsp; 2010 httpd-2.2.15.tar.gz</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# cd httpd-2.2.15<br />\r\n&nbsp;</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# ./configure --prefix=/usr/local/apache-2.2.15&nbsp; --enable-so --enable-mods-shared=most --with-mpm=worker</p>\r\n\r\n<p>如果发现gcc没有装，请先安装GCC&nbsp; yum -y install gcc</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# make&nbsp;&nbsp; #执行make前执行&nbsp;&nbsp; apt-get build-dep fcitx</p>\r\n\r\n<p>[root@test-AS4 httpd-2.2.15]# make install</p>\r\n\r\n<p>#&nbsp; --prefix=&lt;Install_Path&gt; 指明编译后的二进制文件安装到&lt;Install_Path&gt;目录，用实际安装路径替换&lt;Install_Path&gt;，如 --prefix=/usr/local/apache-2.2.15 ，如果省略此配置参数，默认安装到/usr/local/apache2目录。</p>\r\n\r\n<p>#&nbsp; --enable-so 指明编译动态加载模块(DSO)支持到httpd二进制文件，此模块使得Apache的各功能模块可以与核心分开编译、运行时动态加载。有了DSO支持， 升级和增加模块时只需编译相关的模块即可，不必重新编译整个系统。最新版本的Apache缺省编译此模块到httpd二进制文件，如果你在使用早期版本的 apache并且需要DSO支持，可能要明确指出此选项。</p>\r\n\r\n<p>#&nbsp; --enable-mods-shared=&lt;MODULE-LIST&gt; 明确指明要以DSO方式编译的模块，&lt;MODULE-LIST&gt;为空格分隔的模块名列表、all或者most，all表示包含所有模 块，most表示包含大部分模块，如--enable-mods-share=&quot;rewrite deflate&quot;，--enable-mods-share=most，效果等同于多个--enable-&lt;FEATURE&gt;=share<br />\r\n# --with-mpm=&lt;MPM&gt; 先择Apache多路处理模块，&lt;MPM&gt;={beos|event|worker|prefork|mpmt_os2}，prefork为 Unix系统下默认处理模块，它将运行一个非线程型的、预派生的Web服务器，适合于没有线程安全库，需要避免线程兼容性问题的系统，它是要求将每个请求 相互独立的情况下最好的MPM，这样若一个请求出现问题就不会影响到其他请求。worker为支持混合的多线程多进程的多路处理模块，由于使用线程来处理 请求，所以可以处理海量请求，而系统资源的开销小于基于进程的MPM，同时，它也使用了多进程，每个进程又有多个线程，以获得基于进程的MPM的稳定性。 如果你的系统是基于线程安全的，那么笔者建议使用worker替代prefork，它将使得你的系统得到实际的性能改善。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2. 设置开机自启动服务控制脚本<br />\r\nApache安装后可通过其安装路径的bin目录下的apachectl脚本控制服务的启动和停止。本例中apache安装在/usr/local/apache-2.2.15，服务控制脚本为：<br />\r\n/usr/local/apache-2.2.15/bin/apachectl<br />\r\n&nbsp;&nbsp; 执行下面的命令启动Apache服务：<br />\r\n/usr/local/apache-2.2.15/bin/apachectl start<br />\r\n&nbsp;&nbsp; 执行下面的命令停止Apache服务：<br />\r\n/usr/local/apache-2.2.15/bin/apachectl stop<br />\r\n可以简单地把Apache启动命令加到/etc/rc.local文件，让Apache随系统启动而自动启动：<br />\r\necho &quot;/usr/local/apache-2.2.15/bin/apachectl start&quot;&nbsp; &gt;&gt; /etc/rc.local</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>下面介绍如何把Apache加入到系统服务，用service命令来控制Apache的启动和停止。</p>\r\n\r\n<p>## 这里请注意一下！如果Linux服务器上默认安装了httpd的话(用rpm -qa|grep httpd查看)，</p>\r\n\r\n<p>## 会有 /etc/init.d/httpd 这个脚本文件的，所以你也可以用以下方法直接生成这个文件来覆盖它</p>\r\n\r\n<p>## 那么下次就可以用 service httpd start 来启动了</p>\r\n\r\n<p>## 如果需要区分开来的话就使用下面的方式<br />\r\n首先以apachectl脚本为模板生成Apache服务控制脚本：<br />\r\ngrep -v &quot;#&quot; /usr/local/apache-2.2.15/bin/apachectl&nbsp; &gt; /etc/init.d/apache<br />\r\n&nbsp;&nbsp; 用vi编辑Apache服务控制脚本/etc/init.d/apache：<br />\r\nvi /etc/init.d/apache<br />\r\n&nbsp;&nbsp; 在文件最前面插入下面的行，使其支持chkconfig命令：<br />\r\n#!/bin/sh<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # chkconfig: 2345 85 15<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # description: Apache is a World Wide Web server.<br />\r\n&nbsp;&nbsp; 保存后退出vi编辑器，执行下面的命令增加Apache服务控制脚本执行权限：<br />\r\nchmod&nbsp; +x&nbsp; /etc/init.d/apache<br />\r\n&nbsp;&nbsp; 执行下面的命令将Apache服务加入到系统服务：<br />\r\nchkconfig --add apache<br />\r\n&nbsp;&nbsp; 执行下面的命令检查Apache服务是否已经生效：<br />\r\nchkconfig --list apache<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 命令输出类似下面的结果：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; apache&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0:off 1:off 2:on 3:on 4:on 5:on 6:off<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 表明apache服务已经生效，在2、3、4、5运行级别随系统启动而自动启动，以后可以使用service命令控制Apache的启动和停止。<br />\r\n启动Apache服务：<br />\r\nservice apache start<br />\r\n&nbsp;&nbsp; 停止Apache服务：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; service apache stop<br />\r\n&nbsp;&nbsp; 执行下面的命令关闭开机自启动：<br />\r\nchkconfig apache off<br />\r\n&nbsp;&nbsp; 执行下面的命令改变开机自启动的运行级别为3、5：<br />\r\nchkconfig --level 35 apache on</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>3. Apache的配置</p>\r\n\r\n<p>源码包方式安装目录结构<br />\r\n源码包方式安装时通常是在configure命令的--prefix选项指定的目录中建立如下的目录结构，特殊指定的目录除外：<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./icons&nbsp;&nbsp;&nbsp;&nbsp; #Apache图标文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./modules&nbsp;&nbsp; #动态加载模块目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./lib&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #库文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./logs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #日志文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./build&nbsp;&nbsp;&nbsp;&nbsp; #<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./conf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #主配置文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./conf/extra&nbsp;&nbsp;&nbsp;&nbsp; #扩展及模块配置文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./error&nbsp;&nbsp;&nbsp;&nbsp; #默认错误应答文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./manual&nbsp;&nbsp;&nbsp; #Apache文档目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./include&nbsp;&nbsp; #包含头文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./htdocs&nbsp;&nbsp;&nbsp; #默认WEB文档根目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./cgi-bin&nbsp;&nbsp; #默认cgi文件目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./bin&nbsp;&nbsp;&nbsp;&nbsp; #Apache二进制程序及服务程序目录<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ./man&nbsp;&nbsp;&nbsp;&nbsp; #man帮助文件目录</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4. 配置文件 http.conf</p>\r\n\r\n<p>ServerRoot &quot;/usr/local/apache-2.2.15&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置服务器的基础目录,默认为Apache安装目录<br />\r\nListen 80&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置服务器监听的IP和端口<br />\r\nLoadModule authn_file_module modules/mod_authn_file.so<br />\r\nLoadModule authn_dbm_module modules/mod_authn_dbm.so<br />\r\nLoadModule authn_anon_module modules/mod_authn_anon.so<br />\r\nLoadModule authn_dbd_module modules/mod_authn_dbd.so<br />\r\nLoadModule authn_default_module modules/mod_authn_default.so<br />\r\nLoadModule authz_host_module modules/mod_authz_host.so<br />\r\nLoadModule authz_groupfile_module modules/mod_authz_groupfile.so<br />\r\nLoadModule authz_user_module modules/mod_authz_user.so<br />\r\nLoadModule authz_dbm_module modules/mod_authz_dbm.so<br />\r\nLoadModule authz_owner_module modules/mod_authz_owner.so<br />\r\nLoadModule authz_default_module modules/mod_authz_default.so<br />\r\nLoadModule auth_basic_module modules/mod_auth_basic.so<br />\r\nLoadModule auth_digest_module modules/mod_auth_digest.so<br />\r\nLoadModule dbd_module modules/mod_dbd.so<br />\r\nLoadModule dumpio_module modules/mod_dumpio.so<br />\r\nLoadModule reqtimeout_module modules/mod_reqtimeout.so<br />\r\nLoadModule ext_filter_module modules/mod_ext_filter.so<br />\r\nLoadModule include_module modules/mod_include.so<br />\r\nLoadModule filter_module modules/mod_filter.so<br />\r\nLoadModule substitute_module modules/mod_substitute.so<br />\r\nLoadModule deflate_module modules/mod_deflate.so<br />\r\nLoadModule log_config_module modules/mod_log_config.so<br />\r\nLoadModule logio_module modules/mod_logio.so<br />\r\nLoadModule env_module modules/mod_env.so<br />\r\nLoadModule expires_module modules/mod_expires.so<br />\r\nLoadModule headers_module modules/mod_headers.so<br />\r\nLoadModule ident_module modules/mod_ident.so<br />\r\nLoadModule setenvif_module modules/mod_setenvif.so<br />\r\nLoadModule version_module modules/mod_version.so<br />\r\nLoadModule mime_module modules/mod_mime.so<br />\r\nLoadModule dav_module modules/mod_dav.so<br />\r\nLoadModule status_module modules/mod_status.so<br />\r\nLoadModule autoindex_module modules/mod_autoindex.so<br />\r\nLoadModule asis_module modules/mod_asis.so<br />\r\nLoadModule info_module modules/mod_info.so<br />\r\nLoadModule cgid_module modules/mod_cgid.so<br />\r\nLoadModule dav_fs_module modules/mod_dav_fs.so<br />\r\nLoadModule vhost_alias_module modules/mod_vhost_alias.so<br />\r\nLoadModule negotiation_module modules/mod_negotiation.so<br />\r\nLoadModule dir_module modules/mod_dir.so<br />\r\nLoadModule imagemap_module modules/mod_imagemap.so<br />\r\nLoadModule actions_module modules/mod_actions.so<br />\r\nLoadModule speling_module modules/mod_speling.so<br />\r\nLoadModule userdir_module modules/mod_userdir.so<br />\r\nLoadModule alias_module modules/mod_alias.so<br />\r\nLoadModule rewrite_module modules/mod_rewrite.so<br />\r\n&lt;IfModule !mpm_netware_module&gt;<br />\r\nUser daemon&nbsp;&nbsp;&nbsp;&nbsp; ##设置实际提供服务的子进程的用户。<br />\r\nGroup daemon&nbsp;&nbsp;&nbsp; ##设置提供服务的Apache子进程运行时的用户组。<br />\r\n&lt;/IfModule&gt;<br />\r\nServerAdmin you@example.com&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置在所有返回给客户端的错误信息中包含的管理员邮件地址。<br />\r\nServerName 192.168.221.128&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##设置服务器用于辨识自己的主机名和端口号（用IP代替）。<br />\r\nDocumentRoot &quot;/usr/local/apache-2.2.15/htdocs&quot;&nbsp;&nbsp;&nbsp;&nbsp; ##设置Web文档根目录。<br />\r\n&lt;Directory /&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ###&lt;Directory&gt;和&lt;/Directory&gt;用于封装一组指令，使之仅对某个目录及其子目录生效。<br />\r\n&nbsp;&nbsp;&nbsp; Options FollowSymLinks<br />\r\n&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&nbsp;&nbsp;&nbsp; Order deny,allow<br />\r\n&nbsp;&nbsp;&nbsp; Deny from all<br />\r\n&lt;/Directory&gt;<br />\r\n&lt;Directory &quot;/usr/local/apache-2.2.15/htdocs&quot;&gt;&nbsp;&nbsp; ##设置DocumentRoot指定目录的属性<br />\r\n&nbsp;&nbsp;&nbsp; Options Indexes FollowSymLinks&nbsp;&nbsp;&nbsp; ##建议拿掉Indexes<br />\r\n&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&nbsp;&nbsp;&nbsp; Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n&lt;/Directory&gt;<br />\r\n&lt;IfModule dir_module&gt;&nbsp;&nbsp;&nbsp; ##设置默认目录资源列表文件<br />\r\n&nbsp;&nbsp;&nbsp; DirectoryIndex index_top.html entrance.html index.html index.php index.htm index.asp index.php3<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;FilesMatch &quot;^\\.ht&quot;&gt;&nbsp;&nbsp;&nbsp;&nbsp; ##拒绝对.ht开头文件的访问,以保护.htaccess文件<br />\r\n&nbsp;&nbsp;&nbsp; Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp; Deny from all<br />\r\n&nbsp;&nbsp;&nbsp; Satisfy All<br />\r\n&lt;/FilesMatch&gt;<br />\r\nErrorLog &quot;logs/error_log&quot;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##指定错误日志文件<br />\r\nLogLevel warn&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##指定记录到错误日志的消息级别<br />\r\n&lt;IfModule log_config_module&gt;&nbsp;&nbsp;&nbsp; ##定义访问日志的格式<br />\r\n&nbsp;&nbsp;&nbsp; LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-Agent}i\\&quot;&quot; combined<br />\r\n&nbsp;&nbsp;&nbsp; LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b&quot; common<br />\r\n&nbsp;&nbsp;&nbsp; &lt;IfModule logio_module&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LogFormat &quot;%h %l %u %t \\&quot;%r\\&quot; %&gt;s %b \\&quot;%{Referer}i\\&quot; \\&quot;%{User-Agent}i\\&quot; %I %O&quot; combinedio<br />\r\n&nbsp;&nbsp;&nbsp; &lt;/IfModule&gt;<br />\r\n&nbsp;&nbsp;&nbsp; CustomLog &quot;logs/access_log&quot; common&nbsp;&nbsp;&nbsp; ##指定访问日志及使用的格式<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule alias_module&gt;&nbsp;&nbsp;&nbsp; ##设定默认CGI脚本目录及别名<br />\r\n&nbsp;&nbsp;&nbsp; ScriptAlias /cgi-bin/ &quot;/usr/local/apache-2.2.15/cgi-bin/&quot;<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule cgid_module&gt;<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;Directory &quot;/usr/local/apache-2.2.15/cgi-bin&quot;&gt;&nbsp;&nbsp;&nbsp; ##设定默认CGI脚本目录的属性<br />\r\n&nbsp;&nbsp;&nbsp; AllowOverride None<br />\r\n&nbsp;&nbsp;&nbsp; Options None<br />\r\n&nbsp;&nbsp;&nbsp; Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp; Allow from all<br />\r\n&lt;/Directory&gt;<br />\r\nDefaultType text/plain&nbsp;&nbsp;&nbsp; ##设定默认MIME内容类型<br />\r\n&lt;IfModule mime_module&gt;<br />\r\n&nbsp;&nbsp;&nbsp; TypesConfig conf/mime.types<br />\r\n&nbsp;&nbsp;&nbsp; AddType application/x-compress .Z<br />\r\n&nbsp;&nbsp;&nbsp; AddType application/x-gzip .gz .tgz<br />\r\n&lt;/IfModule&gt;<br />\r\n&lt;IfModule ssl_module&gt;<br />\r\nSSLRandomSeed startup builtin<br />\r\nSSLRandomSeed connect builtin<br />\r\n&lt;/IfModule&gt;</p>\r\n\r\n<p>&lt;IfModule mpm_worker_module&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ##编译参数 --with-mpm=worker时，使用worker.c模块<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ServerLimit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 25&nbsp;&nbsp;&nbsp; ##/usr/local/apache-2.2.15/bin/apachectl -l查看使用模块<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThreadLimit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 200<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StartServers&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxClients&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2000<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MinSpareThreads&nbsp;&nbsp;&nbsp;&nbsp; 50<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxSpareThreads&nbsp;&nbsp;&nbsp; 200<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ThreadsPerChild&nbsp;&nbsp;&nbsp; 100<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MaxRequestsPerChild&nbsp; 1000<br />\r\n&lt;/IfModule&gt;</p>\r\n\r\n<p>Timeout 15<br />\r\nKeepAlive On<br />\r\nMaxKeepAliveRequests 100<br />\r\nKeepAliveTimeout 3<br />\r\nUseCanonicalName Off<br />\r\nAccessFileName .htaccess<br />\r\nServerTokens Prod<br />\r\nServerSignature Off<br />\r\nHostnameLookups Off</p>\r\n\r\n<p>NameVirtualHost *:80<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\n&nbsp;&nbsp;&nbsp; DocumentRoot /usr/local/apache-2.2.15/htdocs/irene<br />\r\n&nbsp;&nbsp;&nbsp; ServerName www.irene.com<br />\r\n&lt;/VirtualHost&gt;<br />\r\n&lt;VirtualHost *:80&gt;<br />\r\n&nbsp;&nbsp;&nbsp; DocumentRoot /usr/local/apache-2.2.15/htdocs/angel<br />\r\n&nbsp;&nbsp;&nbsp; ServerName www.angel.com<br />\r\n&lt;/VirtualHost&gt;</p>\r\n\r\n<p>-----------------------------------------------------------------------------------------</p>\r\n\r\n<p>4. 认证和授权配置</p>\r\n\r\n<p>## 在httpd.conf配置文件中添加如下代码</p>\r\n\r\n<p>&lt;Directory &quot;/usr/local/apache-2.2.15/htdocs/protect&quot;&gt;<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AllowOverride None&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ## 不使用.htaccess文件<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthType Basic&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ## 指定使用基本认证方式<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthName &quot;apache.passwd&quot;&nbsp;&nbsp;&nbsp; ## 指定认证领域名称<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AuthUserFile /usr/local/apache-2.2.15/htdocs/protect/apache.passwd&nbsp; ## 认证口令存放位置<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; require valid-user&nbsp;&nbsp;&nbsp;&nbsp; ## 授权给认证口令文件中的所有用户<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #Order allow,deny<br />\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #Allow from all<br />\r\n&lt;/Directory&gt;</p>\r\n\r\n<p>** 由于文本中 DocumentRoot &quot;/usr/local/apache-2.2.15/htdocs&quot; 已经指定了你的文档根目录</p>\r\n\r\n<p>** 所以在这个目录下建立相关目录作为指定的保护文档位置</p>\r\n\r\n<p>** 也可以使用Alias别名 指定一个其他目录</p>\r\n\r\n<p>[root@test-AS4 ~]# cd /usr/local/apache-2.2.15/htdocs</p>\r\n\r\n<p>[root@test-AS4 htdocs]# mkdir protect</p>\r\n\r\n<p>[root@test-AS4 protect]# htpasswd -c apache.passwd angel</p>\r\n\r\n<p>[root@test-AS4 protect]# ll<br />\r\ntotal 8<br />\r\n-rw-r--r--&nbsp; 1 root root 20 Mar 14 21:14 apache.passwd<br />\r\n[root@test-AS4 protect]# cat apache.passwd<br />\r\nangel:Grka1xfi6y5RM<br />\r\n[root@test-AS4 protect]#</p>\r\n\r\n<p>## 打开浏览器URL: http://192.168.221.128/protect/</p>\r\n',0,1437660488,0,0),(40,29,'我熟知的三种三栏网页宽度自适应布局方法','<p>一、前言<br />\r\n在如今各个分辨率显示器N足鼎立的时期，页面采用流动性布局（亦可称自适应布局）不失为一个好选择。当然，具体实现不是那么容易，需要一定的css功力和 实践经验。本文不讲细节，只讲外部的自适应架构，这也是实现整个页面自适应的前提。目前为止，我所熟知的左中右三栏宽度自适应于浏览器的方法有三个：绝对定位法，margin负值法以及自身浮动法。这些方法简洁实用，且无兼容性问题。如果您想在您的页面上使用流动性布局，相信本文给您一些启示的。</p>\r\n\r\n<p>二、三种方法<br />\r\n为了演示的需要，首先限定下示例的布局结构：左中右三栏布局，左右两栏宽度固定（要想不固定将宽度值改为百分值即可），中间栏宽度自适应。左右两栏的宽度为200像素。</p>\r\n\r\n<p>1、绝对定位法<br />\r\n这或许是三种方法里最直观，最容易理解的：左右两栏采用绝对定位，分别固定于页面的左右两侧，中间的主体栏用左右margin值撑开距离。于是实现了三栏自适应布局。</p>\r\n\r\n<p>您可以狠狠地点击这里：绝对定位法演示demo</p>\r\n\r\n<p>css代码如下（为截图）：</p>\r\n\r\n<p>HTML代码为（图片）：</p>\r\n\r\n<p>这里的左中右三个div的顺序是可以任意调整的，这与剩下的两中方法就不一样了，需要注意一下。</p>\r\n\r\n<p>此方法的优点是，理解容易，上手简单，受内部元素影响而破坏布局的概率低，就是比较经得起折腾。<br />\r\n缺点在于：如果中间栏含有最小宽度限制，或是含有宽度的内部元素，当浏览器宽度小到一定程度，会发生层重叠的情况。然而，一般情况下，除非用户显示器分辨率宽度&gt;=1600像素，否则用户不会把浏览器缩小到1000像素以下的，所以该缺陷危害指数3.</p>\r\n\r\n<p>2、margin负值法<br />\r\n这种方法是在实际的网站中应用的最多的，我个人感觉多少有些跟风的嫌疑。此方法很难用一句话概括。首先，中间的主体要使用双层标签。外层div宽度 100%显示，并且浮动（本例左浮动，下面所述依次为基础），内层div为真正的主体内容，含有左右210像素的margin值。左栏与右栏都是采用 margin负值定位的，左栏左浮动，margin-left为-100%，由于前面的div宽度100%与浏览器，所以这里的-100%margin值 正好使左栏div定位到了页面的左侧；右侧栏也是左浮动，其margin-left也是负值，大小为其本身的宽度即200像素。</p>\r\n\r\n<p>见下面的css代码：</p>\r\n\r\n<p>HTML代码：</p>\r\n\r\n<p>您可以狠狠地点击这里：margin负值法演示demo</p>\r\n\r\n<p>您需要注意几个div的顺序，无论是左浮动还是右浮动，先是主体部分div，这是肯定的，至于左右两栏谁先谁后，都无所谓，我测试了IE6，Firefox，以及chrome浏览器，表现一致。</p>\r\n\r\n<p>此方法的优点：三栏相互关联，可谓真正意义上的自适应，有一定的抗性&mdash;&mdash;布局不易受内部影响。<br />\r\n缺点在于：相对比较难理解些，上手不容易，代码相对复杂。出现百分比宽度，过多的负值定位，如果出现布局的bug，排查不易。</p>\r\n\r\n<p>3、自身浮动法<br />\r\n此方法代码最简单。应用了标签浮动跟随的特性。左栏左浮动，右栏右浮动，主体直接放后面，就实现了自适应。</p>\r\n\r\n<p>您可以狠狠地点击这里：自身浮动法演示demo</p>\r\n\r\n<p>css代码如下：</p>\r\n\r\n<p>HTML代码：</p>\r\n\r\n<p>这里三个div标签的顺序的关键是要把主体div放在最后，左右两栏div顺序任意。</p>\r\n\r\n<p>此方法的优点是：代码足够简洁与高效<br />\r\n不足在于：中间主体存在克星，clear:both属性。如果要使用此方法，需避免明显的clear样式。</p>\r\n\r\n<p>三、下载<br />\r\n您可以狠狠地单击这里：demo打包下载（zip ）</p>\r\n\r\n<p>四、结语<br />\r\ntable表格可谓是自适应布局的利器，如今Google的产品页面，yahoo等自适应页面都还是使用的table技术，原因在于table本身的自适 应能力。然而，虽然它是Google，它是yahoo，但是我依然很鄙视，您可以试试用firebug去看一下Google页面的HTML代 码，unbelievable！层级多的惊人，代码真是多，臃肿！我过去觉得可能是某些功能之需，现在发现是追求技术，可扩展，自适应的副产物。我多次实 践，可以非常肯定的说：div完全可以取代table实现自适应布局。</p>\r\n\r\n<p>本文提供的仅仅是我个人知道的几种自适应方法，其实，我相信，肯定还有其他的方法，这就需要你我对其关注思考并发现了。</p>\r\n\r\n<p>原创文章，转载请注明来自张鑫旭-鑫空间-鑫生活[http://www.zhangxinxu.com]<br />\r\n本文地址：http://www.zhangxinxu.com/wordpress/?p=370</p>\r\n',0,1437660692,0,0),(41,10,'PHP SESSION生存时间设置','<p>PHP中的session有效期默认是1440秒（24分钟）【weiweiok 注：php5里默认的是180分】，也就是说，客户端超过24分钟没有刷新，当前session就会失效。很明显，这是不能满足需要的。</p>\r\n\r\n<p>&nbsp;&nbsp; 一 个已知管用的方法是，使用session_set_save_handler，接管所有的session管理工作，一般是把session信息存储到数据 库，这样可以通过SQL语句来删除所有过期的session，精确地控制session的有效期。这也是基于PHP的大型网站常用的方法。但是，一般的小 型网站，似乎没有必要这么劳师动众。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; 但是一般的Session的生命期有限，如果用户关闭了浏览器，就不能保存Session的变量了！那么怎么样可以实现Session的永久生命期呢？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 大 家知道，Session储存在服务器端，根据客户端提供的SessionID来得到这个用户的文件，然后读取文件，取得变量的值，SessionID可以 使用客户端的Cookie或者Http1.1协议的Query_String（就是访问的URL的&ldquo;?&rdquo;后面的部分）来传送给服务器，然后服务器读取 Session的目录&hellip;&hellip;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 要实现Session的永久生命期，首先需要了解一下php.ini关于Session的相关设置（打开php.ini文件，在&ldquo;[Session]&rdquo;部分）：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 1、session.use_cookies：默认的值是&ldquo;1&rdquo;，代表SessionID使用Cookie来传递，反之就是使用Query_String来传递；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 2、session.name：这个就是SessionID储存的变量名称，可能是Cookie，也可能是Query_String来传递，默认值是&ldquo;PHPSESSID&rdquo;；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 3、session.cookie_lifetime：这个代表SessionID在客户端Cookie储存的时间，默认是0，代表浏览器一关闭SessionID就作废&hellip;&hellip;就是因为这个所以Session不能永久使用！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 4、session.gc_maxlifetime：这个是Session数据在服务器端储存的时间，如果超过这个时间，那么Session数据就自动删除！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 还有很多的设置，不过和本文相关的就是这些了，下面开始讲使用永久Session的原理和步骤。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 前面说过，服务器通过SessionID来读取Session的数据，但是一般浏览器传送的SessionID在浏览器关闭后就没有了，那么我们只需要人为的设置SessionID并且保存下来，不就可以&hellip;&hellip;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 如果你拥有服务器的操作权限，那么设置这个非常非常的简单，只是需要进行如下的步骤：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 1、把&ldquo;session.use_cookies&rdquo;设置为1，打开Cookie储存SessionID，不过默认就是1，一般不用修改；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 2、把&ldquo;session.cookie_lifetime&rdquo;改为正无穷（当然没有正无穷的参数，不过999999999和正无穷也没有什么区别）;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 3、把&ldquo;session.gc_maxlifetime&rdquo;设置为和&ldquo;session.cookie_lifetime&rdquo;一样的时间；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 在 PHP的文档中明确指出，设定session有效期的参数是session.gc_maxlifetime。可以在php.ini文件中，或者通过 ini_set()函数来修改这一参数。问题在于，经过多次测试，修改这个参数基本不起作用，session有效期仍然保持24分钟的默认值。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 由 于PHP的工作机制，它并没有一个daemon线程，来定时地扫描session信息并判断其是否失效。当一个有效请求发生时，PHP会根据全局变量 session.gc_probability/session.gc_divisor（同样可以通过php.ini或者ini_set()函数来修改） 的值，来决定是否启动一个GC（Garbage Collector）。</p>\r\n\r\n<p>&nbsp;&nbsp; 默认情况 下，session.gc_probability ＝ 1，session.gc_divisor ＝100，也就是说有1%的可能性会启动GC。GC的工作，就是扫描所有的session信息，用当前时间减去session的最后修改时间 （modified date），同session.gc_maxlifetime参数进行比较，如果生存时间已经超过gc_maxlifetime，就把该session删 除。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 到此为止，工作一切正常。那为什么会发生gc_maxlifetime无效的情况呢？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 在 默认情况下，session信息会以文本文件的形式，被保存在系统的临时文件目录中。在Linux下，这一路径通常为\\tmp，在 Windows下通常为C:\\Windows\\Temp。当服务器上有多个PHP应用时，它们会把自己的session文件都保存在同一个目录中。同样 地，这些PHP应用也会按一定机率启动GC，扫描所有的session文件。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 问题在于，GC在工作时，并 不会区分不同站点的session。举例言之，站点A的gc_maxlifetime设置为2小时，站点B的 gc_maxlifetime设置为默认的24分钟。当站点B的GC启动时，它会扫描公用的临时文件目录，把所有超过24分钟的session文件全部删 除掉，而不管它们来自于站点A或B。这样，站点A的gc_maxlifetime设置就形同虚设了。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 找到问题所在，解决起来就很简单了。修改session.save_path参数，或者使用session_save_path()函数，把保存session的目录指向一个专用的目录，gc_maxlifetime参数工作正常了。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 严格地来说，这算是PHP的一个bug？</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 还 有一个问题就是，gc_maxlifetime只能保证session生存的最短时间，并不能够保存在超过这一时间之后session信息立即会得到删 除。因为GC是按机率启动的，可能在某一个长时间内都没有被启动，那么大量的session在超过gc_maxlifetime以后仍然会有效。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 解 决这个问题的一个方法是，把session.gc_probability/session.gc_divisor的机率提高，如果提到100%，就会彻 底解决这个问题，但显然会对性能造成严重的影响。另一个方法是自己在代码中判断当前session的生存时间，如果超出了 gc_maxlifetime，就清空当前session。</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 但是如果你没有服务器的操作权限，那就比较麻 烦了，你需要通过PHP程序改写SessionID来实现永久的Session数据保存。查查php.net的函数手册，可以见到有 &ldquo;session_id&rdquo;这个函数：如果没有设置参数，那么将返回当前的SessionID，如果设置了参数，就会将当前的SessionID设置为给出 的值&hellip;&hellip;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 只要利用永久性的Cookie加上&ldquo;session_id&rdquo;函数，就可以实现永久Session数据保存了！</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 但是为了方便，我们需要知道服务器设置的&ldquo;session.name&rdquo;，但是一般用户都没有权限查看服务器的php.ini设置，不过PHP提供了一个非常好的函数&ldquo;phpinfo&rdquo;，利用这个可以查看几乎所有的PHP信息！</p>\r\n\r\n<p>------------------------------------------------------------------------------------</p>\r\n\r\n<p>&lt;title&gt;PHP相关信息显示&lt;/title&gt;</p>\r\n\r\n<p>&lt;?phpinfo()?&gt;</p>\r\n\r\n<p>------------------------------------------------------------------------------------</p>\r\n\r\n<p>打开编辑器，输入上面的代码，然后在浏览器中运行这个程序，会见到PHP的相关信息（如图1所示）。其中有一项&ldquo;session.name&rdquo;的参数，这个就是我们需要的服务器&ldquo;session.name&rdquo;，一般是&ldquo;PHPSESSID&rdquo;。</p>\r\n\r\n<p>记下了SessionID的名称后，我们就可以实现永久的Session数据储存了！</p>\r\n\r\n<p>复制代码 代码如下:</p>\r\n\r\n<p>session_start();</p>\r\n\r\n<p>ini_set(&#39;session.save_path&#39;,&#39;/tmp/&#39;);</p>\r\n\r\n<p>//6个钟头</p>\r\n\r\n<p>ini_set(&#39;session.gc_maxlifetime&#39;,21600);</p>\r\n\r\n<p>//保存一天</p>\r\n\r\n<p>$lifeTime = 24 * 3600;</p>\r\n\r\n<p>setcookie(session_name(), session_id(), time() + $lifeTime, &quot;/&quot;);</p>\r\n\r\n<p>后记：</p>\r\n\r\n<p>其实真正的永久储存是不可能的，因为Cookie的保存时间有限，而服务器的空间也有限&hellip;&hellip;但是对于一些需要保存时间比较长的站点，以上方法就已经足够了！</p>\r\n\r\n<p>把session放入mysql的Example:</p>\r\n\r\n<p>数据库里建表：session ( sesskey varchar32 , expiry int11 , value longtext)</p>\r\n\r\n<p>code:</p>\r\n\r\n<p>代码执行前已经连接数据库了。</p>\r\n\r\n<p>复制代码 代码如下:</p>\r\n\r\n<p>define(&#39;STORE_SESSIONS&#39;,&#39;mysql&#39;);</p>\r\n\r\n<p>if (STORE_SESSIONS == &#39;mysql&#39;) {</p>\r\n\r\n<p>if (!$SESS_LIFE = get_cfg_var(&#39;session.gc_maxlifetime&#39;)) {</p>\r\n\r\n<p>$SESS_LIFE = 1440;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_open($save_path, $session_name) {</p>\r\n\r\n<p>// 如果没有连接数据库，可以在此执行mysql_pconnect,mysql_select_db</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_close() {</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_read($key) {</p>\r\n\r\n<p>$value_query = mysql_query(&quot;select value from sessions where sesskey = &#39;&quot; .addslashes($key) . &quot;&#39; and expiry &gt; &#39;&quot; . time() . &quot;&#39;&quot;);</p>\r\n\r\n<p>$value = mysql_fetch_array($value_query);</p>\r\n\r\n<p>if (isset($value[&#39;value&#39;])) {</p>\r\n\r\n<p>return $value[&#39;value&#39;];</p>\r\n\r\n<p>}</p>\r\n\r\n<p>return false;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_write($key, $val) {</p>\r\n\r\n<p>global $SESS_LIFE;</p>\r\n\r\n<p>$expiry = time() + $SESS_LIFE;</p>\r\n\r\n<p>$value = $val;</p>\r\n\r\n<p>$check_query = mysql_query(&quot;select count(*) as total from sessions where sesskey = &#39;&quot; . addslashes($key) . &quot;&#39;&quot;);</p>\r\n\r\n<p>$check = mysql_fetch_array($check_query);</p>\r\n\r\n<p>if ($check[&#39;total&#39;] &gt; 0) {</p>\r\n\r\n<p>return mysql_query(&quot;update sessions set expiry = &#39;&quot; . addslashes($expiry) . &quot;&#39;, value = &#39;&quot; . addslashes($value) . &quot;&#39; where sesskey = &#39;&quot; . addslashes($key) . &quot;&#39;&quot;);</p>\r\n\r\n<p>} else {</p>\r\n\r\n<p>return mysql_query(&quot;insert into sessions values (&#39;&quot; . addslashes($key) . &quot;&#39;, &#39;&quot; . addslashes($expiry) . &quot;&#39;, &#39;&quot; . addslashes($value) . &quot;&#39;)&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_destroy($key) {</p>\r\n\r\n<p>return mysql_query(&quot;delete from sessions where sesskey = &#39;&quot; . addslashes($key) . &quot;&#39;&quot;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>function _sess_gc($maxlifetime) {</p>\r\n\r\n<p>mysql_query(&quot;delete from sessions where expiry &lt; &#39;&quot; . time() . &quot;&#39;&quot;);</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>session_set_save_handler(&#39;_sess_open&#39;, &#39;_sess_close&#39;, &#39;_sess_read&#39;, &#39;_sess_write&#39;, &#39;_sess_destroy&#39;, &#39;_sess_gc&#39;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>danoo_session_name( &#39;dtvSid&#39; );</p>\r\n\r\n<p>danoo_session_save_path(SESSION_WRITE_DIRECTORY);</p>\r\n\r\n<p>还是有点不明白，open,write那些参数哪里来的。</p>\r\n\r\n<p>修改php.ini配置的两个常用函数：</p>\r\n\r\n<p>get_cfg_var(&#39;session.gc_maxlifetime&#39;) : 取得session.gc_maxlifetime的值</p>\r\n\r\n<p>ini_set(&#39;session.cookie_lifetime&#39;,&#39;0&#39;) : 设置session.cookie_lifetime的值为0。</p>\r\n',0,1437661034,0,0),(42,30,'CakePHP Auth 组件教程+例子','<p>原文：http://www.littlehart.net/atthekeyboard/2007/09/11/a-hopefully-useful-tutorial-for-using-cakephps-auth-component/<br />\r\n原文：http://ertw.com/blog/2007/11/04/a-simple-authentication-system-with-cakephp-12-and-auth-component/</p>\r\n\r\n<p>在 深入学习CakePHP框架时，让我最感到头大的一部分就是Auth组件。现在的问题是没有够用的关于如何使用和配置它的信息。幸运的是，我能通&nbsp; 过CakePHP核心团队的gwoo和Nate得到一些内部信息。除此之外还有一些在不同网站上的零散信息。So，这里我将尝试集中一下那些信息，并向你&nbsp; 展示一些关于如何使用此组件的初级到中级的知识。注意，这些代码是针对1.2.x.x的，而且截止到此文发表时（2007-09-11），Auth&nbsp; 组件的API尚未声明它是100%稳定的。换句话说，如果这些在6个月后不能用了可别怪我。</p>\r\n\r\n<p>So，为了使用这个组件，你需要把它添加到你要使用的控制器的组件列表中。由于我通常需要Auth在我所有的控制器中都可用，我更倾向于把这个添加到 app_controller.php 中。<br />\r\nvar $components = array(&#39;Auth&#39;);<br />\r\nSo, 现在我们要想使用它，我们突然有了很多可以且需要设置的选项。在这个例子里我使用了一个现存项目中的代码。你可以在你需要用到Auth的控制器的beforeFilter()方法中设置这些不同的Auth选项。<br />\r\n$this-&gt;Auth-&gt;fields = array(&#39;username&#39; =&gt; &#39;email&#39;, &#39;password&#39; =&gt; &#39;pasword&#39;);</p>\r\n\r\n<p>默认情况下，Auth 期望你有一个叫做User的模型，模型中有一个 &quot;username&quot; 和 &quot;password&quot; 字段。尽管你可以重新指定这些。</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginAction&nbsp; = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;login&#39;);你需要告诉Auth哪个&nbsp; controller/action 对儿用于为用户提供登录表单。<br />\r\n$this-&gt;Auth-&gt;loginRedirect = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;index&#39;);告诉Auth组件在验证通过后重定向到哪儿。<br />\r\n$this-&gt;Auth-&gt;logoutRedirect = &#39;/&#39;;... 还有当你登出的时候退到哪儿。<br />\r\n$this-&gt;Auth-&gt;loginError = &#39;Invalid e-mail / password combination.&nbsp; Please try again&#39;;你可以指定当验证失败时显示什么错误信息。<br />\r\n$this-&gt;Auth-&gt;autoRedirect&nbsp; =&nbsp; false;有时你不想将通过验证的用户重定向到$this-&gt;Auth-&gt;loginRedirect中指定的位置，因为你需要做一些用户 通过验证后的事情。在这段代码中我用到了这个，它会检查我们是否有一个用于登录的包含用户验证信息的Cookie。<br />\r\nfunction login() {<br />\r\nif ($this-&gt;Auth-&gt;user()) {<br />\r\nif (!empty($this-&gt;data)) {<br />\r\nif (empty($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;])) {<br />\r\n$this-&gt;Cookie-&gt;del(&#39;User&#39;);<br />\r\n}<br />\r\nelse {<br />\r\n$cookie = array();<br />\r\n$cookie[&#39;email&#39;] = $this-&gt;data[&#39;User&#39;][&#39;email&#39;];<br />\r\n$cookie[&#39;token&#39;] = $this-&gt;data[&#39;User&#39;][&#39;pasword&#39;];<br />\r\n$this-&gt;Cookie-&gt;write(&#39;User&#39;, $cookie, true, &#39;+2 weeks&#39;);<br />\r\n}</p>\r\n\r\n<p>unset($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;]);<br />\r\n}</p>\r\n\r\n<p>$this-&gt;redirect($this-&gt;Auth-&gt;redirect());<br />\r\n}<br />\r\n}<br />\r\n$this-&gt;Auth-&gt;authorize&nbsp; = &#39;controller&#39;;这&nbsp; 是Auth中新添加的，你可以指定一些关于Auth可以从哪儿获取更多信息的附加信息。通常，Auth会假设你已经使用Cake自己的ACL设置好了一些&nbsp; 东西。我不需要任何像那样复杂的东西，所以我看到我可以绕过它时我感到很高兴。当你设置 $this-&gt;Auth-&gt;authorize&nbsp; 为&quot;controler&quot;&nbsp; 时，你就告诉了Auth组件从一个叫做&ldquo;isAuthorized&rdquo;的动作中获取用户是否已通过验证的更多信息。这里有一个简单的：<br />\r\nfunction isAuthorized() {<br />\r\nif (isset($this-&gt;params[Configure::read(&#39;Routing.admin&#39;)])) {<br />\r\nif ($this-&gt;Auth-&gt;user(&#39;admin&#39;) == 0) {<br />\r\nreturn false;<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>return true;<br />\r\n}<br />\r\n我&nbsp; 假定那个例子是可以自解释的。现在，如果你设置 $this-&gt;Auth-&gt;authorize&nbsp; 为&quot;model&quot;，你就可以在模型中创建一个类似事情的特殊的方法。多谢 AcidMax 在此文中想向你展示如果你用&quot;model&quot;作为&nbsp; $this-&gt;Auth-&gt;authorize 的值时该做些什么。这里也有一个&nbsp; $this-&gt;Auth-&gt;authorize 的 &#39;crud&#39; 选项，但我自己还没用过。你可以使用&nbsp; $this-&gt;Auth-&gt;mapActions 来告诉Auth什么动作映射到了不同的CURD动作上:<br />\r\n$this-&gt;Auth-&gt;mapActions(array(&#39;read&#39;=&gt; array(&#39;display&#39;)));像我所说，我没有傻乐吧唧的围绕着它。 一旦我做了，我会更新这个帖子对它做更多分析。<br />\r\n$this-&gt;Auth-&gt;allow(&#39;add&#39;,&nbsp; &#39;view&#39;);你需要告诉Auth什么动作是可以不经过身份验证即可访问的。&nbsp; 经常困扰初学者的一个问题就是&quot;login&quot;和&quot;logout&quot;已经是Auth知道不需要验证的动作了。如果你把&quot;login&quot;和&quot;logout&quot;放在那 儿，Auth会变得很古怪并且会完全地绕过身份验证。所以，不要那样做。</p>\r\n\r\n<p>现在，这儿还有其他一些对使用Auth的人有用的特性：<br />\r\nfunction logout() {<br />\r\n$this-&gt;Session-&gt;setFlash(&quot;You&#39;ve successfully logged out.&quot;);<br />\r\n$this-&gt;redirect($this-&gt;Auth-&gt;logout());<br />\r\n}$this-&gt;Auth-&gt;logout 将会返回你告诉Auth的那个你想让人们在他们登出后被送往的URL。<br />\r\n$userId = $this-&gt;Auth-&gt;user(&#39;id&#39;);<br />\r\n用户验证通过后你可以从User模型中提取用户信息。User模型中的任何字段你都可以得到。像这样做不是很好吗：<br />\r\nif ($this-&gt;Auth-&gt;user(&#39;admin&#39;) == true) {<br />\r\n$this-&gt;Session-&gt;setFlash(&#39;You are an admin&#39;);<br />\r\n}</p>\r\n\r\n<p>~。&nbsp;&nbsp; 这是很多在你使用Auth构建应用时需要尝试和记在你脑袋中的东西。但还不止这些。Auth组件会自动加密你放在&quot;password&quot;表单域中的值。它会&nbsp;&nbsp; 在你登录和&hellip;&hellip;当你在User模型中创建一条新记录时都这样做。所以你需要确保你表中保存密码的字段有足够的长度可以接受加密后的密码。如果你需要在密码&nbsp; 保存之前做一些事情，你可以通过使用$this-&gt;Auth-&gt;password(&quot;要保存的密码&quot;);来获得需要保持的值。</p>\r\n\r\n<p>无论怎样，我肯定我漏掉了一些其他的深层的东西，但我希望我已经在想你展示Auth组件是多么容易上做的不错了, 当你懂得它实际是怎样工作的时候。</p>\r\n\r\n<p>最后完整这么个系统：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 默认需要用户使用一个用户名（E-mail）和一个密码登录；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 游客尝试访问受保护的资源会被重定向到登录界面；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 控制器可以决定哪些方法需要保护，哪些不需要；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 支持基本的分组 &mdash;&mdash; 注册的用户为&ldquo;users&rdquo;，管理员为&ldquo;admin&rdquo;。控制器通过这个字符串完成其他的事情；</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; 它很容易理解，而且不需要在每个控制器中有许多代码。</p>\r\n\r\n<p>开始了，首先，我需要一个用户模型：<br />\r\nCREATE TABLE `users` (</p>\r\n\r\n<p>`id` int(11) NOT NULL auto_increment,</p>\r\n\r\n<p>`email` varchar(255) NOT NULL,</p>\r\n\r\n<p>`password` char(32) NOT NULL,</p>\r\n\r\n<p>`role` varchar(20) NOT NULL default &#39;user&#39;,</p>\r\n\r\n<p>`created` datetime default NULL,</p>\r\n\r\n<p>`modified` datetime default NULL,</p>\r\n\r\n<p>PRIMARY KEY&nbsp; (`id`)</p>\r\n\r\n<p>) ENGINE=MyISAM DEFAULT CHARSET=latin1;</p>\r\n\r\n<p>相应的模型代码（user.php）就是：<br />\r\nclass User extends AppModel {</p>\r\n\r\n<p>var $name = &#39;User&#39;;</p>\r\n\r\n<p>var $validate = array(</p>\r\n\r\n<p>&#39;email&#39; =&gt; VALID_NOT_EMPTY,</p>\r\n\r\n<p>&#39;password&#39; =&gt; VALID_NOT_EMPTY</p>\r\n\r\n<p>);</p>\r\n\r\n<p>function beforeSave() {</p>\r\n\r\n<p>if ($this-&gt;data[&#39;User&#39;][&#39;password&#39;]) {</p>\r\n\r\n<p>$this-&gt;data[&#39;User&#39;][&#39;password&#39;] = md5($this-&gt;data[&#39;User&#39;][&#39;password&#39;]);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>return true;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>}<br />\r\n作为保存在数据库中的密码，它已被自动MD5过了。</p>\r\n\r\n<p>因为我想在每个页面中都有验证（有例外），它在 cake/app_controller.php 中的 beforeFilter 钩子中完成了:<br />\r\nclass AppController extends Controller {</p>\r\n\r\n<p>var $components = array(&quot;Auth&quot;);</p>\r\n\r\n<p>function beforeFilter() {</p>\r\n\r\n<p>// 处理用户验证过滤器</p>\r\n\r\n<p>// 这儿，直接不用config中的salt了。</p>\r\n\r\n<p>// md5 密码会在user模型中用到。</p>\r\n\r\n<p>Security::setHash(&quot;md5&quot;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;fields = array(&#39;username&#39; =&gt; &#39;email&#39;, &#39;password&#39; =&gt; &#39;password&#39;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginAction = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;login&#39;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginRedirect = array(&#39;controller&#39; =&gt; &#39;users&#39;, &#39;action&#39; =&gt; &#39;myprofile&#39;);</p>\r\n\r\n<p>$this-&gt;Auth-&gt;logoutRedirect = &#39;/&#39;;</p>\r\n\r\n<p>$this-&gt;Auth-&gt;loginError = &#39;Invalid e-mail / password combination.&nbsp; Please try again&#39;;</p>\r\n\r\n<p>$this-&gt;Auth-&gt;authorize = &#39;controller&#39;;</p>\r\n\r\n<p>}</p>\r\n\r\n<p>各&nbsp; $this-&gt;Auth&nbsp; 行定义了不同的行为，例如登录页面是什么。为&ldquo;controller&rdquo;设置&ldquo;authorize&rdquo;意味着每个控制器必须有一个&nbsp; isAuthorized()&nbsp; 函数，它将根据已验证的用户是否有执行此操作的权利返回true或false。密钥设置为使用MD5加密，因为默认的是SHA1而且这个无法用于我之前建&nbsp; 好的模型里。你也必须编辑你的config文件来移除salt。</p>\r\n\r\n<p>设置好这些后，所有的页面将需要身份验证。要修复这个，在你想要开放权限的控制器中，添加一个beforeFilter：<br />\r\nfunction beforeFilter() {</p>\r\n\r\n<p>$this-&gt;Auth-&gt;allow(&quot;*&quot;);</p>\r\n\r\n<p>parent::beforeFilter();</p>\r\n\r\n<p>}</p>\r\n\r\n<p>这 将允许控制器中所有的动作（Action）无需验证即可通过。allow() 看起来是接受一个不需要身份验证的动作列表，*&nbsp; 的意思是所有。如果只有几个动作需要验证，我会用 $this-&gt;Auth-&gt;allow(&quot;view&quot;, &quot;foo&quot;)&nbsp; 来允许开启view和foo动作的权限。</p>\r\n\r\n<p>如果你需要查看已登录的用户，使用$this-&gt;Auth-&gt;user()，它会返回 一个模型。从那儿我可以得到 权限/分组（role/group） ，或者我放在那儿的其他东西。看起来你并不能在beforeFilter中&nbsp; set() 变量到视图，所以如果你想让视图有用户模型的一部分你应该在其他位置set()。</p>\r\n\r\n<p>对于我的登录函数，我直接从这个教程（也翻译了，在这儿）里偷过来了。（实际上我做的多数都是基于那个教程的，我的贡献只是对MD5相关事宜和allow()的解释(后者我发现已经在他的教程里了，只是被埋到了另一个章节里)）。<br />\r\nif ($this-&gt;Auth-&gt;user()) {</p>\r\n\r\n<p>if (!empty($this-&gt;data)) {</p>\r\n\r\n<p>if (empty($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;])) {</p>\r\n\r\n<p>$this-&gt;Cookie-&gt;del(&#39;User&#39;);</p>\r\n\r\n<p>} else {</p>\r\n\r\n<p>$cookie = array();</p>\r\n\r\n<p>$cookie[&#39;email&#39;] = $this-&gt;data[&#39;User&#39;][&#39;email&#39;];</p>\r\n\r\n<p>$cookie[&#39;token&#39;] = $this-&gt;data[&#39;User&#39;][&#39;pasword&#39;];</p>\r\n\r\n<p>$this-&gt;Cookie-&gt;write(&#39;User&#39;, $cookie, true, &#39;+2 weeks&#39;);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>unset($this-&gt;data[&#39;User&#39;][&#39;remember_me&#39;]);</p>\r\n\r\n<p>}</p>\r\n\r\n<p>$this-&gt;redirect($this-&gt;Auth-&gt;redirect());</p>\r\n\r\n<p>}</p>\r\n\r\n<p>剩余的代码简单死了，就是一个用于添加账户的注册动作，和一个调用 $this-&gt;Auth-&gt;logout() 的登出动作。</p>\r\n',0,1437661192,0,0),(43,15,'解决编译Apache出现的问题：configure: error: APR not found . Please read the documentation','<p>今日编译apache时出错：</p>\r\n\r\n<p>#./configure --prefix&hellip;&hellip;检查编辑环境时出现：</p>\r\n\r\n<p>checking for APR... no<br />\r\nconfigure: error: APR not found .&nbsp; Please read the documentation</p>\r\n\r\n<p>解决办法：</p>\r\n\r\n<p>1.下载所需软件包：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; wget http://archive.apache.org/dist/apr/apr-1.4.5.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; wget http://archive.apache.org/dist/apr/apr-util-1.3.12.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; wget http://jaist.dl.sourceforge.net/project/pcre/pcre/8.10/pcre-8.10.zip&nbsp; &nbsp;</p>\r\n\r\n<p>2.编译安装：</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; yum remove apr-util-devel apr apr-util-mysql apr-docs apr-devel apr-util apr-util-docs</p>\r\n\r\n<p>具体步骤如下:</p>\r\n\r\n<p>&nbsp; a:解决apr not found问题&gt;&gt;&gt;&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# tar -zxf apr-1.4.5.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# cd&nbsp; apr-1.4.5 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-1.4.5]# ./configure --prefix=/usr/local/apr &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-1.4.5]# make &amp;&amp; make install &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;</p>\r\n\r\n<p>&nbsp; b:解决APR-util not found问题&gt;&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# tar -zxf apr-util-1.3.12.tar.gz &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]# cd apr-util-1.3.12 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-util-1.3.12]# ./configure --prefix=/usr/local/apr-util -with- apr=/usr/local/apr/bin/apr-1-config &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt apr-util-1.3.12]# make &amp;&amp; make install</p>\r\n\r\n<p><br />\r\n&nbsp; c:解决pcre问题&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]#unzip -o pcre-8.10.zip &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt test]#cd pcre-8.10 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt pcre-8.10]#./configure --prefix=/usr/local/pcre &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; [root@xt pcre-8.10]#make &amp;&amp; make install</p>\r\n\r\n<p>4.最后编译Apache时加上：</p>\r\n\r\n<p>--with-apr=/usr/local/apr \\</p>\r\n\r\n<p>--with-apr-util=/usr/local/apr-util/ \\</p>\r\n\r\n<p>&nbsp;--with-pcre=/usr/local/pcre</p>\r\n\r\n<p>成功编译完成~</p>\r\n',0,1437661302,0,0),(44,16,'Java使用全屏幕模式','<p>什么时候会用到全屏幕模式？</p>\r\n\r\n<p>也许用到的机会很少，但JDK还是为我们提供了这个的功能。像许多软件中的打印预览功能，还有某些文本编辑器中为了获得更大的编辑画面，也用到了全屏幕模式，如果你有兴趣写一个像ACDSee这样的软件，使用全屏幕模式可以让用户看到更大的图片画面。</p>\r\n\r\n<p>如何使用全屏幕模式？</p>\r\n\r\n<p>关键是java.awt.*里面的两个与显示设备有关的类：GraphicsEnvironment和GraphicsDevice。</p>\r\n\r\n<p>GraphicsEnvironment为Java应用程序提供了特定平台的 GraphicsDevice 对象和 Font 对象集合。这些GraphicsDevice可以是各种本机和远端机器的资源，如屏幕、打印机或者是Image Buffer,甚至是Graphics2D绘图方法的目标对象。</p>\r\n\r\n<p>而GraphicsDevice就是指特定的图形环境了，如屏幕和打印设备等。这样，我们就可以用GraphicsDevice来操纵屏幕了。GraphicsDevice提供的setFullScreenWindow()方法就是设置全屏幕用的。</p>\r\n\r\n<p>由于GraphicsEnvironment的构造器是受保护的(protected)，我们不能直接构造一个GraphicsEnvironment对象来获得GraphicsDevice对象。幸好它提供了getLocalGraphicsEnvironment()方法，用来获得一个GraphicsEnvironment实例：</p>\r\n\r\n<p>GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();</p>\r\n\r\n<p>有了GraphicsEnvironment可以调用getDefaultScreenDevice方法获得当前的屏幕设备了：</p>\r\n\r\n<p>GraphicsDevice gd = ge.getDefaultScreenDevice();</p>\r\n\r\n<p>自己动手体验一下</p>\r\n\r\n<p>有了上面的简介，写一个实例来体验一下吧：</p>\r\n\r\n<p>import java.awt.*;<br />\r\nimport java.awt.event.*;<br />\r\nimport javax.swing.*;</p>\r\n\r\n<p>public class FullScreenTest<br />\r\n{<br />\r\npublic static void main(String[] args)<br />\r\n{<br />\r\nGraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();<br />\r\nGraphicsDevice gd = ge.getDefaultScreenDevice();<br />\r\nFullScreenWindow myWindow = new FullScreenWindow();<br />\r\nif ( gd.isFullScreenSupported() )<br />\r\ngd.setFullScreenWindow(myWindow);<br />\r\nelse<br />\r\nSystem.out.println(&quot;Unsupported full screen.&quot;);<br />\r\n}<br />\r\n}</p>\r\n\r\n<p>class FullScreenWindow extends JWindow<br />\r\n{<br />\r\npublic FullScreenWindow()<br />\r\n{<br />\r\nthis.addMouseListener(new MouseAdapter()<br />\r\n{<br />\r\npublic void mousePressed(MouseEvent evt)<br />\r\n{<br />\r\nquit();<br />\r\n}<br />\r\n});<br />\r\n}</p>\r\n\r\n<p>public void quit()<br />\r\n{<br />\r\nthis.dispose();<br />\r\n}</p>\r\n\r\n<p>public void paint(Graphics g)<br />\r\n{<br />\r\ng.setFont(new Font(&quot;Arial&quot;,Font.BOLD,30));<br />\r\ng.setColor(Color.RED);<br />\r\ng.drawString(&quot;这是全屏幕模式&quot;,100,100);<br />\r\n}<br />\r\n}</p>\r\n',0,1437661449,0,0),(45,16,'java GUI 组件全演示','<p>一 抛砖引玉</p>\r\n\r\n<p><br />\r\n本文指在利用一个小程序&rdquo;Swing 组件大全&rdquo;来引导大家学习Java这门语言，熟悉Java&nbsp; Swing的各个组件。并在学习过程中参考作者设计这一程序的方法和思想，最终形成自己的思维方式和学习方式。你能举一返三是作者最开心的事情。小程序演 示了Java Swing大部分组件。最后附上了全部代码及详细的注释说明。希望本文能对大家学习Java有所帮助。</p>\r\n\r\n<p><br />\r\n随着Java风潮席卷国内，学习Java的方法和路径越来越多。而在大量的书本前，在Java庞大的类库前大大家都有点迷失方向的感觉，是学 J2EE,J2ME还是。。。。。。然而所有的这些都或多或少的离不开J2SE。万丈高楼平地起。J2SE是整个Java的基础，学好了这个对Java的 各个方向都是很有利的。而学习J2SE的最初点就在界面设计，因为界面编程是你来感觉最直接的手段，是提高大家编程兴趣的很好开始，因为你写完程序编译后 可马上看到自己的成果。而不像后台编程做完了都感受不到效果。而好的界面也是你测试你其他程序的基础。</p>\r\n\r\n<p><br />\r\n界面设 计！不就是拖拉操作吗？如果是VB,VC等可视化的编程，的确只是一些拖拉操作，由于Java语言的设计中所有的东西都是程序代码，在Java中如果想要 设计一个好的界面，可不是简单的拖拉操作能完成的。即使使用了如JBuilder这么强大的可视化工具，你也得亲自动手写一些界面设计代码才能很好的完成 你的任务。如果你能在此基础上理解Java界面设计的思想，对你学习这门语言将有莫大的帮助。</p>\r\n\r\n<p><br />\r\nJava界面设计主要涉及Awt,Swing两大类库，Swing是Awt的扩展和功能加强。下面我们就以Swing为基础来说说整个Java的界面设计。</p>\r\n\r\n<p><br />\r\n二 感受效果</p>\r\n\r\n<p><br />\r\n在开始之前，让我们看看这篇文章要达到的效果，有了目标和成果才有学习的兴趣，起码我是这样认为和学习的。如下图所示,这就是我们设计的界面，它包括了 Swing中大部分常用的组件。有些功能界面上反映不出来，大家可尝试编译源代码点南击各个部分，看看它们的响应事件。</p>\r\n\r\n<p><br />\r\n三 设计思想和方法</p>\r\n\r\n<p><br />\r\n不知道大家（一般是初学者）在看编程书籍的时候有这种体会没有：在看的过程中，好像大部理解了，并且效率还不错，可是回头来要自己写个和书上一样的程序 出来，可能不少人只有重新拿书照打的了；有些人在照书上打过了一遍，也似乎理解了。可回头来真正到用的时候，好像又不记得了。作者本人在初学编程时就经历 过很多次这种情况。</p>\r\n\r\n<p><br />\r\n追其原因，无外乎没有融会贯通所学的知识，编程最讲求动手二字，动手的真正意义在于写自己所想所领会的程序而不是copy现成的程序。因为只有经过自己思考，设计才能把书上的知识真正溶入自己的大脑。下面我们以&rdquo;Swing 组件大全&rdquo;来说说这个方法和思想。</p>\r\n\r\n<p><br />\r\n在看完书上介绍的Swing组件这章后，我心中对Swing大概有了个了解，只差动手了。而本人又不想照书上的例子一个个来试。于是就想到了做个程序把书上介绍的所有组件放到一个界面来，并尝试用到书上介绍的所有方法。</p>\r\n\r\n<p><br />\r\n砍柴不误磨刀功！在开始这前，我手画了一份设计图纸，如上面界面所示（当然没那么漂亮了）。并用简单的软件工程思想对结构进行了大概的划分。这里把整个 界面划分为一个主模块和五大子模块。所有的子模块都是继承至相应的容器，主模块SwingTest既是管理模块也是主界面，继承JFrame主框架，管理 本身的属性及JFrame上的其他子模块。MenuTest子模块继承至JmenuBar负责菜单的显示和事件处理。其他子模块继承至JPanel，管理 放置在其上的组件的布局和显示。从子模块的名字大家也可看到他们的位置和功能。在编写程序前想好结构和思路是个很好的习惯，它将会帮你大大减少工作量，提 高程序的可读性和效率。</p>\r\n\r\n<p><br />\r\n四 容器，布局管理器，嵌板</p>\r\n\r\n<p><br />\r\nSwing中所有的组件都是放到容 器中，主要的容器包括：JFrame,JPanel,JWindow,JDialog,JPanle。JFrame是java的主框架，几乎所有的 Java应用程序界面都是在主框架之中设计的。有些容器并非一层，而由几层嵌板组成,本文将会用到其中在个：拆分嵌板(JSplitPane),内容嵌 板, 页签式嵌板(TabbedPane)</p>\r\n\r\n<p><br />\r\n拆分嵌板：按指定的方向和方式拆分其内的两个子组件，记住一个拆分嵌板只能拆分两个子组件，如果想要拆分三个，大家自己先想一想办法。本节最后给出了答案。</p>\r\n\r\n<p><br />\r\n内容嵌板： JFrame,Jwindow,Jdialog就是上面提到的有多层嵌板的容器，如果要在这些容器上面放置组件，必须放置在他们的内容嵌板(pane)上。我们通过函数getContentPane()可得到当前容器的内容嵌板。</p>\r\n\r\n<p><br />\r\n页签式嵌板：这个嵌板如同卡片，在上面提供文件夹式的页签，当前只显示一页，如要进入下一页，只要点击上面的页签。</p>\r\n\r\n<p><br />\r\n有些如JPanel是可以直接放置组件的容器。所以不需要使用嵌板。</p>\r\n\r\n<p><br />\r\n如果要按自己的想法排列放在容器上的组件，我们必须使用到布局管理器(Layout)来进行管理。Java系统默认的布局管理器为边界管理器 (BorderLayout)。它把版面分为五大块，中央区域(Center)，顶端(North),底部(South),左侧(West),右侧 (East),细心的你可能会发现我们的主界面就是用的这个布局架构。其他的几个布局管理器有：</p>\r\n\r\n<p><br />\r\n流布局(FlowLayout)：把其内的组件按从左到右，从上到下的流方式排列。</p>\r\n\r\n<p><br />\r\n网格布局(GridLayout)：把组件放置到布局中的设置的每个网格中</p>\r\n\r\n<p><br />\r\n无序网格布局(GridBagLayout)：类似于网格布局，但功能更强大也更复杂。能处理所有的布局。</p>\r\n\r\n<p><br />\r\n如果你仔细观察会发现我们的主界面最右边会发现使用了网格布局。</p>\r\n\r\n<p><br />\r\n下面来看看我们的主模块的构造函数代码,来感受一下上面的结构设计。</p>\r\n\r\n<p><br />\r\npublic SwingTest()</p>\r\n\r\n<p><br />\r\n{</p>\r\n\r\n<p><br />\r\n// 初始化所有子模块</p>\r\n\r\n<p><br />\r\nMenuTest menuTest = new MenuTest();</p>\r\n\r\n<p><br />\r\nLeftPanel leftPanel = new LeftPanel();</p>\r\n\r\n<p><br />\r\nRightPanel rightPanel = new RightPanel();</p>\r\n\r\n<p><br />\r\nBottomPanel bottomPanel = new BottomPanel();</p>\r\n\r\n<p><br />\r\nCenterPanel centerPanel = new CenterPanel();</p>\r\n\r\n<p><br />\r\n// 设置主框架的布局</p>\r\n\r\n<p><br />\r\nContainer c = this.getContentPane();</p>\r\n\r\n<p><br />\r\n// c.setLayout(new BorderLayout())</p>\r\n\r\n<p><br />\r\nthis.setJMenuBar(menuTest);</p>\r\n\r\n<p><br />\r\nc.add(leftPanel,BorderLayout.WEST);</p>\r\n\r\n<p><br />\r\nc.add(rightPanel,BorderLayout.EAST);</p>\r\n\r\n<p><br />\r\nc.add(centerPanel,BorderLayout.CENTER);</p>\r\n\r\n<p><br />\r\nc.add(bottomPanel,BorderLayout.SOUTH);</p>\r\n\r\n<p><br />\r\nsetSize(700,500);</p>\r\n\r\n<p><br />\r\nsetTitle(&quot;Swing 组件大全简体版&quot;);</p>\r\n\r\n<p><br />\r\n// 隐藏frame的标题栏,此功暂时关闭，以方便使用window事件</p>\r\n\r\n<p><br />\r\n// setUndecorated(true);</p>\r\n\r\n<p><br />\r\nsetLocation(200,150);</p>\r\n\r\n<p><br />\r\nshow();</p>\r\n\r\n<p><br />\r\n}</p>\r\n\r\n<p><br />\r\n如拆分三个子组件，可把一个拆分嵌板做为另一个拆分嵌板的子组件！</p>\r\n\r\n<p><br />\r\n五 事件模型</p>\r\n\r\n<p><br />\r\n在Swing 中每个组件都可触发事件，一旦触发事件会被一个或多个Listener（监听器）接收。不同类型的事件分别由个别的class表示。事件发生点可以和处理事件的代码分开。</p>\r\n\r\n<p><br />\r\n要想处理事件，只要产生Listener对象，并调用组件的addXXXListener()方法注册事件。我们大部分是通过继承事件接口来处理事件 的。但是继承Java接口我们必须实现出接口中的所有方法。有些接口包含了大量的函数，如果要一个个实现是件很麻烦的事件上，Java中定义了相应接口的 Adapter接配器类来解决这种情况。接配器类已经帮我们实现了接口的所有方法，而我们只要继承接配器就可在代码内做我们想做的事情。也即只要实现或覆 写我们想要实现的方法。</p>\r\n\r\n<p><br />\r\n下面我们还是以主模块为例，来处理关闭窗口事件。</p>\r\n\r\n<p><br />\r\n// 利用无名内隐类，增加窗口事件</p>\r\n\r\n<p><br />\r\nthis.addWindowListener(new WindowAdapter()</p>\r\n\r\n<p><br />\r\n{</p>\r\n\r\n<p><br />\r\npublic void WindowClosing(WindowEvent e)</p>\r\n\r\n<p><br />\r\n{</p>\r\n\r\n<p><br />\r\n// 释放资源，退出程序</p>\r\n\r\n<p><br />\r\ndispose();</p>\r\n\r\n<p><br />\r\nSystem.exit(0);</p>\r\n\r\n<p><br />\r\n}</p>\r\n\r\n<p><br />\r\n});</p>\r\n\r\n<p><br />\r\n如上所示，我们向主框架注册了一个窗口事件addWindowListener()，事件继承了WindowAdapter接配器，并重载了方法WindowClosing(),方法中利用dispose()释放窗口资源，System.exit(0)关闭窗口。</p>\r\n\r\n<p><br />\r\n六 总结</p>\r\n\r\n<p><br />\r\n好了，我们来回顾一个我们的上面的内容：设计的思路，容器，嵌板，布局管理器, Swing组件的事件。</p>\r\n\r\n<p><br />\r\n大家明白了为什么做项目能快速提高自己水平了吧。其实上面的方法原理和做项目差不多，任何事只要经过自己的大脑思考，亲手操作，想忘记并不是那么容易的了。相信看了本文和代码再辅以相关的书籍介绍，大家对Swing处理会有一定的感性理解了。</p>\r\n\r\n<p><br />\r\n开始动手吧。发挥你的天才思维，自己设计一个更好的Swing组件大全吧。当然你也可在本程序的基础上完善其中更复杂的功能。比如：把树形列表内容用 window文件资源器代替，把表格的处理和数据库相连接或和相关数据连接，让文本区可显示图片。。。。。哦，天啊。说不定一个好的产品也会因此诞生。</p>\r\n\r\n<p><br />\r\n再次强调开始之前请先设计你的界面，画出你的程序结构图。即使再小的程序也请你大概勾一个它的轮廓。</p>\r\n\r\n<p><br />\r\n七 具体代码</p>\r\n\r\n<p><br />\r\n由于代码中已经附上了比较详细的注释，在此就不一一解释说明了。在此要提醒大家在研究源代码时要注意几个复杂的组件的处理方式：如树形组件 (JTree),表格(JTable),文本区(JtextArea),定时器(Timer)。为了方便大家直接复制源代码来编译，所有的模块都是放在一 个主类中实现的。所有源代码的事件都是用嵌套的内隐类方法来实现的。如果大家不习惯这种写法，程序中已经消除了各模块之间的关联性，可很方便的把各子模块 分离成类文件。代码只是演示了Swing的大部组件，各个组件没有很深入的处理了。</p>\r\n',0,1437746328,0,0),(46,32,'MySQL存储过程详解','<p>1.&nbsp;&nbsp;&nbsp;&nbsp; 存储过程简介</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>我们常用的操作数据库语言SQL语句在执行的时候需要要先编译，然后执行，而存储过程（Stored Procedure）是一组为了完成特定功能的SQL语句集，经编译后存储在数据库中，用户通过指定存储过程的名字并给定参数（如果该存储过程带有参数）来调用执行它。</p>\r\n\r\n<p>一个存储过程是一个可编程的函数，它在数据库中创建并保存。它可以有SQL语句和一些特殊的控制结构组成。当希望在不同的应用程序或平台上执行相同的函数，或者封装特定功能时，存储过程是非常有用的。数据库中的存储过程可以看做是对编程中面向对象方法的模拟。它允许控制数据的访问方式。</p>\r\n\r\n<p>存储过程通常有以下优点：</p>\r\n\r\n<p>(1).存储过程增强了SQL语言的功能和灵活性。存储过程可以用流控制语句编写，有很强的灵活性，可以完成复杂的判断和较复杂的运算。</p>\r\n\r\n<p>(2).存储过程允许标准组件是编程。存储过程被创建后，可以在程序中被多次调用，而不必重新编写该存储过程的SQL语句。而且数据库专业人员可以随时对存储过程进行修改，对应用程序源代码毫无影响。</p>\r\n\r\n<p>(3).存储过程能实现较快的执行速度。如果某一操作包含大量的Transaction-SQL代码或分别被多次执行，那么存储过程要比批处理的执行速度快很多。因为存储过程是预编译的。在首次运行一个存储过程时查询，优化器对其进行分析优化，并且给出最终被存储在系统表中的执行计划。而批处理的Transaction-SQL语句在每次运行时都要进行编译和优化，速度相对要慢一些。</p>\r\n\r\n<p>(4).存储过程能过减少网络流量。针对同一个数据库对象的操作（如查询、修改），如果这一操作所涉及的Transaction-SQL语句被组织程存储过程，那么当在客户计算机上调用该存储过程时，网络中传送的只是该调用语句，从而大大增加了网络流量并降低了网络负载。</p>\r\n\r\n<p>(5).存储过程可被作为一种安全机制来充分利用。系统管理员通过执行某一存储过程的权限进行限制，能够实现对相应的数据的访问权限的限制，避免了非授权用户对数据的访问，保证了数据的安全。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>2.&nbsp;&nbsp;&nbsp;&nbsp; 关于MySQL的存储过程</p>\r\n\r\n<p>存储过程是数据库存储的一个重要的功能，但是MySQL在5.0以前并不支持存储过程，这使得MySQL在应用上大打折扣。好在MySQL 5.0终于开始已经支持存储过程，这样即可以大大提高数据库的处理速度，同时也可以提高数据库编程的灵活性。</p>\r\n\r\n<p>3.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的创建</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(1).格式</p>\r\n\r\n<p>MySQL存储过程创建的格式：CREATE PROCEDURE过程名([过程参数[,...]])<br />\r\n[特性...]过程体</p>\r\n\r\n<p>这里先举个例子：<br />\r\n&nbsp; &nbsp;</p>\r\n\r\n<p>mysql&gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql&gt; CREATE PROCEDURE proc1(OUT s int) &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; BEGIN</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; SELECT COUNT(*) INTO s FROM user; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; END</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql&gt; DELIMITER ;<br />\r\n&nbsp;注：</p>\r\n\r\n<p>（1）这里需要注意的是DELIMITER //和DELIMITER ;两句，DELIMITER是分割符的意思，因为MySQL默认以&quot;;&quot;为分隔符，如果我们没有声明分割符，那么编译器会把存储过程当成SQL语句进行处理，则存储过程的编译过程会报错，所以要事先用DELIMITER关键字申明当前段分隔符，这样MySQL才会将&quot;;&quot;当做存储过程中的代码，不会执行这些代码，用完了之后要把分隔符还原。</p>\r\n\r\n<p>（2）存储过程根据需要可能会有输入、输出、输入输出参数，这里有一个输出参数s，类型是int型，如果有多个参数用&quot;,&quot;分割开。</p>\r\n\r\n<p>（3）过程体的开始与结束使用BEGIN与END进行标识。</p>\r\n\r\n<p>这样，我们的一个MySQL存储过程就完成了，是不是很容易呢?看不懂也没关系，接下来，我们详细的讲解。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(2).声明分割符</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>其实，关于声明分割符，上面的注解已经写得很清楚，不需要多说，只是稍微要注意一点的是：如果是用MySQL的Administrator管理工具时，可以直接创建，不再需要声明。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3).参数</p>\r\n\r\n<p>MySQL存储过程的参数用在存储过程的定义，共有三种参数类型,IN,OUT,INOUT,形式如：</p>\r\n\r\n<p>CREATE PROCEDURE([[IN |OUT |INOUT ]参数名数据类形...])</p>\r\n\r\n<p>IN输入参数:表示该参数的值必须在调用存储过程时指定，在存储过程中修改该参数的值不能被返回，为默认值</p>\r\n\r\n<p>OUT输出参数:该值可在存储过程内部被改变，并可返回</p>\r\n\r\n<p>INOUT输入输出参数:调用时指定，并且可被改变和返回</p>\r\n\r\n<p>Ⅰ. IN参数例子</p>\r\n\r\n<p>创建:</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE demo_in_parameter(IN p_in int) &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_in; &nbsp;</p>\r\n\r\n<p>-&gt; SET p_in=2; &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_in; &nbsp;</p>\r\n\r\n<p>-&gt; END; &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p><br />\r\n执行结果:</p>\r\n\r\n<p>mysql &gt; SET @p_in=1; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL demo_in_parameter(@p_in); &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>| p_in | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 1&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>| p_in | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 2&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SELECT @p_in; &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| @p_in | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>|&nbsp; 1&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p><br />\r\n以上可以看出，p_in虽然在存储过程中被修改，但并不影响@p_id的值</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅱ.OUT参数例子</p>\r\n\r\n<p>创建:</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE demo_out_parameter(OUT p_out int) &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN</p>\r\n\r\n<p>-&gt; SELECT p_out; &nbsp;</p>\r\n\r\n<p>-&gt; SET p_out=2; &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_out; &nbsp;</p>\r\n\r\n<p>-&gt; END; &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p><br />\r\n执行结果:</p>\r\n\r\n<p>mysql &gt; SET @p_out=1; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL sp_demo_out_parameter(@p_out); &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| p_out | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| NULL&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| p_out | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 2&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; SELECT @p_out; &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>| p_out | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p>|&nbsp;&nbsp; 2&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------+</p>\r\n\r\n<p><br />\r\nⅢ. INOUT参数例子</p>\r\n\r\n<p>创建:</p>\r\n\r\n<p>mysql &gt; DELIMITER //&nbsp; &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE demo_inout_parameter(INOUT p_inout int)&nbsp; &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN</p>\r\n\r\n<p>-&gt; SELECT p_inout; &nbsp;</p>\r\n\r\n<p>-&gt; SET p_inout=2; &nbsp;</p>\r\n\r\n<p>-&gt; SELECT p_inout; &nbsp;</p>\r\n\r\n<p>-&gt; END; &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\n执行结果:</p>\r\n\r\n<p>mysql &gt; SET @p_inout=1; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL demo_inout_parameter(@p_inout) ; &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>| p_inout | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp; 1&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>| p_inout | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+---------+ &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @p_inout; &nbsp;</p>\r\n\r\n<p>+----------+ &nbsp;</p>\r\n\r\n<p>| @p_inout | &nbsp;</p>\r\n\r\n<p>+----------+ &nbsp;</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+----------+</p>\r\n\r\n<p>(4).变量</p>\r\n\r\n<p>Ⅰ.变量定义</p>\r\n\r\n<p>DECLARE variable_name [,variable_name...] datatype [DEFAULT value];</p>\r\n\r\n<p>其中，datatype为MySQL的数据类型，如:int, float, date, varchar(length)</p>\r\n\r\n<p>例如:</p>\r\n\r\n<p>DECLARE l_int int unsigned default 4000000; &nbsp;</p>\r\n\r\n<p>DECLARE l_numeric number(8,2) DEFAULT 9.95; &nbsp;</p>\r\n\r\n<p>DECLARE l_date date DEFAULT &#39;1999-12-31&#39;; &nbsp;</p>\r\n\r\n<p>DECLARE l_datetime datetime DEFAULT &#39;1999-12-31 23:59:59&#39;; &nbsp;</p>\r\n\r\n<p>DECLARE l_varchar varchar(255) DEFAULT &#39;This will not be padded&#39;; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\nⅡ.变量赋值</p>\r\n\r\n<p>&nbsp;SET变量名=表达式值[,variable_name = expression ...]</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅲ.用户变量</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>ⅰ.在MySQL客户端使用用户变量</p>\r\n\r\n<p>mysql &gt; SELECT &#39;Hello World&#39; into @x; &nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @x; &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>|&nbsp;&nbsp; @x&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>| Hello World | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>mysql &gt; SET @y=&#39;Goodbye Cruel World&#39;; &nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @y; &nbsp;</p>\r\n\r\n<p>+---------------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp; @y&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+---------------------+</p>\r\n\r\n<p>| Goodbye Cruel World | &nbsp;</p>\r\n\r\n<p>+---------------------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; SET @z=1+2+3; &nbsp;</p>\r\n\r\n<p>mysql &gt; SELECT @z; &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>| @z&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>|&nbsp; 6&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+------+</p>\r\n\r\n<p>ⅱ.在存储过程中使用用户变量</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE GreetWorld( ) SELECT CONCAT(@greeting,&#39; World&#39;); &nbsp;</p>\r\n\r\n<p>mysql &gt; SET @greeting=&#39;Hello&#39;; &nbsp;</p>\r\n\r\n<p>mysql &gt; CALL GreetWorld( ); &nbsp;</p>\r\n\r\n<p>+----------------------------+</p>\r\n\r\n<p>| CONCAT(@greeting,&#39; World&#39;) | &nbsp;</p>\r\n\r\n<p>+----------------------------+</p>\r\n\r\n<p>|&nbsp; Hello World&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+----------------------------+</p>\r\n\r\n<p>&nbsp;<br />\r\nⅲ.在存储过程间传递全局范围的用户变量</p>\r\n\r\n<p>mysql&gt; CREATE PROCEDURE p1()&nbsp;&nbsp; SET @last_procedure=&#39;p1&#39;; &nbsp;</p>\r\n\r\n<p>mysql&gt; CREATE PROCEDURE p2() SELECT CONCAT(&#39;Last procedure was &#39;,@last_proc); &nbsp;</p>\r\n\r\n<p>mysql&gt; CALL p1( ); &nbsp;</p>\r\n\r\n<p>mysql&gt; CALL p2( ); &nbsp;</p>\r\n\r\n<p>+-----------------------------------------------+</p>\r\n\r\n<p>| CONCAT(&#39;Last procedure was &#39;,@last_proc | &nbsp;</p>\r\n\r\n<p>+-----------------------------------------------+</p>\r\n\r\n<p>| Last procedure was p1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-----------------------------------------------+</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;<br />\r\n注意:</p>\r\n\r\n<p>①用户变量名一般以@开头</p>\r\n\r\n<p>②滥用用户变量会导致程序难以理解及管理</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(5).注释</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>MySQL存储过程可使用两种风格的注释</p>\r\n\r\n<p>双模杠：--</p>\r\n\r\n<p>该风格一般用于单行注释</p>\r\n\r\n<p>c风格：一般用于多行注释</p>\r\n\r\n<p>例如：</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc1 --name存储过程名</p>\r\n\r\n<p>-&gt; (IN parameter1 INTEGER) &nbsp;</p>\r\n\r\n<p>-&gt; BEGIN &nbsp;</p>\r\n\r\n<p>-&gt; DECLARE variable1 CHAR(10); &nbsp;</p>\r\n\r\n<p>-&gt; IF parameter1 = 17 THEN &nbsp;</p>\r\n\r\n<p>-&gt; SET variable1 = &#39;birds&#39;; &nbsp;</p>\r\n\r\n<p>-&gt; ELSE</p>\r\n\r\n<p>-&gt; SET variable1 = &#39;beasts&#39;; &nbsp;</p>\r\n\r\n<p>-&gt; END IF; &nbsp;</p>\r\n\r\n<p>-&gt; INSERT INTO table1 VALUES (variable1); &nbsp;</p>\r\n\r\n<p>-&gt; END &nbsp;</p>\r\n\r\n<p>-&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>4.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的调用</p>\r\n\r\n<p>用call和你过程名以及一个括号，括号里面根据需要，加入参数，参数包括输入参数、输出参数、输入输出参数。具体的调用方法可以参看上面的例子。</p>\r\n\r\n<p>5.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的查询</p>\r\n\r\n<p>我们像知道一个数据库下面有那些表，我们一般采用show tables;进行查看。那么我们要查看某个数据库下面的存储过程，是否也可以采用呢？答案是，我们可以查看某个数据库下面的存储过程，但是是令一钟方式。</p>\r\n\r\n<p>我们可以用</p>\r\n\r\n<p>select name from mysql.proc where db=&rsquo;数据库名&rsquo;;</p>\r\n\r\n<p>或者</p>\r\n\r\n<p>select routine_name from information_schema.routines where routine_schema=&#39;数据库名&#39;;</p>\r\n\r\n<p>或者</p>\r\n\r\n<p>show procedure status where db=&#39;数据库名&#39;;</p>\r\n\r\n<p>进行查询。</p>\r\n\r\n<p>如果我们想知道，某个存储过程的详细，那我们又该怎么做呢？是不是也可以像操作表一样用describe表名进行查看呢？</p>\r\n\r\n<p>答案是：我们可以查看存储过程的详细，但是需要用另一种方法：</p>\r\n\r\n<p>SHOW CREATE PROCEDURE数据库.存储过程名;</p>\r\n\r\n<p>就可以查看当前存储过程的详细。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>6.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的修改</p>\r\n\r\n<p>ALTER PROCEDURE</p>\r\n\r\n<p>更改用CREATE PROCEDURE建立的预先指定的存储过程，其不会影响相关存储过程或存储功能。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>7.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的删除</p>\r\n\r\n<p>删除一个存储过程比较简单，和删除表一样：</p>\r\n\r\n<p>DROP PROCEDURE</p>\r\n\r\n<p>从MySQL的表格中删除一个或多个存储过程。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>8.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的控制语句</p>\r\n\r\n<p>(1).变量作用域</p>\r\n\r\n<p>内部的变量在其作用域范围内享有更高的优先权，当执行到end。变量时，内部变量消失，此时已经在其作用域外，变量不再可见了，应为在存储<br />\r\n过程外再也不能找到这个申明的变量，但是你可以通过out参数或者将其值指派<br />\r\n给会话变量来保存其值。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc3() &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare x1 varchar(5) default &#39;outer&#39;; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare x1 varchar(5) default &#39;inner&#39;; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; select x1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; select x1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;(2).条件语句</p>\r\n\r\n<p>Ⅰ. if-then -else语句</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc2(IN parameter int) &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare var int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=parameter+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if var=0 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(17); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if parameter=0 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; update t set s1=s1+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; else</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; update t set s1=s1+2; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p><br />\r\nⅡ. case语句：</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc3 (in parameter int) &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare var int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=parameter+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; case var &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; when 0 then &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(17); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; when 1 then &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(18); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; else &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(19); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end case; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3).循环语句</p>\r\n\r\n<p>Ⅰ. while &middot;&middot;&middot;&middot; end while：</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc4() &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare var int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; while var&lt;6 do &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(var); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set var=var+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end while; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅱ. repeat&middot;&middot;&middot;&middot; end repeat：</p>\r\n\r\n<p>它在执行操作后检查结果，而while则是执行前进行检查。</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc5 () &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare v int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; repeat &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(v); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; until v&gt;=5 &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end repeat; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p><br />\r\nⅢ. loop &middot;&middot;&middot;&middot;&middot;end loop:</p>\r\n\r\n<p>loop循环不需要初始条件，这点和while循环相似，同时和repeat循环一样不需要结束条件, leave语句的意义是离开循环。</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc6 () &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare v int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; LOOP_LABLE:loop &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(v); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if v &gt;=5 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; leave LOOP_LABLE; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end loop; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ; &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>Ⅳ. LABLES标号：</p>\r\n\r\n<p>标号可以用在begin repeat while或者loop语句前，语句标号只能在合法的语句前面使用。可以跳出循环，使运行指令达到复合语句的最后一步。</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(4). ITERATE迭代</p>\r\n\r\n<p>Ⅰ. ITERATE:</p>\r\n\r\n<p>通过引用复合语句的标号,来从新开始复合语句</p>\r\n\r\n<p>mysql &gt; DELIMITER // &nbsp;</p>\r\n\r\n<p>mysql &gt; CREATE PROCEDURE proc10 () &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; begin</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; declare v int; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=0; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; LOOP_LABLE:loop &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if v=3 then &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; ITERATE LOOP_LABLE; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; insert into t values(v); &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; set v=v+1; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; if v&gt;=5 then</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; leave LOOP_LABLE; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end if; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end loop; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; end; &nbsp;</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; -&gt; // &nbsp;</p>\r\n\r\n<p>mysql &gt; DELIMITER ;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>9.&nbsp;&nbsp;&nbsp;&nbsp; MySQL存储过程的基本函数</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(1).字符串类</p>\r\n\r\n<p>CHARSET(str) //返回字串字符集<br />\r\nCONCAT (string2 [,... ]) //连接字串<br />\r\nINSTR (string ,substring ) //返回substring首次在string中出现的位置,不存在返回0<br />\r\nLCASE (string2 ) //转换成小写<br />\r\nLEFT (string2 ,length ) //从string2中的左边起取length个字符<br />\r\nLENGTH (string ) //string长度<br />\r\nLOAD_FILE (file_name ) //从文件读取内容<br />\r\nLOCATE (substring , string [,start_position ] )同INSTR,但可指定开始位置<br />\r\nLPAD (string2 ,length ,pad ) //重复用pad加在string开头,直到字串长度为length<br />\r\nLTRIM (string2 ) //去除前端空格<br />\r\nREPEAT (string2 ,count ) //重复count次<br />\r\nREPLACE (str ,search_str ,replace_str ) //在str中用replace_str替换search_str<br />\r\nRPAD (string2 ,length ,pad) //在str后用pad补充,直到长度为length<br />\r\nRTRIM (string2 ) //去除后端空格<br />\r\nSTRCMP (string1 ,string2 ) //逐字符比较两字串大小,<br />\r\nSUBSTRING (str , position [,length ]) //从str的position开始,取length个字符,<br />\r\n注：mysql中处理字符串时，默认第一个字符下标为1，即参数position必须大于等于1</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; select substring(&#39;abcd&#39;,0,2); &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>| substring(&#39;abcd&#39;,0,2) | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>1 row in set (0.00 sec) &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; select substring(&#39;abcd&#39;,1,2); &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>| substring(&#39;abcd&#39;,1,2) | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp; ab&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | &nbsp;</p>\r\n\r\n<p>+-----------------------+</p>\r\n\r\n<p>1 row in set (0.02 sec) &nbsp;</p>\r\n\r\n<p>TRIM([[BOTH|LEADING|TRAILING] [padding] FROM]string2) //去除指定位置的指定字符<br />\r\nUCASE (string2 ) //转换成大写<br />\r\nRIGHT(string2,length) //取string2最后length个字符<br />\r\nSPACE(count) //生成count个空格</p>\r\n\r\n<p>(2).数学类</p>\r\n\r\n<p>ABS (number2 ) //绝对值<br />\r\nBIN (decimal_number ) //十进制转二进制<br />\r\nCEILING (number2 ) //向上取整<br />\r\nCONV(number2,from_base,to_base) //进制转换<br />\r\nFLOOR (number2 ) //向下取整<br />\r\nFORMAT (number,decimal_places ) //保留小数位数<br />\r\nHEX (DecimalNumber ) //转十六进制<br />\r\n注：HEX()中可传入字符串，则返回其ASC-11码，如HEX(&#39;DEF&#39;)返回4142143<br />\r\n也可以传入十进制整数，返回其十六进制编码，如HEX(25)返回19<br />\r\nLEAST (number , number2 [,..]) //求最小值<br />\r\nMOD (numerator ,denominator ) //求余<br />\r\nPOWER (number ,power ) //求指数<br />\r\nRAND([seed]) //随机数<br />\r\nROUND (number [,decimals ]) //四舍五入,decimals为小数位数]</p>\r\n\r\n<p>注：返回类型并非均为整数，如：<br />\r\n(1)默认变为整形值</p>\r\n\r\n<p>mysql&gt; select round(1.23); &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>| round(1.23) | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>1 row in set (0.00 sec) &nbsp;</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>mysql&gt; select round(1.56); &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>| round(1.56) | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2 | &nbsp;</p>\r\n\r\n<p>+-------------+</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(2)可以设定小数位数，返回浮点型数据</p>\r\n\r\n<p>mysql&gt; select round(1.567,2); &nbsp;</p>\r\n\r\n<p>+----------------+</p>\r\n\r\n<p>| round(1.567,2) | &nbsp;</p>\r\n\r\n<p>+----------------+</p>\r\n\r\n<p>|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1.57 | &nbsp;</p>\r\n\r\n<p>+----------------+</p>\r\n\r\n<p>1 row in set (0.00 sec)</p>\r\n\r\n<p>SIGN (number2 ) //</p>\r\n\r\n<p>&nbsp;</p>\r\n\r\n<p>(3).日期时间类<br />\r\nADDTIME (date2 ,time_interval ) //将time_interval加到date2<br />\r\nCONVERT_TZ (datetime2 ,fromTZ ,toTZ ) //转换时区<br />\r\nCURRENT_DATE ( ) //当前日期<br />\r\nCURRENT_TIME ( ) //当前时间<br />\r\nCURRENT_TIMESTAMP ( ) //当前时间戳<br />\r\nDATE (datetime ) //返回datetime的日期部分<br />\r\nDATE_ADD (date2 , INTERVAL d_value d_type ) //在date2中加上日期或时间<br />\r\nDATE_FORMAT (datetime ,FormatCodes ) //使用formatcodes格式显示datetime<br />\r\nDATE_SUB (date2 , INTERVAL d_value d_type ) //在date2上减去一个时间<br />\r\nDATEDIFF (date1 ,date2 ) //两个日期差<br />\r\nDAY (date ) //返回日期的天<br />\r\nDAYNAME (date ) //英文星期<br />\r\nDAYOFWEEK (date ) //星期(1-7) ,1为星期天<br />\r\nDAYOFYEAR (date ) //一年中的第几天<br />\r\nEXTRACT (interval_name FROM date ) //从date中提取日期的指定部分<br />\r\nMAKEDATE (year ,day ) //给出年及年中的第几天,生成日期串<br />\r\nMAKETIME (hour ,minute ,second ) //生成时间串<br />\r\nMONTHNAME (date ) //英文月份名<br />\r\nNOW ( ) //当前时间<br />\r\nSEC_TO_TIME (seconds ) //秒数转成时间<br />\r\nSTR_TO_DATE (string ,format ) //字串转成时间,以format格式显示<br />\r\nTIMEDIFF (datetime1 ,datetime2 ) //两个时间差<br />\r\nTIME_TO_SEC (time ) //时间转秒数]<br />\r\nWEEK (date_time [,start_of_week ]) //第几周<br />\r\nYEAR (datetime ) //年份<br />\r\nDAYOFMONTH(datetime) //月的第几天<br />\r\nHOUR(datetime) //小时<br />\r\nLAST_DAY(date) //date的月的最后日期<br />\r\nMICROSECOND(datetime) //微秒<br />\r\nMONTH(datetime) //月<br />\r\nMINUTE(datetime) //分返回符号,正负或0<br />\r\nSQRT(number2) //开平方</p>\r\n',0,1437746799,0,0),(47,11,'google内部编写C++的代码规范文档','<p>C++是一门足够复杂的语言.说它&quot;足够复杂&quot;,是因为C++提供了足够多编程范式--泛型, 模板, 面向对象, 异常,等等.顺便说说,我已经很久没有跟进C++的最新发展了(比如C++0x), 所以前面列举出来的特性应该只是C++所有特性的一个部分罢了.C++特性过多很难驾驭好C++的原因之一.另一个原因是C++过于&quot;自作聪明&quot;,在很多地方悄无声息的做了很多事情, 比如隐式的类型转换, 重载, 模板推导等等.而很多时候,这些动作难以察觉,有时候会在你意想不到的地方发生,即使是熟练的C++程序员也难免被误伤.(关于了解C++编译器自作聪明做了哪些事情, &lt;&lt;深入理解C++物件模型&gt;&gt;是不错的选择).<br />\r\n世界上有很多问题, 人们知道如何去解决.但是, 似乎这还不算是最高明的,更高明的做法是学会避免问题的发生.而如何避免问题的发生, 需要经验的积累--曾经犯下错误,吃一堑长一智,于是知道哪些事情是不该做的或者是不应该这么做的.<br />\r\ngoogle C++ code style是google对外公布的一份google内部编写C++的代码规范文档.与其他很多我曾经看过的编码文档一样,里面有一些关于代码风格的规定,也就是代码的外观,这一部分不在这里过多讨论,毕竟代码如何才叫&quot;美观&quot;是一个见仁见智的话题.在这里专门讨论这份文档中对一些C++特性该如何使用的讨论,最后再做一个总结.注意其中的序号并不是文档中的序号,如果要详细了解,可以自己去看这份文档.</p>\r\n\r\n<p>1) Static and Global Variables<br />\r\n&nbsp;&nbsp; Static or global variables of class type are forbidden: they cause hard-to-find bugs due to indeterminate order of construction and destruction.</p>\r\n\r\n<p>google明确禁止全局对象是类对象, 只能是所谓POD(Plain Old Data,如int char等)数据才行.因为C++标准中没有明确规定全局对象的初始化顺序, 假设全局类对象A,B,其中A的初始化依赖于B的值, 那么将无法保证最后的结果.如果非要使用全局类对象, 那么只能使用指针, 在main等函数入口统一进行初始化.</p>\r\n\r\n<p>2) Doing Work in Constructors<br />\r\nIn general, constructors should merely set member variables to their initial values. Any complex initialization should go in an explicit Init() method.</p>\r\n\r\n<p>文档规定, 在类构造函数中对类成员对象做基本的初始化操作, 所有的复杂初始化操作集中一个比如Init()的函数中,理由如下:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; There is no easy way for constructors to signal errors, short of using exceptions (which are forbidden).<br />\r\n&nbsp;&nbsp;&nbsp; If the work fails, we now have an object whose initialization code failed, so it may be an indeterminate state.<br />\r\n&nbsp;&nbsp;&nbsp; If the work calls virtual functions, these calls will not get dispatched to the subclass implementations. Future modification to your class can quietly introduce this problem even if your class is not currently subclassed, causing much confusion.<br />\r\n&nbsp;&nbsp;&nbsp; If someone creates a global variable of this type (which is against the rules, but still), the constructor code will be called before main(), possibly breaking some implicit assumptions in the constructor code. For instance, gflags will not yet have been initialized.</p>\r\n\r\n<p>简单的概括起来也就是:构造函数没有返回值, 难以让使用者感知错误;假如在构造函数中调用虚拟函数, 则无法按照使用者的想法调用到对应子类中实现的虚拟函数(理由是构造函数还未完成意味着这个对象还没有被成功构造完成).</p>\r\n\r\n<p>3) Default Constructors<br />\r\nYou must define a default constructor if your class defines member variables and has no other constructors. Otherwise the compiler will do it for you, badly.</p>\r\n\r\n<p>当程序员没有为类编写一个默认构造函数的时候, 编译器会自动生成一个默认构造函数,而这个编译器生成的函数如何实现(比如如何初始化类成员对象)是不确定的.这样,假如出现问题时将给调试跟踪带来困难.所以, 规范要求每个类都需要编写一个默认构造函数避免这种情况的出现.</p>\r\n\r\n<p>4) Explicit Constructors<br />\r\nUse the C++ keyword explicit for constructors with one argument.</p>\r\n\r\n<p>假如构造函数只有一个参数, 使用explicit避免隐式转换, 因为隐式转换可能在你并不需要的时候出现.</p>\r\n\r\n<p>5) Copy Constructors<br />\r\nProvide a copy constructor and assignment operator only when necessary. Otherwise, disable them with DISALLOW_COPY_AND_ASSIGN.</p>\r\n\r\n<p>只有当必要的时候才需要定义拷贝构造函数和赋值操作符. 同上一条理由一样, 避免一些隐式的转换.另一条理由是,&quot;=&quot;难以跟踪,如果真的要实现类似的功能,可以提供比如名为Copy()的函数,这样子一目了然,不会像赋值操作符那样可能在每个&quot;=&quot;出现的地方出现.</p>\r\n\r\n<p>6) Operator Overloading<br />\r\nDo not overload operators except in rare, special circumstances.</p>\r\n\r\n<p>不要重载操作符.同样, 也是避免莫名其妙的调用了一些函数.同上一条一样, 比如要提供对&quot;==&quot;的重载, 可以提供一个名为Equal()的函数, 如果需要提供对&quot;+&quot;的重载, 可以提供一个名为Add()的函数.</p>\r\n\r\n<p>7) Function Overloading<br />\r\nUse overloaded functions (including constructors) only in cases where input can be specified in different types that contain the same information. Do not use function overloading to simulate default function parameters.</p>\r\n\r\n<p>只有在不同的类型表示同样的信息的时候, 可以使用重载函数.其他情况下,一律不能使用.使用重载, 也可能出现一些隐式出现的转换.所以, 在需要对不同函数进行同样操作的时候, 可以在函数名称上进行区分, 而不是使用重载,如可以提供针对string类型的AppendString()函数, 针对int类型的AppendInt()函数,而不是对string和int类型重载Append()函数.另一个好处在于, 在阅读代码时,通过函数名称可以一目了然.</p>\r\n\r\n<p>8) Exceptions<br />\r\nWe do not use C++ exceptions.</p>\r\n\r\n<p>不使用异常.理由如下:</p>\r\n\r\n<p>&nbsp;&nbsp;&nbsp; When you add a throw statement to an existing function, you must examine all of its transitive callers. Either they must make at least the basic exception safety guarantee, or they must never catch the exception and be happy with the program terminating as a result. For instance, if f() calls g() callsh(), and h throws an exception that f catches, g has to be careful or it may not clean up properly.<br />\r\n&nbsp;&nbsp;&nbsp; More generally, exceptions make the control flow of programs difficult to evaluate by looking at code: functions may return in places you don&#39;t expect. This results maintainability and debugging difficulties. You can minimize this cost via some rules on how and where exceptions can be used, but at the cost of more that a developer needs to know and understand.<br />\r\n&nbsp;&nbsp;&nbsp; Exception safety requires both RAII and different coding practices. Lots of supporting machinery is needed to make writing correct exception-safe code easy. Further, to avoid requiring readers to understand the entire call graph, exception-safe code must isolate logic that writes to persistent state into a &quot;commit&quot; phase. This will have both benefits and costs (perhaps where you&#39;re forced to obfuscate code to isolate the commit). Allowing exceptions would force us to always pay those costs even when they&#39;re not worth it.<br />\r\n&nbsp;&nbsp;&nbsp; Turning on exceptions adds data to each binary produced, increasing compile time (probably slightly) and possibly increasing address space pressure.<br />\r\n&nbsp;&nbsp;&nbsp; The availability of exceptions may encourage developers to throw them when they are not appropriate or recover from them when it&#39;s not safe to do so. For example, invalid user input should not cause exceptions to be thrown. We would need to make the style guide even longer to document these restrictions!</p>\r\n\r\n<p>上面提到的理由中, 我认为使用异常最大的害处就是:异常的使用导致了程序无法按照代码所展现的流程去走的, 比如代码里面写了步骤一二三,但是假如有异常出现, 这就不好预知代码真正步进的步骤了, 在出现问题时, 给调试和跟踪带来困难.<br />\r\n另外, 我更喜欢unix API的设计.熟悉unix编程的人都知道, unix API基本上都遵守下列规则:<br />\r\na) 返回0表示成功, 其他(一般是-1)表示失败.<br />\r\nb) 在失败时, 可以根据errno判断失败的原因, 这些在man手册中都是会清楚的描述.<br />\r\n总结一下, 这份规范中规避的C++特性大致分为以下几类:<br />\r\na) 避免使用那些没有确定行为的特性:如全局变量不能是类对象(初始化顺序不确定), 不使用编译器生成的默认构造函数(构造行为不确定), 异常(代码走向不确定).<br />\r\nb) 避免使用那些隐式发生的操作:如声明单参数构造函数为explict以避免隐式转换, 不定义拷贝构造函数避免隐式的拷贝行为, 不使用操作符重载避免隐式的转换<br />\r\nc) 对模棱两可的特性给予明确的规定:不使用函数重载而是定义对每个类型明确的函数.<br />\r\nd) 即使出错了程序也有办法知道: 比如不能在类构造函数中进行复杂的构造操作, 将这些移动到类Init()的函数中.<br />\r\n同时, 这份文档中描述的大部分C++特性, 都是我之前所熟悉的(除了RTTI之外, 不过这里提到它也是要说明不使用它,另外还提到boost, 不过也是说的要对它&quot;有限制&quot;的使用,比如里面的智能指针).可以看到, 面对这样一门复杂同时还在不停的发展更新特性的语言, google的态度是比较&quot;保守&quot;的.这与我之前对C++的理解也是接近的, 我一直认为C++中需要使用到的特性有基本的面向对象+STL就够了(经过最近的编码实践,我认为还得加个智能指针).我对这个&quot;保守&quot;态度的理解是, 以C++当前的应用场景来看, 这些特性已经足够, 如果使用其他一些更加复杂的, 对人的要求提高了, 代码的可读性以及以后的可维护性就下降了.<br />\r\n前面说过, 避免问题的出现比解决问题来的更加高明些, 而面对C++这一个提供了众多特性, google C++ code style给予了明确的规定, 也就是每个行为, 如果都能做到有明确的动作, 同时结果也都是可以预知的, 那么会将出问题的概率最大可能的降低, 即使出了问题, 也容易跟踪.<br />\r\n上面描述的并不是这份文档中有关C++的所有内容, 只不过我觉得这些更加有同感些, 详细的内容, 可以参看这份文档.都知道google的作品,质量有保证, 除了人的素质确实高之外, 有规范的制度保证也是重要的原因, 毕竟只要是人就会犯错, 为了最大限度的避免人犯错, 有一份详尽的代码规范, 写好哪些该做哪些不该做哪些不该这么做, 也是制度上的保证.另外, 假如每个人都能以一个比较高的标准要求自己所写的代码, 久而久之, 获得进步也是必然的结果.<br />\r\n从这套规范里面, 我的另一个感悟是, 不论是什么行业, &quot;学会如何正确的做事情&quot;, 都是十分必要的.这个&quot;正确的做事情&quot;, 具体到编码来说, 就是代码规范里面提到的那些要求.而除去编码, 做任何的事情, 使用正确的方式做事, 都是尽可能少的避免错误的方法.但是, &quot;错&quot;与&quot;对&quot;是相对而言的, 没有之前&quot;错&quot;的经历, 就不好体会什么叫&quot;对&quot;.所以, &quot;如何正确的做事&quot;, 说到了最后, 还得看个人的经验积累, 有了之前&quot;错误&quot;的经历,才能吃一堑长一智, &quot;错误&quot;并不是一无是处的, 只不过, 并不是谁都去尝试着从中学习.</p>\r\n',0,1437746917,0,0);
/*!40000 ALTER TABLE `blog` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `category`
--

DROP TABLE IF EXISTS `category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL DEFAULT '' COMMENT '分类名称',
  `parent_id` int(11) NOT NULL DEFAULT '0' COMMENT '父分类id',
  `level` int(2) NOT NULL DEFAULT '1' COMMENT '几级分类,顶级分类为1',
  `blogs` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '分类下包含的博客数量',
  `creation_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '创建时间',
  `modification_time` int(11) unsigned NOT NULL DEFAULT '0' COMMENT '修改时间',
  `is_deleted` tinyint(1) unsigned NOT NULL DEFAULT '0' COMMENT '是否被删除',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COMMENT='博文分类';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `category`
--

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
INSERT INTO `category` VALUES (1,'js',0,1,6,0,0,0),(2,'jquery',1,2,2,0,0,0),(3,'css',0,1,1,0,0,0),(4,'css3',3,2,1,0,0,0),(5,'网站性能',0,1,1,0,0,0),(6,'静态化',5,2,1,0,0,0),(7,'版本控制',0,1,0,0,0,0),(8,'svn',7,2,3,0,0,0),(9,'缓存',5,2,1,0,0,0),(10,'php技术',0,1,5,0,0,0),(11,'程序架构',0,1,1,0,0,0),(12,'mvc',11,2,2,0,0,0),(13,'html',0,1,1,0,0,0),(14,'linux',0,1,0,0,0,0),(15,'软件安装',14,2,4,0,0,0),(16,'java',0,1,2,0,0,0),(17,'java面试题',16,2,1,0,0,0),(18,'常用操作',14,2,1,0,0,0),(19,'音频处理',0,1,0,0,0,0),(20,'视频处理',0,1,1,0,0,0),(21,'数据库使用',0,1,1,0,0,0),(22,'session优化',5,2,1,0,0,0),(23,'windows服务器',0,1,1,0,0,0),(24,'数据库优化',5,2,1,0,0,0),(25,'mysql优化',24,3,3,0,0,0),(26,'杂项',0,1,1,0,0,0),(27,'zend framework',10,2,1,0,0,0),(28,'windows客户机',0,1,1,0,0,0),(29,'css布局',3,2,1,0,0,0),(30,'cakephp',10,2,1,0,0,0),(31,'算法',0,1,0,0,0,0),(32,'mysql使用',21,2,1,0,0,0);
/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping routines for database 'blog'
--
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-07-24 23:06:44
